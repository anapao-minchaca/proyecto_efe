
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'AFARRAFAY AND ASG BOFOOFOL CA CC CHAFAR CHAR CMP COMA DIF DIV EFELSEFE FAFALSEFE FLOFOAFAT FUNCTION ID IFIF IFINPUFUT IFINT INT LLAVEA LLAVEC MAFAIFIN MAY MAYIG MEN MENIG MUL NOT OR PA PC PCC POT PRIFINT PUNTO PYC REAL RED REFETUFURN RES STRIFING STRUFUCT SUM TRUFUEFE VACIO VOFOIFID WHIFILEFE start : declarar_estructuras declarar_main\n                | declarar_funciones declarar_main\n                | declarar_estructuras declarar_funciones declarar_main\n                | declarar_main  declarar_estructuras : STRUFUCT ID LLAVEA tipo_dato ID PYC tipo_dato ID PYC LLAVEC\n                            | declarar_estructuras_error  declarar_estructuras_error : ID LLAVEA tipo_dato ID PYC tipo_dato ID PYC LLAVEC\n                                | ID ID LLAVEA tipo_dato ID PYC tipo_dato ID PYC LLAVEC\n                                | STRUFUCT ID LLAVEA tipo_dato PYC tipo_dato ID PYC LLAVEC \n                                | STRUFUCT ID LLAVEA tipo_dato ID PYC tipo_dato PYC LLAVEC\n                                | STRUFUCT ID LLAVEA tipo_dato PYC tipo_dato PYC LLAVEC  \n                                | STRUFUCT ID LLAVEA ID PYC ID PYC LLAVEC  declarar_funciones : FUNCTION tipo_dato ID PA tipo_dato ID PC LLAVEA bloque_codigo REFETUFURN ID PYC LLAVEC \n                            | FUNCTION tipo_dato ID PA PC LLAVEA bloque_codigo REFETUFURN ID PYC LLAVEC\n                            | FUNCTION tipo_dato ID PA PC LLAVEA bloque_codigo REFETUFURN PYC LLAVEC \n                            | FUNCTION tipo_dato ID PA tipo_dato ID COMA tipo_dato ID PC LLAVEA bloque_codigo REFETUFURN ID PYC LLAVEC  declarar_main : IFINT MAFAIFIN PA PC LLAVEA bloque_codigo REFETUFURN PYC LLAVEC \n            | declarar_main_error  declarar_main_error : MAFAIFIN PA PC LLAVEA bloque_codigo REFETUFURN PYC LLAVEC\n                | IFINT MAFAIFIN PA PC LLAVEA bloque_codigo LLAVEC\n                | MAFAIFIN PA PC LLAVEA bloque_codigo LLAVEC\n                | IFINT PA PC LLAVEA bloque_codigo REFETUFURN PYC LLAVEC \n                | IFINT ID PA PC LLAVEA bloque_codigo REFETUFURN PYC LLAVEC  tipo_dato : IFINT\n        | STRIFING\n        | AFARRAFAY\n        | STRUFUCT\n        | VOFOIFID\n        | CHAFAR\n        | BOFOOFOL\n        | FLOFOAFAT  bloque_codigo : declarar_if bloque_codigo\n                        | declaracion bloque_codigo\n                        | asignar_estructuras bloque_codigo\n                        | asignar_array bloque_codigo\n                        | funcion bloque_codigo\n                        | print bloque_codigo\n                        | input bloque_codigo\n                        | declaracion_while bloque_codigo\n                        | VACIO  declarar_if : IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC\n        | IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE LLAVEA bloque_codigo LLAVEC \n        | declarar_if_error_llave  declarar_if_error_llave : IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE LLAVEA bloque_codigo\n                | IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE bloque_codigo LLAVEC  declaracion : tipo_dato ID PYC\n        | tipo_dato ID ASG ID operacion_matematica ID PYC\n        | tipo_dato ID ASG dato PYC \n        | AFARRAFAY ID dimensiones PYC\n        | declaracion_error  declaracion_error : ID PYC \n            | ID ASG ID operacion_matematica ID PYC\n            | ID ASG valores PYC \n            | ID ID PYC \n            | ID ID ASG ID operacion_matematica ID PYC\n            | ID ID ASG valores PYC \n            | ID ID dimensiones PYC\n            | ID dimensiones PYC dimensiones : dimension dimensiones \n                    | VACIO  dimension : CA INT CC  asignar_array : ID dimensiones ASG dato PYC asignar_estructuras : ID PUNTO ID ASG dato  funcion  : ID PA valores PC PYC\n            | ID PA PC PYC\n            | ID PA valores COMA valores PC PYC print : PRIFINT PA ID PC PYC input : IFINPUFUT PA ID PC PYC  declaracion_while : WHIFILEFE PA condicion PC LLAVEA bloque_codigo LLAVEC\n                        | declaracion_while_error declaracion_while_error : PA condicion PC LLAVEA bloque_codigo LLAVEC\n                                | ID PA condicion PC LLAVEA bloque_codigo LLAVEC\n                                | WHIFILEFE PA condicion PC bloque_codigo LLAVEC\n                                | WHIFILEFE PA condicion PC LLAVEA bloque_codigo  condicion : valores operadores valores\n                | valores \n                | valores operadores_logicos condicion\n                | valores NOT valores operacion_matematica : SUM \n                        | RES \n                        | MUL \n                        | DIV \n                        | RED \n                        | POT valores : INT \n            | CHAR \n            | TRUFUEFE \n            | FAFALSEFE \n            | PCC \n            | ID dato : INT \n            | CHAR \n            | TRUFUEFE \n            | FAFALSEFE \n            | PCC \n            | REAL  operadores : MEN \n                | MAY \n                | MENIG \n                | MAYIG \n                | CMP \n                | DIF  operadores_logicos : AND \n                        | OR vacio : VACIO'
    
_lr_action_items = {'STRUFUCT':([0,8,17,32,33,44,46,48,51,53,56,59,60,61,62,63,64,65,66,67,69,73,77,78,81,83,86,97,98,99,100,101,102,103,104,111,130,148,150,157,176,180,188,189,190,191,192,193,196,205,209,212,215,229,231,233,234,236,237,239,240,241,242,251,255,258,259,261,263,264,265,266,267,268,271,274,277,278,280,],[5,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,-40,-43,-50,-70,22,22,22,22,-32,-33,-34,-35,-36,-37,-38,-39,-51,22,-46,-54,-58,22,22,-91,-92,-93,-94,-95,-96,-57,-53,-65,-49,22,22,-48,-56,-63,-62,-64,22,-67,-68,22,-71,-52,-74,-73,22,-41,-47,-55,-66,-72,-69,22,22,-44,-45,-42,]),'FUNCTION':([0,2,7,169,173,219,220,222,245,246,],[8,8,-6,-12,-11,-10,-9,-7,-5,-8,]),'IFINT':([0,2,4,7,8,13,17,32,33,44,46,48,51,53,56,59,60,61,62,63,64,65,66,67,69,73,77,78,81,83,86,97,98,99,100,101,102,103,104,111,130,148,150,157,169,173,176,180,188,189,190,191,192,193,196,205,209,212,215,219,220,222,229,231,233,234,236,237,239,240,241,242,245,246,250,251,255,258,259,261,262,263,264,265,266,267,268,271,272,274,277,278,280,281,],[9,9,9,-6,19,9,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,-40,-43,-50,-70,19,19,19,19,-32,-33,-34,-35,-36,-37,-38,-39,-51,19,-46,-54,-58,-12,-11,19,19,-91,-92,-93,-94,-95,-96,-57,-53,-65,-49,19,-10,-9,-7,19,-48,-56,-63,-62,-64,19,-67,-68,19,-5,-8,-15,-71,-52,-74,-73,19,-14,-41,-47,-55,-66,-72,-69,19,-13,19,-44,-45,-42,-16,]),'ID':([0,5,6,9,18,19,20,21,22,23,24,25,26,32,34,41,42,46,48,49,54,56,57,59,60,61,62,63,64,65,66,67,69,70,71,72,73,77,78,82,84,86,97,98,99,100,101,102,103,104,105,108,109,111,112,117,118,119,124,127,135,136,137,138,139,140,141,142,143,144,145,148,149,150,151,157,176,177,178,180,188,189,190,191,192,193,196,198,199,200,201,202,203,204,205,208,209,212,215,229,230,231,232,233,234,236,237,239,240,241,242,247,251,255,258,259,261,263,264,265,266,267,268,271,273,274,277,278,280,],[6,15,16,29,35,-24,-25,-26,-27,-28,-29,-30,-31,40,43,50,52,71,71,80,85,71,95,71,71,71,71,71,71,71,71,-40,-43,106,107,116,-50,-70,71,125,128,71,-32,-33,-34,-35,-36,-37,-38,-39,95,153,154,-51,95,164,165,95,170,174,95,95,95,-97,-98,-99,-100,-101,-102,-103,-104,-46,186,-54,194,-58,71,224,225,71,-91,-92,-93,-94,-95,-96,-57,235,-79,-80,-81,-82,-83,-84,-53,95,-65,-49,71,71,253,-48,254,-56,-63,-62,-64,71,-67,-68,71,260,-71,-52,-74,-73,71,-41,-47,-55,-66,-72,-69,71,276,71,-44,-45,-42,]),'MAFAIFIN':([0,2,4,7,9,13,169,173,219,220,222,245,246,250,262,272,281,],[10,10,10,-6,27,10,-12,-11,-10,-9,-7,-5,-8,-15,-14,-13,-16,]),'$end':([1,3,11,12,14,31,122,133,184,217,227,244,],[0,-4,-18,-1,-2,-3,-21,-20,-22,-19,-17,-23,]),'LLAVEA':([6,15,16,37,39,45,47,55,129,134,185,210,215,248,271,],[17,32,33,46,48,56,78,86,176,180,229,239,242,261,274,]),'STRIFING':([8,17,32,33,44,46,48,51,53,56,59,60,61,62,63,64,65,66,67,69,73,77,78,81,83,86,97,98,99,100,101,102,103,104,111,130,148,150,157,176,180,188,189,190,191,192,193,196,205,209,212,215,229,231,233,234,236,237,239,240,241,242,251,255,258,259,261,263,264,265,266,267,268,271,274,277,278,280,],[20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,-40,-43,-50,-70,20,20,20,20,-32,-33,-34,-35,-36,-37,-38,-39,-51,20,-46,-54,-58,20,20,-91,-92,-93,-94,-95,-96,-57,-53,-65,-49,20,20,-48,-56,-63,-62,-64,20,-67,-68,20,-71,-52,-74,-73,20,-41,-47,-55,-66,-72,-69,20,20,-44,-45,-42,]),'AFARRAFAY':([8,17,32,33,44,46,48,51,53,56,59,60,61,62,63,64,65,66,67,69,73,77,78,81,83,86,97,98,99,100,101,102,103,104,111,130,148,150,157,176,180,188,189,190,191,192,193,196,205,209,212,215,229,231,233,234,236,237,239,240,241,242,251,255,258,259,261,263,264,265,266,267,268,271,274,277,278,280,],[21,21,21,21,21,72,72,21,21,72,72,72,72,72,72,72,72,72,-40,-43,-50,-70,72,21,21,72,-32,-33,-34,-35,-36,-37,-38,-39,-51,21,-46,-54,-58,72,72,-91,-92,-93,-94,-95,-96,-57,-53,-65,-49,72,72,-48,-56,-63,-62,-64,72,-67,-68,72,-71,-52,-74,-73,72,-41,-47,-55,-66,-72,-69,72,72,-44,-45,-42,]),'VOFOIFID':([8,17,32,33,44,46,48,51,53,56,59,60,61,62,63,64,65,66,67,69,73,77,78,81,83,86,97,98,99,100,101,102,103,104,111,130,148,150,157,176,180,188,189,190,191,192,193,196,205,209,212,215,229,231,233,234,236,237,239,240,241,242,251,255,258,259,261,263,264,265,266,267,268,271,274,277,278,280,],[23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,-40,-43,-50,-70,23,23,23,23,-32,-33,-34,-35,-36,-37,-38,-39,-51,23,-46,-54,-58,23,23,-91,-92,-93,-94,-95,-96,-57,-53,-65,-49,23,23,-48,-56,-63,-62,-64,23,-67,-68,23,-71,-52,-74,-73,23,-41,-47,-55,-66,-72,-69,23,23,-44,-45,-42,]),'CHAFAR':([8,17,32,33,44,46,48,51,53,56,59,60,61,62,63,64,65,66,67,69,73,77,78,81,83,86,97,98,99,100,101,102,103,104,111,130,148,150,157,176,180,188,189,190,191,192,193,196,205,209,212,215,229,231,233,234,236,237,239,240,241,242,251,255,258,259,261,263,264,265,266,267,268,271,274,277,278,280,],[24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,-40,-43,-50,-70,24,24,24,24,-32,-33,-34,-35,-36,-37,-38,-39,-51,24,-46,-54,-58,24,24,-91,-92,-93,-94,-95,-96,-57,-53,-65,-49,24,24,-48,-56,-63,-62,-64,24,-67,-68,24,-71,-52,-74,-73,24,-41,-47,-55,-66,-72,-69,24,24,-44,-45,-42,]),'BOFOOFOL':([8,17,32,33,44,46,48,51,53,56,59,60,61,62,63,64,65,66,67,69,73,77,78,81,83,86,97,98,99,100,101,102,103,104,111,130,148,150,157,176,180,188,189,190,191,192,193,196,205,209,212,215,229,231,233,234,236,237,239,240,241,242,251,255,258,259,261,263,264,265,266,267,268,271,274,277,278,280,],[25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,-40,-43,-50,-70,25,25,25,25,-32,-33,-34,-35,-36,-37,-38,-39,-51,25,-46,-54,-58,25,25,-91,-92,-93,-94,-95,-96,-57,-53,-65,-49,25,25,-48,-56,-63,-62,-64,25,-67,-68,25,-71,-52,-74,-73,25,-41,-47,-55,-66,-72,-69,25,25,-44,-45,-42,]),'FLOFOAFAT':([8,17,32,33,44,46,48,51,53,56,59,60,61,62,63,64,65,66,67,69,73,77,78,81,83,86,97,98,99,100,101,102,103,104,111,130,148,150,157,176,180,188,189,190,191,192,193,196,205,209,212,215,229,231,233,234,236,237,239,240,241,242,251,255,258,259,261,263,264,265,266,267,268,271,274,277,278,280,],[26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,-40,-43,-50,-70,26,26,26,26,-32,-33,-34,-35,-36,-37,-38,-39,-51,26,-46,-54,-58,26,26,-91,-92,-93,-94,-95,-96,-57,-53,-65,-49,26,26,-48,-56,-63,-62,-64,26,-67,-68,26,-71,-52,-74,-73,26,-41,-47,-55,-66,-72,-69,26,26,-44,-45,-42,]),'PA':([9,10,27,29,35,46,48,56,59,60,61,62,63,64,65,66,67,68,69,71,73,74,75,76,77,78,86,97,98,99,100,101,102,103,104,111,148,150,157,176,180,188,189,190,191,192,193,196,205,209,212,215,229,231,233,234,236,237,239,240,241,242,251,255,258,259,261,263,264,265,266,267,268,271,274,277,278,280,],[28,30,36,38,44,57,57,57,57,57,57,57,57,57,57,57,-40,105,-43,112,-50,117,118,119,-70,57,57,-32,-33,-34,-35,-36,-37,-38,-39,-51,-46,-54,-58,57,57,-91,-92,-93,-94,-95,-96,-57,-53,-65,-49,57,57,-48,-56,-63,-62,-64,57,-67,-68,57,-71,-52,-74,-73,57,-41,-47,-55,-66,-72,-69,57,57,-44,-45,-42,]),'PYC':([19,20,21,22,23,24,25,26,40,41,43,50,52,71,80,82,90,91,92,93,94,96,106,107,110,114,121,124,125,128,132,152,154,155,159,161,163,167,170,174,178,187,188,189,190,191,192,193,194,195,206,207,213,214,225,235,253,254,256,260,276,],[-24,-25,-26,-27,-28,-29,-30,-31,49,51,53,81,83,111,123,126,-85,-86,-87,-88,-89,146,148,150,157,-60,168,171,172,175,179,196,-90,205,209,-59,212,216,218,221,226,231,-91,-92,-93,-94,-95,-96,-90,233,236,237,240,241,249,255,264,265,266,269,279,]),'PC':([28,30,36,38,44,85,88,89,90,91,92,93,94,95,112,147,158,160,164,165,166,181,182,183,224,238,],[37,39,45,47,55,129,134,-76,-85,-86,-87,-88,-89,-90,159,185,207,210,213,214,215,-75,-77,-78,248,256,]),'VACIO':([46,48,56,59,60,61,62,63,64,65,66,67,69,71,73,77,78,86,97,98,99,100,101,102,103,104,107,111,113,116,148,150,157,176,180,188,189,190,191,192,193,196,205,209,211,212,215,229,231,233,234,236,237,239,240,241,242,251,255,258,259,261,263,264,265,266,267,268,271,274,277,278,280,],[67,67,67,67,67,67,67,67,67,67,67,-40,-43,114,-50,-70,67,67,-32,-33,-34,-35,-36,-37,-38,-39,114,-51,114,114,-46,-54,-58,67,67,-91,-92,-93,-94,-95,-96,-57,-53,-65,-61,-49,67,67,-48,-56,-63,-62,-64,67,-67,-68,67,-71,-52,-74,-73,67,-41,-47,-55,-66,-72,-69,67,67,-44,-45,-42,]),'IFIF':([46,48,56,59,60,61,62,63,64,65,66,67,69,73,77,78,86,97,98,99,100,101,102,103,104,111,148,150,157,176,180,188,189,190,191,192,193,196,205,209,212,215,229,231,233,234,236,237,239,240,241,242,251,255,258,259,261,263,264,265,266,267,268,271,274,277,278,280,],[68,68,68,68,68,68,68,68,68,68,68,-40,-43,-50,-70,68,68,-32,-33,-34,-35,-36,-37,-38,-39,-51,-46,-54,-58,68,68,-91,-92,-93,-94,-95,-96,-57,-53,-65,-49,68,68,-48,-56,-63,-62,-64,68,-67,-68,68,-71,-52,-74,-73,68,-41,-47,-55,-66,-72,-69,68,68,-44,-45,-42,]),'PRIFINT':([46,48,56,59,60,61,62,63,64,65,66,67,69,73,77,78,86,97,98,99,100,101,102,103,104,111,148,150,157,176,180,188,189,190,191,192,193,196,205,209,212,215,229,231,233,234,236,237,239,240,241,242,251,255,258,259,261,263,264,265,266,267,268,271,274,277,278,280,],[74,74,74,74,74,74,74,74,74,74,74,-40,-43,-50,-70,74,74,-32,-33,-34,-35,-36,-37,-38,-39,-51,-46,-54,-58,74,74,-91,-92,-93,-94,-95,-96,-57,-53,-65,-49,74,74,-48,-56,-63,-62,-64,74,-67,-68,74,-71,-52,-74,-73,74,-41,-47,-55,-66,-72,-69,74,74,-44,-45,-42,]),'IFINPUFUT':([46,48,56,59,60,61,62,63,64,65,66,67,69,73,77,78,86,97,98,99,100,101,102,103,104,111,148,150,157,176,180,188,189,190,191,192,193,196,205,209,212,215,229,231,233,234,236,237,239,240,241,242,251,255,258,259,261,263,264,265,266,267,268,271,274,277,278,280,],[75,75,75,75,75,75,75,75,75,75,75,-40,-43,-50,-70,75,75,-32,-33,-34,-35,-36,-37,-38,-39,-51,-46,-54,-58,75,75,-91,-92,-93,-94,-95,-96,-57,-53,-65,-49,75,75,-48,-56,-63,-62,-64,75,-67,-68,75,-71,-52,-74,-73,75,-41,-47,-55,-66,-72,-69,75,75,-44,-45,-42,]),'WHIFILEFE':([46,48,56,59,60,61,62,63,64,65,66,67,69,73,77,78,86,97,98,99,100,101,102,103,104,111,148,150,157,176,180,188,189,190,191,192,193,196,205,209,212,215,229,231,233,234,236,237,239,240,241,242,251,255,258,259,261,263,264,265,266,267,268,271,274,277,278,280,],[76,76,76,76,76,76,76,76,76,76,76,-40,-43,-50,-70,76,76,-32,-33,-34,-35,-36,-37,-38,-39,-51,-46,-54,-58,76,76,-91,-92,-93,-94,-95,-96,-57,-53,-65,-49,76,76,-48,-56,-63,-62,-64,76,-67,-68,76,-71,-52,-74,-73,76,-41,-47,-55,-66,-72,-69,76,76,-44,-45,-42,]),'INT':([57,105,109,112,115,119,135,136,137,138,139,140,141,142,143,144,145,149,151,156,197,208,],[90,90,90,90,162,90,90,90,90,-97,-98,-99,-100,-101,-102,-103,-104,188,90,188,188,90,]),'CHAR':([57,105,109,112,119,135,136,137,138,139,140,141,142,143,144,145,149,151,156,197,208,],[91,91,91,91,91,91,91,91,-97,-98,-99,-100,-101,-102,-103,-104,189,91,189,189,91,]),'TRUFUEFE':([57,105,109,112,119,135,136,137,138,139,140,141,142,143,144,145,149,151,156,197,208,],[92,92,92,92,92,92,92,92,-97,-98,-99,-100,-101,-102,-103,-104,190,92,190,190,92,]),'FAFALSEFE':([57,105,109,112,119,135,136,137,138,139,140,141,142,143,144,145,149,151,156,197,208,],[93,93,93,93,93,93,93,93,-97,-98,-99,-100,-101,-102,-103,-104,191,93,191,191,93,]),'PCC':([57,105,109,112,119,135,136,137,138,139,140,141,142,143,144,145,149,151,156,197,208,],[94,94,94,94,94,94,94,94,-97,-98,-99,-100,-101,-102,-103,-104,192,94,192,192,94,]),'REFETUFURN':([58,67,79,87,97,98,99,100,101,102,103,104,120,131,223,270,],[96,-40,121,132,-32,-33,-34,-35,-36,-37,-38,-39,167,178,247,273,]),'LLAVEC':([67,79,87,97,98,99,100,101,102,103,104,123,126,146,168,171,172,175,179,216,218,221,226,228,243,249,252,257,258,269,275,277,279,],[-40,122,133,-32,-33,-34,-35,-36,-37,-38,-39,169,173,184,217,219,220,222,227,244,245,246,250,251,259,262,263,267,268,272,278,280,281,]),'PUNTO':([71,],[108,]),'ASG':([71,106,107,110,114,153,161,],[109,149,151,156,-60,197,-59,]),'CA':([71,107,113,116,211,],[115,115,115,115,-61,]),'COMA':([85,90,91,92,93,94,95,158,],[130,-85,-86,-87,-88,-89,-90,208,]),'NOT':([89,90,91,92,93,94,95,158,],[137,-85,-86,-87,-88,-89,-90,137,]),'MEN':([89,90,91,92,93,94,95,158,],[138,-85,-86,-87,-88,-89,-90,138,]),'MAY':([89,90,91,92,93,94,95,158,],[139,-85,-86,-87,-88,-89,-90,139,]),'MENIG':([89,90,91,92,93,94,95,158,],[140,-85,-86,-87,-88,-89,-90,140,]),'MAYIG':([89,90,91,92,93,94,95,158,],[141,-85,-86,-87,-88,-89,-90,141,]),'CMP':([89,90,91,92,93,94,95,158,],[142,-85,-86,-87,-88,-89,-90,142,]),'DIF':([89,90,91,92,93,94,95,158,],[143,-85,-86,-87,-88,-89,-90,143,]),'AND':([89,90,91,92,93,94,95,158,],[144,-85,-86,-87,-88,-89,-90,144,]),'OR':([89,90,91,92,93,94,95,158,],[145,-85,-86,-87,-88,-89,-90,145,]),'REAL':([149,156,197,],[193,193,193,]),'SUM':([154,186,194,],[199,199,199,]),'RES':([154,186,194,],[200,200,200,]),'MUL':([154,186,194,],[201,201,201,]),'DIV':([154,186,194,],[202,202,202,]),'RED':([154,186,194,],[203,203,203,]),'POT':([154,186,194,],[204,204,204,]),'CC':([162,],[211,]),'EFELSEFE':([263,],[271,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'start':([0,],[1,]),'declarar_estructuras':([0,],[2,]),'declarar_main':([0,2,4,13,],[3,12,14,31,]),'declarar_funciones':([0,2,],[4,13,]),'declarar_estructuras_error':([0,],[7,]),'declarar_main_error':([0,2,4,13,],[11,11,11,11,]),'tipo_dato':([8,17,32,33,44,46,48,51,53,56,59,60,61,62,63,64,65,66,78,81,83,86,130,176,180,215,229,239,242,261,271,274,],[18,34,41,42,54,70,70,82,84,70,70,70,70,70,70,70,70,70,70,124,127,70,177,70,70,70,70,70,70,70,70,70,]),'bloque_codigo':([46,48,56,59,60,61,62,63,64,65,66,78,86,176,180,215,229,239,242,261,271,274,],[58,79,87,97,98,99,100,101,102,103,104,120,131,223,228,243,252,257,258,270,275,277,]),'declarar_if':([46,48,56,59,60,61,62,63,64,65,66,78,86,176,180,215,229,239,242,261,271,274,],[59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,]),'declaracion':([46,48,56,59,60,61,62,63,64,65,66,78,86,176,180,215,229,239,242,261,271,274,],[60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,]),'asignar_estructuras':([46,48,56,59,60,61,62,63,64,65,66,78,86,176,180,215,229,239,242,261,271,274,],[61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,]),'asignar_array':([46,48,56,59,60,61,62,63,64,65,66,78,86,176,180,215,229,239,242,261,271,274,],[62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,]),'funcion':([46,48,56,59,60,61,62,63,64,65,66,78,86,176,180,215,229,239,242,261,271,274,],[63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,]),'print':([46,48,56,59,60,61,62,63,64,65,66,78,86,176,180,215,229,239,242,261,271,274,],[64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,]),'input':([46,48,56,59,60,61,62,63,64,65,66,78,86,176,180,215,229,239,242,261,271,274,],[65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,]),'declaracion_while':([46,48,56,59,60,61,62,63,64,65,66,78,86,176,180,215,229,239,242,261,271,274,],[66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,]),'declarar_if_error_llave':([46,48,56,59,60,61,62,63,64,65,66,78,86,176,180,215,229,239,242,261,271,274,],[69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,]),'declaracion_error':([46,48,56,59,60,61,62,63,64,65,66,78,86,176,180,215,229,239,242,261,271,274,],[73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,]),'declaracion_while_error':([46,48,56,59,60,61,62,63,64,65,66,78,86,176,180,215,229,239,242,261,271,274,],[77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,]),'condicion':([57,105,112,119,136,],[88,147,160,166,182,]),'valores':([57,105,109,112,119,135,136,137,151,208,],[89,89,155,158,89,181,89,183,195,238,]),'dimensiones':([71,107,113,116,],[110,152,161,163,]),'dimension':([71,107,113,116,],[113,113,113,113,]),'operadores':([89,158,],[135,135,]),'operadores_logicos':([89,158,],[136,136,]),'dato':([149,156,197,],[187,206,234,]),'operacion_matematica':([154,186,194,],[198,230,232,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> start","S'",1,None,None,None),
  ('start -> declarar_estructuras declarar_main','start',2,'p_programa','sintactico_efe.py',19),
  ('start -> declarar_funciones declarar_main','start',2,'p_programa','sintactico_efe.py',20),
  ('start -> declarar_estructuras declarar_funciones declarar_main','start',3,'p_programa','sintactico_efe.py',21),
  ('start -> declarar_main','start',1,'p_programa','sintactico_efe.py',22),
  ('declarar_estructuras -> STRUFUCT ID LLAVEA tipo_dato ID PYC tipo_dato ID PYC LLAVEC','declarar_estructuras',10,'p_declarar_estructuras','sintactico_efe.py',27),
  ('declarar_estructuras -> declarar_estructuras_error','declarar_estructuras',1,'p_declarar_estructuras','sintactico_efe.py',28),
  ('declarar_estructuras_error -> ID LLAVEA tipo_dato ID PYC tipo_dato ID PYC LLAVEC','declarar_estructuras_error',9,'p_declarar_estructuras_error','sintactico_efe.py',44),
  ('declarar_estructuras_error -> ID ID LLAVEA tipo_dato ID PYC tipo_dato ID PYC LLAVEC','declarar_estructuras_error',10,'p_declarar_estructuras_error','sintactico_efe.py',45),
  ('declarar_estructuras_error -> STRUFUCT ID LLAVEA tipo_dato PYC tipo_dato ID PYC LLAVEC','declarar_estructuras_error',9,'p_declarar_estructuras_error','sintactico_efe.py',46),
  ('declarar_estructuras_error -> STRUFUCT ID LLAVEA tipo_dato ID PYC tipo_dato PYC LLAVEC','declarar_estructuras_error',9,'p_declarar_estructuras_error','sintactico_efe.py',47),
  ('declarar_estructuras_error -> STRUFUCT ID LLAVEA tipo_dato PYC tipo_dato PYC LLAVEC','declarar_estructuras_error',8,'p_declarar_estructuras_error','sintactico_efe.py',48),
  ('declarar_estructuras_error -> STRUFUCT ID LLAVEA ID PYC ID PYC LLAVEC','declarar_estructuras_error',8,'p_declarar_estructuras_error','sintactico_efe.py',49),
  ('declarar_funciones -> FUNCTION tipo_dato ID PA tipo_dato ID PC LLAVEA bloque_codigo REFETUFURN ID PYC LLAVEC','declarar_funciones',13,'p_declarar_funciones','sintactico_efe.py',71),
  ('declarar_funciones -> FUNCTION tipo_dato ID PA PC LLAVEA bloque_codigo REFETUFURN ID PYC LLAVEC','declarar_funciones',11,'p_declarar_funciones','sintactico_efe.py',72),
  ('declarar_funciones -> FUNCTION tipo_dato ID PA PC LLAVEA bloque_codigo REFETUFURN PYC LLAVEC','declarar_funciones',10,'p_declarar_funciones','sintactico_efe.py',73),
  ('declarar_funciones -> FUNCTION tipo_dato ID PA tipo_dato ID COMA tipo_dato ID PC LLAVEA bloque_codigo REFETUFURN ID PYC LLAVEC','declarar_funciones',16,'p_declarar_funciones','sintactico_efe.py',74),
  ('declarar_main -> IFINT MAFAIFIN PA PC LLAVEA bloque_codigo REFETUFURN PYC LLAVEC','declarar_main',9,'p_declarar_main','sintactico_efe.py',78),
  ('declarar_main -> declarar_main_error','declarar_main',1,'p_declarar_main','sintactico_efe.py',79),
  ('declarar_main_error -> MAFAIFIN PA PC LLAVEA bloque_codigo REFETUFURN PYC LLAVEC','declarar_main_error',8,'p_declarar_main_error','sintactico_efe.py',93),
  ('declarar_main_error -> IFINT MAFAIFIN PA PC LLAVEA bloque_codigo LLAVEC','declarar_main_error',7,'p_declarar_main_error','sintactico_efe.py',94),
  ('declarar_main_error -> MAFAIFIN PA PC LLAVEA bloque_codigo LLAVEC','declarar_main_error',6,'p_declarar_main_error','sintactico_efe.py',95),
  ('declarar_main_error -> IFINT PA PC LLAVEA bloque_codigo REFETUFURN PYC LLAVEC','declarar_main_error',8,'p_declarar_main_error','sintactico_efe.py',96),
  ('declarar_main_error -> IFINT ID PA PC LLAVEA bloque_codigo REFETUFURN PYC LLAVEC','declarar_main_error',9,'p_declarar_main_error','sintactico_efe.py',97),
  ('tipo_dato -> IFINT','tipo_dato',1,'p_tipo_dato','sintactico_efe.py',117),
  ('tipo_dato -> STRIFING','tipo_dato',1,'p_tipo_dato','sintactico_efe.py',118),
  ('tipo_dato -> AFARRAFAY','tipo_dato',1,'p_tipo_dato','sintactico_efe.py',119),
  ('tipo_dato -> STRUFUCT','tipo_dato',1,'p_tipo_dato','sintactico_efe.py',120),
  ('tipo_dato -> VOFOIFID','tipo_dato',1,'p_tipo_dato','sintactico_efe.py',121),
  ('tipo_dato -> CHAFAR','tipo_dato',1,'p_tipo_dato','sintactico_efe.py',122),
  ('tipo_dato -> BOFOOFOL','tipo_dato',1,'p_tipo_dato','sintactico_efe.py',123),
  ('tipo_dato -> FLOFOAFAT','tipo_dato',1,'p_tipo_dato','sintactico_efe.py',124),
  ('bloque_codigo -> declarar_if bloque_codigo','bloque_codigo',2,'p_bloque_codigo','sintactico_efe.py',128),
  ('bloque_codigo -> declaracion bloque_codigo','bloque_codigo',2,'p_bloque_codigo','sintactico_efe.py',129),
  ('bloque_codigo -> asignar_estructuras bloque_codigo','bloque_codigo',2,'p_bloque_codigo','sintactico_efe.py',130),
  ('bloque_codigo -> asignar_array bloque_codigo','bloque_codigo',2,'p_bloque_codigo','sintactico_efe.py',131),
  ('bloque_codigo -> funcion bloque_codigo','bloque_codigo',2,'p_bloque_codigo','sintactico_efe.py',132),
  ('bloque_codigo -> print bloque_codigo','bloque_codigo',2,'p_bloque_codigo','sintactico_efe.py',133),
  ('bloque_codigo -> input bloque_codigo','bloque_codigo',2,'p_bloque_codigo','sintactico_efe.py',134),
  ('bloque_codigo -> declaracion_while bloque_codigo','bloque_codigo',2,'p_bloque_codigo','sintactico_efe.py',135),
  ('bloque_codigo -> VACIO','bloque_codigo',1,'p_bloque_codigo','sintactico_efe.py',136),
  ('declarar_if -> IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC','declarar_if',7,'p_declarar_if','sintactico_efe.py',140),
  ('declarar_if -> IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE LLAVEA bloque_codigo LLAVEC','declarar_if',11,'p_declarar_if','sintactico_efe.py',141),
  ('declarar_if -> declarar_if_error_llave','declarar_if',1,'p_declarar_if','sintactico_efe.py',142),
  ('declarar_if_error_llave -> IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE LLAVEA bloque_codigo','declarar_if_error_llave',10,'p_declarar_if_error_llave','sintactico_efe.py',154),
  ('declarar_if_error_llave -> IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE bloque_codigo LLAVEC','declarar_if_error_llave',10,'p_declarar_if_error_llave','sintactico_efe.py',155),
  ('declaracion -> tipo_dato ID PYC','declaracion',3,'p_declaracion','sintactico_efe.py',169),
  ('declaracion -> tipo_dato ID ASG ID operacion_matematica ID PYC','declaracion',7,'p_declaracion','sintactico_efe.py',170),
  ('declaracion -> tipo_dato ID ASG dato PYC','declaracion',5,'p_declaracion','sintactico_efe.py',171),
  ('declaracion -> AFARRAFAY ID dimensiones PYC','declaracion',4,'p_declaracion','sintactico_efe.py',172),
  ('declaracion -> declaracion_error','declaracion',1,'p_declaracion','sintactico_efe.py',173),
  ('declaracion_error -> ID PYC','declaracion_error',2,'p_declaracion_error','sintactico_efe.py',185),
  ('declaracion_error -> ID ASG ID operacion_matematica ID PYC','declaracion_error',6,'p_declaracion_error','sintactico_efe.py',186),
  ('declaracion_error -> ID ASG valores PYC','declaracion_error',4,'p_declaracion_error','sintactico_efe.py',187),
  ('declaracion_error -> ID ID PYC','declaracion_error',3,'p_declaracion_error','sintactico_efe.py',188),
  ('declaracion_error -> ID ID ASG ID operacion_matematica ID PYC','declaracion_error',7,'p_declaracion_error','sintactico_efe.py',189),
  ('declaracion_error -> ID ID ASG valores PYC','declaracion_error',5,'p_declaracion_error','sintactico_efe.py',190),
  ('declaracion_error -> ID ID dimensiones PYC','declaracion_error',4,'p_declaracion_error','sintactico_efe.py',191),
  ('declaracion_error -> ID dimensiones PYC','declaracion_error',3,'p_declaracion_error','sintactico_efe.py',192),
  ('dimensiones -> dimension dimensiones','dimensiones',2,'p_dimensiones','sintactico_efe.py',203),
  ('dimensiones -> VACIO','dimensiones',1,'p_dimensiones','sintactico_efe.py',204),
  ('dimension -> CA INT CC','dimension',3,'p_dimension','sintactico_efe.py',207),
  ('asignar_array -> ID dimensiones ASG dato PYC','asignar_array',5,'p_asignar_array','sintactico_efe.py',211),
  ('asignar_estructuras -> ID PUNTO ID ASG dato','asignar_estructuras',5,'p_asignar_estructuras','sintactico_efe.py',216),
  ('funcion -> ID PA valores PC PYC','funcion',5,'p_funcion','sintactico_efe.py',221),
  ('funcion -> ID PA PC PYC','funcion',4,'p_funcion','sintactico_efe.py',222),
  ('funcion -> ID PA valores COMA valores PC PYC','funcion',7,'p_funcion','sintactico_efe.py',223),
  ('print -> PRIFINT PA ID PC PYC','print',5,'p_print','sintactico_efe.py',227),
  ('input -> IFINPUFUT PA ID PC PYC','input',5,'p_input','sintactico_efe.py',232),
  ('declaracion_while -> WHIFILEFE PA condicion PC LLAVEA bloque_codigo LLAVEC','declaracion_while',7,'p_declaracion_while','sintactico_efe.py',236),
  ('declaracion_while -> declaracion_while_error','declaracion_while',1,'p_declaracion_while','sintactico_efe.py',237),
  ('declaracion_while_error -> PA condicion PC LLAVEA bloque_codigo LLAVEC','declaracion_while_error',6,'p_declaracion_while_error','sintactico_efe.py',252),
  ('declaracion_while_error -> ID PA condicion PC LLAVEA bloque_codigo LLAVEC','declaracion_while_error',7,'p_declaracion_while_error','sintactico_efe.py',253),
  ('declaracion_while_error -> WHIFILEFE PA condicion PC bloque_codigo LLAVEC','declaracion_while_error',6,'p_declaracion_while_error','sintactico_efe.py',254),
  ('declaracion_while_error -> WHIFILEFE PA condicion PC LLAVEA bloque_codigo','declaracion_while_error',6,'p_declaracion_while_error','sintactico_efe.py',255),
  ('condicion -> valores operadores valores','condicion',3,'p_condicion','sintactico_efe.py',272),
  ('condicion -> valores','condicion',1,'p_condicion','sintactico_efe.py',273),
  ('condicion -> valores operadores_logicos condicion','condicion',3,'p_condicion','sintactico_efe.py',274),
  ('condicion -> valores NOT valores','condicion',3,'p_condicion','sintactico_efe.py',275),
  ('operacion_matematica -> SUM','operacion_matematica',1,'p_operacion_matematica','sintactico_efe.py',279),
  ('operacion_matematica -> RES','operacion_matematica',1,'p_operacion_matematica','sintactico_efe.py',280),
  ('operacion_matematica -> MUL','operacion_matematica',1,'p_operacion_matematica','sintactico_efe.py',281),
  ('operacion_matematica -> DIV','operacion_matematica',1,'p_operacion_matematica','sintactico_efe.py',282),
  ('operacion_matematica -> RED','operacion_matematica',1,'p_operacion_matematica','sintactico_efe.py',283),
  ('operacion_matematica -> POT','operacion_matematica',1,'p_operacion_matematica','sintactico_efe.py',284),
  ('valores -> INT','valores',1,'p_valores','sintactico_efe.py',288),
  ('valores -> CHAR','valores',1,'p_valores','sintactico_efe.py',289),
  ('valores -> TRUFUEFE','valores',1,'p_valores','sintactico_efe.py',290),
  ('valores -> FAFALSEFE','valores',1,'p_valores','sintactico_efe.py',291),
  ('valores -> PCC','valores',1,'p_valores','sintactico_efe.py',292),
  ('valores -> ID','valores',1,'p_valores','sintactico_efe.py',293),
  ('dato -> INT','dato',1,'p_dato','sintactico_efe.py',297),
  ('dato -> CHAR','dato',1,'p_dato','sintactico_efe.py',298),
  ('dato -> TRUFUEFE','dato',1,'p_dato','sintactico_efe.py',299),
  ('dato -> FAFALSEFE','dato',1,'p_dato','sintactico_efe.py',300),
  ('dato -> PCC','dato',1,'p_dato','sintactico_efe.py',301),
  ('dato -> REAL','dato',1,'p_dato','sintactico_efe.py',302),
  ('operadores -> MEN','operadores',1,'p_operadores','sintactico_efe.py',306),
  ('operadores -> MAY','operadores',1,'p_operadores','sintactico_efe.py',307),
  ('operadores -> MENIG','operadores',1,'p_operadores','sintactico_efe.py',308),
  ('operadores -> MAYIG','operadores',1,'p_operadores','sintactico_efe.py',309),
  ('operadores -> CMP','operadores',1,'p_operadores','sintactico_efe.py',310),
  ('operadores -> DIF','operadores',1,'p_operadores','sintactico_efe.py',311),
  ('operadores_logicos -> AND','operadores_logicos',1,'p_operadores_logicos','sintactico_efe.py',315),
  ('operadores_logicos -> OR','operadores_logicos',1,'p_operadores_logicos','sintactico_efe.py',316),
  ('vacio -> VACIO','vacio',1,'p_vacio','sintactico_efe.py',320),
]
