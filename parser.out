Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    NOT

Grammar

Rule 0     S' -> start
Rule 1     start -> declarar_estructuras declarar_main
Rule 2     start -> declarar_funciones declarar_main
Rule 3     start -> declarar_estructuras declarar_funciones declarar_main
Rule 4     start -> declarar_main
Rule 5     declarar_estructuras -> STRUFUCT ID LLAVEA tipo_dato ID PYC tipo_dato ID PYC LLAVEC
Rule 6     declarar_estructuras -> declarar_estructuras_error
Rule 7     declarar_estructuras_error -> ID LLAVEA tipo_dato ID PYC tipo_dato ID PYC LLAVEC
Rule 8     declarar_estructuras_error -> ID ID LLAVEA tipo_dato ID PYC tipo_dato ID PYC LLAVEC
Rule 9     declarar_estructuras_error -> STRUFUCT ID LLAVEA tipo_dato PYC tipo_dato ID PYC LLAVEC
Rule 10    declarar_estructuras_error -> STRUFUCT ID LLAVEA tipo_dato ID PYC tipo_dato PYC LLAVEC
Rule 11    declarar_estructuras_error -> STRUFUCT ID LLAVEA tipo_dato PYC tipo_dato PYC LLAVEC
Rule 12    declarar_estructuras_error -> STRUFUCT ID LLAVEA ID PYC ID PYC LLAVEC
Rule 13    declarar_estructuras_error -> STRUFUCT ID LLAVEA tipo_dato ID PYC tipo_dato ID PYC tipo_dato ID PYC LLAVEC
Rule 14    declarar_funciones -> FUNCTION tipo_dato ID PA tipo_dato ID PC LLAVEA bloque_codigo REFETUFURN ID PYC LLAVEC
Rule 15    declarar_funciones -> FUNCTION tipo_dato ID PA PC LLAVEA bloque_codigo REFETUFURN ID PYC LLAVEC
Rule 16    declarar_funciones -> FUNCTION tipo_dato ID PA tipo_dato ID COMA tipo_dato ID PC LLAVEA bloque_codigo REFETUFURN ID PYC LLAVEC
Rule 17    declarar_funciones -> FUNCTION ID PA tipo_dato ID PC LLAVEA bloque_codigo REFETUFURN PYC LLAVEC
Rule 18    declarar_funciones -> FUNCTION ID PA PC LLAVEA bloque_codigo REFETUFURN PYC LLAVEC
Rule 19    declarar_funciones -> FUNCTION ID PA tipo_dato ID COMA tipo_dato ID PC LLAVEA bloque_codigo REFETUFURN PYC LLAVEC
Rule 20    declarar_funciones -> declarar_funciones_error
Rule 21    declarar_funciones_error -> FUNCTION tipo_dato ID PA tipo_dato ID COMA tipo_dato ID PC LLAVEA bloque_codigo REFETUFURN PYC LLAVEC
Rule 22    declarar_funciones_error -> FUNCTION tipo_dato ID PA tipo_dato ID PC LLAVEA bloque_codigo REFETUFURN PYC LLAVEC
Rule 23    declarar_funciones_error -> FUNCTION tipo_dato ID PA PC LLAVEA bloque_codigo REFETUFURN PYC LLAVEC
Rule 24    declarar_main -> IFINT MAFAIFIN PA PC LLAVEA bloque_codigo REFETUFURN PYC LLAVEC
Rule 25    declarar_main -> declarar_main_error
Rule 26    declarar_main_error -> MAFAIFIN PA PC LLAVEA bloque_codigo REFETUFURN PYC LLAVEC
Rule 27    declarar_main_error -> IFINT MAFAIFIN PA PC LLAVEA bloque_codigo LLAVEC
Rule 28    declarar_main_error -> MAFAIFIN PA PC LLAVEA bloque_codigo LLAVEC
Rule 29    declarar_main_error -> IFINT PA PC LLAVEA bloque_codigo REFETUFURN PYC LLAVEC
Rule 30    declarar_main_error -> IFINT ID PA PC LLAVEA bloque_codigo REFETUFURN PYC LLAVEC
Rule 31    declarar_main_error -> ID MAFAIFIN PA PC LLAVEA bloque_codigo REFETUFURN PYC LLAVEC
Rule 32    declarar_main_error -> ID ID PA PC LLAVEA bloque_codigo REFETUFURN PYC LLAVEC
Rule 33    declarar_main_error -> IFINT MAFAIFIN PA PC LLAVEA bloque_codigo ID PYC LLAVEC
Rule 34    tipo_dato -> IFINT
Rule 35    tipo_dato -> STRIFING
Rule 36    tipo_dato -> AFARRAFAY
Rule 37    tipo_dato -> STRUFUCT
Rule 38    tipo_dato -> VOFOIFID
Rule 39    tipo_dato -> CHAFAR
Rule 40    tipo_dato -> BOFOOFOL
Rule 41    tipo_dato -> FLOFOAFAT
Rule 42    bloque_codigo -> declarar_if bloque_codigo
Rule 43    bloque_codigo -> declaracion bloque_codigo
Rule 44    bloque_codigo -> asignar_estructuras bloque_codigo
Rule 45    bloque_codigo -> asignar_array bloque_codigo
Rule 46    bloque_codigo -> funcion bloque_codigo
Rule 47    bloque_codigo -> print bloque_codigo
Rule 48    bloque_codigo -> input bloque_codigo
Rule 49    bloque_codigo -> declaracion_while bloque_codigo
Rule 50    bloque_codigo -> VACIO
Rule 51    declarar_if -> IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC
Rule 52    declarar_if -> IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE LLAVEA bloque_codigo LLAVEC
Rule 53    declarar_if -> declarar_if_error_llave
Rule 54    declarar_if_error_llave -> IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE LLAVEA bloque_codigo
Rule 55    declarar_if_error_llave -> IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE bloque_codigo LLAVEC
Rule 56    declarar_if_error_llave -> PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE LLAVEA bloque_codigo LLAVEC
Rule 57    declarar_if_error_llave -> ID PA condicion PC LLAVEA bloque_codigo LLAVEC
Rule 58    declarar_if_error_llave -> ID PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE LLAVEA bloque_codigo LLAVEC
Rule 59    declarar_if_error_llave -> IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC LLAVEA bloque_codigo LLAVEC
Rule 60    declaracion -> tipo_dato ID ASG ID operacion_matematica ID PYC
Rule 61    declaracion -> tipo_dato ID ASG dato PYC
Rule 62    declaracion -> AFARRAFAY ID dimensiones PYC
Rule 63    declaracion -> declaracion_error
Rule 64    declaracion_error -> ID PYC
Rule 65    declaracion_error -> ID ASG ID operacion_matematica ID PYC
Rule 66    declaracion_error -> ID ASG dato PYC
Rule 67    declaracion_error -> ID ID PYC
Rule 68    declaracion_error -> ID ID ASG ID operacion_matematica ID PYC
Rule 69    declaracion_error -> ID ID ASG valores PYC
Rule 70    declaracion_error -> ID ID dimensiones PYC
Rule 71    declaracion_error -> ID dimensiones PYC
Rule 72    dimensiones -> dimension dimensiones
Rule 73    dimensiones -> VACIO
Rule 74    dimension -> CA INT CC
Rule 75    dimension -> dimension_error
Rule 76    dimension_error -> CA CC
Rule 77    dimension_error -> CA ID CC
Rule 78    dimension_error -> CA REAL CC
Rule 79    dimension_error -> CA PCC CC
Rule 80    dimension_error -> CA CHAR CC
Rule 81    asignar_array -> ID dimensiones ASG dato PYC
Rule 82    asignar_estructuras -> STRUF ID PUNTO ID ASG dato PYC
Rule 83    funcion -> ID PA valores PC PYC
Rule 84    funcion -> ID PA PC PYC
Rule 85    funcion -> ID PA valores COMA valores PC PYC
Rule 86    print -> PRIFINT PA ID PC PYC
Rule 87    input -> IFINPUFUT PA ID PC PYC
Rule 88    declaracion_while -> WHIFILEFE PA condicion PC LLAVEA bloque_codigo LLAVEC
Rule 89    declaracion_while -> declaracion_while_error
Rule 90    declaracion_while_error -> PA condicion PC LLAVEA bloque_codigo LLAVEC
Rule 91    declaracion_while_error -> ID PA condicion PC LLAVEA bloque_codigo LLAVEC
Rule 92    declaracion_while_error -> WHIFILEFE PA condicion PC bloque_codigo LLAVEC
Rule 93    declaracion_while_error -> WHIFILEFE PA condicion PC LLAVEA bloque_codigo
Rule 94    condicion -> ID operadores ID
Rule 95    operacion_matematica -> SUM
Rule 96    operacion_matematica -> RES
Rule 97    operacion_matematica -> MUL
Rule 98    operacion_matematica -> DIV
Rule 99    operacion_matematica -> RED
Rule 100   operacion_matematica -> POT
Rule 101   valores -> INT
Rule 102   valores -> CHAR
Rule 103   valores -> TRUFUEFE
Rule 104   valores -> FAFALSEFE
Rule 105   valores -> PCC
Rule 106   valores -> ID
Rule 107   dato -> INT
Rule 108   dato -> CHAR
Rule 109   dato -> TRUFUEFE
Rule 110   dato -> FAFALSEFE
Rule 111   dato -> PCC
Rule 112   dato -> REAL
Rule 113   operadores -> MEN
Rule 114   operadores -> MAY
Rule 115   operadores -> MENIG
Rule 116   operadores -> MAYIG
Rule 117   operadores -> CMP
Rule 118   operadores -> DIF
Rule 119   operadores_logicos -> AND
Rule 120   operadores_logicos -> OR
Rule 121   vacio -> VACIO

Terminals, with rules where they appear

AFARRAFAY            : 36 62
AND                  : 119
ASG                  : 60 61 65 66 68 69 81 82
BOFOOFOL             : 40
CA                   : 74 76 77 78 79 80
CC                   : 74 76 77 78 79 80
CHAFAR               : 39
CHAR                 : 80 102 108
CMP                  : 117
COMA                 : 16 19 21 85
DIF                  : 118
DIV                  : 98
EFELSEFE             : 52 54 55 56 58
FAFALSEFE            : 104 110
FLOFOAFAT            : 41
FUNCTION             : 14 15 16 17 18 19 21 22 23
ID                   : 5 5 5 7 7 7 8 8 8 8 9 9 10 10 11 12 12 12 13 13 13 13 14 14 14 15 15 16 16 16 16 17 17 18 19 19 19 21 21 21 22 22 23 30 31 32 32 33 57 58 60 60 60 61 62 64 65 65 65 66 67 67 68 68 68 68 69 69 70 70 71 77 81 82 82 83 84 85 86 87 91 94 94 106
IFIF                 : 51 52 54 55 59
IFINPUFUT            : 87
IFINT                : 24 27 29 30 33 34
INT                  : 74 101 107
LLAVEA               : 5 7 8 9 10 11 12 13 14 15 16 17 18 19 21 22 23 24 26 27 28 29 30 31 32 33 51 52 52 54 54 55 56 56 57 58 58 59 59 88 90 91 93
LLAVEC               : 5 7 8 9 10 11 12 13 14 15 16 17 18 19 21 22 23 24 26 27 28 29 30 31 32 33 51 52 52 54 55 55 56 56 57 58 58 59 59 88 90 91 92
MAFAIFIN             : 24 26 27 28 31 33
MAY                  : 114
MAYIG                : 116
MEN                  : 113
MENIG                : 115
MUL                  : 97
NOT                  : 
OR                   : 120
PA                   : 14 15 16 17 18 19 21 22 23 24 26 27 28 29 30 31 32 33 51 52 54 55 56 57 58 59 83 84 85 86 87 88 90 91 92 93
PC                   : 14 15 16 17 18 19 21 22 23 24 26 27 28 29 30 31 32 33 51 52 54 55 56 57 58 59 83 84 85 86 87 88 90 91 92 93
PCC                  : 79 105 111
POT                  : 100
PRIFINT              : 86
PUNTO                : 82
PYC                  : 5 5 7 7 8 8 9 9 10 10 11 11 12 12 13 13 13 14 15 16 17 18 19 21 22 23 24 26 29 30 31 32 33 60 61 62 64 65 66 67 68 69 70 71 81 82 83 84 85 86 87
REAL                 : 78 112
RED                  : 99
REFETUFURN           : 14 15 16 17 18 19 21 22 23 24 26 29 30 31 32
RES                  : 96
STRIFING             : 35
STRUF                : 82
STRUFUCT             : 5 9 10 11 12 13 37
SUM                  : 95
TRUFUEFE             : 103 109
VACIO                : 50 73 121
VOFOIFID             : 38
WHIFILEFE            : 88 92 93
error                : 

Nonterminals, with rules where they appear

asignar_array        : 45
asignar_estructuras  : 44
bloque_codigo        : 14 15 16 17 18 19 21 22 23 24 26 27 28 29 30 31 32 33 42 43 44 45 46 47 48 49 51 52 52 54 54 55 55 56 56 57 58 58 59 59 88 90 91 92 93
condicion            : 51 52 54 55 56 57 58 59 88 90 91 92 93
dato                 : 61 66 81 82
declaracion          : 43
declaracion_error    : 63
declaracion_while    : 49
declaracion_while_error : 89
declarar_estructuras : 1 3
declarar_estructuras_error : 6
declarar_funciones   : 2 3
declarar_funciones_error : 20
declarar_if          : 42
declarar_if_error_llave : 53
declarar_main        : 1 2 3 4
declarar_main_error  : 25
dimension            : 72
dimension_error      : 75
dimensiones          : 62 70 71 72 81
funcion              : 46
input                : 48
operacion_matematica : 60 65 68
operadores           : 94
operadores_logicos   : 
print                : 47
start                : 0
tipo_dato            : 5 5 7 7 8 8 9 9 10 10 11 11 13 13 13 14 14 15 16 16 16 17 19 19 21 21 21 22 22 23 60 61
vacio                : 
valores              : 69 83 85 85

Parsing method: LALR

state 0

    (0) S' -> . start
    (1) start -> . declarar_estructuras declarar_main
    (2) start -> . declarar_funciones declarar_main
    (3) start -> . declarar_estructuras declarar_funciones declarar_main
    (4) start -> . declarar_main
    (5) declarar_estructuras -> . STRUFUCT ID LLAVEA tipo_dato ID PYC tipo_dato ID PYC LLAVEC
    (6) declarar_estructuras -> . declarar_estructuras_error
    (14) declarar_funciones -> . FUNCTION tipo_dato ID PA tipo_dato ID PC LLAVEA bloque_codigo REFETUFURN ID PYC LLAVEC
    (15) declarar_funciones -> . FUNCTION tipo_dato ID PA PC LLAVEA bloque_codigo REFETUFURN ID PYC LLAVEC
    (16) declarar_funciones -> . FUNCTION tipo_dato ID PA tipo_dato ID COMA tipo_dato ID PC LLAVEA bloque_codigo REFETUFURN ID PYC LLAVEC
    (17) declarar_funciones -> . FUNCTION ID PA tipo_dato ID PC LLAVEA bloque_codigo REFETUFURN PYC LLAVEC
    (18) declarar_funciones -> . FUNCTION ID PA PC LLAVEA bloque_codigo REFETUFURN PYC LLAVEC
    (19) declarar_funciones -> . FUNCTION ID PA tipo_dato ID COMA tipo_dato ID PC LLAVEA bloque_codigo REFETUFURN PYC LLAVEC
    (20) declarar_funciones -> . declarar_funciones_error
    (24) declarar_main -> . IFINT MAFAIFIN PA PC LLAVEA bloque_codigo REFETUFURN PYC LLAVEC
    (25) declarar_main -> . declarar_main_error
    (7) declarar_estructuras_error -> . ID LLAVEA tipo_dato ID PYC tipo_dato ID PYC LLAVEC
    (8) declarar_estructuras_error -> . ID ID LLAVEA tipo_dato ID PYC tipo_dato ID PYC LLAVEC
    (9) declarar_estructuras_error -> . STRUFUCT ID LLAVEA tipo_dato PYC tipo_dato ID PYC LLAVEC
    (10) declarar_estructuras_error -> . STRUFUCT ID LLAVEA tipo_dato ID PYC tipo_dato PYC LLAVEC
    (11) declarar_estructuras_error -> . STRUFUCT ID LLAVEA tipo_dato PYC tipo_dato PYC LLAVEC
    (12) declarar_estructuras_error -> . STRUFUCT ID LLAVEA ID PYC ID PYC LLAVEC
    (13) declarar_estructuras_error -> . STRUFUCT ID LLAVEA tipo_dato ID PYC tipo_dato ID PYC tipo_dato ID PYC LLAVEC
    (21) declarar_funciones_error -> . FUNCTION tipo_dato ID PA tipo_dato ID COMA tipo_dato ID PC LLAVEA bloque_codigo REFETUFURN PYC LLAVEC
    (22) declarar_funciones_error -> . FUNCTION tipo_dato ID PA tipo_dato ID PC LLAVEA bloque_codigo REFETUFURN PYC LLAVEC
    (23) declarar_funciones_error -> . FUNCTION tipo_dato ID PA PC LLAVEA bloque_codigo REFETUFURN PYC LLAVEC
    (26) declarar_main_error -> . MAFAIFIN PA PC LLAVEA bloque_codigo REFETUFURN PYC LLAVEC
    (27) declarar_main_error -> . IFINT MAFAIFIN PA PC LLAVEA bloque_codigo LLAVEC
    (28) declarar_main_error -> . MAFAIFIN PA PC LLAVEA bloque_codigo LLAVEC
    (29) declarar_main_error -> . IFINT PA PC LLAVEA bloque_codigo REFETUFURN PYC LLAVEC
    (30) declarar_main_error -> . IFINT ID PA PC LLAVEA bloque_codigo REFETUFURN PYC LLAVEC
    (31) declarar_main_error -> . ID MAFAIFIN PA PC LLAVEA bloque_codigo REFETUFURN PYC LLAVEC
    (32) declarar_main_error -> . ID ID PA PC LLAVEA bloque_codigo REFETUFURN PYC LLAVEC
    (33) declarar_main_error -> . IFINT MAFAIFIN PA PC LLAVEA bloque_codigo ID PYC LLAVEC

    STRUFUCT        shift and go to state 5
    FUNCTION        shift and go to state 8
    IFINT           shift and go to state 10
    ID              shift and go to state 6
    MAFAIFIN        shift and go to state 11

    start                          shift and go to state 1
    declarar_estructuras           shift and go to state 2
    declarar_main                  shift and go to state 3
    declarar_funciones             shift and go to state 4
    declarar_estructuras_error     shift and go to state 7
    declarar_funciones_error       shift and go to state 9
    declarar_main_error            shift and go to state 12

state 1

    (0) S' -> start .



state 2

    (1) start -> declarar_estructuras . declarar_main
    (3) start -> declarar_estructuras . declarar_funciones declarar_main
    (24) declarar_main -> . IFINT MAFAIFIN PA PC LLAVEA bloque_codigo REFETUFURN PYC LLAVEC
    (25) declarar_main -> . declarar_main_error
    (14) declarar_funciones -> . FUNCTION tipo_dato ID PA tipo_dato ID PC LLAVEA bloque_codigo REFETUFURN ID PYC LLAVEC
    (15) declarar_funciones -> . FUNCTION tipo_dato ID PA PC LLAVEA bloque_codigo REFETUFURN ID PYC LLAVEC
    (16) declarar_funciones -> . FUNCTION tipo_dato ID PA tipo_dato ID COMA tipo_dato ID PC LLAVEA bloque_codigo REFETUFURN ID PYC LLAVEC
    (17) declarar_funciones -> . FUNCTION ID PA tipo_dato ID PC LLAVEA bloque_codigo REFETUFURN PYC LLAVEC
    (18) declarar_funciones -> . FUNCTION ID PA PC LLAVEA bloque_codigo REFETUFURN PYC LLAVEC
    (19) declarar_funciones -> . FUNCTION ID PA tipo_dato ID COMA tipo_dato ID PC LLAVEA bloque_codigo REFETUFURN PYC LLAVEC
    (20) declarar_funciones -> . declarar_funciones_error
    (26) declarar_main_error -> . MAFAIFIN PA PC LLAVEA bloque_codigo REFETUFURN PYC LLAVEC
    (27) declarar_main_error -> . IFINT MAFAIFIN PA PC LLAVEA bloque_codigo LLAVEC
    (28) declarar_main_error -> . MAFAIFIN PA PC LLAVEA bloque_codigo LLAVEC
    (29) declarar_main_error -> . IFINT PA PC LLAVEA bloque_codigo REFETUFURN PYC LLAVEC
    (30) declarar_main_error -> . IFINT ID PA PC LLAVEA bloque_codigo REFETUFURN PYC LLAVEC
    (31) declarar_main_error -> . ID MAFAIFIN PA PC LLAVEA bloque_codigo REFETUFURN PYC LLAVEC
    (32) declarar_main_error -> . ID ID PA PC LLAVEA bloque_codigo REFETUFURN PYC LLAVEC
    (33) declarar_main_error -> . IFINT MAFAIFIN PA PC LLAVEA bloque_codigo ID PYC LLAVEC
    (21) declarar_funciones_error -> . FUNCTION tipo_dato ID PA tipo_dato ID COMA tipo_dato ID PC LLAVEA bloque_codigo REFETUFURN PYC LLAVEC
    (22) declarar_funciones_error -> . FUNCTION tipo_dato ID PA tipo_dato ID PC LLAVEA bloque_codigo REFETUFURN PYC LLAVEC
    (23) declarar_funciones_error -> . FUNCTION tipo_dato ID PA PC LLAVEA bloque_codigo REFETUFURN PYC LLAVEC

    IFINT           shift and go to state 10
    FUNCTION        shift and go to state 8
    MAFAIFIN        shift and go to state 11
    ID              shift and go to state 15

    declarar_main                  shift and go to state 13
    declarar_funciones             shift and go to state 14
    declarar_main_error            shift and go to state 12
    declarar_funciones_error       shift and go to state 9

state 3

    (4) start -> declarar_main .

    $end            reduce using rule 4 (start -> declarar_main .)


state 4

    (2) start -> declarar_funciones . declarar_main
    (24) declarar_main -> . IFINT MAFAIFIN PA PC LLAVEA bloque_codigo REFETUFURN PYC LLAVEC
    (25) declarar_main -> . declarar_main_error
    (26) declarar_main_error -> . MAFAIFIN PA PC LLAVEA bloque_codigo REFETUFURN PYC LLAVEC
    (27) declarar_main_error -> . IFINT MAFAIFIN PA PC LLAVEA bloque_codigo LLAVEC
    (28) declarar_main_error -> . MAFAIFIN PA PC LLAVEA bloque_codigo LLAVEC
    (29) declarar_main_error -> . IFINT PA PC LLAVEA bloque_codigo REFETUFURN PYC LLAVEC
    (30) declarar_main_error -> . IFINT ID PA PC LLAVEA bloque_codigo REFETUFURN PYC LLAVEC
    (31) declarar_main_error -> . ID MAFAIFIN PA PC LLAVEA bloque_codigo REFETUFURN PYC LLAVEC
    (32) declarar_main_error -> . ID ID PA PC LLAVEA bloque_codigo REFETUFURN PYC LLAVEC
    (33) declarar_main_error -> . IFINT MAFAIFIN PA PC LLAVEA bloque_codigo ID PYC LLAVEC

    IFINT           shift and go to state 10
    MAFAIFIN        shift and go to state 11
    ID              shift and go to state 15

    declarar_main                  shift and go to state 16
    declarar_main_error            shift and go to state 12

state 5

    (5) declarar_estructuras -> STRUFUCT . ID LLAVEA tipo_dato ID PYC tipo_dato ID PYC LLAVEC
    (9) declarar_estructuras_error -> STRUFUCT . ID LLAVEA tipo_dato PYC tipo_dato ID PYC LLAVEC
    (10) declarar_estructuras_error -> STRUFUCT . ID LLAVEA tipo_dato ID PYC tipo_dato PYC LLAVEC
    (11) declarar_estructuras_error -> STRUFUCT . ID LLAVEA tipo_dato PYC tipo_dato PYC LLAVEC
    (12) declarar_estructuras_error -> STRUFUCT . ID LLAVEA ID PYC ID PYC LLAVEC
    (13) declarar_estructuras_error -> STRUFUCT . ID LLAVEA tipo_dato ID PYC tipo_dato ID PYC tipo_dato ID PYC LLAVEC

    ID              shift and go to state 17


state 6

    (7) declarar_estructuras_error -> ID . LLAVEA tipo_dato ID PYC tipo_dato ID PYC LLAVEC
    (8) declarar_estructuras_error -> ID . ID LLAVEA tipo_dato ID PYC tipo_dato ID PYC LLAVEC
    (31) declarar_main_error -> ID . MAFAIFIN PA PC LLAVEA bloque_codigo REFETUFURN PYC LLAVEC
    (32) declarar_main_error -> ID . ID PA PC LLAVEA bloque_codigo REFETUFURN PYC LLAVEC

    LLAVEA          shift and go to state 19
    ID              shift and go to state 18
    MAFAIFIN        shift and go to state 20


state 7

    (6) declarar_estructuras -> declarar_estructuras_error .

    IFINT           reduce using rule 6 (declarar_estructuras -> declarar_estructuras_error .)
    FUNCTION        reduce using rule 6 (declarar_estructuras -> declarar_estructuras_error .)
    MAFAIFIN        reduce using rule 6 (declarar_estructuras -> declarar_estructuras_error .)
    ID              reduce using rule 6 (declarar_estructuras -> declarar_estructuras_error .)


state 8

    (14) declarar_funciones -> FUNCTION . tipo_dato ID PA tipo_dato ID PC LLAVEA bloque_codigo REFETUFURN ID PYC LLAVEC
    (15) declarar_funciones -> FUNCTION . tipo_dato ID PA PC LLAVEA bloque_codigo REFETUFURN ID PYC LLAVEC
    (16) declarar_funciones -> FUNCTION . tipo_dato ID PA tipo_dato ID COMA tipo_dato ID PC LLAVEA bloque_codigo REFETUFURN ID PYC LLAVEC
    (17) declarar_funciones -> FUNCTION . ID PA tipo_dato ID PC LLAVEA bloque_codigo REFETUFURN PYC LLAVEC
    (18) declarar_funciones -> FUNCTION . ID PA PC LLAVEA bloque_codigo REFETUFURN PYC LLAVEC
    (19) declarar_funciones -> FUNCTION . ID PA tipo_dato ID COMA tipo_dato ID PC LLAVEA bloque_codigo REFETUFURN PYC LLAVEC
    (21) declarar_funciones_error -> FUNCTION . tipo_dato ID PA tipo_dato ID COMA tipo_dato ID PC LLAVEA bloque_codigo REFETUFURN PYC LLAVEC
    (22) declarar_funciones_error -> FUNCTION . tipo_dato ID PA tipo_dato ID PC LLAVEA bloque_codigo REFETUFURN PYC LLAVEC
    (23) declarar_funciones_error -> FUNCTION . tipo_dato ID PA PC LLAVEA bloque_codigo REFETUFURN PYC LLAVEC
    (34) tipo_dato -> . IFINT
    (35) tipo_dato -> . STRIFING
    (36) tipo_dato -> . AFARRAFAY
    (37) tipo_dato -> . STRUFUCT
    (38) tipo_dato -> . VOFOIFID
    (39) tipo_dato -> . CHAFAR
    (40) tipo_dato -> . BOFOOFOL
    (41) tipo_dato -> . FLOFOAFAT

    ID              shift and go to state 22
    IFINT           shift and go to state 23
    STRIFING        shift and go to state 24
    AFARRAFAY       shift and go to state 25
    STRUFUCT        shift and go to state 26
    VOFOIFID        shift and go to state 27
    CHAFAR          shift and go to state 28
    BOFOOFOL        shift and go to state 29
    FLOFOAFAT       shift and go to state 30

    tipo_dato                      shift and go to state 21

state 9

    (20) declarar_funciones -> declarar_funciones_error .

    IFINT           reduce using rule 20 (declarar_funciones -> declarar_funciones_error .)
    MAFAIFIN        reduce using rule 20 (declarar_funciones -> declarar_funciones_error .)
    ID              reduce using rule 20 (declarar_funciones -> declarar_funciones_error .)


state 10

    (24) declarar_main -> IFINT . MAFAIFIN PA PC LLAVEA bloque_codigo REFETUFURN PYC LLAVEC
    (27) declarar_main_error -> IFINT . MAFAIFIN PA PC LLAVEA bloque_codigo LLAVEC
    (29) declarar_main_error -> IFINT . PA PC LLAVEA bloque_codigo REFETUFURN PYC LLAVEC
    (30) declarar_main_error -> IFINT . ID PA PC LLAVEA bloque_codigo REFETUFURN PYC LLAVEC
    (33) declarar_main_error -> IFINT . MAFAIFIN PA PC LLAVEA bloque_codigo ID PYC LLAVEC

    MAFAIFIN        shift and go to state 31
    PA              shift and go to state 32
    ID              shift and go to state 33


state 11

    (26) declarar_main_error -> MAFAIFIN . PA PC LLAVEA bloque_codigo REFETUFURN PYC LLAVEC
    (28) declarar_main_error -> MAFAIFIN . PA PC LLAVEA bloque_codigo LLAVEC

    PA              shift and go to state 34


state 12

    (25) declarar_main -> declarar_main_error .

    $end            reduce using rule 25 (declarar_main -> declarar_main_error .)


state 13

    (1) start -> declarar_estructuras declarar_main .

    $end            reduce using rule 1 (start -> declarar_estructuras declarar_main .)


state 14

    (3) start -> declarar_estructuras declarar_funciones . declarar_main
    (24) declarar_main -> . IFINT MAFAIFIN PA PC LLAVEA bloque_codigo REFETUFURN PYC LLAVEC
    (25) declarar_main -> . declarar_main_error
    (26) declarar_main_error -> . MAFAIFIN PA PC LLAVEA bloque_codigo REFETUFURN PYC LLAVEC
    (27) declarar_main_error -> . IFINT MAFAIFIN PA PC LLAVEA bloque_codigo LLAVEC
    (28) declarar_main_error -> . MAFAIFIN PA PC LLAVEA bloque_codigo LLAVEC
    (29) declarar_main_error -> . IFINT PA PC LLAVEA bloque_codigo REFETUFURN PYC LLAVEC
    (30) declarar_main_error -> . IFINT ID PA PC LLAVEA bloque_codigo REFETUFURN PYC LLAVEC
    (31) declarar_main_error -> . ID MAFAIFIN PA PC LLAVEA bloque_codigo REFETUFURN PYC LLAVEC
    (32) declarar_main_error -> . ID ID PA PC LLAVEA bloque_codigo REFETUFURN PYC LLAVEC
    (33) declarar_main_error -> . IFINT MAFAIFIN PA PC LLAVEA bloque_codigo ID PYC LLAVEC

    IFINT           shift and go to state 10
    MAFAIFIN        shift and go to state 11
    ID              shift and go to state 15

    declarar_main                  shift and go to state 35
    declarar_main_error            shift and go to state 12

state 15

    (31) declarar_main_error -> ID . MAFAIFIN PA PC LLAVEA bloque_codigo REFETUFURN PYC LLAVEC
    (32) declarar_main_error -> ID . ID PA PC LLAVEA bloque_codigo REFETUFURN PYC LLAVEC

    MAFAIFIN        shift and go to state 20
    ID              shift and go to state 36


state 16

    (2) start -> declarar_funciones declarar_main .

    $end            reduce using rule 2 (start -> declarar_funciones declarar_main .)


state 17

    (5) declarar_estructuras -> STRUFUCT ID . LLAVEA tipo_dato ID PYC tipo_dato ID PYC LLAVEC
    (9) declarar_estructuras_error -> STRUFUCT ID . LLAVEA tipo_dato PYC tipo_dato ID PYC LLAVEC
    (10) declarar_estructuras_error -> STRUFUCT ID . LLAVEA tipo_dato ID PYC tipo_dato PYC LLAVEC
    (11) declarar_estructuras_error -> STRUFUCT ID . LLAVEA tipo_dato PYC tipo_dato PYC LLAVEC
    (12) declarar_estructuras_error -> STRUFUCT ID . LLAVEA ID PYC ID PYC LLAVEC
    (13) declarar_estructuras_error -> STRUFUCT ID . LLAVEA tipo_dato ID PYC tipo_dato ID PYC tipo_dato ID PYC LLAVEC

    LLAVEA          shift and go to state 37


state 18

    (8) declarar_estructuras_error -> ID ID . LLAVEA tipo_dato ID PYC tipo_dato ID PYC LLAVEC
    (32) declarar_main_error -> ID ID . PA PC LLAVEA bloque_codigo REFETUFURN PYC LLAVEC

    LLAVEA          shift and go to state 38
    PA              shift and go to state 39


state 19

    (7) declarar_estructuras_error -> ID LLAVEA . tipo_dato ID PYC tipo_dato ID PYC LLAVEC
    (34) tipo_dato -> . IFINT
    (35) tipo_dato -> . STRIFING
    (36) tipo_dato -> . AFARRAFAY
    (37) tipo_dato -> . STRUFUCT
    (38) tipo_dato -> . VOFOIFID
    (39) tipo_dato -> . CHAFAR
    (40) tipo_dato -> . BOFOOFOL
    (41) tipo_dato -> . FLOFOAFAT

    IFINT           shift and go to state 23
    STRIFING        shift and go to state 24
    AFARRAFAY       shift and go to state 25
    STRUFUCT        shift and go to state 26
    VOFOIFID        shift and go to state 27
    CHAFAR          shift and go to state 28
    BOFOOFOL        shift and go to state 29
    FLOFOAFAT       shift and go to state 30

    tipo_dato                      shift and go to state 40

state 20

    (31) declarar_main_error -> ID MAFAIFIN . PA PC LLAVEA bloque_codigo REFETUFURN PYC LLAVEC

    PA              shift and go to state 41


state 21

    (14) declarar_funciones -> FUNCTION tipo_dato . ID PA tipo_dato ID PC LLAVEA bloque_codigo REFETUFURN ID PYC LLAVEC
    (15) declarar_funciones -> FUNCTION tipo_dato . ID PA PC LLAVEA bloque_codigo REFETUFURN ID PYC LLAVEC
    (16) declarar_funciones -> FUNCTION tipo_dato . ID PA tipo_dato ID COMA tipo_dato ID PC LLAVEA bloque_codigo REFETUFURN ID PYC LLAVEC
    (21) declarar_funciones_error -> FUNCTION tipo_dato . ID PA tipo_dato ID COMA tipo_dato ID PC LLAVEA bloque_codigo REFETUFURN PYC LLAVEC
    (22) declarar_funciones_error -> FUNCTION tipo_dato . ID PA tipo_dato ID PC LLAVEA bloque_codigo REFETUFURN PYC LLAVEC
    (23) declarar_funciones_error -> FUNCTION tipo_dato . ID PA PC LLAVEA bloque_codigo REFETUFURN PYC LLAVEC

    ID              shift and go to state 42


state 22

    (17) declarar_funciones -> FUNCTION ID . PA tipo_dato ID PC LLAVEA bloque_codigo REFETUFURN PYC LLAVEC
    (18) declarar_funciones -> FUNCTION ID . PA PC LLAVEA bloque_codigo REFETUFURN PYC LLAVEC
    (19) declarar_funciones -> FUNCTION ID . PA tipo_dato ID COMA tipo_dato ID PC LLAVEA bloque_codigo REFETUFURN PYC LLAVEC

    PA              shift and go to state 43


state 23

    (34) tipo_dato -> IFINT .

    ID              reduce using rule 34 (tipo_dato -> IFINT .)
    PYC             reduce using rule 34 (tipo_dato -> IFINT .)


state 24

    (35) tipo_dato -> STRIFING .

    ID              reduce using rule 35 (tipo_dato -> STRIFING .)
    PYC             reduce using rule 35 (tipo_dato -> STRIFING .)


state 25

    (36) tipo_dato -> AFARRAFAY .

    ID              reduce using rule 36 (tipo_dato -> AFARRAFAY .)
    PYC             reduce using rule 36 (tipo_dato -> AFARRAFAY .)


state 26

    (37) tipo_dato -> STRUFUCT .

    ID              reduce using rule 37 (tipo_dato -> STRUFUCT .)
    PYC             reduce using rule 37 (tipo_dato -> STRUFUCT .)


state 27

    (38) tipo_dato -> VOFOIFID .

    ID              reduce using rule 38 (tipo_dato -> VOFOIFID .)
    PYC             reduce using rule 38 (tipo_dato -> VOFOIFID .)


state 28

    (39) tipo_dato -> CHAFAR .

    ID              reduce using rule 39 (tipo_dato -> CHAFAR .)
    PYC             reduce using rule 39 (tipo_dato -> CHAFAR .)


state 29

    (40) tipo_dato -> BOFOOFOL .

    ID              reduce using rule 40 (tipo_dato -> BOFOOFOL .)
    PYC             reduce using rule 40 (tipo_dato -> BOFOOFOL .)


state 30

    (41) tipo_dato -> FLOFOAFAT .

    ID              reduce using rule 41 (tipo_dato -> FLOFOAFAT .)
    PYC             reduce using rule 41 (tipo_dato -> FLOFOAFAT .)


state 31

    (24) declarar_main -> IFINT MAFAIFIN . PA PC LLAVEA bloque_codigo REFETUFURN PYC LLAVEC
    (27) declarar_main_error -> IFINT MAFAIFIN . PA PC LLAVEA bloque_codigo LLAVEC
    (33) declarar_main_error -> IFINT MAFAIFIN . PA PC LLAVEA bloque_codigo ID PYC LLAVEC

    PA              shift and go to state 44


state 32

    (29) declarar_main_error -> IFINT PA . PC LLAVEA bloque_codigo REFETUFURN PYC LLAVEC

    PC              shift and go to state 45


state 33

    (30) declarar_main_error -> IFINT ID . PA PC LLAVEA bloque_codigo REFETUFURN PYC LLAVEC

    PA              shift and go to state 46


state 34

    (26) declarar_main_error -> MAFAIFIN PA . PC LLAVEA bloque_codigo REFETUFURN PYC LLAVEC
    (28) declarar_main_error -> MAFAIFIN PA . PC LLAVEA bloque_codigo LLAVEC

    PC              shift and go to state 47


state 35

    (3) start -> declarar_estructuras declarar_funciones declarar_main .

    $end            reduce using rule 3 (start -> declarar_estructuras declarar_funciones declarar_main .)


state 36

    (32) declarar_main_error -> ID ID . PA PC LLAVEA bloque_codigo REFETUFURN PYC LLAVEC

    PA              shift and go to state 39


state 37

    (5) declarar_estructuras -> STRUFUCT ID LLAVEA . tipo_dato ID PYC tipo_dato ID PYC LLAVEC
    (9) declarar_estructuras_error -> STRUFUCT ID LLAVEA . tipo_dato PYC tipo_dato ID PYC LLAVEC
    (10) declarar_estructuras_error -> STRUFUCT ID LLAVEA . tipo_dato ID PYC tipo_dato PYC LLAVEC
    (11) declarar_estructuras_error -> STRUFUCT ID LLAVEA . tipo_dato PYC tipo_dato PYC LLAVEC
    (12) declarar_estructuras_error -> STRUFUCT ID LLAVEA . ID PYC ID PYC LLAVEC
    (13) declarar_estructuras_error -> STRUFUCT ID LLAVEA . tipo_dato ID PYC tipo_dato ID PYC tipo_dato ID PYC LLAVEC
    (34) tipo_dato -> . IFINT
    (35) tipo_dato -> . STRIFING
    (36) tipo_dato -> . AFARRAFAY
    (37) tipo_dato -> . STRUFUCT
    (38) tipo_dato -> . VOFOIFID
    (39) tipo_dato -> . CHAFAR
    (40) tipo_dato -> . BOFOOFOL
    (41) tipo_dato -> . FLOFOAFAT

    ID              shift and go to state 48
    IFINT           shift and go to state 23
    STRIFING        shift and go to state 24
    AFARRAFAY       shift and go to state 25
    STRUFUCT        shift and go to state 26
    VOFOIFID        shift and go to state 27
    CHAFAR          shift and go to state 28
    BOFOOFOL        shift and go to state 29
    FLOFOAFAT       shift and go to state 30

    tipo_dato                      shift and go to state 49

state 38

    (8) declarar_estructuras_error -> ID ID LLAVEA . tipo_dato ID PYC tipo_dato ID PYC LLAVEC
    (34) tipo_dato -> . IFINT
    (35) tipo_dato -> . STRIFING
    (36) tipo_dato -> . AFARRAFAY
    (37) tipo_dato -> . STRUFUCT
    (38) tipo_dato -> . VOFOIFID
    (39) tipo_dato -> . CHAFAR
    (40) tipo_dato -> . BOFOOFOL
    (41) tipo_dato -> . FLOFOAFAT

    IFINT           shift and go to state 23
    STRIFING        shift and go to state 24
    AFARRAFAY       shift and go to state 25
    STRUFUCT        shift and go to state 26
    VOFOIFID        shift and go to state 27
    CHAFAR          shift and go to state 28
    BOFOOFOL        shift and go to state 29
    FLOFOAFAT       shift and go to state 30

    tipo_dato                      shift and go to state 50

state 39

    (32) declarar_main_error -> ID ID PA . PC LLAVEA bloque_codigo REFETUFURN PYC LLAVEC

    PC              shift and go to state 51


state 40

    (7) declarar_estructuras_error -> ID LLAVEA tipo_dato . ID PYC tipo_dato ID PYC LLAVEC

    ID              shift and go to state 52


state 41

    (31) declarar_main_error -> ID MAFAIFIN PA . PC LLAVEA bloque_codigo REFETUFURN PYC LLAVEC

    PC              shift and go to state 53


state 42

    (14) declarar_funciones -> FUNCTION tipo_dato ID . PA tipo_dato ID PC LLAVEA bloque_codigo REFETUFURN ID PYC LLAVEC
    (15) declarar_funciones -> FUNCTION tipo_dato ID . PA PC LLAVEA bloque_codigo REFETUFURN ID PYC LLAVEC
    (16) declarar_funciones -> FUNCTION tipo_dato ID . PA tipo_dato ID COMA tipo_dato ID PC LLAVEA bloque_codigo REFETUFURN ID PYC LLAVEC
    (21) declarar_funciones_error -> FUNCTION tipo_dato ID . PA tipo_dato ID COMA tipo_dato ID PC LLAVEA bloque_codigo REFETUFURN PYC LLAVEC
    (22) declarar_funciones_error -> FUNCTION tipo_dato ID . PA tipo_dato ID PC LLAVEA bloque_codigo REFETUFURN PYC LLAVEC
    (23) declarar_funciones_error -> FUNCTION tipo_dato ID . PA PC LLAVEA bloque_codigo REFETUFURN PYC LLAVEC

    PA              shift and go to state 54


state 43

    (17) declarar_funciones -> FUNCTION ID PA . tipo_dato ID PC LLAVEA bloque_codigo REFETUFURN PYC LLAVEC
    (18) declarar_funciones -> FUNCTION ID PA . PC LLAVEA bloque_codigo REFETUFURN PYC LLAVEC
    (19) declarar_funciones -> FUNCTION ID PA . tipo_dato ID COMA tipo_dato ID PC LLAVEA bloque_codigo REFETUFURN PYC LLAVEC
    (34) tipo_dato -> . IFINT
    (35) tipo_dato -> . STRIFING
    (36) tipo_dato -> . AFARRAFAY
    (37) tipo_dato -> . STRUFUCT
    (38) tipo_dato -> . VOFOIFID
    (39) tipo_dato -> . CHAFAR
    (40) tipo_dato -> . BOFOOFOL
    (41) tipo_dato -> . FLOFOAFAT

    PC              shift and go to state 56
    IFINT           shift and go to state 23
    STRIFING        shift and go to state 24
    AFARRAFAY       shift and go to state 25
    STRUFUCT        shift and go to state 26
    VOFOIFID        shift and go to state 27
    CHAFAR          shift and go to state 28
    BOFOOFOL        shift and go to state 29
    FLOFOAFAT       shift and go to state 30

    tipo_dato                      shift and go to state 55

state 44

    (24) declarar_main -> IFINT MAFAIFIN PA . PC LLAVEA bloque_codigo REFETUFURN PYC LLAVEC
    (27) declarar_main_error -> IFINT MAFAIFIN PA . PC LLAVEA bloque_codigo LLAVEC
    (33) declarar_main_error -> IFINT MAFAIFIN PA . PC LLAVEA bloque_codigo ID PYC LLAVEC

    PC              shift and go to state 57


state 45

    (29) declarar_main_error -> IFINT PA PC . LLAVEA bloque_codigo REFETUFURN PYC LLAVEC

    LLAVEA          shift and go to state 58


state 46

    (30) declarar_main_error -> IFINT ID PA . PC LLAVEA bloque_codigo REFETUFURN PYC LLAVEC

    PC              shift and go to state 59


state 47

    (26) declarar_main_error -> MAFAIFIN PA PC . LLAVEA bloque_codigo REFETUFURN PYC LLAVEC
    (28) declarar_main_error -> MAFAIFIN PA PC . LLAVEA bloque_codigo LLAVEC

    LLAVEA          shift and go to state 60


state 48

    (12) declarar_estructuras_error -> STRUFUCT ID LLAVEA ID . PYC ID PYC LLAVEC

    PYC             shift and go to state 61


state 49

    (5) declarar_estructuras -> STRUFUCT ID LLAVEA tipo_dato . ID PYC tipo_dato ID PYC LLAVEC
    (9) declarar_estructuras_error -> STRUFUCT ID LLAVEA tipo_dato . PYC tipo_dato ID PYC LLAVEC
    (10) declarar_estructuras_error -> STRUFUCT ID LLAVEA tipo_dato . ID PYC tipo_dato PYC LLAVEC
    (11) declarar_estructuras_error -> STRUFUCT ID LLAVEA tipo_dato . PYC tipo_dato PYC LLAVEC
    (13) declarar_estructuras_error -> STRUFUCT ID LLAVEA tipo_dato . ID PYC tipo_dato ID PYC tipo_dato ID PYC LLAVEC

    ID              shift and go to state 62
    PYC             shift and go to state 63


state 50

    (8) declarar_estructuras_error -> ID ID LLAVEA tipo_dato . ID PYC tipo_dato ID PYC LLAVEC

    ID              shift and go to state 64


state 51

    (32) declarar_main_error -> ID ID PA PC . LLAVEA bloque_codigo REFETUFURN PYC LLAVEC

    LLAVEA          shift and go to state 65


state 52

    (7) declarar_estructuras_error -> ID LLAVEA tipo_dato ID . PYC tipo_dato ID PYC LLAVEC

    PYC             shift and go to state 66


state 53

    (31) declarar_main_error -> ID MAFAIFIN PA PC . LLAVEA bloque_codigo REFETUFURN PYC LLAVEC

    LLAVEA          shift and go to state 67


state 54

    (14) declarar_funciones -> FUNCTION tipo_dato ID PA . tipo_dato ID PC LLAVEA bloque_codigo REFETUFURN ID PYC LLAVEC
    (15) declarar_funciones -> FUNCTION tipo_dato ID PA . PC LLAVEA bloque_codigo REFETUFURN ID PYC LLAVEC
    (16) declarar_funciones -> FUNCTION tipo_dato ID PA . tipo_dato ID COMA tipo_dato ID PC LLAVEA bloque_codigo REFETUFURN ID PYC LLAVEC
    (21) declarar_funciones_error -> FUNCTION tipo_dato ID PA . tipo_dato ID COMA tipo_dato ID PC LLAVEA bloque_codigo REFETUFURN PYC LLAVEC
    (22) declarar_funciones_error -> FUNCTION tipo_dato ID PA . tipo_dato ID PC LLAVEA bloque_codigo REFETUFURN PYC LLAVEC
    (23) declarar_funciones_error -> FUNCTION tipo_dato ID PA . PC LLAVEA bloque_codigo REFETUFURN PYC LLAVEC
    (34) tipo_dato -> . IFINT
    (35) tipo_dato -> . STRIFING
    (36) tipo_dato -> . AFARRAFAY
    (37) tipo_dato -> . STRUFUCT
    (38) tipo_dato -> . VOFOIFID
    (39) tipo_dato -> . CHAFAR
    (40) tipo_dato -> . BOFOOFOL
    (41) tipo_dato -> . FLOFOAFAT

    PC              shift and go to state 69
    IFINT           shift and go to state 23
    STRIFING        shift and go to state 24
    AFARRAFAY       shift and go to state 25
    STRUFUCT        shift and go to state 26
    VOFOIFID        shift and go to state 27
    CHAFAR          shift and go to state 28
    BOFOOFOL        shift and go to state 29
    FLOFOAFAT       shift and go to state 30

    tipo_dato                      shift and go to state 68

state 55

    (17) declarar_funciones -> FUNCTION ID PA tipo_dato . ID PC LLAVEA bloque_codigo REFETUFURN PYC LLAVEC
    (19) declarar_funciones -> FUNCTION ID PA tipo_dato . ID COMA tipo_dato ID PC LLAVEA bloque_codigo REFETUFURN PYC LLAVEC

    ID              shift and go to state 70


state 56

    (18) declarar_funciones -> FUNCTION ID PA PC . LLAVEA bloque_codigo REFETUFURN PYC LLAVEC

    LLAVEA          shift and go to state 71


state 57

    (24) declarar_main -> IFINT MAFAIFIN PA PC . LLAVEA bloque_codigo REFETUFURN PYC LLAVEC
    (27) declarar_main_error -> IFINT MAFAIFIN PA PC . LLAVEA bloque_codigo LLAVEC
    (33) declarar_main_error -> IFINT MAFAIFIN PA PC . LLAVEA bloque_codigo ID PYC LLAVEC

    LLAVEA          shift and go to state 72


state 58

    (29) declarar_main_error -> IFINT PA PC LLAVEA . bloque_codigo REFETUFURN PYC LLAVEC
    (42) bloque_codigo -> . declarar_if bloque_codigo
    (43) bloque_codigo -> . declaracion bloque_codigo
    (44) bloque_codigo -> . asignar_estructuras bloque_codigo
    (45) bloque_codigo -> . asignar_array bloque_codigo
    (46) bloque_codigo -> . funcion bloque_codigo
    (47) bloque_codigo -> . print bloque_codigo
    (48) bloque_codigo -> . input bloque_codigo
    (49) bloque_codigo -> . declaracion_while bloque_codigo
    (50) bloque_codigo -> . VACIO
    (51) declarar_if -> . IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC
    (52) declarar_if -> . IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE LLAVEA bloque_codigo LLAVEC
    (53) declarar_if -> . declarar_if_error_llave
    (60) declaracion -> . tipo_dato ID ASG ID operacion_matematica ID PYC
    (61) declaracion -> . tipo_dato ID ASG dato PYC
    (62) declaracion -> . AFARRAFAY ID dimensiones PYC
    (63) declaracion -> . declaracion_error
    (82) asignar_estructuras -> . STRUF ID PUNTO ID ASG dato PYC
    (81) asignar_array -> . ID dimensiones ASG dato PYC
    (83) funcion -> . ID PA valores PC PYC
    (84) funcion -> . ID PA PC PYC
    (85) funcion -> . ID PA valores COMA valores PC PYC
    (86) print -> . PRIFINT PA ID PC PYC
    (87) input -> . IFINPUFUT PA ID PC PYC
    (88) declaracion_while -> . WHIFILEFE PA condicion PC LLAVEA bloque_codigo LLAVEC
    (89) declaracion_while -> . declaracion_while_error
    (54) declarar_if_error_llave -> . IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE LLAVEA bloque_codigo
    (55) declarar_if_error_llave -> . IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE bloque_codigo LLAVEC
    (56) declarar_if_error_llave -> . PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE LLAVEA bloque_codigo LLAVEC
    (57) declarar_if_error_llave -> . ID PA condicion PC LLAVEA bloque_codigo LLAVEC
    (58) declarar_if_error_llave -> . ID PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE LLAVEA bloque_codigo LLAVEC
    (59) declarar_if_error_llave -> . IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC LLAVEA bloque_codigo LLAVEC
    (34) tipo_dato -> . IFINT
    (35) tipo_dato -> . STRIFING
    (36) tipo_dato -> . AFARRAFAY
    (37) tipo_dato -> . STRUFUCT
    (38) tipo_dato -> . VOFOIFID
    (39) tipo_dato -> . CHAFAR
    (40) tipo_dato -> . BOFOOFOL
    (41) tipo_dato -> . FLOFOAFAT
    (64) declaracion_error -> . ID PYC
    (65) declaracion_error -> . ID ASG ID operacion_matematica ID PYC
    (66) declaracion_error -> . ID ASG dato PYC
    (67) declaracion_error -> . ID ID PYC
    (68) declaracion_error -> . ID ID ASG ID operacion_matematica ID PYC
    (69) declaracion_error -> . ID ID ASG valores PYC
    (70) declaracion_error -> . ID ID dimensiones PYC
    (71) declaracion_error -> . ID dimensiones PYC
    (90) declaracion_while_error -> . PA condicion PC LLAVEA bloque_codigo LLAVEC
    (91) declaracion_while_error -> . ID PA condicion PC LLAVEA bloque_codigo LLAVEC
    (92) declaracion_while_error -> . WHIFILEFE PA condicion PC bloque_codigo LLAVEC
    (93) declaracion_while_error -> . WHIFILEFE PA condicion PC LLAVEA bloque_codigo

    VACIO           shift and go to state 83
    IFIF            shift and go to state 84
    AFARRAFAY       shift and go to state 88
    STRUF           shift and go to state 90
    ID              shift and go to state 87
    PRIFINT         shift and go to state 91
    IFINPUFUT       shift and go to state 92
    WHIFILEFE       shift and go to state 93
    PA              shift and go to state 73
    IFINT           shift and go to state 23
    STRIFING        shift and go to state 24
    STRUFUCT        shift and go to state 26
    VOFOIFID        shift and go to state 27
    CHAFAR          shift and go to state 28
    BOFOOFOL        shift and go to state 29
    FLOFOAFAT       shift and go to state 30

    bloque_codigo                  shift and go to state 74
    declarar_if                    shift and go to state 75
    declaracion                    shift and go to state 76
    asignar_estructuras            shift and go to state 77
    asignar_array                  shift and go to state 78
    funcion                        shift and go to state 79
    print                          shift and go to state 80
    input                          shift and go to state 81
    declaracion_while              shift and go to state 82
    declarar_if_error_llave        shift and go to state 85
    tipo_dato                      shift and go to state 86
    declaracion_error              shift and go to state 89
    declaracion_while_error        shift and go to state 94

state 59

    (30) declarar_main_error -> IFINT ID PA PC . LLAVEA bloque_codigo REFETUFURN PYC LLAVEC

    LLAVEA          shift and go to state 95


state 60

    (26) declarar_main_error -> MAFAIFIN PA PC LLAVEA . bloque_codigo REFETUFURN PYC LLAVEC
    (28) declarar_main_error -> MAFAIFIN PA PC LLAVEA . bloque_codigo LLAVEC
    (42) bloque_codigo -> . declarar_if bloque_codigo
    (43) bloque_codigo -> . declaracion bloque_codigo
    (44) bloque_codigo -> . asignar_estructuras bloque_codigo
    (45) bloque_codigo -> . asignar_array bloque_codigo
    (46) bloque_codigo -> . funcion bloque_codigo
    (47) bloque_codigo -> . print bloque_codigo
    (48) bloque_codigo -> . input bloque_codigo
    (49) bloque_codigo -> . declaracion_while bloque_codigo
    (50) bloque_codigo -> . VACIO
    (51) declarar_if -> . IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC
    (52) declarar_if -> . IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE LLAVEA bloque_codigo LLAVEC
    (53) declarar_if -> . declarar_if_error_llave
    (60) declaracion -> . tipo_dato ID ASG ID operacion_matematica ID PYC
    (61) declaracion -> . tipo_dato ID ASG dato PYC
    (62) declaracion -> . AFARRAFAY ID dimensiones PYC
    (63) declaracion -> . declaracion_error
    (82) asignar_estructuras -> . STRUF ID PUNTO ID ASG dato PYC
    (81) asignar_array -> . ID dimensiones ASG dato PYC
    (83) funcion -> . ID PA valores PC PYC
    (84) funcion -> . ID PA PC PYC
    (85) funcion -> . ID PA valores COMA valores PC PYC
    (86) print -> . PRIFINT PA ID PC PYC
    (87) input -> . IFINPUFUT PA ID PC PYC
    (88) declaracion_while -> . WHIFILEFE PA condicion PC LLAVEA bloque_codigo LLAVEC
    (89) declaracion_while -> . declaracion_while_error
    (54) declarar_if_error_llave -> . IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE LLAVEA bloque_codigo
    (55) declarar_if_error_llave -> . IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE bloque_codigo LLAVEC
    (56) declarar_if_error_llave -> . PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE LLAVEA bloque_codigo LLAVEC
    (57) declarar_if_error_llave -> . ID PA condicion PC LLAVEA bloque_codigo LLAVEC
    (58) declarar_if_error_llave -> . ID PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE LLAVEA bloque_codigo LLAVEC
    (59) declarar_if_error_llave -> . IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC LLAVEA bloque_codigo LLAVEC
    (34) tipo_dato -> . IFINT
    (35) tipo_dato -> . STRIFING
    (36) tipo_dato -> . AFARRAFAY
    (37) tipo_dato -> . STRUFUCT
    (38) tipo_dato -> . VOFOIFID
    (39) tipo_dato -> . CHAFAR
    (40) tipo_dato -> . BOFOOFOL
    (41) tipo_dato -> . FLOFOAFAT
    (64) declaracion_error -> . ID PYC
    (65) declaracion_error -> . ID ASG ID operacion_matematica ID PYC
    (66) declaracion_error -> . ID ASG dato PYC
    (67) declaracion_error -> . ID ID PYC
    (68) declaracion_error -> . ID ID ASG ID operacion_matematica ID PYC
    (69) declaracion_error -> . ID ID ASG valores PYC
    (70) declaracion_error -> . ID ID dimensiones PYC
    (71) declaracion_error -> . ID dimensiones PYC
    (90) declaracion_while_error -> . PA condicion PC LLAVEA bloque_codigo LLAVEC
    (91) declaracion_while_error -> . ID PA condicion PC LLAVEA bloque_codigo LLAVEC
    (92) declaracion_while_error -> . WHIFILEFE PA condicion PC bloque_codigo LLAVEC
    (93) declaracion_while_error -> . WHIFILEFE PA condicion PC LLAVEA bloque_codigo

    VACIO           shift and go to state 83
    IFIF            shift and go to state 84
    AFARRAFAY       shift and go to state 88
    STRUF           shift and go to state 90
    ID              shift and go to state 87
    PRIFINT         shift and go to state 91
    IFINPUFUT       shift and go to state 92
    WHIFILEFE       shift and go to state 93
    PA              shift and go to state 73
    IFINT           shift and go to state 23
    STRIFING        shift and go to state 24
    STRUFUCT        shift and go to state 26
    VOFOIFID        shift and go to state 27
    CHAFAR          shift and go to state 28
    BOFOOFOL        shift and go to state 29
    FLOFOAFAT       shift and go to state 30

    bloque_codigo                  shift and go to state 96
    declarar_if                    shift and go to state 75
    declaracion                    shift and go to state 76
    asignar_estructuras            shift and go to state 77
    asignar_array                  shift and go to state 78
    funcion                        shift and go to state 79
    print                          shift and go to state 80
    input                          shift and go to state 81
    declaracion_while              shift and go to state 82
    declarar_if_error_llave        shift and go to state 85
    tipo_dato                      shift and go to state 86
    declaracion_error              shift and go to state 89
    declaracion_while_error        shift and go to state 94

state 61

    (12) declarar_estructuras_error -> STRUFUCT ID LLAVEA ID PYC . ID PYC LLAVEC

    ID              shift and go to state 97


state 62

    (5) declarar_estructuras -> STRUFUCT ID LLAVEA tipo_dato ID . PYC tipo_dato ID PYC LLAVEC
    (10) declarar_estructuras_error -> STRUFUCT ID LLAVEA tipo_dato ID . PYC tipo_dato PYC LLAVEC
    (13) declarar_estructuras_error -> STRUFUCT ID LLAVEA tipo_dato ID . PYC tipo_dato ID PYC tipo_dato ID PYC LLAVEC

    PYC             shift and go to state 98


state 63

    (9) declarar_estructuras_error -> STRUFUCT ID LLAVEA tipo_dato PYC . tipo_dato ID PYC LLAVEC
    (11) declarar_estructuras_error -> STRUFUCT ID LLAVEA tipo_dato PYC . tipo_dato PYC LLAVEC
    (34) tipo_dato -> . IFINT
    (35) tipo_dato -> . STRIFING
    (36) tipo_dato -> . AFARRAFAY
    (37) tipo_dato -> . STRUFUCT
    (38) tipo_dato -> . VOFOIFID
    (39) tipo_dato -> . CHAFAR
    (40) tipo_dato -> . BOFOOFOL
    (41) tipo_dato -> . FLOFOAFAT

    IFINT           shift and go to state 23
    STRIFING        shift and go to state 24
    AFARRAFAY       shift and go to state 25
    STRUFUCT        shift and go to state 26
    VOFOIFID        shift and go to state 27
    CHAFAR          shift and go to state 28
    BOFOOFOL        shift and go to state 29
    FLOFOAFAT       shift and go to state 30

    tipo_dato                      shift and go to state 99

state 64

    (8) declarar_estructuras_error -> ID ID LLAVEA tipo_dato ID . PYC tipo_dato ID PYC LLAVEC

    PYC             shift and go to state 100


state 65

    (32) declarar_main_error -> ID ID PA PC LLAVEA . bloque_codigo REFETUFURN PYC LLAVEC
    (42) bloque_codigo -> . declarar_if bloque_codigo
    (43) bloque_codigo -> . declaracion bloque_codigo
    (44) bloque_codigo -> . asignar_estructuras bloque_codigo
    (45) bloque_codigo -> . asignar_array bloque_codigo
    (46) bloque_codigo -> . funcion bloque_codigo
    (47) bloque_codigo -> . print bloque_codigo
    (48) bloque_codigo -> . input bloque_codigo
    (49) bloque_codigo -> . declaracion_while bloque_codigo
    (50) bloque_codigo -> . VACIO
    (51) declarar_if -> . IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC
    (52) declarar_if -> . IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE LLAVEA bloque_codigo LLAVEC
    (53) declarar_if -> . declarar_if_error_llave
    (60) declaracion -> . tipo_dato ID ASG ID operacion_matematica ID PYC
    (61) declaracion -> . tipo_dato ID ASG dato PYC
    (62) declaracion -> . AFARRAFAY ID dimensiones PYC
    (63) declaracion -> . declaracion_error
    (82) asignar_estructuras -> . STRUF ID PUNTO ID ASG dato PYC
    (81) asignar_array -> . ID dimensiones ASG dato PYC
    (83) funcion -> . ID PA valores PC PYC
    (84) funcion -> . ID PA PC PYC
    (85) funcion -> . ID PA valores COMA valores PC PYC
    (86) print -> . PRIFINT PA ID PC PYC
    (87) input -> . IFINPUFUT PA ID PC PYC
    (88) declaracion_while -> . WHIFILEFE PA condicion PC LLAVEA bloque_codigo LLAVEC
    (89) declaracion_while -> . declaracion_while_error
    (54) declarar_if_error_llave -> . IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE LLAVEA bloque_codigo
    (55) declarar_if_error_llave -> . IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE bloque_codigo LLAVEC
    (56) declarar_if_error_llave -> . PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE LLAVEA bloque_codigo LLAVEC
    (57) declarar_if_error_llave -> . ID PA condicion PC LLAVEA bloque_codigo LLAVEC
    (58) declarar_if_error_llave -> . ID PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE LLAVEA bloque_codigo LLAVEC
    (59) declarar_if_error_llave -> . IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC LLAVEA bloque_codigo LLAVEC
    (34) tipo_dato -> . IFINT
    (35) tipo_dato -> . STRIFING
    (36) tipo_dato -> . AFARRAFAY
    (37) tipo_dato -> . STRUFUCT
    (38) tipo_dato -> . VOFOIFID
    (39) tipo_dato -> . CHAFAR
    (40) tipo_dato -> . BOFOOFOL
    (41) tipo_dato -> . FLOFOAFAT
    (64) declaracion_error -> . ID PYC
    (65) declaracion_error -> . ID ASG ID operacion_matematica ID PYC
    (66) declaracion_error -> . ID ASG dato PYC
    (67) declaracion_error -> . ID ID PYC
    (68) declaracion_error -> . ID ID ASG ID operacion_matematica ID PYC
    (69) declaracion_error -> . ID ID ASG valores PYC
    (70) declaracion_error -> . ID ID dimensiones PYC
    (71) declaracion_error -> . ID dimensiones PYC
    (90) declaracion_while_error -> . PA condicion PC LLAVEA bloque_codigo LLAVEC
    (91) declaracion_while_error -> . ID PA condicion PC LLAVEA bloque_codigo LLAVEC
    (92) declaracion_while_error -> . WHIFILEFE PA condicion PC bloque_codigo LLAVEC
    (93) declaracion_while_error -> . WHIFILEFE PA condicion PC LLAVEA bloque_codigo

    VACIO           shift and go to state 83
    IFIF            shift and go to state 84
    AFARRAFAY       shift and go to state 88
    STRUF           shift and go to state 90
    ID              shift and go to state 87
    PRIFINT         shift and go to state 91
    IFINPUFUT       shift and go to state 92
    WHIFILEFE       shift and go to state 93
    PA              shift and go to state 73
    IFINT           shift and go to state 23
    STRIFING        shift and go to state 24
    STRUFUCT        shift and go to state 26
    VOFOIFID        shift and go to state 27
    CHAFAR          shift and go to state 28
    BOFOOFOL        shift and go to state 29
    FLOFOAFAT       shift and go to state 30

    bloque_codigo                  shift and go to state 101
    declarar_if                    shift and go to state 75
    declaracion                    shift and go to state 76
    asignar_estructuras            shift and go to state 77
    asignar_array                  shift and go to state 78
    funcion                        shift and go to state 79
    print                          shift and go to state 80
    input                          shift and go to state 81
    declaracion_while              shift and go to state 82
    declarar_if_error_llave        shift and go to state 85
    tipo_dato                      shift and go to state 86
    declaracion_error              shift and go to state 89
    declaracion_while_error        shift and go to state 94

state 66

    (7) declarar_estructuras_error -> ID LLAVEA tipo_dato ID PYC . tipo_dato ID PYC LLAVEC
    (34) tipo_dato -> . IFINT
    (35) tipo_dato -> . STRIFING
    (36) tipo_dato -> . AFARRAFAY
    (37) tipo_dato -> . STRUFUCT
    (38) tipo_dato -> . VOFOIFID
    (39) tipo_dato -> . CHAFAR
    (40) tipo_dato -> . BOFOOFOL
    (41) tipo_dato -> . FLOFOAFAT

    IFINT           shift and go to state 23
    STRIFING        shift and go to state 24
    AFARRAFAY       shift and go to state 25
    STRUFUCT        shift and go to state 26
    VOFOIFID        shift and go to state 27
    CHAFAR          shift and go to state 28
    BOFOOFOL        shift and go to state 29
    FLOFOAFAT       shift and go to state 30

    tipo_dato                      shift and go to state 102

state 67

    (31) declarar_main_error -> ID MAFAIFIN PA PC LLAVEA . bloque_codigo REFETUFURN PYC LLAVEC
    (42) bloque_codigo -> . declarar_if bloque_codigo
    (43) bloque_codigo -> . declaracion bloque_codigo
    (44) bloque_codigo -> . asignar_estructuras bloque_codigo
    (45) bloque_codigo -> . asignar_array bloque_codigo
    (46) bloque_codigo -> . funcion bloque_codigo
    (47) bloque_codigo -> . print bloque_codigo
    (48) bloque_codigo -> . input bloque_codigo
    (49) bloque_codigo -> . declaracion_while bloque_codigo
    (50) bloque_codigo -> . VACIO
    (51) declarar_if -> . IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC
    (52) declarar_if -> . IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE LLAVEA bloque_codigo LLAVEC
    (53) declarar_if -> . declarar_if_error_llave
    (60) declaracion -> . tipo_dato ID ASG ID operacion_matematica ID PYC
    (61) declaracion -> . tipo_dato ID ASG dato PYC
    (62) declaracion -> . AFARRAFAY ID dimensiones PYC
    (63) declaracion -> . declaracion_error
    (82) asignar_estructuras -> . STRUF ID PUNTO ID ASG dato PYC
    (81) asignar_array -> . ID dimensiones ASG dato PYC
    (83) funcion -> . ID PA valores PC PYC
    (84) funcion -> . ID PA PC PYC
    (85) funcion -> . ID PA valores COMA valores PC PYC
    (86) print -> . PRIFINT PA ID PC PYC
    (87) input -> . IFINPUFUT PA ID PC PYC
    (88) declaracion_while -> . WHIFILEFE PA condicion PC LLAVEA bloque_codigo LLAVEC
    (89) declaracion_while -> . declaracion_while_error
    (54) declarar_if_error_llave -> . IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE LLAVEA bloque_codigo
    (55) declarar_if_error_llave -> . IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE bloque_codigo LLAVEC
    (56) declarar_if_error_llave -> . PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE LLAVEA bloque_codigo LLAVEC
    (57) declarar_if_error_llave -> . ID PA condicion PC LLAVEA bloque_codigo LLAVEC
    (58) declarar_if_error_llave -> . ID PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE LLAVEA bloque_codigo LLAVEC
    (59) declarar_if_error_llave -> . IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC LLAVEA bloque_codigo LLAVEC
    (34) tipo_dato -> . IFINT
    (35) tipo_dato -> . STRIFING
    (36) tipo_dato -> . AFARRAFAY
    (37) tipo_dato -> . STRUFUCT
    (38) tipo_dato -> . VOFOIFID
    (39) tipo_dato -> . CHAFAR
    (40) tipo_dato -> . BOFOOFOL
    (41) tipo_dato -> . FLOFOAFAT
    (64) declaracion_error -> . ID PYC
    (65) declaracion_error -> . ID ASG ID operacion_matematica ID PYC
    (66) declaracion_error -> . ID ASG dato PYC
    (67) declaracion_error -> . ID ID PYC
    (68) declaracion_error -> . ID ID ASG ID operacion_matematica ID PYC
    (69) declaracion_error -> . ID ID ASG valores PYC
    (70) declaracion_error -> . ID ID dimensiones PYC
    (71) declaracion_error -> . ID dimensiones PYC
    (90) declaracion_while_error -> . PA condicion PC LLAVEA bloque_codigo LLAVEC
    (91) declaracion_while_error -> . ID PA condicion PC LLAVEA bloque_codigo LLAVEC
    (92) declaracion_while_error -> . WHIFILEFE PA condicion PC bloque_codigo LLAVEC
    (93) declaracion_while_error -> . WHIFILEFE PA condicion PC LLAVEA bloque_codigo

    VACIO           shift and go to state 83
    IFIF            shift and go to state 84
    AFARRAFAY       shift and go to state 88
    STRUF           shift and go to state 90
    ID              shift and go to state 87
    PRIFINT         shift and go to state 91
    IFINPUFUT       shift and go to state 92
    WHIFILEFE       shift and go to state 93
    PA              shift and go to state 73
    IFINT           shift and go to state 23
    STRIFING        shift and go to state 24
    STRUFUCT        shift and go to state 26
    VOFOIFID        shift and go to state 27
    CHAFAR          shift and go to state 28
    BOFOOFOL        shift and go to state 29
    FLOFOAFAT       shift and go to state 30

    bloque_codigo                  shift and go to state 103
    declarar_if                    shift and go to state 75
    declaracion                    shift and go to state 76
    asignar_estructuras            shift and go to state 77
    asignar_array                  shift and go to state 78
    funcion                        shift and go to state 79
    print                          shift and go to state 80
    input                          shift and go to state 81
    declaracion_while              shift and go to state 82
    declarar_if_error_llave        shift and go to state 85
    tipo_dato                      shift and go to state 86
    declaracion_error              shift and go to state 89
    declaracion_while_error        shift and go to state 94

state 68

    (14) declarar_funciones -> FUNCTION tipo_dato ID PA tipo_dato . ID PC LLAVEA bloque_codigo REFETUFURN ID PYC LLAVEC
    (16) declarar_funciones -> FUNCTION tipo_dato ID PA tipo_dato . ID COMA tipo_dato ID PC LLAVEA bloque_codigo REFETUFURN ID PYC LLAVEC
    (21) declarar_funciones_error -> FUNCTION tipo_dato ID PA tipo_dato . ID COMA tipo_dato ID PC LLAVEA bloque_codigo REFETUFURN PYC LLAVEC
    (22) declarar_funciones_error -> FUNCTION tipo_dato ID PA tipo_dato . ID PC LLAVEA bloque_codigo REFETUFURN PYC LLAVEC

    ID              shift and go to state 104


state 69

    (15) declarar_funciones -> FUNCTION tipo_dato ID PA PC . LLAVEA bloque_codigo REFETUFURN ID PYC LLAVEC
    (23) declarar_funciones_error -> FUNCTION tipo_dato ID PA PC . LLAVEA bloque_codigo REFETUFURN PYC LLAVEC

    LLAVEA          shift and go to state 105


state 70

    (17) declarar_funciones -> FUNCTION ID PA tipo_dato ID . PC LLAVEA bloque_codigo REFETUFURN PYC LLAVEC
    (19) declarar_funciones -> FUNCTION ID PA tipo_dato ID . COMA tipo_dato ID PC LLAVEA bloque_codigo REFETUFURN PYC LLAVEC

    PC              shift and go to state 106
    COMA            shift and go to state 107


state 71

    (18) declarar_funciones -> FUNCTION ID PA PC LLAVEA . bloque_codigo REFETUFURN PYC LLAVEC
    (42) bloque_codigo -> . declarar_if bloque_codigo
    (43) bloque_codigo -> . declaracion bloque_codigo
    (44) bloque_codigo -> . asignar_estructuras bloque_codigo
    (45) bloque_codigo -> . asignar_array bloque_codigo
    (46) bloque_codigo -> . funcion bloque_codigo
    (47) bloque_codigo -> . print bloque_codigo
    (48) bloque_codigo -> . input bloque_codigo
    (49) bloque_codigo -> . declaracion_while bloque_codigo
    (50) bloque_codigo -> . VACIO
    (51) declarar_if -> . IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC
    (52) declarar_if -> . IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE LLAVEA bloque_codigo LLAVEC
    (53) declarar_if -> . declarar_if_error_llave
    (60) declaracion -> . tipo_dato ID ASG ID operacion_matematica ID PYC
    (61) declaracion -> . tipo_dato ID ASG dato PYC
    (62) declaracion -> . AFARRAFAY ID dimensiones PYC
    (63) declaracion -> . declaracion_error
    (82) asignar_estructuras -> . STRUF ID PUNTO ID ASG dato PYC
    (81) asignar_array -> . ID dimensiones ASG dato PYC
    (83) funcion -> . ID PA valores PC PYC
    (84) funcion -> . ID PA PC PYC
    (85) funcion -> . ID PA valores COMA valores PC PYC
    (86) print -> . PRIFINT PA ID PC PYC
    (87) input -> . IFINPUFUT PA ID PC PYC
    (88) declaracion_while -> . WHIFILEFE PA condicion PC LLAVEA bloque_codigo LLAVEC
    (89) declaracion_while -> . declaracion_while_error
    (54) declarar_if_error_llave -> . IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE LLAVEA bloque_codigo
    (55) declarar_if_error_llave -> . IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE bloque_codigo LLAVEC
    (56) declarar_if_error_llave -> . PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE LLAVEA bloque_codigo LLAVEC
    (57) declarar_if_error_llave -> . ID PA condicion PC LLAVEA bloque_codigo LLAVEC
    (58) declarar_if_error_llave -> . ID PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE LLAVEA bloque_codigo LLAVEC
    (59) declarar_if_error_llave -> . IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC LLAVEA bloque_codigo LLAVEC
    (34) tipo_dato -> . IFINT
    (35) tipo_dato -> . STRIFING
    (36) tipo_dato -> . AFARRAFAY
    (37) tipo_dato -> . STRUFUCT
    (38) tipo_dato -> . VOFOIFID
    (39) tipo_dato -> . CHAFAR
    (40) tipo_dato -> . BOFOOFOL
    (41) tipo_dato -> . FLOFOAFAT
    (64) declaracion_error -> . ID PYC
    (65) declaracion_error -> . ID ASG ID operacion_matematica ID PYC
    (66) declaracion_error -> . ID ASG dato PYC
    (67) declaracion_error -> . ID ID PYC
    (68) declaracion_error -> . ID ID ASG ID operacion_matematica ID PYC
    (69) declaracion_error -> . ID ID ASG valores PYC
    (70) declaracion_error -> . ID ID dimensiones PYC
    (71) declaracion_error -> . ID dimensiones PYC
    (90) declaracion_while_error -> . PA condicion PC LLAVEA bloque_codigo LLAVEC
    (91) declaracion_while_error -> . ID PA condicion PC LLAVEA bloque_codigo LLAVEC
    (92) declaracion_while_error -> . WHIFILEFE PA condicion PC bloque_codigo LLAVEC
    (93) declaracion_while_error -> . WHIFILEFE PA condicion PC LLAVEA bloque_codigo

    VACIO           shift and go to state 83
    IFIF            shift and go to state 84
    AFARRAFAY       shift and go to state 88
    STRUF           shift and go to state 90
    ID              shift and go to state 87
    PRIFINT         shift and go to state 91
    IFINPUFUT       shift and go to state 92
    WHIFILEFE       shift and go to state 93
    PA              shift and go to state 73
    IFINT           shift and go to state 23
    STRIFING        shift and go to state 24
    STRUFUCT        shift and go to state 26
    VOFOIFID        shift and go to state 27
    CHAFAR          shift and go to state 28
    BOFOOFOL        shift and go to state 29
    FLOFOAFAT       shift and go to state 30

    bloque_codigo                  shift and go to state 108
    declarar_if                    shift and go to state 75
    declaracion                    shift and go to state 76
    asignar_estructuras            shift and go to state 77
    asignar_array                  shift and go to state 78
    funcion                        shift and go to state 79
    print                          shift and go to state 80
    input                          shift and go to state 81
    declaracion_while              shift and go to state 82
    declarar_if_error_llave        shift and go to state 85
    tipo_dato                      shift and go to state 86
    declaracion_error              shift and go to state 89
    declaracion_while_error        shift and go to state 94

state 72

    (24) declarar_main -> IFINT MAFAIFIN PA PC LLAVEA . bloque_codigo REFETUFURN PYC LLAVEC
    (27) declarar_main_error -> IFINT MAFAIFIN PA PC LLAVEA . bloque_codigo LLAVEC
    (33) declarar_main_error -> IFINT MAFAIFIN PA PC LLAVEA . bloque_codigo ID PYC LLAVEC
    (42) bloque_codigo -> . declarar_if bloque_codigo
    (43) bloque_codigo -> . declaracion bloque_codigo
    (44) bloque_codigo -> . asignar_estructuras bloque_codigo
    (45) bloque_codigo -> . asignar_array bloque_codigo
    (46) bloque_codigo -> . funcion bloque_codigo
    (47) bloque_codigo -> . print bloque_codigo
    (48) bloque_codigo -> . input bloque_codigo
    (49) bloque_codigo -> . declaracion_while bloque_codigo
    (50) bloque_codigo -> . VACIO
    (51) declarar_if -> . IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC
    (52) declarar_if -> . IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE LLAVEA bloque_codigo LLAVEC
    (53) declarar_if -> . declarar_if_error_llave
    (60) declaracion -> . tipo_dato ID ASG ID operacion_matematica ID PYC
    (61) declaracion -> . tipo_dato ID ASG dato PYC
    (62) declaracion -> . AFARRAFAY ID dimensiones PYC
    (63) declaracion -> . declaracion_error
    (82) asignar_estructuras -> . STRUF ID PUNTO ID ASG dato PYC
    (81) asignar_array -> . ID dimensiones ASG dato PYC
    (83) funcion -> . ID PA valores PC PYC
    (84) funcion -> . ID PA PC PYC
    (85) funcion -> . ID PA valores COMA valores PC PYC
    (86) print -> . PRIFINT PA ID PC PYC
    (87) input -> . IFINPUFUT PA ID PC PYC
    (88) declaracion_while -> . WHIFILEFE PA condicion PC LLAVEA bloque_codigo LLAVEC
    (89) declaracion_while -> . declaracion_while_error
    (54) declarar_if_error_llave -> . IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE LLAVEA bloque_codigo
    (55) declarar_if_error_llave -> . IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE bloque_codigo LLAVEC
    (56) declarar_if_error_llave -> . PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE LLAVEA bloque_codigo LLAVEC
    (57) declarar_if_error_llave -> . ID PA condicion PC LLAVEA bloque_codigo LLAVEC
    (58) declarar_if_error_llave -> . ID PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE LLAVEA bloque_codigo LLAVEC
    (59) declarar_if_error_llave -> . IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC LLAVEA bloque_codigo LLAVEC
    (34) tipo_dato -> . IFINT
    (35) tipo_dato -> . STRIFING
    (36) tipo_dato -> . AFARRAFAY
    (37) tipo_dato -> . STRUFUCT
    (38) tipo_dato -> . VOFOIFID
    (39) tipo_dato -> . CHAFAR
    (40) tipo_dato -> . BOFOOFOL
    (41) tipo_dato -> . FLOFOAFAT
    (64) declaracion_error -> . ID PYC
    (65) declaracion_error -> . ID ASG ID operacion_matematica ID PYC
    (66) declaracion_error -> . ID ASG dato PYC
    (67) declaracion_error -> . ID ID PYC
    (68) declaracion_error -> . ID ID ASG ID operacion_matematica ID PYC
    (69) declaracion_error -> . ID ID ASG valores PYC
    (70) declaracion_error -> . ID ID dimensiones PYC
    (71) declaracion_error -> . ID dimensiones PYC
    (90) declaracion_while_error -> . PA condicion PC LLAVEA bloque_codigo LLAVEC
    (91) declaracion_while_error -> . ID PA condicion PC LLAVEA bloque_codigo LLAVEC
    (92) declaracion_while_error -> . WHIFILEFE PA condicion PC bloque_codigo LLAVEC
    (93) declaracion_while_error -> . WHIFILEFE PA condicion PC LLAVEA bloque_codigo

    VACIO           shift and go to state 83
    IFIF            shift and go to state 84
    AFARRAFAY       shift and go to state 88
    STRUF           shift and go to state 90
    ID              shift and go to state 87
    PRIFINT         shift and go to state 91
    IFINPUFUT       shift and go to state 92
    WHIFILEFE       shift and go to state 93
    PA              shift and go to state 73
    IFINT           shift and go to state 23
    STRIFING        shift and go to state 24
    STRUFUCT        shift and go to state 26
    VOFOIFID        shift and go to state 27
    CHAFAR          shift and go to state 28
    BOFOOFOL        shift and go to state 29
    FLOFOAFAT       shift and go to state 30

    bloque_codigo                  shift and go to state 109
    declarar_if                    shift and go to state 75
    declaracion                    shift and go to state 76
    asignar_estructuras            shift and go to state 77
    asignar_array                  shift and go to state 78
    funcion                        shift and go to state 79
    print                          shift and go to state 80
    input                          shift and go to state 81
    declaracion_while              shift and go to state 82
    declarar_if_error_llave        shift and go to state 85
    tipo_dato                      shift and go to state 86
    declaracion_error              shift and go to state 89
    declaracion_while_error        shift and go to state 94

state 73

    (56) declarar_if_error_llave -> PA . condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE LLAVEA bloque_codigo LLAVEC
    (90) declaracion_while_error -> PA . condicion PC LLAVEA bloque_codigo LLAVEC
    (94) condicion -> . ID operadores ID

    ID              shift and go to state 111

    condicion                      shift and go to state 110

state 74

    (29) declarar_main_error -> IFINT PA PC LLAVEA bloque_codigo . REFETUFURN PYC LLAVEC

    REFETUFURN      shift and go to state 112


state 75

    (42) bloque_codigo -> declarar_if . bloque_codigo
    (42) bloque_codigo -> . declarar_if bloque_codigo
    (43) bloque_codigo -> . declaracion bloque_codigo
    (44) bloque_codigo -> . asignar_estructuras bloque_codigo
    (45) bloque_codigo -> . asignar_array bloque_codigo
    (46) bloque_codigo -> . funcion bloque_codigo
    (47) bloque_codigo -> . print bloque_codigo
    (48) bloque_codigo -> . input bloque_codigo
    (49) bloque_codigo -> . declaracion_while bloque_codigo
    (50) bloque_codigo -> . VACIO
    (51) declarar_if -> . IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC
    (52) declarar_if -> . IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE LLAVEA bloque_codigo LLAVEC
    (53) declarar_if -> . declarar_if_error_llave
    (60) declaracion -> . tipo_dato ID ASG ID operacion_matematica ID PYC
    (61) declaracion -> . tipo_dato ID ASG dato PYC
    (62) declaracion -> . AFARRAFAY ID dimensiones PYC
    (63) declaracion -> . declaracion_error
    (82) asignar_estructuras -> . STRUF ID PUNTO ID ASG dato PYC
    (81) asignar_array -> . ID dimensiones ASG dato PYC
    (83) funcion -> . ID PA valores PC PYC
    (84) funcion -> . ID PA PC PYC
    (85) funcion -> . ID PA valores COMA valores PC PYC
    (86) print -> . PRIFINT PA ID PC PYC
    (87) input -> . IFINPUFUT PA ID PC PYC
    (88) declaracion_while -> . WHIFILEFE PA condicion PC LLAVEA bloque_codigo LLAVEC
    (89) declaracion_while -> . declaracion_while_error
    (54) declarar_if_error_llave -> . IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE LLAVEA bloque_codigo
    (55) declarar_if_error_llave -> . IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE bloque_codigo LLAVEC
    (56) declarar_if_error_llave -> . PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE LLAVEA bloque_codigo LLAVEC
    (57) declarar_if_error_llave -> . ID PA condicion PC LLAVEA bloque_codigo LLAVEC
    (58) declarar_if_error_llave -> . ID PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE LLAVEA bloque_codigo LLAVEC
    (59) declarar_if_error_llave -> . IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC LLAVEA bloque_codigo LLAVEC
    (34) tipo_dato -> . IFINT
    (35) tipo_dato -> . STRIFING
    (36) tipo_dato -> . AFARRAFAY
    (37) tipo_dato -> . STRUFUCT
    (38) tipo_dato -> . VOFOIFID
    (39) tipo_dato -> . CHAFAR
    (40) tipo_dato -> . BOFOOFOL
    (41) tipo_dato -> . FLOFOAFAT
    (64) declaracion_error -> . ID PYC
    (65) declaracion_error -> . ID ASG ID operacion_matematica ID PYC
    (66) declaracion_error -> . ID ASG dato PYC
    (67) declaracion_error -> . ID ID PYC
    (68) declaracion_error -> . ID ID ASG ID operacion_matematica ID PYC
    (69) declaracion_error -> . ID ID ASG valores PYC
    (70) declaracion_error -> . ID ID dimensiones PYC
    (71) declaracion_error -> . ID dimensiones PYC
    (90) declaracion_while_error -> . PA condicion PC LLAVEA bloque_codigo LLAVEC
    (91) declaracion_while_error -> . ID PA condicion PC LLAVEA bloque_codigo LLAVEC
    (92) declaracion_while_error -> . WHIFILEFE PA condicion PC bloque_codigo LLAVEC
    (93) declaracion_while_error -> . WHIFILEFE PA condicion PC LLAVEA bloque_codigo

    VACIO           shift and go to state 83
    IFIF            shift and go to state 84
    AFARRAFAY       shift and go to state 88
    STRUF           shift and go to state 90
    ID              shift and go to state 87
    PRIFINT         shift and go to state 91
    IFINPUFUT       shift and go to state 92
    WHIFILEFE       shift and go to state 93
    PA              shift and go to state 73
    IFINT           shift and go to state 23
    STRIFING        shift and go to state 24
    STRUFUCT        shift and go to state 26
    VOFOIFID        shift and go to state 27
    CHAFAR          shift and go to state 28
    BOFOOFOL        shift and go to state 29
    FLOFOAFAT       shift and go to state 30

    declarar_if                    shift and go to state 75
    bloque_codigo                  shift and go to state 113
    declaracion                    shift and go to state 76
    asignar_estructuras            shift and go to state 77
    asignar_array                  shift and go to state 78
    funcion                        shift and go to state 79
    print                          shift and go to state 80
    input                          shift and go to state 81
    declaracion_while              shift and go to state 82
    declarar_if_error_llave        shift and go to state 85
    tipo_dato                      shift and go to state 86
    declaracion_error              shift and go to state 89
    declaracion_while_error        shift and go to state 94

state 76

    (43) bloque_codigo -> declaracion . bloque_codigo
    (42) bloque_codigo -> . declarar_if bloque_codigo
    (43) bloque_codigo -> . declaracion bloque_codigo
    (44) bloque_codigo -> . asignar_estructuras bloque_codigo
    (45) bloque_codigo -> . asignar_array bloque_codigo
    (46) bloque_codigo -> . funcion bloque_codigo
    (47) bloque_codigo -> . print bloque_codigo
    (48) bloque_codigo -> . input bloque_codigo
    (49) bloque_codigo -> . declaracion_while bloque_codigo
    (50) bloque_codigo -> . VACIO
    (51) declarar_if -> . IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC
    (52) declarar_if -> . IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE LLAVEA bloque_codigo LLAVEC
    (53) declarar_if -> . declarar_if_error_llave
    (60) declaracion -> . tipo_dato ID ASG ID operacion_matematica ID PYC
    (61) declaracion -> . tipo_dato ID ASG dato PYC
    (62) declaracion -> . AFARRAFAY ID dimensiones PYC
    (63) declaracion -> . declaracion_error
    (82) asignar_estructuras -> . STRUF ID PUNTO ID ASG dato PYC
    (81) asignar_array -> . ID dimensiones ASG dato PYC
    (83) funcion -> . ID PA valores PC PYC
    (84) funcion -> . ID PA PC PYC
    (85) funcion -> . ID PA valores COMA valores PC PYC
    (86) print -> . PRIFINT PA ID PC PYC
    (87) input -> . IFINPUFUT PA ID PC PYC
    (88) declaracion_while -> . WHIFILEFE PA condicion PC LLAVEA bloque_codigo LLAVEC
    (89) declaracion_while -> . declaracion_while_error
    (54) declarar_if_error_llave -> . IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE LLAVEA bloque_codigo
    (55) declarar_if_error_llave -> . IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE bloque_codigo LLAVEC
    (56) declarar_if_error_llave -> . PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE LLAVEA bloque_codigo LLAVEC
    (57) declarar_if_error_llave -> . ID PA condicion PC LLAVEA bloque_codigo LLAVEC
    (58) declarar_if_error_llave -> . ID PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE LLAVEA bloque_codigo LLAVEC
    (59) declarar_if_error_llave -> . IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC LLAVEA bloque_codigo LLAVEC
    (34) tipo_dato -> . IFINT
    (35) tipo_dato -> . STRIFING
    (36) tipo_dato -> . AFARRAFAY
    (37) tipo_dato -> . STRUFUCT
    (38) tipo_dato -> . VOFOIFID
    (39) tipo_dato -> . CHAFAR
    (40) tipo_dato -> . BOFOOFOL
    (41) tipo_dato -> . FLOFOAFAT
    (64) declaracion_error -> . ID PYC
    (65) declaracion_error -> . ID ASG ID operacion_matematica ID PYC
    (66) declaracion_error -> . ID ASG dato PYC
    (67) declaracion_error -> . ID ID PYC
    (68) declaracion_error -> . ID ID ASG ID operacion_matematica ID PYC
    (69) declaracion_error -> . ID ID ASG valores PYC
    (70) declaracion_error -> . ID ID dimensiones PYC
    (71) declaracion_error -> . ID dimensiones PYC
    (90) declaracion_while_error -> . PA condicion PC LLAVEA bloque_codigo LLAVEC
    (91) declaracion_while_error -> . ID PA condicion PC LLAVEA bloque_codigo LLAVEC
    (92) declaracion_while_error -> . WHIFILEFE PA condicion PC bloque_codigo LLAVEC
    (93) declaracion_while_error -> . WHIFILEFE PA condicion PC LLAVEA bloque_codigo

    VACIO           shift and go to state 83
    IFIF            shift and go to state 84
    AFARRAFAY       shift and go to state 88
    STRUF           shift and go to state 90
    ID              shift and go to state 87
    PRIFINT         shift and go to state 91
    IFINPUFUT       shift and go to state 92
    WHIFILEFE       shift and go to state 93
    PA              shift and go to state 73
    IFINT           shift and go to state 23
    STRIFING        shift and go to state 24
    STRUFUCT        shift and go to state 26
    VOFOIFID        shift and go to state 27
    CHAFAR          shift and go to state 28
    BOFOOFOL        shift and go to state 29
    FLOFOAFAT       shift and go to state 30

    declaracion                    shift and go to state 76
    bloque_codigo                  shift and go to state 114
    declarar_if                    shift and go to state 75
    asignar_estructuras            shift and go to state 77
    asignar_array                  shift and go to state 78
    funcion                        shift and go to state 79
    print                          shift and go to state 80
    input                          shift and go to state 81
    declaracion_while              shift and go to state 82
    declarar_if_error_llave        shift and go to state 85
    tipo_dato                      shift and go to state 86
    declaracion_error              shift and go to state 89
    declaracion_while_error        shift and go to state 94

state 77

    (44) bloque_codigo -> asignar_estructuras . bloque_codigo
    (42) bloque_codigo -> . declarar_if bloque_codigo
    (43) bloque_codigo -> . declaracion bloque_codigo
    (44) bloque_codigo -> . asignar_estructuras bloque_codigo
    (45) bloque_codigo -> . asignar_array bloque_codigo
    (46) bloque_codigo -> . funcion bloque_codigo
    (47) bloque_codigo -> . print bloque_codigo
    (48) bloque_codigo -> . input bloque_codigo
    (49) bloque_codigo -> . declaracion_while bloque_codigo
    (50) bloque_codigo -> . VACIO
    (51) declarar_if -> . IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC
    (52) declarar_if -> . IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE LLAVEA bloque_codigo LLAVEC
    (53) declarar_if -> . declarar_if_error_llave
    (60) declaracion -> . tipo_dato ID ASG ID operacion_matematica ID PYC
    (61) declaracion -> . tipo_dato ID ASG dato PYC
    (62) declaracion -> . AFARRAFAY ID dimensiones PYC
    (63) declaracion -> . declaracion_error
    (82) asignar_estructuras -> . STRUF ID PUNTO ID ASG dato PYC
    (81) asignar_array -> . ID dimensiones ASG dato PYC
    (83) funcion -> . ID PA valores PC PYC
    (84) funcion -> . ID PA PC PYC
    (85) funcion -> . ID PA valores COMA valores PC PYC
    (86) print -> . PRIFINT PA ID PC PYC
    (87) input -> . IFINPUFUT PA ID PC PYC
    (88) declaracion_while -> . WHIFILEFE PA condicion PC LLAVEA bloque_codigo LLAVEC
    (89) declaracion_while -> . declaracion_while_error
    (54) declarar_if_error_llave -> . IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE LLAVEA bloque_codigo
    (55) declarar_if_error_llave -> . IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE bloque_codigo LLAVEC
    (56) declarar_if_error_llave -> . PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE LLAVEA bloque_codigo LLAVEC
    (57) declarar_if_error_llave -> . ID PA condicion PC LLAVEA bloque_codigo LLAVEC
    (58) declarar_if_error_llave -> . ID PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE LLAVEA bloque_codigo LLAVEC
    (59) declarar_if_error_llave -> . IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC LLAVEA bloque_codigo LLAVEC
    (34) tipo_dato -> . IFINT
    (35) tipo_dato -> . STRIFING
    (36) tipo_dato -> . AFARRAFAY
    (37) tipo_dato -> . STRUFUCT
    (38) tipo_dato -> . VOFOIFID
    (39) tipo_dato -> . CHAFAR
    (40) tipo_dato -> . BOFOOFOL
    (41) tipo_dato -> . FLOFOAFAT
    (64) declaracion_error -> . ID PYC
    (65) declaracion_error -> . ID ASG ID operacion_matematica ID PYC
    (66) declaracion_error -> . ID ASG dato PYC
    (67) declaracion_error -> . ID ID PYC
    (68) declaracion_error -> . ID ID ASG ID operacion_matematica ID PYC
    (69) declaracion_error -> . ID ID ASG valores PYC
    (70) declaracion_error -> . ID ID dimensiones PYC
    (71) declaracion_error -> . ID dimensiones PYC
    (90) declaracion_while_error -> . PA condicion PC LLAVEA bloque_codigo LLAVEC
    (91) declaracion_while_error -> . ID PA condicion PC LLAVEA bloque_codigo LLAVEC
    (92) declaracion_while_error -> . WHIFILEFE PA condicion PC bloque_codigo LLAVEC
    (93) declaracion_while_error -> . WHIFILEFE PA condicion PC LLAVEA bloque_codigo

    VACIO           shift and go to state 83
    IFIF            shift and go to state 84
    AFARRAFAY       shift and go to state 88
    STRUF           shift and go to state 90
    ID              shift and go to state 87
    PRIFINT         shift and go to state 91
    IFINPUFUT       shift and go to state 92
    WHIFILEFE       shift and go to state 93
    PA              shift and go to state 73
    IFINT           shift and go to state 23
    STRIFING        shift and go to state 24
    STRUFUCT        shift and go to state 26
    VOFOIFID        shift and go to state 27
    CHAFAR          shift and go to state 28
    BOFOOFOL        shift and go to state 29
    FLOFOAFAT       shift and go to state 30

    asignar_estructuras            shift and go to state 77
    bloque_codigo                  shift and go to state 115
    declarar_if                    shift and go to state 75
    declaracion                    shift and go to state 76
    asignar_array                  shift and go to state 78
    funcion                        shift and go to state 79
    print                          shift and go to state 80
    input                          shift and go to state 81
    declaracion_while              shift and go to state 82
    declarar_if_error_llave        shift and go to state 85
    tipo_dato                      shift and go to state 86
    declaracion_error              shift and go to state 89
    declaracion_while_error        shift and go to state 94

state 78

    (45) bloque_codigo -> asignar_array . bloque_codigo
    (42) bloque_codigo -> . declarar_if bloque_codigo
    (43) bloque_codigo -> . declaracion bloque_codigo
    (44) bloque_codigo -> . asignar_estructuras bloque_codigo
    (45) bloque_codigo -> . asignar_array bloque_codigo
    (46) bloque_codigo -> . funcion bloque_codigo
    (47) bloque_codigo -> . print bloque_codigo
    (48) bloque_codigo -> . input bloque_codigo
    (49) bloque_codigo -> . declaracion_while bloque_codigo
    (50) bloque_codigo -> . VACIO
    (51) declarar_if -> . IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC
    (52) declarar_if -> . IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE LLAVEA bloque_codigo LLAVEC
    (53) declarar_if -> . declarar_if_error_llave
    (60) declaracion -> . tipo_dato ID ASG ID operacion_matematica ID PYC
    (61) declaracion -> . tipo_dato ID ASG dato PYC
    (62) declaracion -> . AFARRAFAY ID dimensiones PYC
    (63) declaracion -> . declaracion_error
    (82) asignar_estructuras -> . STRUF ID PUNTO ID ASG dato PYC
    (81) asignar_array -> . ID dimensiones ASG dato PYC
    (83) funcion -> . ID PA valores PC PYC
    (84) funcion -> . ID PA PC PYC
    (85) funcion -> . ID PA valores COMA valores PC PYC
    (86) print -> . PRIFINT PA ID PC PYC
    (87) input -> . IFINPUFUT PA ID PC PYC
    (88) declaracion_while -> . WHIFILEFE PA condicion PC LLAVEA bloque_codigo LLAVEC
    (89) declaracion_while -> . declaracion_while_error
    (54) declarar_if_error_llave -> . IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE LLAVEA bloque_codigo
    (55) declarar_if_error_llave -> . IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE bloque_codigo LLAVEC
    (56) declarar_if_error_llave -> . PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE LLAVEA bloque_codigo LLAVEC
    (57) declarar_if_error_llave -> . ID PA condicion PC LLAVEA bloque_codigo LLAVEC
    (58) declarar_if_error_llave -> . ID PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE LLAVEA bloque_codigo LLAVEC
    (59) declarar_if_error_llave -> . IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC LLAVEA bloque_codigo LLAVEC
    (34) tipo_dato -> . IFINT
    (35) tipo_dato -> . STRIFING
    (36) tipo_dato -> . AFARRAFAY
    (37) tipo_dato -> . STRUFUCT
    (38) tipo_dato -> . VOFOIFID
    (39) tipo_dato -> . CHAFAR
    (40) tipo_dato -> . BOFOOFOL
    (41) tipo_dato -> . FLOFOAFAT
    (64) declaracion_error -> . ID PYC
    (65) declaracion_error -> . ID ASG ID operacion_matematica ID PYC
    (66) declaracion_error -> . ID ASG dato PYC
    (67) declaracion_error -> . ID ID PYC
    (68) declaracion_error -> . ID ID ASG ID operacion_matematica ID PYC
    (69) declaracion_error -> . ID ID ASG valores PYC
    (70) declaracion_error -> . ID ID dimensiones PYC
    (71) declaracion_error -> . ID dimensiones PYC
    (90) declaracion_while_error -> . PA condicion PC LLAVEA bloque_codigo LLAVEC
    (91) declaracion_while_error -> . ID PA condicion PC LLAVEA bloque_codigo LLAVEC
    (92) declaracion_while_error -> . WHIFILEFE PA condicion PC bloque_codigo LLAVEC
    (93) declaracion_while_error -> . WHIFILEFE PA condicion PC LLAVEA bloque_codigo

    VACIO           shift and go to state 83
    IFIF            shift and go to state 84
    AFARRAFAY       shift and go to state 88
    STRUF           shift and go to state 90
    ID              shift and go to state 87
    PRIFINT         shift and go to state 91
    IFINPUFUT       shift and go to state 92
    WHIFILEFE       shift and go to state 93
    PA              shift and go to state 73
    IFINT           shift and go to state 23
    STRIFING        shift and go to state 24
    STRUFUCT        shift and go to state 26
    VOFOIFID        shift and go to state 27
    CHAFAR          shift and go to state 28
    BOFOOFOL        shift and go to state 29
    FLOFOAFAT       shift and go to state 30

    asignar_array                  shift and go to state 78
    bloque_codigo                  shift and go to state 116
    declarar_if                    shift and go to state 75
    declaracion                    shift and go to state 76
    asignar_estructuras            shift and go to state 77
    funcion                        shift and go to state 79
    print                          shift and go to state 80
    input                          shift and go to state 81
    declaracion_while              shift and go to state 82
    declarar_if_error_llave        shift and go to state 85
    tipo_dato                      shift and go to state 86
    declaracion_error              shift and go to state 89
    declaracion_while_error        shift and go to state 94

state 79

    (46) bloque_codigo -> funcion . bloque_codigo
    (42) bloque_codigo -> . declarar_if bloque_codigo
    (43) bloque_codigo -> . declaracion bloque_codigo
    (44) bloque_codigo -> . asignar_estructuras bloque_codigo
    (45) bloque_codigo -> . asignar_array bloque_codigo
    (46) bloque_codigo -> . funcion bloque_codigo
    (47) bloque_codigo -> . print bloque_codigo
    (48) bloque_codigo -> . input bloque_codigo
    (49) bloque_codigo -> . declaracion_while bloque_codigo
    (50) bloque_codigo -> . VACIO
    (51) declarar_if -> . IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC
    (52) declarar_if -> . IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE LLAVEA bloque_codigo LLAVEC
    (53) declarar_if -> . declarar_if_error_llave
    (60) declaracion -> . tipo_dato ID ASG ID operacion_matematica ID PYC
    (61) declaracion -> . tipo_dato ID ASG dato PYC
    (62) declaracion -> . AFARRAFAY ID dimensiones PYC
    (63) declaracion -> . declaracion_error
    (82) asignar_estructuras -> . STRUF ID PUNTO ID ASG dato PYC
    (81) asignar_array -> . ID dimensiones ASG dato PYC
    (83) funcion -> . ID PA valores PC PYC
    (84) funcion -> . ID PA PC PYC
    (85) funcion -> . ID PA valores COMA valores PC PYC
    (86) print -> . PRIFINT PA ID PC PYC
    (87) input -> . IFINPUFUT PA ID PC PYC
    (88) declaracion_while -> . WHIFILEFE PA condicion PC LLAVEA bloque_codigo LLAVEC
    (89) declaracion_while -> . declaracion_while_error
    (54) declarar_if_error_llave -> . IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE LLAVEA bloque_codigo
    (55) declarar_if_error_llave -> . IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE bloque_codigo LLAVEC
    (56) declarar_if_error_llave -> . PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE LLAVEA bloque_codigo LLAVEC
    (57) declarar_if_error_llave -> . ID PA condicion PC LLAVEA bloque_codigo LLAVEC
    (58) declarar_if_error_llave -> . ID PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE LLAVEA bloque_codigo LLAVEC
    (59) declarar_if_error_llave -> . IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC LLAVEA bloque_codigo LLAVEC
    (34) tipo_dato -> . IFINT
    (35) tipo_dato -> . STRIFING
    (36) tipo_dato -> . AFARRAFAY
    (37) tipo_dato -> . STRUFUCT
    (38) tipo_dato -> . VOFOIFID
    (39) tipo_dato -> . CHAFAR
    (40) tipo_dato -> . BOFOOFOL
    (41) tipo_dato -> . FLOFOAFAT
    (64) declaracion_error -> . ID PYC
    (65) declaracion_error -> . ID ASG ID operacion_matematica ID PYC
    (66) declaracion_error -> . ID ASG dato PYC
    (67) declaracion_error -> . ID ID PYC
    (68) declaracion_error -> . ID ID ASG ID operacion_matematica ID PYC
    (69) declaracion_error -> . ID ID ASG valores PYC
    (70) declaracion_error -> . ID ID dimensiones PYC
    (71) declaracion_error -> . ID dimensiones PYC
    (90) declaracion_while_error -> . PA condicion PC LLAVEA bloque_codigo LLAVEC
    (91) declaracion_while_error -> . ID PA condicion PC LLAVEA bloque_codigo LLAVEC
    (92) declaracion_while_error -> . WHIFILEFE PA condicion PC bloque_codigo LLAVEC
    (93) declaracion_while_error -> . WHIFILEFE PA condicion PC LLAVEA bloque_codigo

    VACIO           shift and go to state 83
    IFIF            shift and go to state 84
    AFARRAFAY       shift and go to state 88
    STRUF           shift and go to state 90
    ID              shift and go to state 87
    PRIFINT         shift and go to state 91
    IFINPUFUT       shift and go to state 92
    WHIFILEFE       shift and go to state 93
    PA              shift and go to state 73
    IFINT           shift and go to state 23
    STRIFING        shift and go to state 24
    STRUFUCT        shift and go to state 26
    VOFOIFID        shift and go to state 27
    CHAFAR          shift and go to state 28
    BOFOOFOL        shift and go to state 29
    FLOFOAFAT       shift and go to state 30

    funcion                        shift and go to state 79
    bloque_codigo                  shift and go to state 117
    declarar_if                    shift and go to state 75
    declaracion                    shift and go to state 76
    asignar_estructuras            shift and go to state 77
    asignar_array                  shift and go to state 78
    print                          shift and go to state 80
    input                          shift and go to state 81
    declaracion_while              shift and go to state 82
    declarar_if_error_llave        shift and go to state 85
    tipo_dato                      shift and go to state 86
    declaracion_error              shift and go to state 89
    declaracion_while_error        shift and go to state 94

state 80

    (47) bloque_codigo -> print . bloque_codigo
    (42) bloque_codigo -> . declarar_if bloque_codigo
    (43) bloque_codigo -> . declaracion bloque_codigo
    (44) bloque_codigo -> . asignar_estructuras bloque_codigo
    (45) bloque_codigo -> . asignar_array bloque_codigo
    (46) bloque_codigo -> . funcion bloque_codigo
    (47) bloque_codigo -> . print bloque_codigo
    (48) bloque_codigo -> . input bloque_codigo
    (49) bloque_codigo -> . declaracion_while bloque_codigo
    (50) bloque_codigo -> . VACIO
    (51) declarar_if -> . IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC
    (52) declarar_if -> . IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE LLAVEA bloque_codigo LLAVEC
    (53) declarar_if -> . declarar_if_error_llave
    (60) declaracion -> . tipo_dato ID ASG ID operacion_matematica ID PYC
    (61) declaracion -> . tipo_dato ID ASG dato PYC
    (62) declaracion -> . AFARRAFAY ID dimensiones PYC
    (63) declaracion -> . declaracion_error
    (82) asignar_estructuras -> . STRUF ID PUNTO ID ASG dato PYC
    (81) asignar_array -> . ID dimensiones ASG dato PYC
    (83) funcion -> . ID PA valores PC PYC
    (84) funcion -> . ID PA PC PYC
    (85) funcion -> . ID PA valores COMA valores PC PYC
    (86) print -> . PRIFINT PA ID PC PYC
    (87) input -> . IFINPUFUT PA ID PC PYC
    (88) declaracion_while -> . WHIFILEFE PA condicion PC LLAVEA bloque_codigo LLAVEC
    (89) declaracion_while -> . declaracion_while_error
    (54) declarar_if_error_llave -> . IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE LLAVEA bloque_codigo
    (55) declarar_if_error_llave -> . IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE bloque_codigo LLAVEC
    (56) declarar_if_error_llave -> . PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE LLAVEA bloque_codigo LLAVEC
    (57) declarar_if_error_llave -> . ID PA condicion PC LLAVEA bloque_codigo LLAVEC
    (58) declarar_if_error_llave -> . ID PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE LLAVEA bloque_codigo LLAVEC
    (59) declarar_if_error_llave -> . IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC LLAVEA bloque_codigo LLAVEC
    (34) tipo_dato -> . IFINT
    (35) tipo_dato -> . STRIFING
    (36) tipo_dato -> . AFARRAFAY
    (37) tipo_dato -> . STRUFUCT
    (38) tipo_dato -> . VOFOIFID
    (39) tipo_dato -> . CHAFAR
    (40) tipo_dato -> . BOFOOFOL
    (41) tipo_dato -> . FLOFOAFAT
    (64) declaracion_error -> . ID PYC
    (65) declaracion_error -> . ID ASG ID operacion_matematica ID PYC
    (66) declaracion_error -> . ID ASG dato PYC
    (67) declaracion_error -> . ID ID PYC
    (68) declaracion_error -> . ID ID ASG ID operacion_matematica ID PYC
    (69) declaracion_error -> . ID ID ASG valores PYC
    (70) declaracion_error -> . ID ID dimensiones PYC
    (71) declaracion_error -> . ID dimensiones PYC
    (90) declaracion_while_error -> . PA condicion PC LLAVEA bloque_codigo LLAVEC
    (91) declaracion_while_error -> . ID PA condicion PC LLAVEA bloque_codigo LLAVEC
    (92) declaracion_while_error -> . WHIFILEFE PA condicion PC bloque_codigo LLAVEC
    (93) declaracion_while_error -> . WHIFILEFE PA condicion PC LLAVEA bloque_codigo

    VACIO           shift and go to state 83
    IFIF            shift and go to state 84
    AFARRAFAY       shift and go to state 88
    STRUF           shift and go to state 90
    ID              shift and go to state 87
    PRIFINT         shift and go to state 91
    IFINPUFUT       shift and go to state 92
    WHIFILEFE       shift and go to state 93
    PA              shift and go to state 73
    IFINT           shift and go to state 23
    STRIFING        shift and go to state 24
    STRUFUCT        shift and go to state 26
    VOFOIFID        shift and go to state 27
    CHAFAR          shift and go to state 28
    BOFOOFOL        shift and go to state 29
    FLOFOAFAT       shift and go to state 30

    print                          shift and go to state 80
    bloque_codigo                  shift and go to state 118
    declarar_if                    shift and go to state 75
    declaracion                    shift and go to state 76
    asignar_estructuras            shift and go to state 77
    asignar_array                  shift and go to state 78
    funcion                        shift and go to state 79
    input                          shift and go to state 81
    declaracion_while              shift and go to state 82
    declarar_if_error_llave        shift and go to state 85
    tipo_dato                      shift and go to state 86
    declaracion_error              shift and go to state 89
    declaracion_while_error        shift and go to state 94

state 81

    (48) bloque_codigo -> input . bloque_codigo
    (42) bloque_codigo -> . declarar_if bloque_codigo
    (43) bloque_codigo -> . declaracion bloque_codigo
    (44) bloque_codigo -> . asignar_estructuras bloque_codigo
    (45) bloque_codigo -> . asignar_array bloque_codigo
    (46) bloque_codigo -> . funcion bloque_codigo
    (47) bloque_codigo -> . print bloque_codigo
    (48) bloque_codigo -> . input bloque_codigo
    (49) bloque_codigo -> . declaracion_while bloque_codigo
    (50) bloque_codigo -> . VACIO
    (51) declarar_if -> . IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC
    (52) declarar_if -> . IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE LLAVEA bloque_codigo LLAVEC
    (53) declarar_if -> . declarar_if_error_llave
    (60) declaracion -> . tipo_dato ID ASG ID operacion_matematica ID PYC
    (61) declaracion -> . tipo_dato ID ASG dato PYC
    (62) declaracion -> . AFARRAFAY ID dimensiones PYC
    (63) declaracion -> . declaracion_error
    (82) asignar_estructuras -> . STRUF ID PUNTO ID ASG dato PYC
    (81) asignar_array -> . ID dimensiones ASG dato PYC
    (83) funcion -> . ID PA valores PC PYC
    (84) funcion -> . ID PA PC PYC
    (85) funcion -> . ID PA valores COMA valores PC PYC
    (86) print -> . PRIFINT PA ID PC PYC
    (87) input -> . IFINPUFUT PA ID PC PYC
    (88) declaracion_while -> . WHIFILEFE PA condicion PC LLAVEA bloque_codigo LLAVEC
    (89) declaracion_while -> . declaracion_while_error
    (54) declarar_if_error_llave -> . IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE LLAVEA bloque_codigo
    (55) declarar_if_error_llave -> . IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE bloque_codigo LLAVEC
    (56) declarar_if_error_llave -> . PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE LLAVEA bloque_codigo LLAVEC
    (57) declarar_if_error_llave -> . ID PA condicion PC LLAVEA bloque_codigo LLAVEC
    (58) declarar_if_error_llave -> . ID PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE LLAVEA bloque_codigo LLAVEC
    (59) declarar_if_error_llave -> . IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC LLAVEA bloque_codigo LLAVEC
    (34) tipo_dato -> . IFINT
    (35) tipo_dato -> . STRIFING
    (36) tipo_dato -> . AFARRAFAY
    (37) tipo_dato -> . STRUFUCT
    (38) tipo_dato -> . VOFOIFID
    (39) tipo_dato -> . CHAFAR
    (40) tipo_dato -> . BOFOOFOL
    (41) tipo_dato -> . FLOFOAFAT
    (64) declaracion_error -> . ID PYC
    (65) declaracion_error -> . ID ASG ID operacion_matematica ID PYC
    (66) declaracion_error -> . ID ASG dato PYC
    (67) declaracion_error -> . ID ID PYC
    (68) declaracion_error -> . ID ID ASG ID operacion_matematica ID PYC
    (69) declaracion_error -> . ID ID ASG valores PYC
    (70) declaracion_error -> . ID ID dimensiones PYC
    (71) declaracion_error -> . ID dimensiones PYC
    (90) declaracion_while_error -> . PA condicion PC LLAVEA bloque_codigo LLAVEC
    (91) declaracion_while_error -> . ID PA condicion PC LLAVEA bloque_codigo LLAVEC
    (92) declaracion_while_error -> . WHIFILEFE PA condicion PC bloque_codigo LLAVEC
    (93) declaracion_while_error -> . WHIFILEFE PA condicion PC LLAVEA bloque_codigo

    VACIO           shift and go to state 83
    IFIF            shift and go to state 84
    AFARRAFAY       shift and go to state 88
    STRUF           shift and go to state 90
    ID              shift and go to state 87
    PRIFINT         shift and go to state 91
    IFINPUFUT       shift and go to state 92
    WHIFILEFE       shift and go to state 93
    PA              shift and go to state 73
    IFINT           shift and go to state 23
    STRIFING        shift and go to state 24
    STRUFUCT        shift and go to state 26
    VOFOIFID        shift and go to state 27
    CHAFAR          shift and go to state 28
    BOFOOFOL        shift and go to state 29
    FLOFOAFAT       shift and go to state 30

    input                          shift and go to state 81
    bloque_codigo                  shift and go to state 119
    declarar_if                    shift and go to state 75
    declaracion                    shift and go to state 76
    asignar_estructuras            shift and go to state 77
    asignar_array                  shift and go to state 78
    funcion                        shift and go to state 79
    print                          shift and go to state 80
    declaracion_while              shift and go to state 82
    declarar_if_error_llave        shift and go to state 85
    tipo_dato                      shift and go to state 86
    declaracion_error              shift and go to state 89
    declaracion_while_error        shift and go to state 94

state 82

    (49) bloque_codigo -> declaracion_while . bloque_codigo
    (42) bloque_codigo -> . declarar_if bloque_codigo
    (43) bloque_codigo -> . declaracion bloque_codigo
    (44) bloque_codigo -> . asignar_estructuras bloque_codigo
    (45) bloque_codigo -> . asignar_array bloque_codigo
    (46) bloque_codigo -> . funcion bloque_codigo
    (47) bloque_codigo -> . print bloque_codigo
    (48) bloque_codigo -> . input bloque_codigo
    (49) bloque_codigo -> . declaracion_while bloque_codigo
    (50) bloque_codigo -> . VACIO
    (51) declarar_if -> . IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC
    (52) declarar_if -> . IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE LLAVEA bloque_codigo LLAVEC
    (53) declarar_if -> . declarar_if_error_llave
    (60) declaracion -> . tipo_dato ID ASG ID operacion_matematica ID PYC
    (61) declaracion -> . tipo_dato ID ASG dato PYC
    (62) declaracion -> . AFARRAFAY ID dimensiones PYC
    (63) declaracion -> . declaracion_error
    (82) asignar_estructuras -> . STRUF ID PUNTO ID ASG dato PYC
    (81) asignar_array -> . ID dimensiones ASG dato PYC
    (83) funcion -> . ID PA valores PC PYC
    (84) funcion -> . ID PA PC PYC
    (85) funcion -> . ID PA valores COMA valores PC PYC
    (86) print -> . PRIFINT PA ID PC PYC
    (87) input -> . IFINPUFUT PA ID PC PYC
    (88) declaracion_while -> . WHIFILEFE PA condicion PC LLAVEA bloque_codigo LLAVEC
    (89) declaracion_while -> . declaracion_while_error
    (54) declarar_if_error_llave -> . IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE LLAVEA bloque_codigo
    (55) declarar_if_error_llave -> . IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE bloque_codigo LLAVEC
    (56) declarar_if_error_llave -> . PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE LLAVEA bloque_codigo LLAVEC
    (57) declarar_if_error_llave -> . ID PA condicion PC LLAVEA bloque_codigo LLAVEC
    (58) declarar_if_error_llave -> . ID PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE LLAVEA bloque_codigo LLAVEC
    (59) declarar_if_error_llave -> . IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC LLAVEA bloque_codigo LLAVEC
    (34) tipo_dato -> . IFINT
    (35) tipo_dato -> . STRIFING
    (36) tipo_dato -> . AFARRAFAY
    (37) tipo_dato -> . STRUFUCT
    (38) tipo_dato -> . VOFOIFID
    (39) tipo_dato -> . CHAFAR
    (40) tipo_dato -> . BOFOOFOL
    (41) tipo_dato -> . FLOFOAFAT
    (64) declaracion_error -> . ID PYC
    (65) declaracion_error -> . ID ASG ID operacion_matematica ID PYC
    (66) declaracion_error -> . ID ASG dato PYC
    (67) declaracion_error -> . ID ID PYC
    (68) declaracion_error -> . ID ID ASG ID operacion_matematica ID PYC
    (69) declaracion_error -> . ID ID ASG valores PYC
    (70) declaracion_error -> . ID ID dimensiones PYC
    (71) declaracion_error -> . ID dimensiones PYC
    (90) declaracion_while_error -> . PA condicion PC LLAVEA bloque_codigo LLAVEC
    (91) declaracion_while_error -> . ID PA condicion PC LLAVEA bloque_codigo LLAVEC
    (92) declaracion_while_error -> . WHIFILEFE PA condicion PC bloque_codigo LLAVEC
    (93) declaracion_while_error -> . WHIFILEFE PA condicion PC LLAVEA bloque_codigo

    VACIO           shift and go to state 83
    IFIF            shift and go to state 84
    AFARRAFAY       shift and go to state 88
    STRUF           shift and go to state 90
    ID              shift and go to state 87
    PRIFINT         shift and go to state 91
    IFINPUFUT       shift and go to state 92
    WHIFILEFE       shift and go to state 93
    PA              shift and go to state 73
    IFINT           shift and go to state 23
    STRIFING        shift and go to state 24
    STRUFUCT        shift and go to state 26
    VOFOIFID        shift and go to state 27
    CHAFAR          shift and go to state 28
    BOFOOFOL        shift and go to state 29
    FLOFOAFAT       shift and go to state 30

    declaracion_while              shift and go to state 82
    bloque_codigo                  shift and go to state 120
    declarar_if                    shift and go to state 75
    declaracion                    shift and go to state 76
    asignar_estructuras            shift and go to state 77
    asignar_array                  shift and go to state 78
    funcion                        shift and go to state 79
    print                          shift and go to state 80
    input                          shift and go to state 81
    declarar_if_error_llave        shift and go to state 85
    tipo_dato                      shift and go to state 86
    declaracion_error              shift and go to state 89
    declaracion_while_error        shift and go to state 94

state 83

    (50) bloque_codigo -> VACIO .

    REFETUFURN      reduce using rule 50 (bloque_codigo -> VACIO .)
    LLAVEC          reduce using rule 50 (bloque_codigo -> VACIO .)
    ID              reduce using rule 50 (bloque_codigo -> VACIO .)
    VACIO           reduce using rule 50 (bloque_codigo -> VACIO .)
    IFIF            reduce using rule 50 (bloque_codigo -> VACIO .)
    AFARRAFAY       reduce using rule 50 (bloque_codigo -> VACIO .)
    STRUF           reduce using rule 50 (bloque_codigo -> VACIO .)
    PRIFINT         reduce using rule 50 (bloque_codigo -> VACIO .)
    IFINPUFUT       reduce using rule 50 (bloque_codigo -> VACIO .)
    WHIFILEFE       reduce using rule 50 (bloque_codigo -> VACIO .)
    PA              reduce using rule 50 (bloque_codigo -> VACIO .)
    IFINT           reduce using rule 50 (bloque_codigo -> VACIO .)
    STRIFING        reduce using rule 50 (bloque_codigo -> VACIO .)
    STRUFUCT        reduce using rule 50 (bloque_codigo -> VACIO .)
    VOFOIFID        reduce using rule 50 (bloque_codigo -> VACIO .)
    CHAFAR          reduce using rule 50 (bloque_codigo -> VACIO .)
    BOFOOFOL        reduce using rule 50 (bloque_codigo -> VACIO .)
    FLOFOAFAT       reduce using rule 50 (bloque_codigo -> VACIO .)


state 84

    (51) declarar_if -> IFIF . PA condicion PC LLAVEA bloque_codigo LLAVEC
    (52) declarar_if -> IFIF . PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE LLAVEA bloque_codigo LLAVEC
    (54) declarar_if_error_llave -> IFIF . PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE LLAVEA bloque_codigo
    (55) declarar_if_error_llave -> IFIF . PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE bloque_codigo LLAVEC
    (59) declarar_if_error_llave -> IFIF . PA condicion PC LLAVEA bloque_codigo LLAVEC LLAVEA bloque_codigo LLAVEC

    PA              shift and go to state 121


state 85

    (53) declarar_if -> declarar_if_error_llave .

    VACIO           reduce using rule 53 (declarar_if -> declarar_if_error_llave .)
    IFIF            reduce using rule 53 (declarar_if -> declarar_if_error_llave .)
    AFARRAFAY       reduce using rule 53 (declarar_if -> declarar_if_error_llave .)
    STRUF           reduce using rule 53 (declarar_if -> declarar_if_error_llave .)
    ID              reduce using rule 53 (declarar_if -> declarar_if_error_llave .)
    PRIFINT         reduce using rule 53 (declarar_if -> declarar_if_error_llave .)
    IFINPUFUT       reduce using rule 53 (declarar_if -> declarar_if_error_llave .)
    WHIFILEFE       reduce using rule 53 (declarar_if -> declarar_if_error_llave .)
    PA              reduce using rule 53 (declarar_if -> declarar_if_error_llave .)
    IFINT           reduce using rule 53 (declarar_if -> declarar_if_error_llave .)
    STRIFING        reduce using rule 53 (declarar_if -> declarar_if_error_llave .)
    STRUFUCT        reduce using rule 53 (declarar_if -> declarar_if_error_llave .)
    VOFOIFID        reduce using rule 53 (declarar_if -> declarar_if_error_llave .)
    CHAFAR          reduce using rule 53 (declarar_if -> declarar_if_error_llave .)
    BOFOOFOL        reduce using rule 53 (declarar_if -> declarar_if_error_llave .)
    FLOFOAFAT       reduce using rule 53 (declarar_if -> declarar_if_error_llave .)


state 86

    (60) declaracion -> tipo_dato . ID ASG ID operacion_matematica ID PYC
    (61) declaracion -> tipo_dato . ID ASG dato PYC

    ID              shift and go to state 122


state 87

    (81) asignar_array -> ID . dimensiones ASG dato PYC
    (83) funcion -> ID . PA valores PC PYC
    (84) funcion -> ID . PA PC PYC
    (85) funcion -> ID . PA valores COMA valores PC PYC
    (57) declarar_if_error_llave -> ID . PA condicion PC LLAVEA bloque_codigo LLAVEC
    (58) declarar_if_error_llave -> ID . PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE LLAVEA bloque_codigo LLAVEC
    (64) declaracion_error -> ID . PYC
    (65) declaracion_error -> ID . ASG ID operacion_matematica ID PYC
    (66) declaracion_error -> ID . ASG dato PYC
    (67) declaracion_error -> ID . ID PYC
    (68) declaracion_error -> ID . ID ASG ID operacion_matematica ID PYC
    (69) declaracion_error -> ID . ID ASG valores PYC
    (70) declaracion_error -> ID . ID dimensiones PYC
    (71) declaracion_error -> ID . dimensiones PYC
    (91) declaracion_while_error -> ID . PA condicion PC LLAVEA bloque_codigo LLAVEC
    (72) dimensiones -> . dimension dimensiones
    (73) dimensiones -> . VACIO
    (74) dimension -> . CA INT CC
    (75) dimension -> . dimension_error
    (76) dimension_error -> . CA CC
    (77) dimension_error -> . CA ID CC
    (78) dimension_error -> . CA REAL CC
    (79) dimension_error -> . CA PCC CC
    (80) dimension_error -> . CA CHAR CC

    PA              shift and go to state 127
    PYC             shift and go to state 126
    ASG             shift and go to state 125
    ID              shift and go to state 123
    VACIO           shift and go to state 129
    CA              shift and go to state 130

    dimensiones                    shift and go to state 124
    dimension                      shift and go to state 128
    dimension_error                shift and go to state 131

state 88

    (62) declaracion -> AFARRAFAY . ID dimensiones PYC
    (36) tipo_dato -> AFARRAFAY .

  ! shift/reduce conflict for ID resolved as shift
    ID              shift and go to state 132

  ! ID              [ reduce using rule 36 (tipo_dato -> AFARRAFAY .) ]


state 89

    (63) declaracion -> declaracion_error .

    VACIO           reduce using rule 63 (declaracion -> declaracion_error .)
    IFIF            reduce using rule 63 (declaracion -> declaracion_error .)
    AFARRAFAY       reduce using rule 63 (declaracion -> declaracion_error .)
    STRUF           reduce using rule 63 (declaracion -> declaracion_error .)
    ID              reduce using rule 63 (declaracion -> declaracion_error .)
    PRIFINT         reduce using rule 63 (declaracion -> declaracion_error .)
    IFINPUFUT       reduce using rule 63 (declaracion -> declaracion_error .)
    WHIFILEFE       reduce using rule 63 (declaracion -> declaracion_error .)
    PA              reduce using rule 63 (declaracion -> declaracion_error .)
    IFINT           reduce using rule 63 (declaracion -> declaracion_error .)
    STRIFING        reduce using rule 63 (declaracion -> declaracion_error .)
    STRUFUCT        reduce using rule 63 (declaracion -> declaracion_error .)
    VOFOIFID        reduce using rule 63 (declaracion -> declaracion_error .)
    CHAFAR          reduce using rule 63 (declaracion -> declaracion_error .)
    BOFOOFOL        reduce using rule 63 (declaracion -> declaracion_error .)
    FLOFOAFAT       reduce using rule 63 (declaracion -> declaracion_error .)


state 90

    (82) asignar_estructuras -> STRUF . ID PUNTO ID ASG dato PYC

    ID              shift and go to state 133


state 91

    (86) print -> PRIFINT . PA ID PC PYC

    PA              shift and go to state 134


state 92

    (87) input -> IFINPUFUT . PA ID PC PYC

    PA              shift and go to state 135


state 93

    (88) declaracion_while -> WHIFILEFE . PA condicion PC LLAVEA bloque_codigo LLAVEC
    (92) declaracion_while_error -> WHIFILEFE . PA condicion PC bloque_codigo LLAVEC
    (93) declaracion_while_error -> WHIFILEFE . PA condicion PC LLAVEA bloque_codigo

    PA              shift and go to state 136


state 94

    (89) declaracion_while -> declaracion_while_error .

    VACIO           reduce using rule 89 (declaracion_while -> declaracion_while_error .)
    IFIF            reduce using rule 89 (declaracion_while -> declaracion_while_error .)
    AFARRAFAY       reduce using rule 89 (declaracion_while -> declaracion_while_error .)
    STRUF           reduce using rule 89 (declaracion_while -> declaracion_while_error .)
    ID              reduce using rule 89 (declaracion_while -> declaracion_while_error .)
    PRIFINT         reduce using rule 89 (declaracion_while -> declaracion_while_error .)
    IFINPUFUT       reduce using rule 89 (declaracion_while -> declaracion_while_error .)
    WHIFILEFE       reduce using rule 89 (declaracion_while -> declaracion_while_error .)
    PA              reduce using rule 89 (declaracion_while -> declaracion_while_error .)
    IFINT           reduce using rule 89 (declaracion_while -> declaracion_while_error .)
    STRIFING        reduce using rule 89 (declaracion_while -> declaracion_while_error .)
    STRUFUCT        reduce using rule 89 (declaracion_while -> declaracion_while_error .)
    VOFOIFID        reduce using rule 89 (declaracion_while -> declaracion_while_error .)
    CHAFAR          reduce using rule 89 (declaracion_while -> declaracion_while_error .)
    BOFOOFOL        reduce using rule 89 (declaracion_while -> declaracion_while_error .)
    FLOFOAFAT       reduce using rule 89 (declaracion_while -> declaracion_while_error .)


state 95

    (30) declarar_main_error -> IFINT ID PA PC LLAVEA . bloque_codigo REFETUFURN PYC LLAVEC
    (42) bloque_codigo -> . declarar_if bloque_codigo
    (43) bloque_codigo -> . declaracion bloque_codigo
    (44) bloque_codigo -> . asignar_estructuras bloque_codigo
    (45) bloque_codigo -> . asignar_array bloque_codigo
    (46) bloque_codigo -> . funcion bloque_codigo
    (47) bloque_codigo -> . print bloque_codigo
    (48) bloque_codigo -> . input bloque_codigo
    (49) bloque_codigo -> . declaracion_while bloque_codigo
    (50) bloque_codigo -> . VACIO
    (51) declarar_if -> . IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC
    (52) declarar_if -> . IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE LLAVEA bloque_codigo LLAVEC
    (53) declarar_if -> . declarar_if_error_llave
    (60) declaracion -> . tipo_dato ID ASG ID operacion_matematica ID PYC
    (61) declaracion -> . tipo_dato ID ASG dato PYC
    (62) declaracion -> . AFARRAFAY ID dimensiones PYC
    (63) declaracion -> . declaracion_error
    (82) asignar_estructuras -> . STRUF ID PUNTO ID ASG dato PYC
    (81) asignar_array -> . ID dimensiones ASG dato PYC
    (83) funcion -> . ID PA valores PC PYC
    (84) funcion -> . ID PA PC PYC
    (85) funcion -> . ID PA valores COMA valores PC PYC
    (86) print -> . PRIFINT PA ID PC PYC
    (87) input -> . IFINPUFUT PA ID PC PYC
    (88) declaracion_while -> . WHIFILEFE PA condicion PC LLAVEA bloque_codigo LLAVEC
    (89) declaracion_while -> . declaracion_while_error
    (54) declarar_if_error_llave -> . IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE LLAVEA bloque_codigo
    (55) declarar_if_error_llave -> . IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE bloque_codigo LLAVEC
    (56) declarar_if_error_llave -> . PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE LLAVEA bloque_codigo LLAVEC
    (57) declarar_if_error_llave -> . ID PA condicion PC LLAVEA bloque_codigo LLAVEC
    (58) declarar_if_error_llave -> . ID PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE LLAVEA bloque_codigo LLAVEC
    (59) declarar_if_error_llave -> . IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC LLAVEA bloque_codigo LLAVEC
    (34) tipo_dato -> . IFINT
    (35) tipo_dato -> . STRIFING
    (36) tipo_dato -> . AFARRAFAY
    (37) tipo_dato -> . STRUFUCT
    (38) tipo_dato -> . VOFOIFID
    (39) tipo_dato -> . CHAFAR
    (40) tipo_dato -> . BOFOOFOL
    (41) tipo_dato -> . FLOFOAFAT
    (64) declaracion_error -> . ID PYC
    (65) declaracion_error -> . ID ASG ID operacion_matematica ID PYC
    (66) declaracion_error -> . ID ASG dato PYC
    (67) declaracion_error -> . ID ID PYC
    (68) declaracion_error -> . ID ID ASG ID operacion_matematica ID PYC
    (69) declaracion_error -> . ID ID ASG valores PYC
    (70) declaracion_error -> . ID ID dimensiones PYC
    (71) declaracion_error -> . ID dimensiones PYC
    (90) declaracion_while_error -> . PA condicion PC LLAVEA bloque_codigo LLAVEC
    (91) declaracion_while_error -> . ID PA condicion PC LLAVEA bloque_codigo LLAVEC
    (92) declaracion_while_error -> . WHIFILEFE PA condicion PC bloque_codigo LLAVEC
    (93) declaracion_while_error -> . WHIFILEFE PA condicion PC LLAVEA bloque_codigo

    VACIO           shift and go to state 83
    IFIF            shift and go to state 84
    AFARRAFAY       shift and go to state 88
    STRUF           shift and go to state 90
    ID              shift and go to state 87
    PRIFINT         shift and go to state 91
    IFINPUFUT       shift and go to state 92
    WHIFILEFE       shift and go to state 93
    PA              shift and go to state 73
    IFINT           shift and go to state 23
    STRIFING        shift and go to state 24
    STRUFUCT        shift and go to state 26
    VOFOIFID        shift and go to state 27
    CHAFAR          shift and go to state 28
    BOFOOFOL        shift and go to state 29
    FLOFOAFAT       shift and go to state 30

    bloque_codigo                  shift and go to state 137
    declarar_if                    shift and go to state 75
    declaracion                    shift and go to state 76
    asignar_estructuras            shift and go to state 77
    asignar_array                  shift and go to state 78
    funcion                        shift and go to state 79
    print                          shift and go to state 80
    input                          shift and go to state 81
    declaracion_while              shift and go to state 82
    declarar_if_error_llave        shift and go to state 85
    tipo_dato                      shift and go to state 86
    declaracion_error              shift and go to state 89
    declaracion_while_error        shift and go to state 94

state 96

    (26) declarar_main_error -> MAFAIFIN PA PC LLAVEA bloque_codigo . REFETUFURN PYC LLAVEC
    (28) declarar_main_error -> MAFAIFIN PA PC LLAVEA bloque_codigo . LLAVEC

    REFETUFURN      shift and go to state 138
    LLAVEC          shift and go to state 139


state 97

    (12) declarar_estructuras_error -> STRUFUCT ID LLAVEA ID PYC ID . PYC LLAVEC

    PYC             shift and go to state 140


state 98

    (5) declarar_estructuras -> STRUFUCT ID LLAVEA tipo_dato ID PYC . tipo_dato ID PYC LLAVEC
    (10) declarar_estructuras_error -> STRUFUCT ID LLAVEA tipo_dato ID PYC . tipo_dato PYC LLAVEC
    (13) declarar_estructuras_error -> STRUFUCT ID LLAVEA tipo_dato ID PYC . tipo_dato ID PYC tipo_dato ID PYC LLAVEC
    (34) tipo_dato -> . IFINT
    (35) tipo_dato -> . STRIFING
    (36) tipo_dato -> . AFARRAFAY
    (37) tipo_dato -> . STRUFUCT
    (38) tipo_dato -> . VOFOIFID
    (39) tipo_dato -> . CHAFAR
    (40) tipo_dato -> . BOFOOFOL
    (41) tipo_dato -> . FLOFOAFAT

    IFINT           shift and go to state 23
    STRIFING        shift and go to state 24
    AFARRAFAY       shift and go to state 25
    STRUFUCT        shift and go to state 26
    VOFOIFID        shift and go to state 27
    CHAFAR          shift and go to state 28
    BOFOOFOL        shift and go to state 29
    FLOFOAFAT       shift and go to state 30

    tipo_dato                      shift and go to state 141

state 99

    (9) declarar_estructuras_error -> STRUFUCT ID LLAVEA tipo_dato PYC tipo_dato . ID PYC LLAVEC
    (11) declarar_estructuras_error -> STRUFUCT ID LLAVEA tipo_dato PYC tipo_dato . PYC LLAVEC

    ID              shift and go to state 142
    PYC             shift and go to state 143


state 100

    (8) declarar_estructuras_error -> ID ID LLAVEA tipo_dato ID PYC . tipo_dato ID PYC LLAVEC
    (34) tipo_dato -> . IFINT
    (35) tipo_dato -> . STRIFING
    (36) tipo_dato -> . AFARRAFAY
    (37) tipo_dato -> . STRUFUCT
    (38) tipo_dato -> . VOFOIFID
    (39) tipo_dato -> . CHAFAR
    (40) tipo_dato -> . BOFOOFOL
    (41) tipo_dato -> . FLOFOAFAT

    IFINT           shift and go to state 23
    STRIFING        shift and go to state 24
    AFARRAFAY       shift and go to state 25
    STRUFUCT        shift and go to state 26
    VOFOIFID        shift and go to state 27
    CHAFAR          shift and go to state 28
    BOFOOFOL        shift and go to state 29
    FLOFOAFAT       shift and go to state 30

    tipo_dato                      shift and go to state 144

state 101

    (32) declarar_main_error -> ID ID PA PC LLAVEA bloque_codigo . REFETUFURN PYC LLAVEC

    REFETUFURN      shift and go to state 145


state 102

    (7) declarar_estructuras_error -> ID LLAVEA tipo_dato ID PYC tipo_dato . ID PYC LLAVEC

    ID              shift and go to state 146


state 103

    (31) declarar_main_error -> ID MAFAIFIN PA PC LLAVEA bloque_codigo . REFETUFURN PYC LLAVEC

    REFETUFURN      shift and go to state 147


state 104

    (14) declarar_funciones -> FUNCTION tipo_dato ID PA tipo_dato ID . PC LLAVEA bloque_codigo REFETUFURN ID PYC LLAVEC
    (16) declarar_funciones -> FUNCTION tipo_dato ID PA tipo_dato ID . COMA tipo_dato ID PC LLAVEA bloque_codigo REFETUFURN ID PYC LLAVEC
    (21) declarar_funciones_error -> FUNCTION tipo_dato ID PA tipo_dato ID . COMA tipo_dato ID PC LLAVEA bloque_codigo REFETUFURN PYC LLAVEC
    (22) declarar_funciones_error -> FUNCTION tipo_dato ID PA tipo_dato ID . PC LLAVEA bloque_codigo REFETUFURN PYC LLAVEC

    PC              shift and go to state 148
    COMA            shift and go to state 149


state 105

    (15) declarar_funciones -> FUNCTION tipo_dato ID PA PC LLAVEA . bloque_codigo REFETUFURN ID PYC LLAVEC
    (23) declarar_funciones_error -> FUNCTION tipo_dato ID PA PC LLAVEA . bloque_codigo REFETUFURN PYC LLAVEC
    (42) bloque_codigo -> . declarar_if bloque_codigo
    (43) bloque_codigo -> . declaracion bloque_codigo
    (44) bloque_codigo -> . asignar_estructuras bloque_codigo
    (45) bloque_codigo -> . asignar_array bloque_codigo
    (46) bloque_codigo -> . funcion bloque_codigo
    (47) bloque_codigo -> . print bloque_codigo
    (48) bloque_codigo -> . input bloque_codigo
    (49) bloque_codigo -> . declaracion_while bloque_codigo
    (50) bloque_codigo -> . VACIO
    (51) declarar_if -> . IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC
    (52) declarar_if -> . IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE LLAVEA bloque_codigo LLAVEC
    (53) declarar_if -> . declarar_if_error_llave
    (60) declaracion -> . tipo_dato ID ASG ID operacion_matematica ID PYC
    (61) declaracion -> . tipo_dato ID ASG dato PYC
    (62) declaracion -> . AFARRAFAY ID dimensiones PYC
    (63) declaracion -> . declaracion_error
    (82) asignar_estructuras -> . STRUF ID PUNTO ID ASG dato PYC
    (81) asignar_array -> . ID dimensiones ASG dato PYC
    (83) funcion -> . ID PA valores PC PYC
    (84) funcion -> . ID PA PC PYC
    (85) funcion -> . ID PA valores COMA valores PC PYC
    (86) print -> . PRIFINT PA ID PC PYC
    (87) input -> . IFINPUFUT PA ID PC PYC
    (88) declaracion_while -> . WHIFILEFE PA condicion PC LLAVEA bloque_codigo LLAVEC
    (89) declaracion_while -> . declaracion_while_error
    (54) declarar_if_error_llave -> . IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE LLAVEA bloque_codigo
    (55) declarar_if_error_llave -> . IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE bloque_codigo LLAVEC
    (56) declarar_if_error_llave -> . PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE LLAVEA bloque_codigo LLAVEC
    (57) declarar_if_error_llave -> . ID PA condicion PC LLAVEA bloque_codigo LLAVEC
    (58) declarar_if_error_llave -> . ID PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE LLAVEA bloque_codigo LLAVEC
    (59) declarar_if_error_llave -> . IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC LLAVEA bloque_codigo LLAVEC
    (34) tipo_dato -> . IFINT
    (35) tipo_dato -> . STRIFING
    (36) tipo_dato -> . AFARRAFAY
    (37) tipo_dato -> . STRUFUCT
    (38) tipo_dato -> . VOFOIFID
    (39) tipo_dato -> . CHAFAR
    (40) tipo_dato -> . BOFOOFOL
    (41) tipo_dato -> . FLOFOAFAT
    (64) declaracion_error -> . ID PYC
    (65) declaracion_error -> . ID ASG ID operacion_matematica ID PYC
    (66) declaracion_error -> . ID ASG dato PYC
    (67) declaracion_error -> . ID ID PYC
    (68) declaracion_error -> . ID ID ASG ID operacion_matematica ID PYC
    (69) declaracion_error -> . ID ID ASG valores PYC
    (70) declaracion_error -> . ID ID dimensiones PYC
    (71) declaracion_error -> . ID dimensiones PYC
    (90) declaracion_while_error -> . PA condicion PC LLAVEA bloque_codigo LLAVEC
    (91) declaracion_while_error -> . ID PA condicion PC LLAVEA bloque_codigo LLAVEC
    (92) declaracion_while_error -> . WHIFILEFE PA condicion PC bloque_codigo LLAVEC
    (93) declaracion_while_error -> . WHIFILEFE PA condicion PC LLAVEA bloque_codigo

    VACIO           shift and go to state 83
    IFIF            shift and go to state 84
    AFARRAFAY       shift and go to state 88
    STRUF           shift and go to state 90
    ID              shift and go to state 87
    PRIFINT         shift and go to state 91
    IFINPUFUT       shift and go to state 92
    WHIFILEFE       shift and go to state 93
    PA              shift and go to state 73
    IFINT           shift and go to state 23
    STRIFING        shift and go to state 24
    STRUFUCT        shift and go to state 26
    VOFOIFID        shift and go to state 27
    CHAFAR          shift and go to state 28
    BOFOOFOL        shift and go to state 29
    FLOFOAFAT       shift and go to state 30

    tipo_dato                      shift and go to state 86
    bloque_codigo                  shift and go to state 150
    declarar_if                    shift and go to state 75
    declaracion                    shift and go to state 76
    asignar_estructuras            shift and go to state 77
    asignar_array                  shift and go to state 78
    funcion                        shift and go to state 79
    print                          shift and go to state 80
    input                          shift and go to state 81
    declaracion_while              shift and go to state 82
    declarar_if_error_llave        shift and go to state 85
    declaracion_error              shift and go to state 89
    declaracion_while_error        shift and go to state 94

state 106

    (17) declarar_funciones -> FUNCTION ID PA tipo_dato ID PC . LLAVEA bloque_codigo REFETUFURN PYC LLAVEC

    LLAVEA          shift and go to state 151


state 107

    (19) declarar_funciones -> FUNCTION ID PA tipo_dato ID COMA . tipo_dato ID PC LLAVEA bloque_codigo REFETUFURN PYC LLAVEC
    (34) tipo_dato -> . IFINT
    (35) tipo_dato -> . STRIFING
    (36) tipo_dato -> . AFARRAFAY
    (37) tipo_dato -> . STRUFUCT
    (38) tipo_dato -> . VOFOIFID
    (39) tipo_dato -> . CHAFAR
    (40) tipo_dato -> . BOFOOFOL
    (41) tipo_dato -> . FLOFOAFAT

    IFINT           shift and go to state 23
    STRIFING        shift and go to state 24
    AFARRAFAY       shift and go to state 25
    STRUFUCT        shift and go to state 26
    VOFOIFID        shift and go to state 27
    CHAFAR          shift and go to state 28
    BOFOOFOL        shift and go to state 29
    FLOFOAFAT       shift and go to state 30

    tipo_dato                      shift and go to state 152

state 108

    (18) declarar_funciones -> FUNCTION ID PA PC LLAVEA bloque_codigo . REFETUFURN PYC LLAVEC

    REFETUFURN      shift and go to state 153


state 109

    (24) declarar_main -> IFINT MAFAIFIN PA PC LLAVEA bloque_codigo . REFETUFURN PYC LLAVEC
    (27) declarar_main_error -> IFINT MAFAIFIN PA PC LLAVEA bloque_codigo . LLAVEC
    (33) declarar_main_error -> IFINT MAFAIFIN PA PC LLAVEA bloque_codigo . ID PYC LLAVEC

    REFETUFURN      shift and go to state 154
    LLAVEC          shift and go to state 155
    ID              shift and go to state 156


state 110

    (56) declarar_if_error_llave -> PA condicion . PC LLAVEA bloque_codigo LLAVEC EFELSEFE LLAVEA bloque_codigo LLAVEC
    (90) declaracion_while_error -> PA condicion . PC LLAVEA bloque_codigo LLAVEC

    PC              shift and go to state 157


state 111

    (94) condicion -> ID . operadores ID
    (113) operadores -> . MEN
    (114) operadores -> . MAY
    (115) operadores -> . MENIG
    (116) operadores -> . MAYIG
    (117) operadores -> . CMP
    (118) operadores -> . DIF

    MEN             shift and go to state 159
    MAY             shift and go to state 160
    MENIG           shift and go to state 161
    MAYIG           shift and go to state 162
    CMP             shift and go to state 163
    DIF             shift and go to state 164

    operadores                     shift and go to state 158

state 112

    (29) declarar_main_error -> IFINT PA PC LLAVEA bloque_codigo REFETUFURN . PYC LLAVEC

    PYC             shift and go to state 165


state 113

    (42) bloque_codigo -> declarar_if bloque_codigo .

    REFETUFURN      reduce using rule 42 (bloque_codigo -> declarar_if bloque_codigo .)
    LLAVEC          reduce using rule 42 (bloque_codigo -> declarar_if bloque_codigo .)
    ID              reduce using rule 42 (bloque_codigo -> declarar_if bloque_codigo .)
    VACIO           reduce using rule 42 (bloque_codigo -> declarar_if bloque_codigo .)
    IFIF            reduce using rule 42 (bloque_codigo -> declarar_if bloque_codigo .)
    AFARRAFAY       reduce using rule 42 (bloque_codigo -> declarar_if bloque_codigo .)
    STRUF           reduce using rule 42 (bloque_codigo -> declarar_if bloque_codigo .)
    PRIFINT         reduce using rule 42 (bloque_codigo -> declarar_if bloque_codigo .)
    IFINPUFUT       reduce using rule 42 (bloque_codigo -> declarar_if bloque_codigo .)
    WHIFILEFE       reduce using rule 42 (bloque_codigo -> declarar_if bloque_codigo .)
    PA              reduce using rule 42 (bloque_codigo -> declarar_if bloque_codigo .)
    IFINT           reduce using rule 42 (bloque_codigo -> declarar_if bloque_codigo .)
    STRIFING        reduce using rule 42 (bloque_codigo -> declarar_if bloque_codigo .)
    STRUFUCT        reduce using rule 42 (bloque_codigo -> declarar_if bloque_codigo .)
    VOFOIFID        reduce using rule 42 (bloque_codigo -> declarar_if bloque_codigo .)
    CHAFAR          reduce using rule 42 (bloque_codigo -> declarar_if bloque_codigo .)
    BOFOOFOL        reduce using rule 42 (bloque_codigo -> declarar_if bloque_codigo .)
    FLOFOAFAT       reduce using rule 42 (bloque_codigo -> declarar_if bloque_codigo .)


state 114

    (43) bloque_codigo -> declaracion bloque_codigo .

    REFETUFURN      reduce using rule 43 (bloque_codigo -> declaracion bloque_codigo .)
    LLAVEC          reduce using rule 43 (bloque_codigo -> declaracion bloque_codigo .)
    ID              reduce using rule 43 (bloque_codigo -> declaracion bloque_codigo .)
    VACIO           reduce using rule 43 (bloque_codigo -> declaracion bloque_codigo .)
    IFIF            reduce using rule 43 (bloque_codigo -> declaracion bloque_codigo .)
    AFARRAFAY       reduce using rule 43 (bloque_codigo -> declaracion bloque_codigo .)
    STRUF           reduce using rule 43 (bloque_codigo -> declaracion bloque_codigo .)
    PRIFINT         reduce using rule 43 (bloque_codigo -> declaracion bloque_codigo .)
    IFINPUFUT       reduce using rule 43 (bloque_codigo -> declaracion bloque_codigo .)
    WHIFILEFE       reduce using rule 43 (bloque_codigo -> declaracion bloque_codigo .)
    PA              reduce using rule 43 (bloque_codigo -> declaracion bloque_codigo .)
    IFINT           reduce using rule 43 (bloque_codigo -> declaracion bloque_codigo .)
    STRIFING        reduce using rule 43 (bloque_codigo -> declaracion bloque_codigo .)
    STRUFUCT        reduce using rule 43 (bloque_codigo -> declaracion bloque_codigo .)
    VOFOIFID        reduce using rule 43 (bloque_codigo -> declaracion bloque_codigo .)
    CHAFAR          reduce using rule 43 (bloque_codigo -> declaracion bloque_codigo .)
    BOFOOFOL        reduce using rule 43 (bloque_codigo -> declaracion bloque_codigo .)
    FLOFOAFAT       reduce using rule 43 (bloque_codigo -> declaracion bloque_codigo .)


state 115

    (44) bloque_codigo -> asignar_estructuras bloque_codigo .

    REFETUFURN      reduce using rule 44 (bloque_codigo -> asignar_estructuras bloque_codigo .)
    LLAVEC          reduce using rule 44 (bloque_codigo -> asignar_estructuras bloque_codigo .)
    ID              reduce using rule 44 (bloque_codigo -> asignar_estructuras bloque_codigo .)
    VACIO           reduce using rule 44 (bloque_codigo -> asignar_estructuras bloque_codigo .)
    IFIF            reduce using rule 44 (bloque_codigo -> asignar_estructuras bloque_codigo .)
    AFARRAFAY       reduce using rule 44 (bloque_codigo -> asignar_estructuras bloque_codigo .)
    STRUF           reduce using rule 44 (bloque_codigo -> asignar_estructuras bloque_codigo .)
    PRIFINT         reduce using rule 44 (bloque_codigo -> asignar_estructuras bloque_codigo .)
    IFINPUFUT       reduce using rule 44 (bloque_codigo -> asignar_estructuras bloque_codigo .)
    WHIFILEFE       reduce using rule 44 (bloque_codigo -> asignar_estructuras bloque_codigo .)
    PA              reduce using rule 44 (bloque_codigo -> asignar_estructuras bloque_codigo .)
    IFINT           reduce using rule 44 (bloque_codigo -> asignar_estructuras bloque_codigo .)
    STRIFING        reduce using rule 44 (bloque_codigo -> asignar_estructuras bloque_codigo .)
    STRUFUCT        reduce using rule 44 (bloque_codigo -> asignar_estructuras bloque_codigo .)
    VOFOIFID        reduce using rule 44 (bloque_codigo -> asignar_estructuras bloque_codigo .)
    CHAFAR          reduce using rule 44 (bloque_codigo -> asignar_estructuras bloque_codigo .)
    BOFOOFOL        reduce using rule 44 (bloque_codigo -> asignar_estructuras bloque_codigo .)
    FLOFOAFAT       reduce using rule 44 (bloque_codigo -> asignar_estructuras bloque_codigo .)


state 116

    (45) bloque_codigo -> asignar_array bloque_codigo .

    REFETUFURN      reduce using rule 45 (bloque_codigo -> asignar_array bloque_codigo .)
    LLAVEC          reduce using rule 45 (bloque_codigo -> asignar_array bloque_codigo .)
    ID              reduce using rule 45 (bloque_codigo -> asignar_array bloque_codigo .)
    VACIO           reduce using rule 45 (bloque_codigo -> asignar_array bloque_codigo .)
    IFIF            reduce using rule 45 (bloque_codigo -> asignar_array bloque_codigo .)
    AFARRAFAY       reduce using rule 45 (bloque_codigo -> asignar_array bloque_codigo .)
    STRUF           reduce using rule 45 (bloque_codigo -> asignar_array bloque_codigo .)
    PRIFINT         reduce using rule 45 (bloque_codigo -> asignar_array bloque_codigo .)
    IFINPUFUT       reduce using rule 45 (bloque_codigo -> asignar_array bloque_codigo .)
    WHIFILEFE       reduce using rule 45 (bloque_codigo -> asignar_array bloque_codigo .)
    PA              reduce using rule 45 (bloque_codigo -> asignar_array bloque_codigo .)
    IFINT           reduce using rule 45 (bloque_codigo -> asignar_array bloque_codigo .)
    STRIFING        reduce using rule 45 (bloque_codigo -> asignar_array bloque_codigo .)
    STRUFUCT        reduce using rule 45 (bloque_codigo -> asignar_array bloque_codigo .)
    VOFOIFID        reduce using rule 45 (bloque_codigo -> asignar_array bloque_codigo .)
    CHAFAR          reduce using rule 45 (bloque_codigo -> asignar_array bloque_codigo .)
    BOFOOFOL        reduce using rule 45 (bloque_codigo -> asignar_array bloque_codigo .)
    FLOFOAFAT       reduce using rule 45 (bloque_codigo -> asignar_array bloque_codigo .)


state 117

    (46) bloque_codigo -> funcion bloque_codigo .

    REFETUFURN      reduce using rule 46 (bloque_codigo -> funcion bloque_codigo .)
    LLAVEC          reduce using rule 46 (bloque_codigo -> funcion bloque_codigo .)
    ID              reduce using rule 46 (bloque_codigo -> funcion bloque_codigo .)
    VACIO           reduce using rule 46 (bloque_codigo -> funcion bloque_codigo .)
    IFIF            reduce using rule 46 (bloque_codigo -> funcion bloque_codigo .)
    AFARRAFAY       reduce using rule 46 (bloque_codigo -> funcion bloque_codigo .)
    STRUF           reduce using rule 46 (bloque_codigo -> funcion bloque_codigo .)
    PRIFINT         reduce using rule 46 (bloque_codigo -> funcion bloque_codigo .)
    IFINPUFUT       reduce using rule 46 (bloque_codigo -> funcion bloque_codigo .)
    WHIFILEFE       reduce using rule 46 (bloque_codigo -> funcion bloque_codigo .)
    PA              reduce using rule 46 (bloque_codigo -> funcion bloque_codigo .)
    IFINT           reduce using rule 46 (bloque_codigo -> funcion bloque_codigo .)
    STRIFING        reduce using rule 46 (bloque_codigo -> funcion bloque_codigo .)
    STRUFUCT        reduce using rule 46 (bloque_codigo -> funcion bloque_codigo .)
    VOFOIFID        reduce using rule 46 (bloque_codigo -> funcion bloque_codigo .)
    CHAFAR          reduce using rule 46 (bloque_codigo -> funcion bloque_codigo .)
    BOFOOFOL        reduce using rule 46 (bloque_codigo -> funcion bloque_codigo .)
    FLOFOAFAT       reduce using rule 46 (bloque_codigo -> funcion bloque_codigo .)


state 118

    (47) bloque_codigo -> print bloque_codigo .

    REFETUFURN      reduce using rule 47 (bloque_codigo -> print bloque_codigo .)
    LLAVEC          reduce using rule 47 (bloque_codigo -> print bloque_codigo .)
    ID              reduce using rule 47 (bloque_codigo -> print bloque_codigo .)
    VACIO           reduce using rule 47 (bloque_codigo -> print bloque_codigo .)
    IFIF            reduce using rule 47 (bloque_codigo -> print bloque_codigo .)
    AFARRAFAY       reduce using rule 47 (bloque_codigo -> print bloque_codigo .)
    STRUF           reduce using rule 47 (bloque_codigo -> print bloque_codigo .)
    PRIFINT         reduce using rule 47 (bloque_codigo -> print bloque_codigo .)
    IFINPUFUT       reduce using rule 47 (bloque_codigo -> print bloque_codigo .)
    WHIFILEFE       reduce using rule 47 (bloque_codigo -> print bloque_codigo .)
    PA              reduce using rule 47 (bloque_codigo -> print bloque_codigo .)
    IFINT           reduce using rule 47 (bloque_codigo -> print bloque_codigo .)
    STRIFING        reduce using rule 47 (bloque_codigo -> print bloque_codigo .)
    STRUFUCT        reduce using rule 47 (bloque_codigo -> print bloque_codigo .)
    VOFOIFID        reduce using rule 47 (bloque_codigo -> print bloque_codigo .)
    CHAFAR          reduce using rule 47 (bloque_codigo -> print bloque_codigo .)
    BOFOOFOL        reduce using rule 47 (bloque_codigo -> print bloque_codigo .)
    FLOFOAFAT       reduce using rule 47 (bloque_codigo -> print bloque_codigo .)


state 119

    (48) bloque_codigo -> input bloque_codigo .

    REFETUFURN      reduce using rule 48 (bloque_codigo -> input bloque_codigo .)
    LLAVEC          reduce using rule 48 (bloque_codigo -> input bloque_codigo .)
    ID              reduce using rule 48 (bloque_codigo -> input bloque_codigo .)
    VACIO           reduce using rule 48 (bloque_codigo -> input bloque_codigo .)
    IFIF            reduce using rule 48 (bloque_codigo -> input bloque_codigo .)
    AFARRAFAY       reduce using rule 48 (bloque_codigo -> input bloque_codigo .)
    STRUF           reduce using rule 48 (bloque_codigo -> input bloque_codigo .)
    PRIFINT         reduce using rule 48 (bloque_codigo -> input bloque_codigo .)
    IFINPUFUT       reduce using rule 48 (bloque_codigo -> input bloque_codigo .)
    WHIFILEFE       reduce using rule 48 (bloque_codigo -> input bloque_codigo .)
    PA              reduce using rule 48 (bloque_codigo -> input bloque_codigo .)
    IFINT           reduce using rule 48 (bloque_codigo -> input bloque_codigo .)
    STRIFING        reduce using rule 48 (bloque_codigo -> input bloque_codigo .)
    STRUFUCT        reduce using rule 48 (bloque_codigo -> input bloque_codigo .)
    VOFOIFID        reduce using rule 48 (bloque_codigo -> input bloque_codigo .)
    CHAFAR          reduce using rule 48 (bloque_codigo -> input bloque_codigo .)
    BOFOOFOL        reduce using rule 48 (bloque_codigo -> input bloque_codigo .)
    FLOFOAFAT       reduce using rule 48 (bloque_codigo -> input bloque_codigo .)


state 120

    (49) bloque_codigo -> declaracion_while bloque_codigo .

    REFETUFURN      reduce using rule 49 (bloque_codigo -> declaracion_while bloque_codigo .)
    LLAVEC          reduce using rule 49 (bloque_codigo -> declaracion_while bloque_codigo .)
    ID              reduce using rule 49 (bloque_codigo -> declaracion_while bloque_codigo .)
    VACIO           reduce using rule 49 (bloque_codigo -> declaracion_while bloque_codigo .)
    IFIF            reduce using rule 49 (bloque_codigo -> declaracion_while bloque_codigo .)
    AFARRAFAY       reduce using rule 49 (bloque_codigo -> declaracion_while bloque_codigo .)
    STRUF           reduce using rule 49 (bloque_codigo -> declaracion_while bloque_codigo .)
    PRIFINT         reduce using rule 49 (bloque_codigo -> declaracion_while bloque_codigo .)
    IFINPUFUT       reduce using rule 49 (bloque_codigo -> declaracion_while bloque_codigo .)
    WHIFILEFE       reduce using rule 49 (bloque_codigo -> declaracion_while bloque_codigo .)
    PA              reduce using rule 49 (bloque_codigo -> declaracion_while bloque_codigo .)
    IFINT           reduce using rule 49 (bloque_codigo -> declaracion_while bloque_codigo .)
    STRIFING        reduce using rule 49 (bloque_codigo -> declaracion_while bloque_codigo .)
    STRUFUCT        reduce using rule 49 (bloque_codigo -> declaracion_while bloque_codigo .)
    VOFOIFID        reduce using rule 49 (bloque_codigo -> declaracion_while bloque_codigo .)
    CHAFAR          reduce using rule 49 (bloque_codigo -> declaracion_while bloque_codigo .)
    BOFOOFOL        reduce using rule 49 (bloque_codigo -> declaracion_while bloque_codigo .)
    FLOFOAFAT       reduce using rule 49 (bloque_codigo -> declaracion_while bloque_codigo .)


state 121

    (51) declarar_if -> IFIF PA . condicion PC LLAVEA bloque_codigo LLAVEC
    (52) declarar_if -> IFIF PA . condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE LLAVEA bloque_codigo LLAVEC
    (54) declarar_if_error_llave -> IFIF PA . condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE LLAVEA bloque_codigo
    (55) declarar_if_error_llave -> IFIF PA . condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE bloque_codigo LLAVEC
    (59) declarar_if_error_llave -> IFIF PA . condicion PC LLAVEA bloque_codigo LLAVEC LLAVEA bloque_codigo LLAVEC
    (94) condicion -> . ID operadores ID

    ID              shift and go to state 111

    condicion                      shift and go to state 166

state 122

    (60) declaracion -> tipo_dato ID . ASG ID operacion_matematica ID PYC
    (61) declaracion -> tipo_dato ID . ASG dato PYC

    ASG             shift and go to state 167


state 123

    (67) declaracion_error -> ID ID . PYC
    (68) declaracion_error -> ID ID . ASG ID operacion_matematica ID PYC
    (69) declaracion_error -> ID ID . ASG valores PYC
    (70) declaracion_error -> ID ID . dimensiones PYC
    (72) dimensiones -> . dimension dimensiones
    (73) dimensiones -> . VACIO
    (74) dimension -> . CA INT CC
    (75) dimension -> . dimension_error
    (76) dimension_error -> . CA CC
    (77) dimension_error -> . CA ID CC
    (78) dimension_error -> . CA REAL CC
    (79) dimension_error -> . CA PCC CC
    (80) dimension_error -> . CA CHAR CC

    PYC             shift and go to state 168
    ASG             shift and go to state 169
    VACIO           shift and go to state 129
    CA              shift and go to state 130

    dimensiones                    shift and go to state 170
    dimension                      shift and go to state 128
    dimension_error                shift and go to state 131

state 124

    (81) asignar_array -> ID dimensiones . ASG dato PYC
    (71) declaracion_error -> ID dimensiones . PYC

    ASG             shift and go to state 171
    PYC             shift and go to state 172


state 125

    (65) declaracion_error -> ID ASG . ID operacion_matematica ID PYC
    (66) declaracion_error -> ID ASG . dato PYC
    (107) dato -> . INT
    (108) dato -> . CHAR
    (109) dato -> . TRUFUEFE
    (110) dato -> . FAFALSEFE
    (111) dato -> . PCC
    (112) dato -> . REAL

    ID              shift and go to state 173
    INT             shift and go to state 175
    CHAR            shift and go to state 176
    TRUFUEFE        shift and go to state 177
    FAFALSEFE       shift and go to state 178
    PCC             shift and go to state 179
    REAL            shift and go to state 180

    dato                           shift and go to state 174

state 126

    (64) declaracion_error -> ID PYC .

    VACIO           reduce using rule 64 (declaracion_error -> ID PYC .)
    IFIF            reduce using rule 64 (declaracion_error -> ID PYC .)
    AFARRAFAY       reduce using rule 64 (declaracion_error -> ID PYC .)
    STRUF           reduce using rule 64 (declaracion_error -> ID PYC .)
    ID              reduce using rule 64 (declaracion_error -> ID PYC .)
    PRIFINT         reduce using rule 64 (declaracion_error -> ID PYC .)
    IFINPUFUT       reduce using rule 64 (declaracion_error -> ID PYC .)
    WHIFILEFE       reduce using rule 64 (declaracion_error -> ID PYC .)
    PA              reduce using rule 64 (declaracion_error -> ID PYC .)
    IFINT           reduce using rule 64 (declaracion_error -> ID PYC .)
    STRIFING        reduce using rule 64 (declaracion_error -> ID PYC .)
    STRUFUCT        reduce using rule 64 (declaracion_error -> ID PYC .)
    VOFOIFID        reduce using rule 64 (declaracion_error -> ID PYC .)
    CHAFAR          reduce using rule 64 (declaracion_error -> ID PYC .)
    BOFOOFOL        reduce using rule 64 (declaracion_error -> ID PYC .)
    FLOFOAFAT       reduce using rule 64 (declaracion_error -> ID PYC .)


state 127

    (83) funcion -> ID PA . valores PC PYC
    (84) funcion -> ID PA . PC PYC
    (85) funcion -> ID PA . valores COMA valores PC PYC
    (57) declarar_if_error_llave -> ID PA . condicion PC LLAVEA bloque_codigo LLAVEC
    (58) declarar_if_error_llave -> ID PA . condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE LLAVEA bloque_codigo LLAVEC
    (91) declaracion_while_error -> ID PA . condicion PC LLAVEA bloque_codigo LLAVEC
    (101) valores -> . INT
    (102) valores -> . CHAR
    (103) valores -> . TRUFUEFE
    (104) valores -> . FAFALSEFE
    (105) valores -> . PCC
    (106) valores -> . ID
    (94) condicion -> . ID operadores ID

    PC              shift and go to state 183
    INT             shift and go to state 185
    CHAR            shift and go to state 186
    TRUFUEFE        shift and go to state 187
    FAFALSEFE       shift and go to state 188
    PCC             shift and go to state 189
    ID              shift and go to state 181

    valores                        shift and go to state 182
    condicion                      shift and go to state 184

state 128

    (72) dimensiones -> dimension . dimensiones
    (72) dimensiones -> . dimension dimensiones
    (73) dimensiones -> . VACIO
    (74) dimension -> . CA INT CC
    (75) dimension -> . dimension_error
    (76) dimension_error -> . CA CC
    (77) dimension_error -> . CA ID CC
    (78) dimension_error -> . CA REAL CC
    (79) dimension_error -> . CA PCC CC
    (80) dimension_error -> . CA CHAR CC

    VACIO           shift and go to state 129
    CA              shift and go to state 130

    dimension                      shift and go to state 128
    dimensiones                    shift and go to state 190
    dimension_error                shift and go to state 131

state 129

    (73) dimensiones -> VACIO .

    ASG             reduce using rule 73 (dimensiones -> VACIO .)
    PYC             reduce using rule 73 (dimensiones -> VACIO .)


state 130

    (74) dimension -> CA . INT CC
    (76) dimension_error -> CA . CC
    (77) dimension_error -> CA . ID CC
    (78) dimension_error -> CA . REAL CC
    (79) dimension_error -> CA . PCC CC
    (80) dimension_error -> CA . CHAR CC

    INT             shift and go to state 191
    CC              shift and go to state 192
    ID              shift and go to state 193
    REAL            shift and go to state 194
    PCC             shift and go to state 195
    CHAR            shift and go to state 196


state 131

    (75) dimension -> dimension_error .

    VACIO           reduce using rule 75 (dimension -> dimension_error .)
    CA              reduce using rule 75 (dimension -> dimension_error .)


state 132

    (62) declaracion -> AFARRAFAY ID . dimensiones PYC
    (72) dimensiones -> . dimension dimensiones
    (73) dimensiones -> . VACIO
    (74) dimension -> . CA INT CC
    (75) dimension -> . dimension_error
    (76) dimension_error -> . CA CC
    (77) dimension_error -> . CA ID CC
    (78) dimension_error -> . CA REAL CC
    (79) dimension_error -> . CA PCC CC
    (80) dimension_error -> . CA CHAR CC

    VACIO           shift and go to state 129
    CA              shift and go to state 130

    dimensiones                    shift and go to state 197
    dimension                      shift and go to state 128
    dimension_error                shift and go to state 131

state 133

    (82) asignar_estructuras -> STRUF ID . PUNTO ID ASG dato PYC

    PUNTO           shift and go to state 198


state 134

    (86) print -> PRIFINT PA . ID PC PYC

    ID              shift and go to state 199


state 135

    (87) input -> IFINPUFUT PA . ID PC PYC

    ID              shift and go to state 200


state 136

    (88) declaracion_while -> WHIFILEFE PA . condicion PC LLAVEA bloque_codigo LLAVEC
    (92) declaracion_while_error -> WHIFILEFE PA . condicion PC bloque_codigo LLAVEC
    (93) declaracion_while_error -> WHIFILEFE PA . condicion PC LLAVEA bloque_codigo
    (94) condicion -> . ID operadores ID

    ID              shift and go to state 111

    condicion                      shift and go to state 201

state 137

    (30) declarar_main_error -> IFINT ID PA PC LLAVEA bloque_codigo . REFETUFURN PYC LLAVEC

    REFETUFURN      shift and go to state 202


state 138

    (26) declarar_main_error -> MAFAIFIN PA PC LLAVEA bloque_codigo REFETUFURN . PYC LLAVEC

    PYC             shift and go to state 203


state 139

    (28) declarar_main_error -> MAFAIFIN PA PC LLAVEA bloque_codigo LLAVEC .

    $end            reduce using rule 28 (declarar_main_error -> MAFAIFIN PA PC LLAVEA bloque_codigo LLAVEC .)


state 140

    (12) declarar_estructuras_error -> STRUFUCT ID LLAVEA ID PYC ID PYC . LLAVEC

    LLAVEC          shift and go to state 204


state 141

    (5) declarar_estructuras -> STRUFUCT ID LLAVEA tipo_dato ID PYC tipo_dato . ID PYC LLAVEC
    (10) declarar_estructuras_error -> STRUFUCT ID LLAVEA tipo_dato ID PYC tipo_dato . PYC LLAVEC
    (13) declarar_estructuras_error -> STRUFUCT ID LLAVEA tipo_dato ID PYC tipo_dato . ID PYC tipo_dato ID PYC LLAVEC

    ID              shift and go to state 205
    PYC             shift and go to state 206


state 142

    (9) declarar_estructuras_error -> STRUFUCT ID LLAVEA tipo_dato PYC tipo_dato ID . PYC LLAVEC

    PYC             shift and go to state 207


state 143

    (11) declarar_estructuras_error -> STRUFUCT ID LLAVEA tipo_dato PYC tipo_dato PYC . LLAVEC

    LLAVEC          shift and go to state 208


state 144

    (8) declarar_estructuras_error -> ID ID LLAVEA tipo_dato ID PYC tipo_dato . ID PYC LLAVEC

    ID              shift and go to state 209


state 145

    (32) declarar_main_error -> ID ID PA PC LLAVEA bloque_codigo REFETUFURN . PYC LLAVEC

    PYC             shift and go to state 210


state 146

    (7) declarar_estructuras_error -> ID LLAVEA tipo_dato ID PYC tipo_dato ID . PYC LLAVEC

    PYC             shift and go to state 211


state 147

    (31) declarar_main_error -> ID MAFAIFIN PA PC LLAVEA bloque_codigo REFETUFURN . PYC LLAVEC

    PYC             shift and go to state 212


state 148

    (14) declarar_funciones -> FUNCTION tipo_dato ID PA tipo_dato ID PC . LLAVEA bloque_codigo REFETUFURN ID PYC LLAVEC
    (22) declarar_funciones_error -> FUNCTION tipo_dato ID PA tipo_dato ID PC . LLAVEA bloque_codigo REFETUFURN PYC LLAVEC

    LLAVEA          shift and go to state 213


state 149

    (16) declarar_funciones -> FUNCTION tipo_dato ID PA tipo_dato ID COMA . tipo_dato ID PC LLAVEA bloque_codigo REFETUFURN ID PYC LLAVEC
    (21) declarar_funciones_error -> FUNCTION tipo_dato ID PA tipo_dato ID COMA . tipo_dato ID PC LLAVEA bloque_codigo REFETUFURN PYC LLAVEC
    (34) tipo_dato -> . IFINT
    (35) tipo_dato -> . STRIFING
    (36) tipo_dato -> . AFARRAFAY
    (37) tipo_dato -> . STRUFUCT
    (38) tipo_dato -> . VOFOIFID
    (39) tipo_dato -> . CHAFAR
    (40) tipo_dato -> . BOFOOFOL
    (41) tipo_dato -> . FLOFOAFAT

    IFINT           shift and go to state 23
    STRIFING        shift and go to state 24
    AFARRAFAY       shift and go to state 25
    STRUFUCT        shift and go to state 26
    VOFOIFID        shift and go to state 27
    CHAFAR          shift and go to state 28
    BOFOOFOL        shift and go to state 29
    FLOFOAFAT       shift and go to state 30

    tipo_dato                      shift and go to state 214

state 150

    (15) declarar_funciones -> FUNCTION tipo_dato ID PA PC LLAVEA bloque_codigo . REFETUFURN ID PYC LLAVEC
    (23) declarar_funciones_error -> FUNCTION tipo_dato ID PA PC LLAVEA bloque_codigo . REFETUFURN PYC LLAVEC

    REFETUFURN      shift and go to state 215


state 151

    (17) declarar_funciones -> FUNCTION ID PA tipo_dato ID PC LLAVEA . bloque_codigo REFETUFURN PYC LLAVEC
    (42) bloque_codigo -> . declarar_if bloque_codigo
    (43) bloque_codigo -> . declaracion bloque_codigo
    (44) bloque_codigo -> . asignar_estructuras bloque_codigo
    (45) bloque_codigo -> . asignar_array bloque_codigo
    (46) bloque_codigo -> . funcion bloque_codigo
    (47) bloque_codigo -> . print bloque_codigo
    (48) bloque_codigo -> . input bloque_codigo
    (49) bloque_codigo -> . declaracion_while bloque_codigo
    (50) bloque_codigo -> . VACIO
    (51) declarar_if -> . IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC
    (52) declarar_if -> . IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE LLAVEA bloque_codigo LLAVEC
    (53) declarar_if -> . declarar_if_error_llave
    (60) declaracion -> . tipo_dato ID ASG ID operacion_matematica ID PYC
    (61) declaracion -> . tipo_dato ID ASG dato PYC
    (62) declaracion -> . AFARRAFAY ID dimensiones PYC
    (63) declaracion -> . declaracion_error
    (82) asignar_estructuras -> . STRUF ID PUNTO ID ASG dato PYC
    (81) asignar_array -> . ID dimensiones ASG dato PYC
    (83) funcion -> . ID PA valores PC PYC
    (84) funcion -> . ID PA PC PYC
    (85) funcion -> . ID PA valores COMA valores PC PYC
    (86) print -> . PRIFINT PA ID PC PYC
    (87) input -> . IFINPUFUT PA ID PC PYC
    (88) declaracion_while -> . WHIFILEFE PA condicion PC LLAVEA bloque_codigo LLAVEC
    (89) declaracion_while -> . declaracion_while_error
    (54) declarar_if_error_llave -> . IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE LLAVEA bloque_codigo
    (55) declarar_if_error_llave -> . IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE bloque_codigo LLAVEC
    (56) declarar_if_error_llave -> . PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE LLAVEA bloque_codigo LLAVEC
    (57) declarar_if_error_llave -> . ID PA condicion PC LLAVEA bloque_codigo LLAVEC
    (58) declarar_if_error_llave -> . ID PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE LLAVEA bloque_codigo LLAVEC
    (59) declarar_if_error_llave -> . IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC LLAVEA bloque_codigo LLAVEC
    (34) tipo_dato -> . IFINT
    (35) tipo_dato -> . STRIFING
    (36) tipo_dato -> . AFARRAFAY
    (37) tipo_dato -> . STRUFUCT
    (38) tipo_dato -> . VOFOIFID
    (39) tipo_dato -> . CHAFAR
    (40) tipo_dato -> . BOFOOFOL
    (41) tipo_dato -> . FLOFOAFAT
    (64) declaracion_error -> . ID PYC
    (65) declaracion_error -> . ID ASG ID operacion_matematica ID PYC
    (66) declaracion_error -> . ID ASG dato PYC
    (67) declaracion_error -> . ID ID PYC
    (68) declaracion_error -> . ID ID ASG ID operacion_matematica ID PYC
    (69) declaracion_error -> . ID ID ASG valores PYC
    (70) declaracion_error -> . ID ID dimensiones PYC
    (71) declaracion_error -> . ID dimensiones PYC
    (90) declaracion_while_error -> . PA condicion PC LLAVEA bloque_codigo LLAVEC
    (91) declaracion_while_error -> . ID PA condicion PC LLAVEA bloque_codigo LLAVEC
    (92) declaracion_while_error -> . WHIFILEFE PA condicion PC bloque_codigo LLAVEC
    (93) declaracion_while_error -> . WHIFILEFE PA condicion PC LLAVEA bloque_codigo

    VACIO           shift and go to state 83
    IFIF            shift and go to state 84
    AFARRAFAY       shift and go to state 88
    STRUF           shift and go to state 90
    ID              shift and go to state 87
    PRIFINT         shift and go to state 91
    IFINPUFUT       shift and go to state 92
    WHIFILEFE       shift and go to state 93
    PA              shift and go to state 73
    IFINT           shift and go to state 23
    STRIFING        shift and go to state 24
    STRUFUCT        shift and go to state 26
    VOFOIFID        shift and go to state 27
    CHAFAR          shift and go to state 28
    BOFOOFOL        shift and go to state 29
    FLOFOAFAT       shift and go to state 30

    tipo_dato                      shift and go to state 86
    bloque_codigo                  shift and go to state 216
    declarar_if                    shift and go to state 75
    declaracion                    shift and go to state 76
    asignar_estructuras            shift and go to state 77
    asignar_array                  shift and go to state 78
    funcion                        shift and go to state 79
    print                          shift and go to state 80
    input                          shift and go to state 81
    declaracion_while              shift and go to state 82
    declarar_if_error_llave        shift and go to state 85
    declaracion_error              shift and go to state 89
    declaracion_while_error        shift and go to state 94

state 152

    (19) declarar_funciones -> FUNCTION ID PA tipo_dato ID COMA tipo_dato . ID PC LLAVEA bloque_codigo REFETUFURN PYC LLAVEC

    ID              shift and go to state 217


state 153

    (18) declarar_funciones -> FUNCTION ID PA PC LLAVEA bloque_codigo REFETUFURN . PYC LLAVEC

    PYC             shift and go to state 218


state 154

    (24) declarar_main -> IFINT MAFAIFIN PA PC LLAVEA bloque_codigo REFETUFURN . PYC LLAVEC

    PYC             shift and go to state 219


state 155

    (27) declarar_main_error -> IFINT MAFAIFIN PA PC LLAVEA bloque_codigo LLAVEC .

    $end            reduce using rule 27 (declarar_main_error -> IFINT MAFAIFIN PA PC LLAVEA bloque_codigo LLAVEC .)


state 156

    (33) declarar_main_error -> IFINT MAFAIFIN PA PC LLAVEA bloque_codigo ID . PYC LLAVEC

    PYC             shift and go to state 220


state 157

    (56) declarar_if_error_llave -> PA condicion PC . LLAVEA bloque_codigo LLAVEC EFELSEFE LLAVEA bloque_codigo LLAVEC
    (90) declaracion_while_error -> PA condicion PC . LLAVEA bloque_codigo LLAVEC

    LLAVEA          shift and go to state 221


state 158

    (94) condicion -> ID operadores . ID

    ID              shift and go to state 222


state 159

    (113) operadores -> MEN .

    ID              reduce using rule 113 (operadores -> MEN .)


state 160

    (114) operadores -> MAY .

    ID              reduce using rule 114 (operadores -> MAY .)


state 161

    (115) operadores -> MENIG .

    ID              reduce using rule 115 (operadores -> MENIG .)


state 162

    (116) operadores -> MAYIG .

    ID              reduce using rule 116 (operadores -> MAYIG .)


state 163

    (117) operadores -> CMP .

    ID              reduce using rule 117 (operadores -> CMP .)


state 164

    (118) operadores -> DIF .

    ID              reduce using rule 118 (operadores -> DIF .)


state 165

    (29) declarar_main_error -> IFINT PA PC LLAVEA bloque_codigo REFETUFURN PYC . LLAVEC

    LLAVEC          shift and go to state 223


state 166

    (51) declarar_if -> IFIF PA condicion . PC LLAVEA bloque_codigo LLAVEC
    (52) declarar_if -> IFIF PA condicion . PC LLAVEA bloque_codigo LLAVEC EFELSEFE LLAVEA bloque_codigo LLAVEC
    (54) declarar_if_error_llave -> IFIF PA condicion . PC LLAVEA bloque_codigo LLAVEC EFELSEFE LLAVEA bloque_codigo
    (55) declarar_if_error_llave -> IFIF PA condicion . PC LLAVEA bloque_codigo LLAVEC EFELSEFE bloque_codigo LLAVEC
    (59) declarar_if_error_llave -> IFIF PA condicion . PC LLAVEA bloque_codigo LLAVEC LLAVEA bloque_codigo LLAVEC

    PC              shift and go to state 224


state 167

    (60) declaracion -> tipo_dato ID ASG . ID operacion_matematica ID PYC
    (61) declaracion -> tipo_dato ID ASG . dato PYC
    (107) dato -> . INT
    (108) dato -> . CHAR
    (109) dato -> . TRUFUEFE
    (110) dato -> . FAFALSEFE
    (111) dato -> . PCC
    (112) dato -> . REAL

    ID              shift and go to state 225
    INT             shift and go to state 175
    CHAR            shift and go to state 176
    TRUFUEFE        shift and go to state 177
    FAFALSEFE       shift and go to state 178
    PCC             shift and go to state 179
    REAL            shift and go to state 180

    dato                           shift and go to state 226

state 168

    (67) declaracion_error -> ID ID PYC .

    VACIO           reduce using rule 67 (declaracion_error -> ID ID PYC .)
    IFIF            reduce using rule 67 (declaracion_error -> ID ID PYC .)
    AFARRAFAY       reduce using rule 67 (declaracion_error -> ID ID PYC .)
    STRUF           reduce using rule 67 (declaracion_error -> ID ID PYC .)
    ID              reduce using rule 67 (declaracion_error -> ID ID PYC .)
    PRIFINT         reduce using rule 67 (declaracion_error -> ID ID PYC .)
    IFINPUFUT       reduce using rule 67 (declaracion_error -> ID ID PYC .)
    WHIFILEFE       reduce using rule 67 (declaracion_error -> ID ID PYC .)
    PA              reduce using rule 67 (declaracion_error -> ID ID PYC .)
    IFINT           reduce using rule 67 (declaracion_error -> ID ID PYC .)
    STRIFING        reduce using rule 67 (declaracion_error -> ID ID PYC .)
    STRUFUCT        reduce using rule 67 (declaracion_error -> ID ID PYC .)
    VOFOIFID        reduce using rule 67 (declaracion_error -> ID ID PYC .)
    CHAFAR          reduce using rule 67 (declaracion_error -> ID ID PYC .)
    BOFOOFOL        reduce using rule 67 (declaracion_error -> ID ID PYC .)
    FLOFOAFAT       reduce using rule 67 (declaracion_error -> ID ID PYC .)


state 169

    (68) declaracion_error -> ID ID ASG . ID operacion_matematica ID PYC
    (69) declaracion_error -> ID ID ASG . valores PYC
    (101) valores -> . INT
    (102) valores -> . CHAR
    (103) valores -> . TRUFUEFE
    (104) valores -> . FAFALSEFE
    (105) valores -> . PCC
    (106) valores -> . ID

    ID              shift and go to state 227
    INT             shift and go to state 185
    CHAR            shift and go to state 186
    TRUFUEFE        shift and go to state 187
    FAFALSEFE       shift and go to state 188
    PCC             shift and go to state 189

    valores                        shift and go to state 228

state 170

    (70) declaracion_error -> ID ID dimensiones . PYC

    PYC             shift and go to state 229


state 171

    (81) asignar_array -> ID dimensiones ASG . dato PYC
    (107) dato -> . INT
    (108) dato -> . CHAR
    (109) dato -> . TRUFUEFE
    (110) dato -> . FAFALSEFE
    (111) dato -> . PCC
    (112) dato -> . REAL

    INT             shift and go to state 175
    CHAR            shift and go to state 176
    TRUFUEFE        shift and go to state 177
    FAFALSEFE       shift and go to state 178
    PCC             shift and go to state 179
    REAL            shift and go to state 180

    dato                           shift and go to state 230

state 172

    (71) declaracion_error -> ID dimensiones PYC .

    VACIO           reduce using rule 71 (declaracion_error -> ID dimensiones PYC .)
    IFIF            reduce using rule 71 (declaracion_error -> ID dimensiones PYC .)
    AFARRAFAY       reduce using rule 71 (declaracion_error -> ID dimensiones PYC .)
    STRUF           reduce using rule 71 (declaracion_error -> ID dimensiones PYC .)
    ID              reduce using rule 71 (declaracion_error -> ID dimensiones PYC .)
    PRIFINT         reduce using rule 71 (declaracion_error -> ID dimensiones PYC .)
    IFINPUFUT       reduce using rule 71 (declaracion_error -> ID dimensiones PYC .)
    WHIFILEFE       reduce using rule 71 (declaracion_error -> ID dimensiones PYC .)
    PA              reduce using rule 71 (declaracion_error -> ID dimensiones PYC .)
    IFINT           reduce using rule 71 (declaracion_error -> ID dimensiones PYC .)
    STRIFING        reduce using rule 71 (declaracion_error -> ID dimensiones PYC .)
    STRUFUCT        reduce using rule 71 (declaracion_error -> ID dimensiones PYC .)
    VOFOIFID        reduce using rule 71 (declaracion_error -> ID dimensiones PYC .)
    CHAFAR          reduce using rule 71 (declaracion_error -> ID dimensiones PYC .)
    BOFOOFOL        reduce using rule 71 (declaracion_error -> ID dimensiones PYC .)
    FLOFOAFAT       reduce using rule 71 (declaracion_error -> ID dimensiones PYC .)


state 173

    (65) declaracion_error -> ID ASG ID . operacion_matematica ID PYC
    (95) operacion_matematica -> . SUM
    (96) operacion_matematica -> . RES
    (97) operacion_matematica -> . MUL
    (98) operacion_matematica -> . DIV
    (99) operacion_matematica -> . RED
    (100) operacion_matematica -> . POT

    SUM             shift and go to state 232
    RES             shift and go to state 233
    MUL             shift and go to state 234
    DIV             shift and go to state 235
    RED             shift and go to state 236
    POT             shift and go to state 237

    operacion_matematica           shift and go to state 231

state 174

    (66) declaracion_error -> ID ASG dato . PYC

    PYC             shift and go to state 238


state 175

    (107) dato -> INT .

    PYC             reduce using rule 107 (dato -> INT .)


state 176

    (108) dato -> CHAR .

    PYC             reduce using rule 108 (dato -> CHAR .)


state 177

    (109) dato -> TRUFUEFE .

    PYC             reduce using rule 109 (dato -> TRUFUEFE .)


state 178

    (110) dato -> FAFALSEFE .

    PYC             reduce using rule 110 (dato -> FAFALSEFE .)


state 179

    (111) dato -> PCC .

    PYC             reduce using rule 111 (dato -> PCC .)


state 180

    (112) dato -> REAL .

    PYC             reduce using rule 112 (dato -> REAL .)


state 181

    (106) valores -> ID .
    (94) condicion -> ID . operadores ID
    (113) operadores -> . MEN
    (114) operadores -> . MAY
    (115) operadores -> . MENIG
    (116) operadores -> . MAYIG
    (117) operadores -> . CMP
    (118) operadores -> . DIF

    PC              reduce using rule 106 (valores -> ID .)
    COMA            reduce using rule 106 (valores -> ID .)
    MEN             shift and go to state 159
    MAY             shift and go to state 160
    MENIG           shift and go to state 161
    MAYIG           shift and go to state 162
    CMP             shift and go to state 163
    DIF             shift and go to state 164

    operadores                     shift and go to state 158

state 182

    (83) funcion -> ID PA valores . PC PYC
    (85) funcion -> ID PA valores . COMA valores PC PYC

    PC              shift and go to state 239
    COMA            shift and go to state 240


state 183

    (84) funcion -> ID PA PC . PYC

    PYC             shift and go to state 241


state 184

    (57) declarar_if_error_llave -> ID PA condicion . PC LLAVEA bloque_codigo LLAVEC
    (58) declarar_if_error_llave -> ID PA condicion . PC LLAVEA bloque_codigo LLAVEC EFELSEFE LLAVEA bloque_codigo LLAVEC
    (91) declaracion_while_error -> ID PA condicion . PC LLAVEA bloque_codigo LLAVEC

    PC              shift and go to state 242


state 185

    (101) valores -> INT .

    PC              reduce using rule 101 (valores -> INT .)
    COMA            reduce using rule 101 (valores -> INT .)
    PYC             reduce using rule 101 (valores -> INT .)


state 186

    (102) valores -> CHAR .

    PC              reduce using rule 102 (valores -> CHAR .)
    COMA            reduce using rule 102 (valores -> CHAR .)
    PYC             reduce using rule 102 (valores -> CHAR .)


state 187

    (103) valores -> TRUFUEFE .

    PC              reduce using rule 103 (valores -> TRUFUEFE .)
    COMA            reduce using rule 103 (valores -> TRUFUEFE .)
    PYC             reduce using rule 103 (valores -> TRUFUEFE .)


state 188

    (104) valores -> FAFALSEFE .

    PC              reduce using rule 104 (valores -> FAFALSEFE .)
    COMA            reduce using rule 104 (valores -> FAFALSEFE .)
    PYC             reduce using rule 104 (valores -> FAFALSEFE .)


state 189

    (105) valores -> PCC .

    PC              reduce using rule 105 (valores -> PCC .)
    COMA            reduce using rule 105 (valores -> PCC .)
    PYC             reduce using rule 105 (valores -> PCC .)


state 190

    (72) dimensiones -> dimension dimensiones .

    ASG             reduce using rule 72 (dimensiones -> dimension dimensiones .)
    PYC             reduce using rule 72 (dimensiones -> dimension dimensiones .)


state 191

    (74) dimension -> CA INT . CC

    CC              shift and go to state 243


state 192

    (76) dimension_error -> CA CC .

    VACIO           reduce using rule 76 (dimension_error -> CA CC .)
    CA              reduce using rule 76 (dimension_error -> CA CC .)


state 193

    (77) dimension_error -> CA ID . CC

    CC              shift and go to state 244


state 194

    (78) dimension_error -> CA REAL . CC

    CC              shift and go to state 245


state 195

    (79) dimension_error -> CA PCC . CC

    CC              shift and go to state 246


state 196

    (80) dimension_error -> CA CHAR . CC

    CC              shift and go to state 247


state 197

    (62) declaracion -> AFARRAFAY ID dimensiones . PYC

    PYC             shift and go to state 248


state 198

    (82) asignar_estructuras -> STRUF ID PUNTO . ID ASG dato PYC

    ID              shift and go to state 249


state 199

    (86) print -> PRIFINT PA ID . PC PYC

    PC              shift and go to state 250


state 200

    (87) input -> IFINPUFUT PA ID . PC PYC

    PC              shift and go to state 251


state 201

    (88) declaracion_while -> WHIFILEFE PA condicion . PC LLAVEA bloque_codigo LLAVEC
    (92) declaracion_while_error -> WHIFILEFE PA condicion . PC bloque_codigo LLAVEC
    (93) declaracion_while_error -> WHIFILEFE PA condicion . PC LLAVEA bloque_codigo

    PC              shift and go to state 252


state 202

    (30) declarar_main_error -> IFINT ID PA PC LLAVEA bloque_codigo REFETUFURN . PYC LLAVEC

    PYC             shift and go to state 253


state 203

    (26) declarar_main_error -> MAFAIFIN PA PC LLAVEA bloque_codigo REFETUFURN PYC . LLAVEC

    LLAVEC          shift and go to state 254


state 204

    (12) declarar_estructuras_error -> STRUFUCT ID LLAVEA ID PYC ID PYC LLAVEC .

    IFINT           reduce using rule 12 (declarar_estructuras_error -> STRUFUCT ID LLAVEA ID PYC ID PYC LLAVEC .)
    FUNCTION        reduce using rule 12 (declarar_estructuras_error -> STRUFUCT ID LLAVEA ID PYC ID PYC LLAVEC .)
    MAFAIFIN        reduce using rule 12 (declarar_estructuras_error -> STRUFUCT ID LLAVEA ID PYC ID PYC LLAVEC .)
    ID              reduce using rule 12 (declarar_estructuras_error -> STRUFUCT ID LLAVEA ID PYC ID PYC LLAVEC .)


state 205

    (5) declarar_estructuras -> STRUFUCT ID LLAVEA tipo_dato ID PYC tipo_dato ID . PYC LLAVEC
    (13) declarar_estructuras_error -> STRUFUCT ID LLAVEA tipo_dato ID PYC tipo_dato ID . PYC tipo_dato ID PYC LLAVEC

    PYC             shift and go to state 255


state 206

    (10) declarar_estructuras_error -> STRUFUCT ID LLAVEA tipo_dato ID PYC tipo_dato PYC . LLAVEC

    LLAVEC          shift and go to state 256


state 207

    (9) declarar_estructuras_error -> STRUFUCT ID LLAVEA tipo_dato PYC tipo_dato ID PYC . LLAVEC

    LLAVEC          shift and go to state 257


state 208

    (11) declarar_estructuras_error -> STRUFUCT ID LLAVEA tipo_dato PYC tipo_dato PYC LLAVEC .

    IFINT           reduce using rule 11 (declarar_estructuras_error -> STRUFUCT ID LLAVEA tipo_dato PYC tipo_dato PYC LLAVEC .)
    FUNCTION        reduce using rule 11 (declarar_estructuras_error -> STRUFUCT ID LLAVEA tipo_dato PYC tipo_dato PYC LLAVEC .)
    MAFAIFIN        reduce using rule 11 (declarar_estructuras_error -> STRUFUCT ID LLAVEA tipo_dato PYC tipo_dato PYC LLAVEC .)
    ID              reduce using rule 11 (declarar_estructuras_error -> STRUFUCT ID LLAVEA tipo_dato PYC tipo_dato PYC LLAVEC .)


state 209

    (8) declarar_estructuras_error -> ID ID LLAVEA tipo_dato ID PYC tipo_dato ID . PYC LLAVEC

    PYC             shift and go to state 258


state 210

    (32) declarar_main_error -> ID ID PA PC LLAVEA bloque_codigo REFETUFURN PYC . LLAVEC

    LLAVEC          shift and go to state 259


state 211

    (7) declarar_estructuras_error -> ID LLAVEA tipo_dato ID PYC tipo_dato ID PYC . LLAVEC

    LLAVEC          shift and go to state 260


state 212

    (31) declarar_main_error -> ID MAFAIFIN PA PC LLAVEA bloque_codigo REFETUFURN PYC . LLAVEC

    LLAVEC          shift and go to state 261


state 213

    (14) declarar_funciones -> FUNCTION tipo_dato ID PA tipo_dato ID PC LLAVEA . bloque_codigo REFETUFURN ID PYC LLAVEC
    (22) declarar_funciones_error -> FUNCTION tipo_dato ID PA tipo_dato ID PC LLAVEA . bloque_codigo REFETUFURN PYC LLAVEC
    (42) bloque_codigo -> . declarar_if bloque_codigo
    (43) bloque_codigo -> . declaracion bloque_codigo
    (44) bloque_codigo -> . asignar_estructuras bloque_codigo
    (45) bloque_codigo -> . asignar_array bloque_codigo
    (46) bloque_codigo -> . funcion bloque_codigo
    (47) bloque_codigo -> . print bloque_codigo
    (48) bloque_codigo -> . input bloque_codigo
    (49) bloque_codigo -> . declaracion_while bloque_codigo
    (50) bloque_codigo -> . VACIO
    (51) declarar_if -> . IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC
    (52) declarar_if -> . IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE LLAVEA bloque_codigo LLAVEC
    (53) declarar_if -> . declarar_if_error_llave
    (60) declaracion -> . tipo_dato ID ASG ID operacion_matematica ID PYC
    (61) declaracion -> . tipo_dato ID ASG dato PYC
    (62) declaracion -> . AFARRAFAY ID dimensiones PYC
    (63) declaracion -> . declaracion_error
    (82) asignar_estructuras -> . STRUF ID PUNTO ID ASG dato PYC
    (81) asignar_array -> . ID dimensiones ASG dato PYC
    (83) funcion -> . ID PA valores PC PYC
    (84) funcion -> . ID PA PC PYC
    (85) funcion -> . ID PA valores COMA valores PC PYC
    (86) print -> . PRIFINT PA ID PC PYC
    (87) input -> . IFINPUFUT PA ID PC PYC
    (88) declaracion_while -> . WHIFILEFE PA condicion PC LLAVEA bloque_codigo LLAVEC
    (89) declaracion_while -> . declaracion_while_error
    (54) declarar_if_error_llave -> . IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE LLAVEA bloque_codigo
    (55) declarar_if_error_llave -> . IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE bloque_codigo LLAVEC
    (56) declarar_if_error_llave -> . PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE LLAVEA bloque_codigo LLAVEC
    (57) declarar_if_error_llave -> . ID PA condicion PC LLAVEA bloque_codigo LLAVEC
    (58) declarar_if_error_llave -> . ID PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE LLAVEA bloque_codigo LLAVEC
    (59) declarar_if_error_llave -> . IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC LLAVEA bloque_codigo LLAVEC
    (34) tipo_dato -> . IFINT
    (35) tipo_dato -> . STRIFING
    (36) tipo_dato -> . AFARRAFAY
    (37) tipo_dato -> . STRUFUCT
    (38) tipo_dato -> . VOFOIFID
    (39) tipo_dato -> . CHAFAR
    (40) tipo_dato -> . BOFOOFOL
    (41) tipo_dato -> . FLOFOAFAT
    (64) declaracion_error -> . ID PYC
    (65) declaracion_error -> . ID ASG ID operacion_matematica ID PYC
    (66) declaracion_error -> . ID ASG dato PYC
    (67) declaracion_error -> . ID ID PYC
    (68) declaracion_error -> . ID ID ASG ID operacion_matematica ID PYC
    (69) declaracion_error -> . ID ID ASG valores PYC
    (70) declaracion_error -> . ID ID dimensiones PYC
    (71) declaracion_error -> . ID dimensiones PYC
    (90) declaracion_while_error -> . PA condicion PC LLAVEA bloque_codigo LLAVEC
    (91) declaracion_while_error -> . ID PA condicion PC LLAVEA bloque_codigo LLAVEC
    (92) declaracion_while_error -> . WHIFILEFE PA condicion PC bloque_codigo LLAVEC
    (93) declaracion_while_error -> . WHIFILEFE PA condicion PC LLAVEA bloque_codigo

    VACIO           shift and go to state 83
    IFIF            shift and go to state 84
    AFARRAFAY       shift and go to state 88
    STRUF           shift and go to state 90
    ID              shift and go to state 87
    PRIFINT         shift and go to state 91
    IFINPUFUT       shift and go to state 92
    WHIFILEFE       shift and go to state 93
    PA              shift and go to state 73
    IFINT           shift and go to state 23
    STRIFING        shift and go to state 24
    STRUFUCT        shift and go to state 26
    VOFOIFID        shift and go to state 27
    CHAFAR          shift and go to state 28
    BOFOOFOL        shift and go to state 29
    FLOFOAFAT       shift and go to state 30

    tipo_dato                      shift and go to state 86
    bloque_codigo                  shift and go to state 262
    declarar_if                    shift and go to state 75
    declaracion                    shift and go to state 76
    asignar_estructuras            shift and go to state 77
    asignar_array                  shift and go to state 78
    funcion                        shift and go to state 79
    print                          shift and go to state 80
    input                          shift and go to state 81
    declaracion_while              shift and go to state 82
    declarar_if_error_llave        shift and go to state 85
    declaracion_error              shift and go to state 89
    declaracion_while_error        shift and go to state 94

state 214

    (16) declarar_funciones -> FUNCTION tipo_dato ID PA tipo_dato ID COMA tipo_dato . ID PC LLAVEA bloque_codigo REFETUFURN ID PYC LLAVEC
    (21) declarar_funciones_error -> FUNCTION tipo_dato ID PA tipo_dato ID COMA tipo_dato . ID PC LLAVEA bloque_codigo REFETUFURN PYC LLAVEC

    ID              shift and go to state 263


state 215

    (15) declarar_funciones -> FUNCTION tipo_dato ID PA PC LLAVEA bloque_codigo REFETUFURN . ID PYC LLAVEC
    (23) declarar_funciones_error -> FUNCTION tipo_dato ID PA PC LLAVEA bloque_codigo REFETUFURN . PYC LLAVEC

    ID              shift and go to state 264
    PYC             shift and go to state 265


state 216

    (17) declarar_funciones -> FUNCTION ID PA tipo_dato ID PC LLAVEA bloque_codigo . REFETUFURN PYC LLAVEC

    REFETUFURN      shift and go to state 266


state 217

    (19) declarar_funciones -> FUNCTION ID PA tipo_dato ID COMA tipo_dato ID . PC LLAVEA bloque_codigo REFETUFURN PYC LLAVEC

    PC              shift and go to state 267


state 218

    (18) declarar_funciones -> FUNCTION ID PA PC LLAVEA bloque_codigo REFETUFURN PYC . LLAVEC

    LLAVEC          shift and go to state 268


state 219

    (24) declarar_main -> IFINT MAFAIFIN PA PC LLAVEA bloque_codigo REFETUFURN PYC . LLAVEC

    LLAVEC          shift and go to state 269


state 220

    (33) declarar_main_error -> IFINT MAFAIFIN PA PC LLAVEA bloque_codigo ID PYC . LLAVEC

    LLAVEC          shift and go to state 270


state 221

    (56) declarar_if_error_llave -> PA condicion PC LLAVEA . bloque_codigo LLAVEC EFELSEFE LLAVEA bloque_codigo LLAVEC
    (90) declaracion_while_error -> PA condicion PC LLAVEA . bloque_codigo LLAVEC
    (42) bloque_codigo -> . declarar_if bloque_codigo
    (43) bloque_codigo -> . declaracion bloque_codigo
    (44) bloque_codigo -> . asignar_estructuras bloque_codigo
    (45) bloque_codigo -> . asignar_array bloque_codigo
    (46) bloque_codigo -> . funcion bloque_codigo
    (47) bloque_codigo -> . print bloque_codigo
    (48) bloque_codigo -> . input bloque_codigo
    (49) bloque_codigo -> . declaracion_while bloque_codigo
    (50) bloque_codigo -> . VACIO
    (51) declarar_if -> . IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC
    (52) declarar_if -> . IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE LLAVEA bloque_codigo LLAVEC
    (53) declarar_if -> . declarar_if_error_llave
    (60) declaracion -> . tipo_dato ID ASG ID operacion_matematica ID PYC
    (61) declaracion -> . tipo_dato ID ASG dato PYC
    (62) declaracion -> . AFARRAFAY ID dimensiones PYC
    (63) declaracion -> . declaracion_error
    (82) asignar_estructuras -> . STRUF ID PUNTO ID ASG dato PYC
    (81) asignar_array -> . ID dimensiones ASG dato PYC
    (83) funcion -> . ID PA valores PC PYC
    (84) funcion -> . ID PA PC PYC
    (85) funcion -> . ID PA valores COMA valores PC PYC
    (86) print -> . PRIFINT PA ID PC PYC
    (87) input -> . IFINPUFUT PA ID PC PYC
    (88) declaracion_while -> . WHIFILEFE PA condicion PC LLAVEA bloque_codigo LLAVEC
    (89) declaracion_while -> . declaracion_while_error
    (54) declarar_if_error_llave -> . IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE LLAVEA bloque_codigo
    (55) declarar_if_error_llave -> . IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE bloque_codigo LLAVEC
    (56) declarar_if_error_llave -> . PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE LLAVEA bloque_codigo LLAVEC
    (57) declarar_if_error_llave -> . ID PA condicion PC LLAVEA bloque_codigo LLAVEC
    (58) declarar_if_error_llave -> . ID PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE LLAVEA bloque_codigo LLAVEC
    (59) declarar_if_error_llave -> . IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC LLAVEA bloque_codigo LLAVEC
    (34) tipo_dato -> . IFINT
    (35) tipo_dato -> . STRIFING
    (36) tipo_dato -> . AFARRAFAY
    (37) tipo_dato -> . STRUFUCT
    (38) tipo_dato -> . VOFOIFID
    (39) tipo_dato -> . CHAFAR
    (40) tipo_dato -> . BOFOOFOL
    (41) tipo_dato -> . FLOFOAFAT
    (64) declaracion_error -> . ID PYC
    (65) declaracion_error -> . ID ASG ID operacion_matematica ID PYC
    (66) declaracion_error -> . ID ASG dato PYC
    (67) declaracion_error -> . ID ID PYC
    (68) declaracion_error -> . ID ID ASG ID operacion_matematica ID PYC
    (69) declaracion_error -> . ID ID ASG valores PYC
    (70) declaracion_error -> . ID ID dimensiones PYC
    (71) declaracion_error -> . ID dimensiones PYC
    (90) declaracion_while_error -> . PA condicion PC LLAVEA bloque_codigo LLAVEC
    (91) declaracion_while_error -> . ID PA condicion PC LLAVEA bloque_codigo LLAVEC
    (92) declaracion_while_error -> . WHIFILEFE PA condicion PC bloque_codigo LLAVEC
    (93) declaracion_while_error -> . WHIFILEFE PA condicion PC LLAVEA bloque_codigo

    VACIO           shift and go to state 83
    IFIF            shift and go to state 84
    AFARRAFAY       shift and go to state 88
    STRUF           shift and go to state 90
    ID              shift and go to state 87
    PRIFINT         shift and go to state 91
    IFINPUFUT       shift and go to state 92
    WHIFILEFE       shift and go to state 93
    PA              shift and go to state 73
    IFINT           shift and go to state 23
    STRIFING        shift and go to state 24
    STRUFUCT        shift and go to state 26
    VOFOIFID        shift and go to state 27
    CHAFAR          shift and go to state 28
    BOFOOFOL        shift and go to state 29
    FLOFOAFAT       shift and go to state 30

    bloque_codigo                  shift and go to state 271
    declarar_if                    shift and go to state 75
    declaracion                    shift and go to state 76
    asignar_estructuras            shift and go to state 77
    asignar_array                  shift and go to state 78
    funcion                        shift and go to state 79
    print                          shift and go to state 80
    input                          shift and go to state 81
    declaracion_while              shift and go to state 82
    declarar_if_error_llave        shift and go to state 85
    tipo_dato                      shift and go to state 86
    declaracion_error              shift and go to state 89
    declaracion_while_error        shift and go to state 94

state 222

    (94) condicion -> ID operadores ID .

    PC              reduce using rule 94 (condicion -> ID operadores ID .)


state 223

    (29) declarar_main_error -> IFINT PA PC LLAVEA bloque_codigo REFETUFURN PYC LLAVEC .

    $end            reduce using rule 29 (declarar_main_error -> IFINT PA PC LLAVEA bloque_codigo REFETUFURN PYC LLAVEC .)


state 224

    (51) declarar_if -> IFIF PA condicion PC . LLAVEA bloque_codigo LLAVEC
    (52) declarar_if -> IFIF PA condicion PC . LLAVEA bloque_codigo LLAVEC EFELSEFE LLAVEA bloque_codigo LLAVEC
    (54) declarar_if_error_llave -> IFIF PA condicion PC . LLAVEA bloque_codigo LLAVEC EFELSEFE LLAVEA bloque_codigo
    (55) declarar_if_error_llave -> IFIF PA condicion PC . LLAVEA bloque_codigo LLAVEC EFELSEFE bloque_codigo LLAVEC
    (59) declarar_if_error_llave -> IFIF PA condicion PC . LLAVEA bloque_codigo LLAVEC LLAVEA bloque_codigo LLAVEC

    LLAVEA          shift and go to state 272


state 225

    (60) declaracion -> tipo_dato ID ASG ID . operacion_matematica ID PYC
    (95) operacion_matematica -> . SUM
    (96) operacion_matematica -> . RES
    (97) operacion_matematica -> . MUL
    (98) operacion_matematica -> . DIV
    (99) operacion_matematica -> . RED
    (100) operacion_matematica -> . POT

    SUM             shift and go to state 232
    RES             shift and go to state 233
    MUL             shift and go to state 234
    DIV             shift and go to state 235
    RED             shift and go to state 236
    POT             shift and go to state 237

    operacion_matematica           shift and go to state 273

state 226

    (61) declaracion -> tipo_dato ID ASG dato . PYC

    PYC             shift and go to state 274


state 227

    (68) declaracion_error -> ID ID ASG ID . operacion_matematica ID PYC
    (106) valores -> ID .
    (95) operacion_matematica -> . SUM
    (96) operacion_matematica -> . RES
    (97) operacion_matematica -> . MUL
    (98) operacion_matematica -> . DIV
    (99) operacion_matematica -> . RED
    (100) operacion_matematica -> . POT

    PYC             reduce using rule 106 (valores -> ID .)
    SUM             shift and go to state 232
    RES             shift and go to state 233
    MUL             shift and go to state 234
    DIV             shift and go to state 235
    RED             shift and go to state 236
    POT             shift and go to state 237

    operacion_matematica           shift and go to state 275

state 228

    (69) declaracion_error -> ID ID ASG valores . PYC

    PYC             shift and go to state 276


state 229

    (70) declaracion_error -> ID ID dimensiones PYC .

    VACIO           reduce using rule 70 (declaracion_error -> ID ID dimensiones PYC .)
    IFIF            reduce using rule 70 (declaracion_error -> ID ID dimensiones PYC .)
    AFARRAFAY       reduce using rule 70 (declaracion_error -> ID ID dimensiones PYC .)
    STRUF           reduce using rule 70 (declaracion_error -> ID ID dimensiones PYC .)
    ID              reduce using rule 70 (declaracion_error -> ID ID dimensiones PYC .)
    PRIFINT         reduce using rule 70 (declaracion_error -> ID ID dimensiones PYC .)
    IFINPUFUT       reduce using rule 70 (declaracion_error -> ID ID dimensiones PYC .)
    WHIFILEFE       reduce using rule 70 (declaracion_error -> ID ID dimensiones PYC .)
    PA              reduce using rule 70 (declaracion_error -> ID ID dimensiones PYC .)
    IFINT           reduce using rule 70 (declaracion_error -> ID ID dimensiones PYC .)
    STRIFING        reduce using rule 70 (declaracion_error -> ID ID dimensiones PYC .)
    STRUFUCT        reduce using rule 70 (declaracion_error -> ID ID dimensiones PYC .)
    VOFOIFID        reduce using rule 70 (declaracion_error -> ID ID dimensiones PYC .)
    CHAFAR          reduce using rule 70 (declaracion_error -> ID ID dimensiones PYC .)
    BOFOOFOL        reduce using rule 70 (declaracion_error -> ID ID dimensiones PYC .)
    FLOFOAFAT       reduce using rule 70 (declaracion_error -> ID ID dimensiones PYC .)


state 230

    (81) asignar_array -> ID dimensiones ASG dato . PYC

    PYC             shift and go to state 277


state 231

    (65) declaracion_error -> ID ASG ID operacion_matematica . ID PYC

    ID              shift and go to state 278


state 232

    (95) operacion_matematica -> SUM .

    ID              reduce using rule 95 (operacion_matematica -> SUM .)


state 233

    (96) operacion_matematica -> RES .

    ID              reduce using rule 96 (operacion_matematica -> RES .)


state 234

    (97) operacion_matematica -> MUL .

    ID              reduce using rule 97 (operacion_matematica -> MUL .)


state 235

    (98) operacion_matematica -> DIV .

    ID              reduce using rule 98 (operacion_matematica -> DIV .)


state 236

    (99) operacion_matematica -> RED .

    ID              reduce using rule 99 (operacion_matematica -> RED .)


state 237

    (100) operacion_matematica -> POT .

    ID              reduce using rule 100 (operacion_matematica -> POT .)


state 238

    (66) declaracion_error -> ID ASG dato PYC .

    VACIO           reduce using rule 66 (declaracion_error -> ID ASG dato PYC .)
    IFIF            reduce using rule 66 (declaracion_error -> ID ASG dato PYC .)
    AFARRAFAY       reduce using rule 66 (declaracion_error -> ID ASG dato PYC .)
    STRUF           reduce using rule 66 (declaracion_error -> ID ASG dato PYC .)
    ID              reduce using rule 66 (declaracion_error -> ID ASG dato PYC .)
    PRIFINT         reduce using rule 66 (declaracion_error -> ID ASG dato PYC .)
    IFINPUFUT       reduce using rule 66 (declaracion_error -> ID ASG dato PYC .)
    WHIFILEFE       reduce using rule 66 (declaracion_error -> ID ASG dato PYC .)
    PA              reduce using rule 66 (declaracion_error -> ID ASG dato PYC .)
    IFINT           reduce using rule 66 (declaracion_error -> ID ASG dato PYC .)
    STRIFING        reduce using rule 66 (declaracion_error -> ID ASG dato PYC .)
    STRUFUCT        reduce using rule 66 (declaracion_error -> ID ASG dato PYC .)
    VOFOIFID        reduce using rule 66 (declaracion_error -> ID ASG dato PYC .)
    CHAFAR          reduce using rule 66 (declaracion_error -> ID ASG dato PYC .)
    BOFOOFOL        reduce using rule 66 (declaracion_error -> ID ASG dato PYC .)
    FLOFOAFAT       reduce using rule 66 (declaracion_error -> ID ASG dato PYC .)


state 239

    (83) funcion -> ID PA valores PC . PYC

    PYC             shift and go to state 279


state 240

    (85) funcion -> ID PA valores COMA . valores PC PYC
    (101) valores -> . INT
    (102) valores -> . CHAR
    (103) valores -> . TRUFUEFE
    (104) valores -> . FAFALSEFE
    (105) valores -> . PCC
    (106) valores -> . ID

    INT             shift and go to state 185
    CHAR            shift and go to state 186
    TRUFUEFE        shift and go to state 187
    FAFALSEFE       shift and go to state 188
    PCC             shift and go to state 189
    ID              shift and go to state 280

    valores                        shift and go to state 281

state 241

    (84) funcion -> ID PA PC PYC .

    VACIO           reduce using rule 84 (funcion -> ID PA PC PYC .)
    IFIF            reduce using rule 84 (funcion -> ID PA PC PYC .)
    AFARRAFAY       reduce using rule 84 (funcion -> ID PA PC PYC .)
    STRUF           reduce using rule 84 (funcion -> ID PA PC PYC .)
    ID              reduce using rule 84 (funcion -> ID PA PC PYC .)
    PRIFINT         reduce using rule 84 (funcion -> ID PA PC PYC .)
    IFINPUFUT       reduce using rule 84 (funcion -> ID PA PC PYC .)
    WHIFILEFE       reduce using rule 84 (funcion -> ID PA PC PYC .)
    PA              reduce using rule 84 (funcion -> ID PA PC PYC .)
    IFINT           reduce using rule 84 (funcion -> ID PA PC PYC .)
    STRIFING        reduce using rule 84 (funcion -> ID PA PC PYC .)
    STRUFUCT        reduce using rule 84 (funcion -> ID PA PC PYC .)
    VOFOIFID        reduce using rule 84 (funcion -> ID PA PC PYC .)
    CHAFAR          reduce using rule 84 (funcion -> ID PA PC PYC .)
    BOFOOFOL        reduce using rule 84 (funcion -> ID PA PC PYC .)
    FLOFOAFAT       reduce using rule 84 (funcion -> ID PA PC PYC .)


state 242

    (57) declarar_if_error_llave -> ID PA condicion PC . LLAVEA bloque_codigo LLAVEC
    (58) declarar_if_error_llave -> ID PA condicion PC . LLAVEA bloque_codigo LLAVEC EFELSEFE LLAVEA bloque_codigo LLAVEC
    (91) declaracion_while_error -> ID PA condicion PC . LLAVEA bloque_codigo LLAVEC

    LLAVEA          shift and go to state 282


state 243

    (74) dimension -> CA INT CC .

    VACIO           reduce using rule 74 (dimension -> CA INT CC .)
    CA              reduce using rule 74 (dimension -> CA INT CC .)


state 244

    (77) dimension_error -> CA ID CC .

    VACIO           reduce using rule 77 (dimension_error -> CA ID CC .)
    CA              reduce using rule 77 (dimension_error -> CA ID CC .)


state 245

    (78) dimension_error -> CA REAL CC .

    VACIO           reduce using rule 78 (dimension_error -> CA REAL CC .)
    CA              reduce using rule 78 (dimension_error -> CA REAL CC .)


state 246

    (79) dimension_error -> CA PCC CC .

    VACIO           reduce using rule 79 (dimension_error -> CA PCC CC .)
    CA              reduce using rule 79 (dimension_error -> CA PCC CC .)


state 247

    (80) dimension_error -> CA CHAR CC .

    VACIO           reduce using rule 80 (dimension_error -> CA CHAR CC .)
    CA              reduce using rule 80 (dimension_error -> CA CHAR CC .)


state 248

    (62) declaracion -> AFARRAFAY ID dimensiones PYC .

    VACIO           reduce using rule 62 (declaracion -> AFARRAFAY ID dimensiones PYC .)
    IFIF            reduce using rule 62 (declaracion -> AFARRAFAY ID dimensiones PYC .)
    AFARRAFAY       reduce using rule 62 (declaracion -> AFARRAFAY ID dimensiones PYC .)
    STRUF           reduce using rule 62 (declaracion -> AFARRAFAY ID dimensiones PYC .)
    ID              reduce using rule 62 (declaracion -> AFARRAFAY ID dimensiones PYC .)
    PRIFINT         reduce using rule 62 (declaracion -> AFARRAFAY ID dimensiones PYC .)
    IFINPUFUT       reduce using rule 62 (declaracion -> AFARRAFAY ID dimensiones PYC .)
    WHIFILEFE       reduce using rule 62 (declaracion -> AFARRAFAY ID dimensiones PYC .)
    PA              reduce using rule 62 (declaracion -> AFARRAFAY ID dimensiones PYC .)
    IFINT           reduce using rule 62 (declaracion -> AFARRAFAY ID dimensiones PYC .)
    STRIFING        reduce using rule 62 (declaracion -> AFARRAFAY ID dimensiones PYC .)
    STRUFUCT        reduce using rule 62 (declaracion -> AFARRAFAY ID dimensiones PYC .)
    VOFOIFID        reduce using rule 62 (declaracion -> AFARRAFAY ID dimensiones PYC .)
    CHAFAR          reduce using rule 62 (declaracion -> AFARRAFAY ID dimensiones PYC .)
    BOFOOFOL        reduce using rule 62 (declaracion -> AFARRAFAY ID dimensiones PYC .)
    FLOFOAFAT       reduce using rule 62 (declaracion -> AFARRAFAY ID dimensiones PYC .)


state 249

    (82) asignar_estructuras -> STRUF ID PUNTO ID . ASG dato PYC

    ASG             shift and go to state 283


state 250

    (86) print -> PRIFINT PA ID PC . PYC

    PYC             shift and go to state 284


state 251

    (87) input -> IFINPUFUT PA ID PC . PYC

    PYC             shift and go to state 285


state 252

    (88) declaracion_while -> WHIFILEFE PA condicion PC . LLAVEA bloque_codigo LLAVEC
    (92) declaracion_while_error -> WHIFILEFE PA condicion PC . bloque_codigo LLAVEC
    (93) declaracion_while_error -> WHIFILEFE PA condicion PC . LLAVEA bloque_codigo
    (42) bloque_codigo -> . declarar_if bloque_codigo
    (43) bloque_codigo -> . declaracion bloque_codigo
    (44) bloque_codigo -> . asignar_estructuras bloque_codigo
    (45) bloque_codigo -> . asignar_array bloque_codigo
    (46) bloque_codigo -> . funcion bloque_codigo
    (47) bloque_codigo -> . print bloque_codigo
    (48) bloque_codigo -> . input bloque_codigo
    (49) bloque_codigo -> . declaracion_while bloque_codigo
    (50) bloque_codigo -> . VACIO
    (51) declarar_if -> . IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC
    (52) declarar_if -> . IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE LLAVEA bloque_codigo LLAVEC
    (53) declarar_if -> . declarar_if_error_llave
    (60) declaracion -> . tipo_dato ID ASG ID operacion_matematica ID PYC
    (61) declaracion -> . tipo_dato ID ASG dato PYC
    (62) declaracion -> . AFARRAFAY ID dimensiones PYC
    (63) declaracion -> . declaracion_error
    (82) asignar_estructuras -> . STRUF ID PUNTO ID ASG dato PYC
    (81) asignar_array -> . ID dimensiones ASG dato PYC
    (83) funcion -> . ID PA valores PC PYC
    (84) funcion -> . ID PA PC PYC
    (85) funcion -> . ID PA valores COMA valores PC PYC
    (86) print -> . PRIFINT PA ID PC PYC
    (87) input -> . IFINPUFUT PA ID PC PYC
    (88) declaracion_while -> . WHIFILEFE PA condicion PC LLAVEA bloque_codigo LLAVEC
    (89) declaracion_while -> . declaracion_while_error
    (54) declarar_if_error_llave -> . IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE LLAVEA bloque_codigo
    (55) declarar_if_error_llave -> . IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE bloque_codigo LLAVEC
    (56) declarar_if_error_llave -> . PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE LLAVEA bloque_codigo LLAVEC
    (57) declarar_if_error_llave -> . ID PA condicion PC LLAVEA bloque_codigo LLAVEC
    (58) declarar_if_error_llave -> . ID PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE LLAVEA bloque_codigo LLAVEC
    (59) declarar_if_error_llave -> . IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC LLAVEA bloque_codigo LLAVEC
    (34) tipo_dato -> . IFINT
    (35) tipo_dato -> . STRIFING
    (36) tipo_dato -> . AFARRAFAY
    (37) tipo_dato -> . STRUFUCT
    (38) tipo_dato -> . VOFOIFID
    (39) tipo_dato -> . CHAFAR
    (40) tipo_dato -> . BOFOOFOL
    (41) tipo_dato -> . FLOFOAFAT
    (64) declaracion_error -> . ID PYC
    (65) declaracion_error -> . ID ASG ID operacion_matematica ID PYC
    (66) declaracion_error -> . ID ASG dato PYC
    (67) declaracion_error -> . ID ID PYC
    (68) declaracion_error -> . ID ID ASG ID operacion_matematica ID PYC
    (69) declaracion_error -> . ID ID ASG valores PYC
    (70) declaracion_error -> . ID ID dimensiones PYC
    (71) declaracion_error -> . ID dimensiones PYC
    (90) declaracion_while_error -> . PA condicion PC LLAVEA bloque_codigo LLAVEC
    (91) declaracion_while_error -> . ID PA condicion PC LLAVEA bloque_codigo LLAVEC
    (92) declaracion_while_error -> . WHIFILEFE PA condicion PC bloque_codigo LLAVEC
    (93) declaracion_while_error -> . WHIFILEFE PA condicion PC LLAVEA bloque_codigo

    LLAVEA          shift and go to state 286
    VACIO           shift and go to state 83
    IFIF            shift and go to state 84
    AFARRAFAY       shift and go to state 88
    STRUF           shift and go to state 90
    ID              shift and go to state 87
    PRIFINT         shift and go to state 91
    IFINPUFUT       shift and go to state 92
    WHIFILEFE       shift and go to state 93
    PA              shift and go to state 73
    IFINT           shift and go to state 23
    STRIFING        shift and go to state 24
    STRUFUCT        shift and go to state 26
    VOFOIFID        shift and go to state 27
    CHAFAR          shift and go to state 28
    BOFOOFOL        shift and go to state 29
    FLOFOAFAT       shift and go to state 30

    bloque_codigo                  shift and go to state 287
    declarar_if                    shift and go to state 75
    declaracion                    shift and go to state 76
    asignar_estructuras            shift and go to state 77
    asignar_array                  shift and go to state 78
    funcion                        shift and go to state 79
    print                          shift and go to state 80
    input                          shift and go to state 81
    declaracion_while              shift and go to state 82
    declarar_if_error_llave        shift and go to state 85
    tipo_dato                      shift and go to state 86
    declaracion_error              shift and go to state 89
    declaracion_while_error        shift and go to state 94

state 253

    (30) declarar_main_error -> IFINT ID PA PC LLAVEA bloque_codigo REFETUFURN PYC . LLAVEC

    LLAVEC          shift and go to state 288


state 254

    (26) declarar_main_error -> MAFAIFIN PA PC LLAVEA bloque_codigo REFETUFURN PYC LLAVEC .

    $end            reduce using rule 26 (declarar_main_error -> MAFAIFIN PA PC LLAVEA bloque_codigo REFETUFURN PYC LLAVEC .)


state 255

    (5) declarar_estructuras -> STRUFUCT ID LLAVEA tipo_dato ID PYC tipo_dato ID PYC . LLAVEC
    (13) declarar_estructuras_error -> STRUFUCT ID LLAVEA tipo_dato ID PYC tipo_dato ID PYC . tipo_dato ID PYC LLAVEC
    (34) tipo_dato -> . IFINT
    (35) tipo_dato -> . STRIFING
    (36) tipo_dato -> . AFARRAFAY
    (37) tipo_dato -> . STRUFUCT
    (38) tipo_dato -> . VOFOIFID
    (39) tipo_dato -> . CHAFAR
    (40) tipo_dato -> . BOFOOFOL
    (41) tipo_dato -> . FLOFOAFAT

    LLAVEC          shift and go to state 290
    IFINT           shift and go to state 23
    STRIFING        shift and go to state 24
    AFARRAFAY       shift and go to state 25
    STRUFUCT        shift and go to state 26
    VOFOIFID        shift and go to state 27
    CHAFAR          shift and go to state 28
    BOFOOFOL        shift and go to state 29
    FLOFOAFAT       shift and go to state 30

    tipo_dato                      shift and go to state 289

state 256

    (10) declarar_estructuras_error -> STRUFUCT ID LLAVEA tipo_dato ID PYC tipo_dato PYC LLAVEC .

    IFINT           reduce using rule 10 (declarar_estructuras_error -> STRUFUCT ID LLAVEA tipo_dato ID PYC tipo_dato PYC LLAVEC .)
    FUNCTION        reduce using rule 10 (declarar_estructuras_error -> STRUFUCT ID LLAVEA tipo_dato ID PYC tipo_dato PYC LLAVEC .)
    MAFAIFIN        reduce using rule 10 (declarar_estructuras_error -> STRUFUCT ID LLAVEA tipo_dato ID PYC tipo_dato PYC LLAVEC .)
    ID              reduce using rule 10 (declarar_estructuras_error -> STRUFUCT ID LLAVEA tipo_dato ID PYC tipo_dato PYC LLAVEC .)


state 257

    (9) declarar_estructuras_error -> STRUFUCT ID LLAVEA tipo_dato PYC tipo_dato ID PYC LLAVEC .

    IFINT           reduce using rule 9 (declarar_estructuras_error -> STRUFUCT ID LLAVEA tipo_dato PYC tipo_dato ID PYC LLAVEC .)
    FUNCTION        reduce using rule 9 (declarar_estructuras_error -> STRUFUCT ID LLAVEA tipo_dato PYC tipo_dato ID PYC LLAVEC .)
    MAFAIFIN        reduce using rule 9 (declarar_estructuras_error -> STRUFUCT ID LLAVEA tipo_dato PYC tipo_dato ID PYC LLAVEC .)
    ID              reduce using rule 9 (declarar_estructuras_error -> STRUFUCT ID LLAVEA tipo_dato PYC tipo_dato ID PYC LLAVEC .)


state 258

    (8) declarar_estructuras_error -> ID ID LLAVEA tipo_dato ID PYC tipo_dato ID PYC . LLAVEC

    LLAVEC          shift and go to state 291


state 259

    (32) declarar_main_error -> ID ID PA PC LLAVEA bloque_codigo REFETUFURN PYC LLAVEC .

    $end            reduce using rule 32 (declarar_main_error -> ID ID PA PC LLAVEA bloque_codigo REFETUFURN PYC LLAVEC .)


state 260

    (7) declarar_estructuras_error -> ID LLAVEA tipo_dato ID PYC tipo_dato ID PYC LLAVEC .

    IFINT           reduce using rule 7 (declarar_estructuras_error -> ID LLAVEA tipo_dato ID PYC tipo_dato ID PYC LLAVEC .)
    FUNCTION        reduce using rule 7 (declarar_estructuras_error -> ID LLAVEA tipo_dato ID PYC tipo_dato ID PYC LLAVEC .)
    MAFAIFIN        reduce using rule 7 (declarar_estructuras_error -> ID LLAVEA tipo_dato ID PYC tipo_dato ID PYC LLAVEC .)
    ID              reduce using rule 7 (declarar_estructuras_error -> ID LLAVEA tipo_dato ID PYC tipo_dato ID PYC LLAVEC .)


state 261

    (31) declarar_main_error -> ID MAFAIFIN PA PC LLAVEA bloque_codigo REFETUFURN PYC LLAVEC .

    $end            reduce using rule 31 (declarar_main_error -> ID MAFAIFIN PA PC LLAVEA bloque_codigo REFETUFURN PYC LLAVEC .)


state 262

    (14) declarar_funciones -> FUNCTION tipo_dato ID PA tipo_dato ID PC LLAVEA bloque_codigo . REFETUFURN ID PYC LLAVEC
    (22) declarar_funciones_error -> FUNCTION tipo_dato ID PA tipo_dato ID PC LLAVEA bloque_codigo . REFETUFURN PYC LLAVEC

    REFETUFURN      shift and go to state 292


state 263

    (16) declarar_funciones -> FUNCTION tipo_dato ID PA tipo_dato ID COMA tipo_dato ID . PC LLAVEA bloque_codigo REFETUFURN ID PYC LLAVEC
    (21) declarar_funciones_error -> FUNCTION tipo_dato ID PA tipo_dato ID COMA tipo_dato ID . PC LLAVEA bloque_codigo REFETUFURN PYC LLAVEC

    PC              shift and go to state 293


state 264

    (15) declarar_funciones -> FUNCTION tipo_dato ID PA PC LLAVEA bloque_codigo REFETUFURN ID . PYC LLAVEC

    PYC             shift and go to state 294


state 265

    (23) declarar_funciones_error -> FUNCTION tipo_dato ID PA PC LLAVEA bloque_codigo REFETUFURN PYC . LLAVEC

    LLAVEC          shift and go to state 295


state 266

    (17) declarar_funciones -> FUNCTION ID PA tipo_dato ID PC LLAVEA bloque_codigo REFETUFURN . PYC LLAVEC

    PYC             shift and go to state 296


state 267

    (19) declarar_funciones -> FUNCTION ID PA tipo_dato ID COMA tipo_dato ID PC . LLAVEA bloque_codigo REFETUFURN PYC LLAVEC

    LLAVEA          shift and go to state 297


state 268

    (18) declarar_funciones -> FUNCTION ID PA PC LLAVEA bloque_codigo REFETUFURN PYC LLAVEC .

    IFINT           reduce using rule 18 (declarar_funciones -> FUNCTION ID PA PC LLAVEA bloque_codigo REFETUFURN PYC LLAVEC .)
    MAFAIFIN        reduce using rule 18 (declarar_funciones -> FUNCTION ID PA PC LLAVEA bloque_codigo REFETUFURN PYC LLAVEC .)
    ID              reduce using rule 18 (declarar_funciones -> FUNCTION ID PA PC LLAVEA bloque_codigo REFETUFURN PYC LLAVEC .)


state 269

    (24) declarar_main -> IFINT MAFAIFIN PA PC LLAVEA bloque_codigo REFETUFURN PYC LLAVEC .

    $end            reduce using rule 24 (declarar_main -> IFINT MAFAIFIN PA PC LLAVEA bloque_codigo REFETUFURN PYC LLAVEC .)


state 270

    (33) declarar_main_error -> IFINT MAFAIFIN PA PC LLAVEA bloque_codigo ID PYC LLAVEC .

    $end            reduce using rule 33 (declarar_main_error -> IFINT MAFAIFIN PA PC LLAVEA bloque_codigo ID PYC LLAVEC .)


state 271

    (56) declarar_if_error_llave -> PA condicion PC LLAVEA bloque_codigo . LLAVEC EFELSEFE LLAVEA bloque_codigo LLAVEC
    (90) declaracion_while_error -> PA condicion PC LLAVEA bloque_codigo . LLAVEC

    LLAVEC          shift and go to state 298


state 272

    (51) declarar_if -> IFIF PA condicion PC LLAVEA . bloque_codigo LLAVEC
    (52) declarar_if -> IFIF PA condicion PC LLAVEA . bloque_codigo LLAVEC EFELSEFE LLAVEA bloque_codigo LLAVEC
    (54) declarar_if_error_llave -> IFIF PA condicion PC LLAVEA . bloque_codigo LLAVEC EFELSEFE LLAVEA bloque_codigo
    (55) declarar_if_error_llave -> IFIF PA condicion PC LLAVEA . bloque_codigo LLAVEC EFELSEFE bloque_codigo LLAVEC
    (59) declarar_if_error_llave -> IFIF PA condicion PC LLAVEA . bloque_codigo LLAVEC LLAVEA bloque_codigo LLAVEC
    (42) bloque_codigo -> . declarar_if bloque_codigo
    (43) bloque_codigo -> . declaracion bloque_codigo
    (44) bloque_codigo -> . asignar_estructuras bloque_codigo
    (45) bloque_codigo -> . asignar_array bloque_codigo
    (46) bloque_codigo -> . funcion bloque_codigo
    (47) bloque_codigo -> . print bloque_codigo
    (48) bloque_codigo -> . input bloque_codigo
    (49) bloque_codigo -> . declaracion_while bloque_codigo
    (50) bloque_codigo -> . VACIO
    (51) declarar_if -> . IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC
    (52) declarar_if -> . IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE LLAVEA bloque_codigo LLAVEC
    (53) declarar_if -> . declarar_if_error_llave
    (60) declaracion -> . tipo_dato ID ASG ID operacion_matematica ID PYC
    (61) declaracion -> . tipo_dato ID ASG dato PYC
    (62) declaracion -> . AFARRAFAY ID dimensiones PYC
    (63) declaracion -> . declaracion_error
    (82) asignar_estructuras -> . STRUF ID PUNTO ID ASG dato PYC
    (81) asignar_array -> . ID dimensiones ASG dato PYC
    (83) funcion -> . ID PA valores PC PYC
    (84) funcion -> . ID PA PC PYC
    (85) funcion -> . ID PA valores COMA valores PC PYC
    (86) print -> . PRIFINT PA ID PC PYC
    (87) input -> . IFINPUFUT PA ID PC PYC
    (88) declaracion_while -> . WHIFILEFE PA condicion PC LLAVEA bloque_codigo LLAVEC
    (89) declaracion_while -> . declaracion_while_error
    (54) declarar_if_error_llave -> . IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE LLAVEA bloque_codigo
    (55) declarar_if_error_llave -> . IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE bloque_codigo LLAVEC
    (56) declarar_if_error_llave -> . PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE LLAVEA bloque_codigo LLAVEC
    (57) declarar_if_error_llave -> . ID PA condicion PC LLAVEA bloque_codigo LLAVEC
    (58) declarar_if_error_llave -> . ID PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE LLAVEA bloque_codigo LLAVEC
    (59) declarar_if_error_llave -> . IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC LLAVEA bloque_codigo LLAVEC
    (34) tipo_dato -> . IFINT
    (35) tipo_dato -> . STRIFING
    (36) tipo_dato -> . AFARRAFAY
    (37) tipo_dato -> . STRUFUCT
    (38) tipo_dato -> . VOFOIFID
    (39) tipo_dato -> . CHAFAR
    (40) tipo_dato -> . BOFOOFOL
    (41) tipo_dato -> . FLOFOAFAT
    (64) declaracion_error -> . ID PYC
    (65) declaracion_error -> . ID ASG ID operacion_matematica ID PYC
    (66) declaracion_error -> . ID ASG dato PYC
    (67) declaracion_error -> . ID ID PYC
    (68) declaracion_error -> . ID ID ASG ID operacion_matematica ID PYC
    (69) declaracion_error -> . ID ID ASG valores PYC
    (70) declaracion_error -> . ID ID dimensiones PYC
    (71) declaracion_error -> . ID dimensiones PYC
    (90) declaracion_while_error -> . PA condicion PC LLAVEA bloque_codigo LLAVEC
    (91) declaracion_while_error -> . ID PA condicion PC LLAVEA bloque_codigo LLAVEC
    (92) declaracion_while_error -> . WHIFILEFE PA condicion PC bloque_codigo LLAVEC
    (93) declaracion_while_error -> . WHIFILEFE PA condicion PC LLAVEA bloque_codigo

    VACIO           shift and go to state 83
    IFIF            shift and go to state 84
    AFARRAFAY       shift and go to state 88
    STRUF           shift and go to state 90
    ID              shift and go to state 87
    PRIFINT         shift and go to state 91
    IFINPUFUT       shift and go to state 92
    WHIFILEFE       shift and go to state 93
    PA              shift and go to state 73
    IFINT           shift and go to state 23
    STRIFING        shift and go to state 24
    STRUFUCT        shift and go to state 26
    VOFOIFID        shift and go to state 27
    CHAFAR          shift and go to state 28
    BOFOOFOL        shift and go to state 29
    FLOFOAFAT       shift and go to state 30

    bloque_codigo                  shift and go to state 299
    declarar_if                    shift and go to state 75
    declaracion                    shift and go to state 76
    asignar_estructuras            shift and go to state 77
    asignar_array                  shift and go to state 78
    funcion                        shift and go to state 79
    print                          shift and go to state 80
    input                          shift and go to state 81
    declaracion_while              shift and go to state 82
    declarar_if_error_llave        shift and go to state 85
    tipo_dato                      shift and go to state 86
    declaracion_error              shift and go to state 89
    declaracion_while_error        shift and go to state 94

state 273

    (60) declaracion -> tipo_dato ID ASG ID operacion_matematica . ID PYC

    ID              shift and go to state 300


state 274

    (61) declaracion -> tipo_dato ID ASG dato PYC .

    VACIO           reduce using rule 61 (declaracion -> tipo_dato ID ASG dato PYC .)
    IFIF            reduce using rule 61 (declaracion -> tipo_dato ID ASG dato PYC .)
    AFARRAFAY       reduce using rule 61 (declaracion -> tipo_dato ID ASG dato PYC .)
    STRUF           reduce using rule 61 (declaracion -> tipo_dato ID ASG dato PYC .)
    ID              reduce using rule 61 (declaracion -> tipo_dato ID ASG dato PYC .)
    PRIFINT         reduce using rule 61 (declaracion -> tipo_dato ID ASG dato PYC .)
    IFINPUFUT       reduce using rule 61 (declaracion -> tipo_dato ID ASG dato PYC .)
    WHIFILEFE       reduce using rule 61 (declaracion -> tipo_dato ID ASG dato PYC .)
    PA              reduce using rule 61 (declaracion -> tipo_dato ID ASG dato PYC .)
    IFINT           reduce using rule 61 (declaracion -> tipo_dato ID ASG dato PYC .)
    STRIFING        reduce using rule 61 (declaracion -> tipo_dato ID ASG dato PYC .)
    STRUFUCT        reduce using rule 61 (declaracion -> tipo_dato ID ASG dato PYC .)
    VOFOIFID        reduce using rule 61 (declaracion -> tipo_dato ID ASG dato PYC .)
    CHAFAR          reduce using rule 61 (declaracion -> tipo_dato ID ASG dato PYC .)
    BOFOOFOL        reduce using rule 61 (declaracion -> tipo_dato ID ASG dato PYC .)
    FLOFOAFAT       reduce using rule 61 (declaracion -> tipo_dato ID ASG dato PYC .)


state 275

    (68) declaracion_error -> ID ID ASG ID operacion_matematica . ID PYC

    ID              shift and go to state 301


state 276

    (69) declaracion_error -> ID ID ASG valores PYC .

    VACIO           reduce using rule 69 (declaracion_error -> ID ID ASG valores PYC .)
    IFIF            reduce using rule 69 (declaracion_error -> ID ID ASG valores PYC .)
    AFARRAFAY       reduce using rule 69 (declaracion_error -> ID ID ASG valores PYC .)
    STRUF           reduce using rule 69 (declaracion_error -> ID ID ASG valores PYC .)
    ID              reduce using rule 69 (declaracion_error -> ID ID ASG valores PYC .)
    PRIFINT         reduce using rule 69 (declaracion_error -> ID ID ASG valores PYC .)
    IFINPUFUT       reduce using rule 69 (declaracion_error -> ID ID ASG valores PYC .)
    WHIFILEFE       reduce using rule 69 (declaracion_error -> ID ID ASG valores PYC .)
    PA              reduce using rule 69 (declaracion_error -> ID ID ASG valores PYC .)
    IFINT           reduce using rule 69 (declaracion_error -> ID ID ASG valores PYC .)
    STRIFING        reduce using rule 69 (declaracion_error -> ID ID ASG valores PYC .)
    STRUFUCT        reduce using rule 69 (declaracion_error -> ID ID ASG valores PYC .)
    VOFOIFID        reduce using rule 69 (declaracion_error -> ID ID ASG valores PYC .)
    CHAFAR          reduce using rule 69 (declaracion_error -> ID ID ASG valores PYC .)
    BOFOOFOL        reduce using rule 69 (declaracion_error -> ID ID ASG valores PYC .)
    FLOFOAFAT       reduce using rule 69 (declaracion_error -> ID ID ASG valores PYC .)


state 277

    (81) asignar_array -> ID dimensiones ASG dato PYC .

    VACIO           reduce using rule 81 (asignar_array -> ID dimensiones ASG dato PYC .)
    IFIF            reduce using rule 81 (asignar_array -> ID dimensiones ASG dato PYC .)
    AFARRAFAY       reduce using rule 81 (asignar_array -> ID dimensiones ASG dato PYC .)
    STRUF           reduce using rule 81 (asignar_array -> ID dimensiones ASG dato PYC .)
    ID              reduce using rule 81 (asignar_array -> ID dimensiones ASG dato PYC .)
    PRIFINT         reduce using rule 81 (asignar_array -> ID dimensiones ASG dato PYC .)
    IFINPUFUT       reduce using rule 81 (asignar_array -> ID dimensiones ASG dato PYC .)
    WHIFILEFE       reduce using rule 81 (asignar_array -> ID dimensiones ASG dato PYC .)
    PA              reduce using rule 81 (asignar_array -> ID dimensiones ASG dato PYC .)
    IFINT           reduce using rule 81 (asignar_array -> ID dimensiones ASG dato PYC .)
    STRIFING        reduce using rule 81 (asignar_array -> ID dimensiones ASG dato PYC .)
    STRUFUCT        reduce using rule 81 (asignar_array -> ID dimensiones ASG dato PYC .)
    VOFOIFID        reduce using rule 81 (asignar_array -> ID dimensiones ASG dato PYC .)
    CHAFAR          reduce using rule 81 (asignar_array -> ID dimensiones ASG dato PYC .)
    BOFOOFOL        reduce using rule 81 (asignar_array -> ID dimensiones ASG dato PYC .)
    FLOFOAFAT       reduce using rule 81 (asignar_array -> ID dimensiones ASG dato PYC .)


state 278

    (65) declaracion_error -> ID ASG ID operacion_matematica ID . PYC

    PYC             shift and go to state 302


state 279

    (83) funcion -> ID PA valores PC PYC .

    VACIO           reduce using rule 83 (funcion -> ID PA valores PC PYC .)
    IFIF            reduce using rule 83 (funcion -> ID PA valores PC PYC .)
    AFARRAFAY       reduce using rule 83 (funcion -> ID PA valores PC PYC .)
    STRUF           reduce using rule 83 (funcion -> ID PA valores PC PYC .)
    ID              reduce using rule 83 (funcion -> ID PA valores PC PYC .)
    PRIFINT         reduce using rule 83 (funcion -> ID PA valores PC PYC .)
    IFINPUFUT       reduce using rule 83 (funcion -> ID PA valores PC PYC .)
    WHIFILEFE       reduce using rule 83 (funcion -> ID PA valores PC PYC .)
    PA              reduce using rule 83 (funcion -> ID PA valores PC PYC .)
    IFINT           reduce using rule 83 (funcion -> ID PA valores PC PYC .)
    STRIFING        reduce using rule 83 (funcion -> ID PA valores PC PYC .)
    STRUFUCT        reduce using rule 83 (funcion -> ID PA valores PC PYC .)
    VOFOIFID        reduce using rule 83 (funcion -> ID PA valores PC PYC .)
    CHAFAR          reduce using rule 83 (funcion -> ID PA valores PC PYC .)
    BOFOOFOL        reduce using rule 83 (funcion -> ID PA valores PC PYC .)
    FLOFOAFAT       reduce using rule 83 (funcion -> ID PA valores PC PYC .)


state 280

    (106) valores -> ID .

    PC              reduce using rule 106 (valores -> ID .)


state 281

    (85) funcion -> ID PA valores COMA valores . PC PYC

    PC              shift and go to state 303


state 282

    (57) declarar_if_error_llave -> ID PA condicion PC LLAVEA . bloque_codigo LLAVEC
    (58) declarar_if_error_llave -> ID PA condicion PC LLAVEA . bloque_codigo LLAVEC EFELSEFE LLAVEA bloque_codigo LLAVEC
    (91) declaracion_while_error -> ID PA condicion PC LLAVEA . bloque_codigo LLAVEC
    (42) bloque_codigo -> . declarar_if bloque_codigo
    (43) bloque_codigo -> . declaracion bloque_codigo
    (44) bloque_codigo -> . asignar_estructuras bloque_codigo
    (45) bloque_codigo -> . asignar_array bloque_codigo
    (46) bloque_codigo -> . funcion bloque_codigo
    (47) bloque_codigo -> . print bloque_codigo
    (48) bloque_codigo -> . input bloque_codigo
    (49) bloque_codigo -> . declaracion_while bloque_codigo
    (50) bloque_codigo -> . VACIO
    (51) declarar_if -> . IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC
    (52) declarar_if -> . IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE LLAVEA bloque_codigo LLAVEC
    (53) declarar_if -> . declarar_if_error_llave
    (60) declaracion -> . tipo_dato ID ASG ID operacion_matematica ID PYC
    (61) declaracion -> . tipo_dato ID ASG dato PYC
    (62) declaracion -> . AFARRAFAY ID dimensiones PYC
    (63) declaracion -> . declaracion_error
    (82) asignar_estructuras -> . STRUF ID PUNTO ID ASG dato PYC
    (81) asignar_array -> . ID dimensiones ASG dato PYC
    (83) funcion -> . ID PA valores PC PYC
    (84) funcion -> . ID PA PC PYC
    (85) funcion -> . ID PA valores COMA valores PC PYC
    (86) print -> . PRIFINT PA ID PC PYC
    (87) input -> . IFINPUFUT PA ID PC PYC
    (88) declaracion_while -> . WHIFILEFE PA condicion PC LLAVEA bloque_codigo LLAVEC
    (89) declaracion_while -> . declaracion_while_error
    (54) declarar_if_error_llave -> . IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE LLAVEA bloque_codigo
    (55) declarar_if_error_llave -> . IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE bloque_codigo LLAVEC
    (56) declarar_if_error_llave -> . PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE LLAVEA bloque_codigo LLAVEC
    (57) declarar_if_error_llave -> . ID PA condicion PC LLAVEA bloque_codigo LLAVEC
    (58) declarar_if_error_llave -> . ID PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE LLAVEA bloque_codigo LLAVEC
    (59) declarar_if_error_llave -> . IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC LLAVEA bloque_codigo LLAVEC
    (34) tipo_dato -> . IFINT
    (35) tipo_dato -> . STRIFING
    (36) tipo_dato -> . AFARRAFAY
    (37) tipo_dato -> . STRUFUCT
    (38) tipo_dato -> . VOFOIFID
    (39) tipo_dato -> . CHAFAR
    (40) tipo_dato -> . BOFOOFOL
    (41) tipo_dato -> . FLOFOAFAT
    (64) declaracion_error -> . ID PYC
    (65) declaracion_error -> . ID ASG ID operacion_matematica ID PYC
    (66) declaracion_error -> . ID ASG dato PYC
    (67) declaracion_error -> . ID ID PYC
    (68) declaracion_error -> . ID ID ASG ID operacion_matematica ID PYC
    (69) declaracion_error -> . ID ID ASG valores PYC
    (70) declaracion_error -> . ID ID dimensiones PYC
    (71) declaracion_error -> . ID dimensiones PYC
    (90) declaracion_while_error -> . PA condicion PC LLAVEA bloque_codigo LLAVEC
    (91) declaracion_while_error -> . ID PA condicion PC LLAVEA bloque_codigo LLAVEC
    (92) declaracion_while_error -> . WHIFILEFE PA condicion PC bloque_codigo LLAVEC
    (93) declaracion_while_error -> . WHIFILEFE PA condicion PC LLAVEA bloque_codigo

    VACIO           shift and go to state 83
    IFIF            shift and go to state 84
    AFARRAFAY       shift and go to state 88
    STRUF           shift and go to state 90
    ID              shift and go to state 87
    PRIFINT         shift and go to state 91
    IFINPUFUT       shift and go to state 92
    WHIFILEFE       shift and go to state 93
    PA              shift and go to state 73
    IFINT           shift and go to state 23
    STRIFING        shift and go to state 24
    STRUFUCT        shift and go to state 26
    VOFOIFID        shift and go to state 27
    CHAFAR          shift and go to state 28
    BOFOOFOL        shift and go to state 29
    FLOFOAFAT       shift and go to state 30

    bloque_codigo                  shift and go to state 304
    declarar_if                    shift and go to state 75
    declaracion                    shift and go to state 76
    asignar_estructuras            shift and go to state 77
    asignar_array                  shift and go to state 78
    funcion                        shift and go to state 79
    print                          shift and go to state 80
    input                          shift and go to state 81
    declaracion_while              shift and go to state 82
    declarar_if_error_llave        shift and go to state 85
    tipo_dato                      shift and go to state 86
    declaracion_error              shift and go to state 89
    declaracion_while_error        shift and go to state 94

state 283

    (82) asignar_estructuras -> STRUF ID PUNTO ID ASG . dato PYC
    (107) dato -> . INT
    (108) dato -> . CHAR
    (109) dato -> . TRUFUEFE
    (110) dato -> . FAFALSEFE
    (111) dato -> . PCC
    (112) dato -> . REAL

    INT             shift and go to state 175
    CHAR            shift and go to state 176
    TRUFUEFE        shift and go to state 177
    FAFALSEFE       shift and go to state 178
    PCC             shift and go to state 179
    REAL            shift and go to state 180

    dato                           shift and go to state 305

state 284

    (86) print -> PRIFINT PA ID PC PYC .

    VACIO           reduce using rule 86 (print -> PRIFINT PA ID PC PYC .)
    IFIF            reduce using rule 86 (print -> PRIFINT PA ID PC PYC .)
    AFARRAFAY       reduce using rule 86 (print -> PRIFINT PA ID PC PYC .)
    STRUF           reduce using rule 86 (print -> PRIFINT PA ID PC PYC .)
    ID              reduce using rule 86 (print -> PRIFINT PA ID PC PYC .)
    PRIFINT         reduce using rule 86 (print -> PRIFINT PA ID PC PYC .)
    IFINPUFUT       reduce using rule 86 (print -> PRIFINT PA ID PC PYC .)
    WHIFILEFE       reduce using rule 86 (print -> PRIFINT PA ID PC PYC .)
    PA              reduce using rule 86 (print -> PRIFINT PA ID PC PYC .)
    IFINT           reduce using rule 86 (print -> PRIFINT PA ID PC PYC .)
    STRIFING        reduce using rule 86 (print -> PRIFINT PA ID PC PYC .)
    STRUFUCT        reduce using rule 86 (print -> PRIFINT PA ID PC PYC .)
    VOFOIFID        reduce using rule 86 (print -> PRIFINT PA ID PC PYC .)
    CHAFAR          reduce using rule 86 (print -> PRIFINT PA ID PC PYC .)
    BOFOOFOL        reduce using rule 86 (print -> PRIFINT PA ID PC PYC .)
    FLOFOAFAT       reduce using rule 86 (print -> PRIFINT PA ID PC PYC .)


state 285

    (87) input -> IFINPUFUT PA ID PC PYC .

    VACIO           reduce using rule 87 (input -> IFINPUFUT PA ID PC PYC .)
    IFIF            reduce using rule 87 (input -> IFINPUFUT PA ID PC PYC .)
    AFARRAFAY       reduce using rule 87 (input -> IFINPUFUT PA ID PC PYC .)
    STRUF           reduce using rule 87 (input -> IFINPUFUT PA ID PC PYC .)
    ID              reduce using rule 87 (input -> IFINPUFUT PA ID PC PYC .)
    PRIFINT         reduce using rule 87 (input -> IFINPUFUT PA ID PC PYC .)
    IFINPUFUT       reduce using rule 87 (input -> IFINPUFUT PA ID PC PYC .)
    WHIFILEFE       reduce using rule 87 (input -> IFINPUFUT PA ID PC PYC .)
    PA              reduce using rule 87 (input -> IFINPUFUT PA ID PC PYC .)
    IFINT           reduce using rule 87 (input -> IFINPUFUT PA ID PC PYC .)
    STRIFING        reduce using rule 87 (input -> IFINPUFUT PA ID PC PYC .)
    STRUFUCT        reduce using rule 87 (input -> IFINPUFUT PA ID PC PYC .)
    VOFOIFID        reduce using rule 87 (input -> IFINPUFUT PA ID PC PYC .)
    CHAFAR          reduce using rule 87 (input -> IFINPUFUT PA ID PC PYC .)
    BOFOOFOL        reduce using rule 87 (input -> IFINPUFUT PA ID PC PYC .)
    FLOFOAFAT       reduce using rule 87 (input -> IFINPUFUT PA ID PC PYC .)


state 286

    (88) declaracion_while -> WHIFILEFE PA condicion PC LLAVEA . bloque_codigo LLAVEC
    (93) declaracion_while_error -> WHIFILEFE PA condicion PC LLAVEA . bloque_codigo
    (42) bloque_codigo -> . declarar_if bloque_codigo
    (43) bloque_codigo -> . declaracion bloque_codigo
    (44) bloque_codigo -> . asignar_estructuras bloque_codigo
    (45) bloque_codigo -> . asignar_array bloque_codigo
    (46) bloque_codigo -> . funcion bloque_codigo
    (47) bloque_codigo -> . print bloque_codigo
    (48) bloque_codigo -> . input bloque_codigo
    (49) bloque_codigo -> . declaracion_while bloque_codigo
    (50) bloque_codigo -> . VACIO
    (51) declarar_if -> . IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC
    (52) declarar_if -> . IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE LLAVEA bloque_codigo LLAVEC
    (53) declarar_if -> . declarar_if_error_llave
    (60) declaracion -> . tipo_dato ID ASG ID operacion_matematica ID PYC
    (61) declaracion -> . tipo_dato ID ASG dato PYC
    (62) declaracion -> . AFARRAFAY ID dimensiones PYC
    (63) declaracion -> . declaracion_error
    (82) asignar_estructuras -> . STRUF ID PUNTO ID ASG dato PYC
    (81) asignar_array -> . ID dimensiones ASG dato PYC
    (83) funcion -> . ID PA valores PC PYC
    (84) funcion -> . ID PA PC PYC
    (85) funcion -> . ID PA valores COMA valores PC PYC
    (86) print -> . PRIFINT PA ID PC PYC
    (87) input -> . IFINPUFUT PA ID PC PYC
    (88) declaracion_while -> . WHIFILEFE PA condicion PC LLAVEA bloque_codigo LLAVEC
    (89) declaracion_while -> . declaracion_while_error
    (54) declarar_if_error_llave -> . IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE LLAVEA bloque_codigo
    (55) declarar_if_error_llave -> . IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE bloque_codigo LLAVEC
    (56) declarar_if_error_llave -> . PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE LLAVEA bloque_codigo LLAVEC
    (57) declarar_if_error_llave -> . ID PA condicion PC LLAVEA bloque_codigo LLAVEC
    (58) declarar_if_error_llave -> . ID PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE LLAVEA bloque_codigo LLAVEC
    (59) declarar_if_error_llave -> . IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC LLAVEA bloque_codigo LLAVEC
    (34) tipo_dato -> . IFINT
    (35) tipo_dato -> . STRIFING
    (36) tipo_dato -> . AFARRAFAY
    (37) tipo_dato -> . STRUFUCT
    (38) tipo_dato -> . VOFOIFID
    (39) tipo_dato -> . CHAFAR
    (40) tipo_dato -> . BOFOOFOL
    (41) tipo_dato -> . FLOFOAFAT
    (64) declaracion_error -> . ID PYC
    (65) declaracion_error -> . ID ASG ID operacion_matematica ID PYC
    (66) declaracion_error -> . ID ASG dato PYC
    (67) declaracion_error -> . ID ID PYC
    (68) declaracion_error -> . ID ID ASG ID operacion_matematica ID PYC
    (69) declaracion_error -> . ID ID ASG valores PYC
    (70) declaracion_error -> . ID ID dimensiones PYC
    (71) declaracion_error -> . ID dimensiones PYC
    (90) declaracion_while_error -> . PA condicion PC LLAVEA bloque_codigo LLAVEC
    (91) declaracion_while_error -> . ID PA condicion PC LLAVEA bloque_codigo LLAVEC
    (92) declaracion_while_error -> . WHIFILEFE PA condicion PC bloque_codigo LLAVEC
    (93) declaracion_while_error -> . WHIFILEFE PA condicion PC LLAVEA bloque_codigo

    VACIO           shift and go to state 83
    IFIF            shift and go to state 84
    AFARRAFAY       shift and go to state 88
    STRUF           shift and go to state 90
    ID              shift and go to state 87
    PRIFINT         shift and go to state 91
    IFINPUFUT       shift and go to state 92
    WHIFILEFE       shift and go to state 93
    PA              shift and go to state 73
    IFINT           shift and go to state 23
    STRIFING        shift and go to state 24
    STRUFUCT        shift and go to state 26
    VOFOIFID        shift and go to state 27
    CHAFAR          shift and go to state 28
    BOFOOFOL        shift and go to state 29
    FLOFOAFAT       shift and go to state 30

    bloque_codigo                  shift and go to state 306
    declarar_if                    shift and go to state 75
    declaracion                    shift and go to state 76
    asignar_estructuras            shift and go to state 77
    asignar_array                  shift and go to state 78
    funcion                        shift and go to state 79
    print                          shift and go to state 80
    input                          shift and go to state 81
    declaracion_while              shift and go to state 82
    declarar_if_error_llave        shift and go to state 85
    tipo_dato                      shift and go to state 86
    declaracion_error              shift and go to state 89
    declaracion_while_error        shift and go to state 94

state 287

    (92) declaracion_while_error -> WHIFILEFE PA condicion PC bloque_codigo . LLAVEC

    LLAVEC          shift and go to state 307


state 288

    (30) declarar_main_error -> IFINT ID PA PC LLAVEA bloque_codigo REFETUFURN PYC LLAVEC .

    $end            reduce using rule 30 (declarar_main_error -> IFINT ID PA PC LLAVEA bloque_codigo REFETUFURN PYC LLAVEC .)


state 289

    (13) declarar_estructuras_error -> STRUFUCT ID LLAVEA tipo_dato ID PYC tipo_dato ID PYC tipo_dato . ID PYC LLAVEC

    ID              shift and go to state 308


state 290

    (5) declarar_estructuras -> STRUFUCT ID LLAVEA tipo_dato ID PYC tipo_dato ID PYC LLAVEC .

    IFINT           reduce using rule 5 (declarar_estructuras -> STRUFUCT ID LLAVEA tipo_dato ID PYC tipo_dato ID PYC LLAVEC .)
    FUNCTION        reduce using rule 5 (declarar_estructuras -> STRUFUCT ID LLAVEA tipo_dato ID PYC tipo_dato ID PYC LLAVEC .)
    MAFAIFIN        reduce using rule 5 (declarar_estructuras -> STRUFUCT ID LLAVEA tipo_dato ID PYC tipo_dato ID PYC LLAVEC .)
    ID              reduce using rule 5 (declarar_estructuras -> STRUFUCT ID LLAVEA tipo_dato ID PYC tipo_dato ID PYC LLAVEC .)


state 291

    (8) declarar_estructuras_error -> ID ID LLAVEA tipo_dato ID PYC tipo_dato ID PYC LLAVEC .

    IFINT           reduce using rule 8 (declarar_estructuras_error -> ID ID LLAVEA tipo_dato ID PYC tipo_dato ID PYC LLAVEC .)
    FUNCTION        reduce using rule 8 (declarar_estructuras_error -> ID ID LLAVEA tipo_dato ID PYC tipo_dato ID PYC LLAVEC .)
    MAFAIFIN        reduce using rule 8 (declarar_estructuras_error -> ID ID LLAVEA tipo_dato ID PYC tipo_dato ID PYC LLAVEC .)
    ID              reduce using rule 8 (declarar_estructuras_error -> ID ID LLAVEA tipo_dato ID PYC tipo_dato ID PYC LLAVEC .)


state 292

    (14) declarar_funciones -> FUNCTION tipo_dato ID PA tipo_dato ID PC LLAVEA bloque_codigo REFETUFURN . ID PYC LLAVEC
    (22) declarar_funciones_error -> FUNCTION tipo_dato ID PA tipo_dato ID PC LLAVEA bloque_codigo REFETUFURN . PYC LLAVEC

    ID              shift and go to state 309
    PYC             shift and go to state 310


state 293

    (16) declarar_funciones -> FUNCTION tipo_dato ID PA tipo_dato ID COMA tipo_dato ID PC . LLAVEA bloque_codigo REFETUFURN ID PYC LLAVEC
    (21) declarar_funciones_error -> FUNCTION tipo_dato ID PA tipo_dato ID COMA tipo_dato ID PC . LLAVEA bloque_codigo REFETUFURN PYC LLAVEC

    LLAVEA          shift and go to state 311


state 294

    (15) declarar_funciones -> FUNCTION tipo_dato ID PA PC LLAVEA bloque_codigo REFETUFURN ID PYC . LLAVEC

    LLAVEC          shift and go to state 312


state 295

    (23) declarar_funciones_error -> FUNCTION tipo_dato ID PA PC LLAVEA bloque_codigo REFETUFURN PYC LLAVEC .

    IFINT           reduce using rule 23 (declarar_funciones_error -> FUNCTION tipo_dato ID PA PC LLAVEA bloque_codigo REFETUFURN PYC LLAVEC .)
    MAFAIFIN        reduce using rule 23 (declarar_funciones_error -> FUNCTION tipo_dato ID PA PC LLAVEA bloque_codigo REFETUFURN PYC LLAVEC .)
    ID              reduce using rule 23 (declarar_funciones_error -> FUNCTION tipo_dato ID PA PC LLAVEA bloque_codigo REFETUFURN PYC LLAVEC .)


state 296

    (17) declarar_funciones -> FUNCTION ID PA tipo_dato ID PC LLAVEA bloque_codigo REFETUFURN PYC . LLAVEC

    LLAVEC          shift and go to state 313


state 297

    (19) declarar_funciones -> FUNCTION ID PA tipo_dato ID COMA tipo_dato ID PC LLAVEA . bloque_codigo REFETUFURN PYC LLAVEC
    (42) bloque_codigo -> . declarar_if bloque_codigo
    (43) bloque_codigo -> . declaracion bloque_codigo
    (44) bloque_codigo -> . asignar_estructuras bloque_codigo
    (45) bloque_codigo -> . asignar_array bloque_codigo
    (46) bloque_codigo -> . funcion bloque_codigo
    (47) bloque_codigo -> . print bloque_codigo
    (48) bloque_codigo -> . input bloque_codigo
    (49) bloque_codigo -> . declaracion_while bloque_codigo
    (50) bloque_codigo -> . VACIO
    (51) declarar_if -> . IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC
    (52) declarar_if -> . IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE LLAVEA bloque_codigo LLAVEC
    (53) declarar_if -> . declarar_if_error_llave
    (60) declaracion -> . tipo_dato ID ASG ID operacion_matematica ID PYC
    (61) declaracion -> . tipo_dato ID ASG dato PYC
    (62) declaracion -> . AFARRAFAY ID dimensiones PYC
    (63) declaracion -> . declaracion_error
    (82) asignar_estructuras -> . STRUF ID PUNTO ID ASG dato PYC
    (81) asignar_array -> . ID dimensiones ASG dato PYC
    (83) funcion -> . ID PA valores PC PYC
    (84) funcion -> . ID PA PC PYC
    (85) funcion -> . ID PA valores COMA valores PC PYC
    (86) print -> . PRIFINT PA ID PC PYC
    (87) input -> . IFINPUFUT PA ID PC PYC
    (88) declaracion_while -> . WHIFILEFE PA condicion PC LLAVEA bloque_codigo LLAVEC
    (89) declaracion_while -> . declaracion_while_error
    (54) declarar_if_error_llave -> . IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE LLAVEA bloque_codigo
    (55) declarar_if_error_llave -> . IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE bloque_codigo LLAVEC
    (56) declarar_if_error_llave -> . PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE LLAVEA bloque_codigo LLAVEC
    (57) declarar_if_error_llave -> . ID PA condicion PC LLAVEA bloque_codigo LLAVEC
    (58) declarar_if_error_llave -> . ID PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE LLAVEA bloque_codigo LLAVEC
    (59) declarar_if_error_llave -> . IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC LLAVEA bloque_codigo LLAVEC
    (34) tipo_dato -> . IFINT
    (35) tipo_dato -> . STRIFING
    (36) tipo_dato -> . AFARRAFAY
    (37) tipo_dato -> . STRUFUCT
    (38) tipo_dato -> . VOFOIFID
    (39) tipo_dato -> . CHAFAR
    (40) tipo_dato -> . BOFOOFOL
    (41) tipo_dato -> . FLOFOAFAT
    (64) declaracion_error -> . ID PYC
    (65) declaracion_error -> . ID ASG ID operacion_matematica ID PYC
    (66) declaracion_error -> . ID ASG dato PYC
    (67) declaracion_error -> . ID ID PYC
    (68) declaracion_error -> . ID ID ASG ID operacion_matematica ID PYC
    (69) declaracion_error -> . ID ID ASG valores PYC
    (70) declaracion_error -> . ID ID dimensiones PYC
    (71) declaracion_error -> . ID dimensiones PYC
    (90) declaracion_while_error -> . PA condicion PC LLAVEA bloque_codigo LLAVEC
    (91) declaracion_while_error -> . ID PA condicion PC LLAVEA bloque_codigo LLAVEC
    (92) declaracion_while_error -> . WHIFILEFE PA condicion PC bloque_codigo LLAVEC
    (93) declaracion_while_error -> . WHIFILEFE PA condicion PC LLAVEA bloque_codigo

    VACIO           shift and go to state 83
    IFIF            shift and go to state 84
    AFARRAFAY       shift and go to state 88
    STRUF           shift and go to state 90
    ID              shift and go to state 87
    PRIFINT         shift and go to state 91
    IFINPUFUT       shift and go to state 92
    WHIFILEFE       shift and go to state 93
    PA              shift and go to state 73
    IFINT           shift and go to state 23
    STRIFING        shift and go to state 24
    STRUFUCT        shift and go to state 26
    VOFOIFID        shift and go to state 27
    CHAFAR          shift and go to state 28
    BOFOOFOL        shift and go to state 29
    FLOFOAFAT       shift and go to state 30

    tipo_dato                      shift and go to state 86
    bloque_codigo                  shift and go to state 314
    declarar_if                    shift and go to state 75
    declaracion                    shift and go to state 76
    asignar_estructuras            shift and go to state 77
    asignar_array                  shift and go to state 78
    funcion                        shift and go to state 79
    print                          shift and go to state 80
    input                          shift and go to state 81
    declaracion_while              shift and go to state 82
    declarar_if_error_llave        shift and go to state 85
    declaracion_error              shift and go to state 89
    declaracion_while_error        shift and go to state 94

state 298

    (56) declarar_if_error_llave -> PA condicion PC LLAVEA bloque_codigo LLAVEC . EFELSEFE LLAVEA bloque_codigo LLAVEC
    (90) declaracion_while_error -> PA condicion PC LLAVEA bloque_codigo LLAVEC .

    EFELSEFE        shift and go to state 315
    VACIO           reduce using rule 90 (declaracion_while_error -> PA condicion PC LLAVEA bloque_codigo LLAVEC .)
    IFIF            reduce using rule 90 (declaracion_while_error -> PA condicion PC LLAVEA bloque_codigo LLAVEC .)
    AFARRAFAY       reduce using rule 90 (declaracion_while_error -> PA condicion PC LLAVEA bloque_codigo LLAVEC .)
    STRUF           reduce using rule 90 (declaracion_while_error -> PA condicion PC LLAVEA bloque_codigo LLAVEC .)
    ID              reduce using rule 90 (declaracion_while_error -> PA condicion PC LLAVEA bloque_codigo LLAVEC .)
    PRIFINT         reduce using rule 90 (declaracion_while_error -> PA condicion PC LLAVEA bloque_codigo LLAVEC .)
    IFINPUFUT       reduce using rule 90 (declaracion_while_error -> PA condicion PC LLAVEA bloque_codigo LLAVEC .)
    WHIFILEFE       reduce using rule 90 (declaracion_while_error -> PA condicion PC LLAVEA bloque_codigo LLAVEC .)
    PA              reduce using rule 90 (declaracion_while_error -> PA condicion PC LLAVEA bloque_codigo LLAVEC .)
    IFINT           reduce using rule 90 (declaracion_while_error -> PA condicion PC LLAVEA bloque_codigo LLAVEC .)
    STRIFING        reduce using rule 90 (declaracion_while_error -> PA condicion PC LLAVEA bloque_codigo LLAVEC .)
    STRUFUCT        reduce using rule 90 (declaracion_while_error -> PA condicion PC LLAVEA bloque_codigo LLAVEC .)
    VOFOIFID        reduce using rule 90 (declaracion_while_error -> PA condicion PC LLAVEA bloque_codigo LLAVEC .)
    CHAFAR          reduce using rule 90 (declaracion_while_error -> PA condicion PC LLAVEA bloque_codigo LLAVEC .)
    BOFOOFOL        reduce using rule 90 (declaracion_while_error -> PA condicion PC LLAVEA bloque_codigo LLAVEC .)
    FLOFOAFAT       reduce using rule 90 (declaracion_while_error -> PA condicion PC LLAVEA bloque_codigo LLAVEC .)


state 299

    (51) declarar_if -> IFIF PA condicion PC LLAVEA bloque_codigo . LLAVEC
    (52) declarar_if -> IFIF PA condicion PC LLAVEA bloque_codigo . LLAVEC EFELSEFE LLAVEA bloque_codigo LLAVEC
    (54) declarar_if_error_llave -> IFIF PA condicion PC LLAVEA bloque_codigo . LLAVEC EFELSEFE LLAVEA bloque_codigo
    (55) declarar_if_error_llave -> IFIF PA condicion PC LLAVEA bloque_codigo . LLAVEC EFELSEFE bloque_codigo LLAVEC
    (59) declarar_if_error_llave -> IFIF PA condicion PC LLAVEA bloque_codigo . LLAVEC LLAVEA bloque_codigo LLAVEC

    LLAVEC          shift and go to state 316


state 300

    (60) declaracion -> tipo_dato ID ASG ID operacion_matematica ID . PYC

    PYC             shift and go to state 317


state 301

    (68) declaracion_error -> ID ID ASG ID operacion_matematica ID . PYC

    PYC             shift and go to state 318


state 302

    (65) declaracion_error -> ID ASG ID operacion_matematica ID PYC .

    VACIO           reduce using rule 65 (declaracion_error -> ID ASG ID operacion_matematica ID PYC .)
    IFIF            reduce using rule 65 (declaracion_error -> ID ASG ID operacion_matematica ID PYC .)
    AFARRAFAY       reduce using rule 65 (declaracion_error -> ID ASG ID operacion_matematica ID PYC .)
    STRUF           reduce using rule 65 (declaracion_error -> ID ASG ID operacion_matematica ID PYC .)
    ID              reduce using rule 65 (declaracion_error -> ID ASG ID operacion_matematica ID PYC .)
    PRIFINT         reduce using rule 65 (declaracion_error -> ID ASG ID operacion_matematica ID PYC .)
    IFINPUFUT       reduce using rule 65 (declaracion_error -> ID ASG ID operacion_matematica ID PYC .)
    WHIFILEFE       reduce using rule 65 (declaracion_error -> ID ASG ID operacion_matematica ID PYC .)
    PA              reduce using rule 65 (declaracion_error -> ID ASG ID operacion_matematica ID PYC .)
    IFINT           reduce using rule 65 (declaracion_error -> ID ASG ID operacion_matematica ID PYC .)
    STRIFING        reduce using rule 65 (declaracion_error -> ID ASG ID operacion_matematica ID PYC .)
    STRUFUCT        reduce using rule 65 (declaracion_error -> ID ASG ID operacion_matematica ID PYC .)
    VOFOIFID        reduce using rule 65 (declaracion_error -> ID ASG ID operacion_matematica ID PYC .)
    CHAFAR          reduce using rule 65 (declaracion_error -> ID ASG ID operacion_matematica ID PYC .)
    BOFOOFOL        reduce using rule 65 (declaracion_error -> ID ASG ID operacion_matematica ID PYC .)
    FLOFOAFAT       reduce using rule 65 (declaracion_error -> ID ASG ID operacion_matematica ID PYC .)


state 303

    (85) funcion -> ID PA valores COMA valores PC . PYC

    PYC             shift and go to state 319


state 304

    (57) declarar_if_error_llave -> ID PA condicion PC LLAVEA bloque_codigo . LLAVEC
    (58) declarar_if_error_llave -> ID PA condicion PC LLAVEA bloque_codigo . LLAVEC EFELSEFE LLAVEA bloque_codigo LLAVEC
    (91) declaracion_while_error -> ID PA condicion PC LLAVEA bloque_codigo . LLAVEC

    LLAVEC          shift and go to state 320


state 305

    (82) asignar_estructuras -> STRUF ID PUNTO ID ASG dato . PYC

    PYC             shift and go to state 321


state 306

    (88) declaracion_while -> WHIFILEFE PA condicion PC LLAVEA bloque_codigo . LLAVEC
    (93) declaracion_while_error -> WHIFILEFE PA condicion PC LLAVEA bloque_codigo .

    LLAVEC          shift and go to state 322
    VACIO           reduce using rule 93 (declaracion_while_error -> WHIFILEFE PA condicion PC LLAVEA bloque_codigo .)
    IFIF            reduce using rule 93 (declaracion_while_error -> WHIFILEFE PA condicion PC LLAVEA bloque_codigo .)
    AFARRAFAY       reduce using rule 93 (declaracion_while_error -> WHIFILEFE PA condicion PC LLAVEA bloque_codigo .)
    STRUF           reduce using rule 93 (declaracion_while_error -> WHIFILEFE PA condicion PC LLAVEA bloque_codigo .)
    ID              reduce using rule 93 (declaracion_while_error -> WHIFILEFE PA condicion PC LLAVEA bloque_codigo .)
    PRIFINT         reduce using rule 93 (declaracion_while_error -> WHIFILEFE PA condicion PC LLAVEA bloque_codigo .)
    IFINPUFUT       reduce using rule 93 (declaracion_while_error -> WHIFILEFE PA condicion PC LLAVEA bloque_codigo .)
    WHIFILEFE       reduce using rule 93 (declaracion_while_error -> WHIFILEFE PA condicion PC LLAVEA bloque_codigo .)
    PA              reduce using rule 93 (declaracion_while_error -> WHIFILEFE PA condicion PC LLAVEA bloque_codigo .)
    IFINT           reduce using rule 93 (declaracion_while_error -> WHIFILEFE PA condicion PC LLAVEA bloque_codigo .)
    STRIFING        reduce using rule 93 (declaracion_while_error -> WHIFILEFE PA condicion PC LLAVEA bloque_codigo .)
    STRUFUCT        reduce using rule 93 (declaracion_while_error -> WHIFILEFE PA condicion PC LLAVEA bloque_codigo .)
    VOFOIFID        reduce using rule 93 (declaracion_while_error -> WHIFILEFE PA condicion PC LLAVEA bloque_codigo .)
    CHAFAR          reduce using rule 93 (declaracion_while_error -> WHIFILEFE PA condicion PC LLAVEA bloque_codigo .)
    BOFOOFOL        reduce using rule 93 (declaracion_while_error -> WHIFILEFE PA condicion PC LLAVEA bloque_codigo .)
    FLOFOAFAT       reduce using rule 93 (declaracion_while_error -> WHIFILEFE PA condicion PC LLAVEA bloque_codigo .)


state 307

    (92) declaracion_while_error -> WHIFILEFE PA condicion PC bloque_codigo LLAVEC .

    VACIO           reduce using rule 92 (declaracion_while_error -> WHIFILEFE PA condicion PC bloque_codigo LLAVEC .)
    IFIF            reduce using rule 92 (declaracion_while_error -> WHIFILEFE PA condicion PC bloque_codigo LLAVEC .)
    AFARRAFAY       reduce using rule 92 (declaracion_while_error -> WHIFILEFE PA condicion PC bloque_codigo LLAVEC .)
    STRUF           reduce using rule 92 (declaracion_while_error -> WHIFILEFE PA condicion PC bloque_codigo LLAVEC .)
    ID              reduce using rule 92 (declaracion_while_error -> WHIFILEFE PA condicion PC bloque_codigo LLAVEC .)
    PRIFINT         reduce using rule 92 (declaracion_while_error -> WHIFILEFE PA condicion PC bloque_codigo LLAVEC .)
    IFINPUFUT       reduce using rule 92 (declaracion_while_error -> WHIFILEFE PA condicion PC bloque_codigo LLAVEC .)
    WHIFILEFE       reduce using rule 92 (declaracion_while_error -> WHIFILEFE PA condicion PC bloque_codigo LLAVEC .)
    PA              reduce using rule 92 (declaracion_while_error -> WHIFILEFE PA condicion PC bloque_codigo LLAVEC .)
    IFINT           reduce using rule 92 (declaracion_while_error -> WHIFILEFE PA condicion PC bloque_codigo LLAVEC .)
    STRIFING        reduce using rule 92 (declaracion_while_error -> WHIFILEFE PA condicion PC bloque_codigo LLAVEC .)
    STRUFUCT        reduce using rule 92 (declaracion_while_error -> WHIFILEFE PA condicion PC bloque_codigo LLAVEC .)
    VOFOIFID        reduce using rule 92 (declaracion_while_error -> WHIFILEFE PA condicion PC bloque_codigo LLAVEC .)
    CHAFAR          reduce using rule 92 (declaracion_while_error -> WHIFILEFE PA condicion PC bloque_codigo LLAVEC .)
    BOFOOFOL        reduce using rule 92 (declaracion_while_error -> WHIFILEFE PA condicion PC bloque_codigo LLAVEC .)
    FLOFOAFAT       reduce using rule 92 (declaracion_while_error -> WHIFILEFE PA condicion PC bloque_codigo LLAVEC .)


state 308

    (13) declarar_estructuras_error -> STRUFUCT ID LLAVEA tipo_dato ID PYC tipo_dato ID PYC tipo_dato ID . PYC LLAVEC

    PYC             shift and go to state 323


state 309

    (14) declarar_funciones -> FUNCTION tipo_dato ID PA tipo_dato ID PC LLAVEA bloque_codigo REFETUFURN ID . PYC LLAVEC

    PYC             shift and go to state 324


state 310

    (22) declarar_funciones_error -> FUNCTION tipo_dato ID PA tipo_dato ID PC LLAVEA bloque_codigo REFETUFURN PYC . LLAVEC

    LLAVEC          shift and go to state 325


state 311

    (16) declarar_funciones -> FUNCTION tipo_dato ID PA tipo_dato ID COMA tipo_dato ID PC LLAVEA . bloque_codigo REFETUFURN ID PYC LLAVEC
    (21) declarar_funciones_error -> FUNCTION tipo_dato ID PA tipo_dato ID COMA tipo_dato ID PC LLAVEA . bloque_codigo REFETUFURN PYC LLAVEC
    (42) bloque_codigo -> . declarar_if bloque_codigo
    (43) bloque_codigo -> . declaracion bloque_codigo
    (44) bloque_codigo -> . asignar_estructuras bloque_codigo
    (45) bloque_codigo -> . asignar_array bloque_codigo
    (46) bloque_codigo -> . funcion bloque_codigo
    (47) bloque_codigo -> . print bloque_codigo
    (48) bloque_codigo -> . input bloque_codigo
    (49) bloque_codigo -> . declaracion_while bloque_codigo
    (50) bloque_codigo -> . VACIO
    (51) declarar_if -> . IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC
    (52) declarar_if -> . IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE LLAVEA bloque_codigo LLAVEC
    (53) declarar_if -> . declarar_if_error_llave
    (60) declaracion -> . tipo_dato ID ASG ID operacion_matematica ID PYC
    (61) declaracion -> . tipo_dato ID ASG dato PYC
    (62) declaracion -> . AFARRAFAY ID dimensiones PYC
    (63) declaracion -> . declaracion_error
    (82) asignar_estructuras -> . STRUF ID PUNTO ID ASG dato PYC
    (81) asignar_array -> . ID dimensiones ASG dato PYC
    (83) funcion -> . ID PA valores PC PYC
    (84) funcion -> . ID PA PC PYC
    (85) funcion -> . ID PA valores COMA valores PC PYC
    (86) print -> . PRIFINT PA ID PC PYC
    (87) input -> . IFINPUFUT PA ID PC PYC
    (88) declaracion_while -> . WHIFILEFE PA condicion PC LLAVEA bloque_codigo LLAVEC
    (89) declaracion_while -> . declaracion_while_error
    (54) declarar_if_error_llave -> . IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE LLAVEA bloque_codigo
    (55) declarar_if_error_llave -> . IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE bloque_codigo LLAVEC
    (56) declarar_if_error_llave -> . PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE LLAVEA bloque_codigo LLAVEC
    (57) declarar_if_error_llave -> . ID PA condicion PC LLAVEA bloque_codigo LLAVEC
    (58) declarar_if_error_llave -> . ID PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE LLAVEA bloque_codigo LLAVEC
    (59) declarar_if_error_llave -> . IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC LLAVEA bloque_codigo LLAVEC
    (34) tipo_dato -> . IFINT
    (35) tipo_dato -> . STRIFING
    (36) tipo_dato -> . AFARRAFAY
    (37) tipo_dato -> . STRUFUCT
    (38) tipo_dato -> . VOFOIFID
    (39) tipo_dato -> . CHAFAR
    (40) tipo_dato -> . BOFOOFOL
    (41) tipo_dato -> . FLOFOAFAT
    (64) declaracion_error -> . ID PYC
    (65) declaracion_error -> . ID ASG ID operacion_matematica ID PYC
    (66) declaracion_error -> . ID ASG dato PYC
    (67) declaracion_error -> . ID ID PYC
    (68) declaracion_error -> . ID ID ASG ID operacion_matematica ID PYC
    (69) declaracion_error -> . ID ID ASG valores PYC
    (70) declaracion_error -> . ID ID dimensiones PYC
    (71) declaracion_error -> . ID dimensiones PYC
    (90) declaracion_while_error -> . PA condicion PC LLAVEA bloque_codigo LLAVEC
    (91) declaracion_while_error -> . ID PA condicion PC LLAVEA bloque_codigo LLAVEC
    (92) declaracion_while_error -> . WHIFILEFE PA condicion PC bloque_codigo LLAVEC
    (93) declaracion_while_error -> . WHIFILEFE PA condicion PC LLAVEA bloque_codigo

    VACIO           shift and go to state 83
    IFIF            shift and go to state 84
    AFARRAFAY       shift and go to state 88
    STRUF           shift and go to state 90
    ID              shift and go to state 87
    PRIFINT         shift and go to state 91
    IFINPUFUT       shift and go to state 92
    WHIFILEFE       shift and go to state 93
    PA              shift and go to state 73
    IFINT           shift and go to state 23
    STRIFING        shift and go to state 24
    STRUFUCT        shift and go to state 26
    VOFOIFID        shift and go to state 27
    CHAFAR          shift and go to state 28
    BOFOOFOL        shift and go to state 29
    FLOFOAFAT       shift and go to state 30

    tipo_dato                      shift and go to state 86
    bloque_codigo                  shift and go to state 326
    declarar_if                    shift and go to state 75
    declaracion                    shift and go to state 76
    asignar_estructuras            shift and go to state 77
    asignar_array                  shift and go to state 78
    funcion                        shift and go to state 79
    print                          shift and go to state 80
    input                          shift and go to state 81
    declaracion_while              shift and go to state 82
    declarar_if_error_llave        shift and go to state 85
    declaracion_error              shift and go to state 89
    declaracion_while_error        shift and go to state 94

state 312

    (15) declarar_funciones -> FUNCTION tipo_dato ID PA PC LLAVEA bloque_codigo REFETUFURN ID PYC LLAVEC .

    IFINT           reduce using rule 15 (declarar_funciones -> FUNCTION tipo_dato ID PA PC LLAVEA bloque_codigo REFETUFURN ID PYC LLAVEC .)
    MAFAIFIN        reduce using rule 15 (declarar_funciones -> FUNCTION tipo_dato ID PA PC LLAVEA bloque_codigo REFETUFURN ID PYC LLAVEC .)
    ID              reduce using rule 15 (declarar_funciones -> FUNCTION tipo_dato ID PA PC LLAVEA bloque_codigo REFETUFURN ID PYC LLAVEC .)


state 313

    (17) declarar_funciones -> FUNCTION ID PA tipo_dato ID PC LLAVEA bloque_codigo REFETUFURN PYC LLAVEC .

    IFINT           reduce using rule 17 (declarar_funciones -> FUNCTION ID PA tipo_dato ID PC LLAVEA bloque_codigo REFETUFURN PYC LLAVEC .)
    MAFAIFIN        reduce using rule 17 (declarar_funciones -> FUNCTION ID PA tipo_dato ID PC LLAVEA bloque_codigo REFETUFURN PYC LLAVEC .)
    ID              reduce using rule 17 (declarar_funciones -> FUNCTION ID PA tipo_dato ID PC LLAVEA bloque_codigo REFETUFURN PYC LLAVEC .)


state 314

    (19) declarar_funciones -> FUNCTION ID PA tipo_dato ID COMA tipo_dato ID PC LLAVEA bloque_codigo . REFETUFURN PYC LLAVEC

    REFETUFURN      shift and go to state 327


state 315

    (56) declarar_if_error_llave -> PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE . LLAVEA bloque_codigo LLAVEC

    LLAVEA          shift and go to state 328


state 316

    (51) declarar_if -> IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC .
    (52) declarar_if -> IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC . EFELSEFE LLAVEA bloque_codigo LLAVEC
    (54) declarar_if_error_llave -> IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC . EFELSEFE LLAVEA bloque_codigo
    (55) declarar_if_error_llave -> IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC . EFELSEFE bloque_codigo LLAVEC
    (59) declarar_if_error_llave -> IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC . LLAVEA bloque_codigo LLAVEC

    VACIO           reduce using rule 51 (declarar_if -> IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC .)
    IFIF            reduce using rule 51 (declarar_if -> IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC .)
    AFARRAFAY       reduce using rule 51 (declarar_if -> IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC .)
    STRUF           reduce using rule 51 (declarar_if -> IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC .)
    ID              reduce using rule 51 (declarar_if -> IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC .)
    PRIFINT         reduce using rule 51 (declarar_if -> IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC .)
    IFINPUFUT       reduce using rule 51 (declarar_if -> IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC .)
    WHIFILEFE       reduce using rule 51 (declarar_if -> IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC .)
    PA              reduce using rule 51 (declarar_if -> IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC .)
    IFINT           reduce using rule 51 (declarar_if -> IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC .)
    STRIFING        reduce using rule 51 (declarar_if -> IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC .)
    STRUFUCT        reduce using rule 51 (declarar_if -> IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC .)
    VOFOIFID        reduce using rule 51 (declarar_if -> IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC .)
    CHAFAR          reduce using rule 51 (declarar_if -> IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC .)
    BOFOOFOL        reduce using rule 51 (declarar_if -> IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC .)
    FLOFOAFAT       reduce using rule 51 (declarar_if -> IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC .)
    EFELSEFE        shift and go to state 330
    LLAVEA          shift and go to state 329


state 317

    (60) declaracion -> tipo_dato ID ASG ID operacion_matematica ID PYC .

    VACIO           reduce using rule 60 (declaracion -> tipo_dato ID ASG ID operacion_matematica ID PYC .)
    IFIF            reduce using rule 60 (declaracion -> tipo_dato ID ASG ID operacion_matematica ID PYC .)
    AFARRAFAY       reduce using rule 60 (declaracion -> tipo_dato ID ASG ID operacion_matematica ID PYC .)
    STRUF           reduce using rule 60 (declaracion -> tipo_dato ID ASG ID operacion_matematica ID PYC .)
    ID              reduce using rule 60 (declaracion -> tipo_dato ID ASG ID operacion_matematica ID PYC .)
    PRIFINT         reduce using rule 60 (declaracion -> tipo_dato ID ASG ID operacion_matematica ID PYC .)
    IFINPUFUT       reduce using rule 60 (declaracion -> tipo_dato ID ASG ID operacion_matematica ID PYC .)
    WHIFILEFE       reduce using rule 60 (declaracion -> tipo_dato ID ASG ID operacion_matematica ID PYC .)
    PA              reduce using rule 60 (declaracion -> tipo_dato ID ASG ID operacion_matematica ID PYC .)
    IFINT           reduce using rule 60 (declaracion -> tipo_dato ID ASG ID operacion_matematica ID PYC .)
    STRIFING        reduce using rule 60 (declaracion -> tipo_dato ID ASG ID operacion_matematica ID PYC .)
    STRUFUCT        reduce using rule 60 (declaracion -> tipo_dato ID ASG ID operacion_matematica ID PYC .)
    VOFOIFID        reduce using rule 60 (declaracion -> tipo_dato ID ASG ID operacion_matematica ID PYC .)
    CHAFAR          reduce using rule 60 (declaracion -> tipo_dato ID ASG ID operacion_matematica ID PYC .)
    BOFOOFOL        reduce using rule 60 (declaracion -> tipo_dato ID ASG ID operacion_matematica ID PYC .)
    FLOFOAFAT       reduce using rule 60 (declaracion -> tipo_dato ID ASG ID operacion_matematica ID PYC .)


state 318

    (68) declaracion_error -> ID ID ASG ID operacion_matematica ID PYC .

    VACIO           reduce using rule 68 (declaracion_error -> ID ID ASG ID operacion_matematica ID PYC .)
    IFIF            reduce using rule 68 (declaracion_error -> ID ID ASG ID operacion_matematica ID PYC .)
    AFARRAFAY       reduce using rule 68 (declaracion_error -> ID ID ASG ID operacion_matematica ID PYC .)
    STRUF           reduce using rule 68 (declaracion_error -> ID ID ASG ID operacion_matematica ID PYC .)
    ID              reduce using rule 68 (declaracion_error -> ID ID ASG ID operacion_matematica ID PYC .)
    PRIFINT         reduce using rule 68 (declaracion_error -> ID ID ASG ID operacion_matematica ID PYC .)
    IFINPUFUT       reduce using rule 68 (declaracion_error -> ID ID ASG ID operacion_matematica ID PYC .)
    WHIFILEFE       reduce using rule 68 (declaracion_error -> ID ID ASG ID operacion_matematica ID PYC .)
    PA              reduce using rule 68 (declaracion_error -> ID ID ASG ID operacion_matematica ID PYC .)
    IFINT           reduce using rule 68 (declaracion_error -> ID ID ASG ID operacion_matematica ID PYC .)
    STRIFING        reduce using rule 68 (declaracion_error -> ID ID ASG ID operacion_matematica ID PYC .)
    STRUFUCT        reduce using rule 68 (declaracion_error -> ID ID ASG ID operacion_matematica ID PYC .)
    VOFOIFID        reduce using rule 68 (declaracion_error -> ID ID ASG ID operacion_matematica ID PYC .)
    CHAFAR          reduce using rule 68 (declaracion_error -> ID ID ASG ID operacion_matematica ID PYC .)
    BOFOOFOL        reduce using rule 68 (declaracion_error -> ID ID ASG ID operacion_matematica ID PYC .)
    FLOFOAFAT       reduce using rule 68 (declaracion_error -> ID ID ASG ID operacion_matematica ID PYC .)


state 319

    (85) funcion -> ID PA valores COMA valores PC PYC .

    VACIO           reduce using rule 85 (funcion -> ID PA valores COMA valores PC PYC .)
    IFIF            reduce using rule 85 (funcion -> ID PA valores COMA valores PC PYC .)
    AFARRAFAY       reduce using rule 85 (funcion -> ID PA valores COMA valores PC PYC .)
    STRUF           reduce using rule 85 (funcion -> ID PA valores COMA valores PC PYC .)
    ID              reduce using rule 85 (funcion -> ID PA valores COMA valores PC PYC .)
    PRIFINT         reduce using rule 85 (funcion -> ID PA valores COMA valores PC PYC .)
    IFINPUFUT       reduce using rule 85 (funcion -> ID PA valores COMA valores PC PYC .)
    WHIFILEFE       reduce using rule 85 (funcion -> ID PA valores COMA valores PC PYC .)
    PA              reduce using rule 85 (funcion -> ID PA valores COMA valores PC PYC .)
    IFINT           reduce using rule 85 (funcion -> ID PA valores COMA valores PC PYC .)
    STRIFING        reduce using rule 85 (funcion -> ID PA valores COMA valores PC PYC .)
    STRUFUCT        reduce using rule 85 (funcion -> ID PA valores COMA valores PC PYC .)
    VOFOIFID        reduce using rule 85 (funcion -> ID PA valores COMA valores PC PYC .)
    CHAFAR          reduce using rule 85 (funcion -> ID PA valores COMA valores PC PYC .)
    BOFOOFOL        reduce using rule 85 (funcion -> ID PA valores COMA valores PC PYC .)
    FLOFOAFAT       reduce using rule 85 (funcion -> ID PA valores COMA valores PC PYC .)


state 320

    (57) declarar_if_error_llave -> ID PA condicion PC LLAVEA bloque_codigo LLAVEC .
    (58) declarar_if_error_llave -> ID PA condicion PC LLAVEA bloque_codigo LLAVEC . EFELSEFE LLAVEA bloque_codigo LLAVEC
    (91) declaracion_while_error -> ID PA condicion PC LLAVEA bloque_codigo LLAVEC .

  ! reduce/reduce conflict for VACIO resolved using rule 57 (declarar_if_error_llave -> ID PA condicion PC LLAVEA bloque_codigo LLAVEC .)
  ! reduce/reduce conflict for IFIF resolved using rule 57 (declarar_if_error_llave -> ID PA condicion PC LLAVEA bloque_codigo LLAVEC .)
  ! reduce/reduce conflict for AFARRAFAY resolved using rule 57 (declarar_if_error_llave -> ID PA condicion PC LLAVEA bloque_codigo LLAVEC .)
  ! reduce/reduce conflict for STRUF resolved using rule 57 (declarar_if_error_llave -> ID PA condicion PC LLAVEA bloque_codigo LLAVEC .)
  ! reduce/reduce conflict for ID resolved using rule 57 (declarar_if_error_llave -> ID PA condicion PC LLAVEA bloque_codigo LLAVEC .)
  ! reduce/reduce conflict for PRIFINT resolved using rule 57 (declarar_if_error_llave -> ID PA condicion PC LLAVEA bloque_codigo LLAVEC .)
  ! reduce/reduce conflict for IFINPUFUT resolved using rule 57 (declarar_if_error_llave -> ID PA condicion PC LLAVEA bloque_codigo LLAVEC .)
  ! reduce/reduce conflict for WHIFILEFE resolved using rule 57 (declarar_if_error_llave -> ID PA condicion PC LLAVEA bloque_codigo LLAVEC .)
  ! reduce/reduce conflict for PA resolved using rule 57 (declarar_if_error_llave -> ID PA condicion PC LLAVEA bloque_codigo LLAVEC .)
  ! reduce/reduce conflict for IFINT resolved using rule 57 (declarar_if_error_llave -> ID PA condicion PC LLAVEA bloque_codigo LLAVEC .)
  ! reduce/reduce conflict for STRIFING resolved using rule 57 (declarar_if_error_llave -> ID PA condicion PC LLAVEA bloque_codigo LLAVEC .)
  ! reduce/reduce conflict for STRUFUCT resolved using rule 57 (declarar_if_error_llave -> ID PA condicion PC LLAVEA bloque_codigo LLAVEC .)
  ! reduce/reduce conflict for VOFOIFID resolved using rule 57 (declarar_if_error_llave -> ID PA condicion PC LLAVEA bloque_codigo LLAVEC .)
  ! reduce/reduce conflict for CHAFAR resolved using rule 57 (declarar_if_error_llave -> ID PA condicion PC LLAVEA bloque_codigo LLAVEC .)
  ! reduce/reduce conflict for BOFOOFOL resolved using rule 57 (declarar_if_error_llave -> ID PA condicion PC LLAVEA bloque_codigo LLAVEC .)
  ! reduce/reduce conflict for FLOFOAFAT resolved using rule 57 (declarar_if_error_llave -> ID PA condicion PC LLAVEA bloque_codigo LLAVEC .)
    VACIO           reduce using rule 57 (declarar_if_error_llave -> ID PA condicion PC LLAVEA bloque_codigo LLAVEC .)
    IFIF            reduce using rule 57 (declarar_if_error_llave -> ID PA condicion PC LLAVEA bloque_codigo LLAVEC .)
    AFARRAFAY       reduce using rule 57 (declarar_if_error_llave -> ID PA condicion PC LLAVEA bloque_codigo LLAVEC .)
    STRUF           reduce using rule 57 (declarar_if_error_llave -> ID PA condicion PC LLAVEA bloque_codigo LLAVEC .)
    ID              reduce using rule 57 (declarar_if_error_llave -> ID PA condicion PC LLAVEA bloque_codigo LLAVEC .)
    PRIFINT         reduce using rule 57 (declarar_if_error_llave -> ID PA condicion PC LLAVEA bloque_codigo LLAVEC .)
    IFINPUFUT       reduce using rule 57 (declarar_if_error_llave -> ID PA condicion PC LLAVEA bloque_codigo LLAVEC .)
    WHIFILEFE       reduce using rule 57 (declarar_if_error_llave -> ID PA condicion PC LLAVEA bloque_codigo LLAVEC .)
    PA              reduce using rule 57 (declarar_if_error_llave -> ID PA condicion PC LLAVEA bloque_codigo LLAVEC .)
    IFINT           reduce using rule 57 (declarar_if_error_llave -> ID PA condicion PC LLAVEA bloque_codigo LLAVEC .)
    STRIFING        reduce using rule 57 (declarar_if_error_llave -> ID PA condicion PC LLAVEA bloque_codigo LLAVEC .)
    STRUFUCT        reduce using rule 57 (declarar_if_error_llave -> ID PA condicion PC LLAVEA bloque_codigo LLAVEC .)
    VOFOIFID        reduce using rule 57 (declarar_if_error_llave -> ID PA condicion PC LLAVEA bloque_codigo LLAVEC .)
    CHAFAR          reduce using rule 57 (declarar_if_error_llave -> ID PA condicion PC LLAVEA bloque_codigo LLAVEC .)
    BOFOOFOL        reduce using rule 57 (declarar_if_error_llave -> ID PA condicion PC LLAVEA bloque_codigo LLAVEC .)
    FLOFOAFAT       reduce using rule 57 (declarar_if_error_llave -> ID PA condicion PC LLAVEA bloque_codigo LLAVEC .)
    EFELSEFE        shift and go to state 331

  ! VACIO           [ reduce using rule 91 (declaracion_while_error -> ID PA condicion PC LLAVEA bloque_codigo LLAVEC .) ]
  ! IFIF            [ reduce using rule 91 (declaracion_while_error -> ID PA condicion PC LLAVEA bloque_codigo LLAVEC .) ]
  ! AFARRAFAY       [ reduce using rule 91 (declaracion_while_error -> ID PA condicion PC LLAVEA bloque_codigo LLAVEC .) ]
  ! STRUF           [ reduce using rule 91 (declaracion_while_error -> ID PA condicion PC LLAVEA bloque_codigo LLAVEC .) ]
  ! ID              [ reduce using rule 91 (declaracion_while_error -> ID PA condicion PC LLAVEA bloque_codigo LLAVEC .) ]
  ! PRIFINT         [ reduce using rule 91 (declaracion_while_error -> ID PA condicion PC LLAVEA bloque_codigo LLAVEC .) ]
  ! IFINPUFUT       [ reduce using rule 91 (declaracion_while_error -> ID PA condicion PC LLAVEA bloque_codigo LLAVEC .) ]
  ! WHIFILEFE       [ reduce using rule 91 (declaracion_while_error -> ID PA condicion PC LLAVEA bloque_codigo LLAVEC .) ]
  ! PA              [ reduce using rule 91 (declaracion_while_error -> ID PA condicion PC LLAVEA bloque_codigo LLAVEC .) ]
  ! IFINT           [ reduce using rule 91 (declaracion_while_error -> ID PA condicion PC LLAVEA bloque_codigo LLAVEC .) ]
  ! STRIFING        [ reduce using rule 91 (declaracion_while_error -> ID PA condicion PC LLAVEA bloque_codigo LLAVEC .) ]
  ! STRUFUCT        [ reduce using rule 91 (declaracion_while_error -> ID PA condicion PC LLAVEA bloque_codigo LLAVEC .) ]
  ! VOFOIFID        [ reduce using rule 91 (declaracion_while_error -> ID PA condicion PC LLAVEA bloque_codigo LLAVEC .) ]
  ! CHAFAR          [ reduce using rule 91 (declaracion_while_error -> ID PA condicion PC LLAVEA bloque_codigo LLAVEC .) ]
  ! BOFOOFOL        [ reduce using rule 91 (declaracion_while_error -> ID PA condicion PC LLAVEA bloque_codigo LLAVEC .) ]
  ! FLOFOAFAT       [ reduce using rule 91 (declaracion_while_error -> ID PA condicion PC LLAVEA bloque_codigo LLAVEC .) ]


state 321

    (82) asignar_estructuras -> STRUF ID PUNTO ID ASG dato PYC .

    VACIO           reduce using rule 82 (asignar_estructuras -> STRUF ID PUNTO ID ASG dato PYC .)
    IFIF            reduce using rule 82 (asignar_estructuras -> STRUF ID PUNTO ID ASG dato PYC .)
    AFARRAFAY       reduce using rule 82 (asignar_estructuras -> STRUF ID PUNTO ID ASG dato PYC .)
    STRUF           reduce using rule 82 (asignar_estructuras -> STRUF ID PUNTO ID ASG dato PYC .)
    ID              reduce using rule 82 (asignar_estructuras -> STRUF ID PUNTO ID ASG dato PYC .)
    PRIFINT         reduce using rule 82 (asignar_estructuras -> STRUF ID PUNTO ID ASG dato PYC .)
    IFINPUFUT       reduce using rule 82 (asignar_estructuras -> STRUF ID PUNTO ID ASG dato PYC .)
    WHIFILEFE       reduce using rule 82 (asignar_estructuras -> STRUF ID PUNTO ID ASG dato PYC .)
    PA              reduce using rule 82 (asignar_estructuras -> STRUF ID PUNTO ID ASG dato PYC .)
    IFINT           reduce using rule 82 (asignar_estructuras -> STRUF ID PUNTO ID ASG dato PYC .)
    STRIFING        reduce using rule 82 (asignar_estructuras -> STRUF ID PUNTO ID ASG dato PYC .)
    STRUFUCT        reduce using rule 82 (asignar_estructuras -> STRUF ID PUNTO ID ASG dato PYC .)
    VOFOIFID        reduce using rule 82 (asignar_estructuras -> STRUF ID PUNTO ID ASG dato PYC .)
    CHAFAR          reduce using rule 82 (asignar_estructuras -> STRUF ID PUNTO ID ASG dato PYC .)
    BOFOOFOL        reduce using rule 82 (asignar_estructuras -> STRUF ID PUNTO ID ASG dato PYC .)
    FLOFOAFAT       reduce using rule 82 (asignar_estructuras -> STRUF ID PUNTO ID ASG dato PYC .)


state 322

    (88) declaracion_while -> WHIFILEFE PA condicion PC LLAVEA bloque_codigo LLAVEC .

    VACIO           reduce using rule 88 (declaracion_while -> WHIFILEFE PA condicion PC LLAVEA bloque_codigo LLAVEC .)
    IFIF            reduce using rule 88 (declaracion_while -> WHIFILEFE PA condicion PC LLAVEA bloque_codigo LLAVEC .)
    AFARRAFAY       reduce using rule 88 (declaracion_while -> WHIFILEFE PA condicion PC LLAVEA bloque_codigo LLAVEC .)
    STRUF           reduce using rule 88 (declaracion_while -> WHIFILEFE PA condicion PC LLAVEA bloque_codigo LLAVEC .)
    ID              reduce using rule 88 (declaracion_while -> WHIFILEFE PA condicion PC LLAVEA bloque_codigo LLAVEC .)
    PRIFINT         reduce using rule 88 (declaracion_while -> WHIFILEFE PA condicion PC LLAVEA bloque_codigo LLAVEC .)
    IFINPUFUT       reduce using rule 88 (declaracion_while -> WHIFILEFE PA condicion PC LLAVEA bloque_codigo LLAVEC .)
    WHIFILEFE       reduce using rule 88 (declaracion_while -> WHIFILEFE PA condicion PC LLAVEA bloque_codigo LLAVEC .)
    PA              reduce using rule 88 (declaracion_while -> WHIFILEFE PA condicion PC LLAVEA bloque_codigo LLAVEC .)
    IFINT           reduce using rule 88 (declaracion_while -> WHIFILEFE PA condicion PC LLAVEA bloque_codigo LLAVEC .)
    STRIFING        reduce using rule 88 (declaracion_while -> WHIFILEFE PA condicion PC LLAVEA bloque_codigo LLAVEC .)
    STRUFUCT        reduce using rule 88 (declaracion_while -> WHIFILEFE PA condicion PC LLAVEA bloque_codigo LLAVEC .)
    VOFOIFID        reduce using rule 88 (declaracion_while -> WHIFILEFE PA condicion PC LLAVEA bloque_codigo LLAVEC .)
    CHAFAR          reduce using rule 88 (declaracion_while -> WHIFILEFE PA condicion PC LLAVEA bloque_codigo LLAVEC .)
    BOFOOFOL        reduce using rule 88 (declaracion_while -> WHIFILEFE PA condicion PC LLAVEA bloque_codigo LLAVEC .)
    FLOFOAFAT       reduce using rule 88 (declaracion_while -> WHIFILEFE PA condicion PC LLAVEA bloque_codigo LLAVEC .)


state 323

    (13) declarar_estructuras_error -> STRUFUCT ID LLAVEA tipo_dato ID PYC tipo_dato ID PYC tipo_dato ID PYC . LLAVEC

    LLAVEC          shift and go to state 332


state 324

    (14) declarar_funciones -> FUNCTION tipo_dato ID PA tipo_dato ID PC LLAVEA bloque_codigo REFETUFURN ID PYC . LLAVEC

    LLAVEC          shift and go to state 333


state 325

    (22) declarar_funciones_error -> FUNCTION tipo_dato ID PA tipo_dato ID PC LLAVEA bloque_codigo REFETUFURN PYC LLAVEC .

    IFINT           reduce using rule 22 (declarar_funciones_error -> FUNCTION tipo_dato ID PA tipo_dato ID PC LLAVEA bloque_codigo REFETUFURN PYC LLAVEC .)
    MAFAIFIN        reduce using rule 22 (declarar_funciones_error -> FUNCTION tipo_dato ID PA tipo_dato ID PC LLAVEA bloque_codigo REFETUFURN PYC LLAVEC .)
    ID              reduce using rule 22 (declarar_funciones_error -> FUNCTION tipo_dato ID PA tipo_dato ID PC LLAVEA bloque_codigo REFETUFURN PYC LLAVEC .)


state 326

    (16) declarar_funciones -> FUNCTION tipo_dato ID PA tipo_dato ID COMA tipo_dato ID PC LLAVEA bloque_codigo . REFETUFURN ID PYC LLAVEC
    (21) declarar_funciones_error -> FUNCTION tipo_dato ID PA tipo_dato ID COMA tipo_dato ID PC LLAVEA bloque_codigo . REFETUFURN PYC LLAVEC

    REFETUFURN      shift and go to state 334


state 327

    (19) declarar_funciones -> FUNCTION ID PA tipo_dato ID COMA tipo_dato ID PC LLAVEA bloque_codigo REFETUFURN . PYC LLAVEC

    PYC             shift and go to state 335


state 328

    (56) declarar_if_error_llave -> PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE LLAVEA . bloque_codigo LLAVEC
    (42) bloque_codigo -> . declarar_if bloque_codigo
    (43) bloque_codigo -> . declaracion bloque_codigo
    (44) bloque_codigo -> . asignar_estructuras bloque_codigo
    (45) bloque_codigo -> . asignar_array bloque_codigo
    (46) bloque_codigo -> . funcion bloque_codigo
    (47) bloque_codigo -> . print bloque_codigo
    (48) bloque_codigo -> . input bloque_codigo
    (49) bloque_codigo -> . declaracion_while bloque_codigo
    (50) bloque_codigo -> . VACIO
    (51) declarar_if -> . IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC
    (52) declarar_if -> . IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE LLAVEA bloque_codigo LLAVEC
    (53) declarar_if -> . declarar_if_error_llave
    (60) declaracion -> . tipo_dato ID ASG ID operacion_matematica ID PYC
    (61) declaracion -> . tipo_dato ID ASG dato PYC
    (62) declaracion -> . AFARRAFAY ID dimensiones PYC
    (63) declaracion -> . declaracion_error
    (82) asignar_estructuras -> . STRUF ID PUNTO ID ASG dato PYC
    (81) asignar_array -> . ID dimensiones ASG dato PYC
    (83) funcion -> . ID PA valores PC PYC
    (84) funcion -> . ID PA PC PYC
    (85) funcion -> . ID PA valores COMA valores PC PYC
    (86) print -> . PRIFINT PA ID PC PYC
    (87) input -> . IFINPUFUT PA ID PC PYC
    (88) declaracion_while -> . WHIFILEFE PA condicion PC LLAVEA bloque_codigo LLAVEC
    (89) declaracion_while -> . declaracion_while_error
    (54) declarar_if_error_llave -> . IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE LLAVEA bloque_codigo
    (55) declarar_if_error_llave -> . IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE bloque_codigo LLAVEC
    (56) declarar_if_error_llave -> . PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE LLAVEA bloque_codigo LLAVEC
    (57) declarar_if_error_llave -> . ID PA condicion PC LLAVEA bloque_codigo LLAVEC
    (58) declarar_if_error_llave -> . ID PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE LLAVEA bloque_codigo LLAVEC
    (59) declarar_if_error_llave -> . IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC LLAVEA bloque_codigo LLAVEC
    (34) tipo_dato -> . IFINT
    (35) tipo_dato -> . STRIFING
    (36) tipo_dato -> . AFARRAFAY
    (37) tipo_dato -> . STRUFUCT
    (38) tipo_dato -> . VOFOIFID
    (39) tipo_dato -> . CHAFAR
    (40) tipo_dato -> . BOFOOFOL
    (41) tipo_dato -> . FLOFOAFAT
    (64) declaracion_error -> . ID PYC
    (65) declaracion_error -> . ID ASG ID operacion_matematica ID PYC
    (66) declaracion_error -> . ID ASG dato PYC
    (67) declaracion_error -> . ID ID PYC
    (68) declaracion_error -> . ID ID ASG ID operacion_matematica ID PYC
    (69) declaracion_error -> . ID ID ASG valores PYC
    (70) declaracion_error -> . ID ID dimensiones PYC
    (71) declaracion_error -> . ID dimensiones PYC
    (90) declaracion_while_error -> . PA condicion PC LLAVEA bloque_codigo LLAVEC
    (91) declaracion_while_error -> . ID PA condicion PC LLAVEA bloque_codigo LLAVEC
    (92) declaracion_while_error -> . WHIFILEFE PA condicion PC bloque_codigo LLAVEC
    (93) declaracion_while_error -> . WHIFILEFE PA condicion PC LLAVEA bloque_codigo

    VACIO           shift and go to state 83
    IFIF            shift and go to state 84
    AFARRAFAY       shift and go to state 88
    STRUF           shift and go to state 90
    ID              shift and go to state 87
    PRIFINT         shift and go to state 91
    IFINPUFUT       shift and go to state 92
    WHIFILEFE       shift and go to state 93
    PA              shift and go to state 73
    IFINT           shift and go to state 23
    STRIFING        shift and go to state 24
    STRUFUCT        shift and go to state 26
    VOFOIFID        shift and go to state 27
    CHAFAR          shift and go to state 28
    BOFOOFOL        shift and go to state 29
    FLOFOAFAT       shift and go to state 30

    bloque_codigo                  shift and go to state 336
    declarar_if                    shift and go to state 75
    declaracion                    shift and go to state 76
    asignar_estructuras            shift and go to state 77
    asignar_array                  shift and go to state 78
    funcion                        shift and go to state 79
    print                          shift and go to state 80
    input                          shift and go to state 81
    declaracion_while              shift and go to state 82
    declarar_if_error_llave        shift and go to state 85
    tipo_dato                      shift and go to state 86
    declaracion_error              shift and go to state 89
    declaracion_while_error        shift and go to state 94

state 329

    (59) declarar_if_error_llave -> IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC LLAVEA . bloque_codigo LLAVEC
    (42) bloque_codigo -> . declarar_if bloque_codigo
    (43) bloque_codigo -> . declaracion bloque_codigo
    (44) bloque_codigo -> . asignar_estructuras bloque_codigo
    (45) bloque_codigo -> . asignar_array bloque_codigo
    (46) bloque_codigo -> . funcion bloque_codigo
    (47) bloque_codigo -> . print bloque_codigo
    (48) bloque_codigo -> . input bloque_codigo
    (49) bloque_codigo -> . declaracion_while bloque_codigo
    (50) bloque_codigo -> . VACIO
    (51) declarar_if -> . IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC
    (52) declarar_if -> . IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE LLAVEA bloque_codigo LLAVEC
    (53) declarar_if -> . declarar_if_error_llave
    (60) declaracion -> . tipo_dato ID ASG ID operacion_matematica ID PYC
    (61) declaracion -> . tipo_dato ID ASG dato PYC
    (62) declaracion -> . AFARRAFAY ID dimensiones PYC
    (63) declaracion -> . declaracion_error
    (82) asignar_estructuras -> . STRUF ID PUNTO ID ASG dato PYC
    (81) asignar_array -> . ID dimensiones ASG dato PYC
    (83) funcion -> . ID PA valores PC PYC
    (84) funcion -> . ID PA PC PYC
    (85) funcion -> . ID PA valores COMA valores PC PYC
    (86) print -> . PRIFINT PA ID PC PYC
    (87) input -> . IFINPUFUT PA ID PC PYC
    (88) declaracion_while -> . WHIFILEFE PA condicion PC LLAVEA bloque_codigo LLAVEC
    (89) declaracion_while -> . declaracion_while_error
    (54) declarar_if_error_llave -> . IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE LLAVEA bloque_codigo
    (55) declarar_if_error_llave -> . IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE bloque_codigo LLAVEC
    (56) declarar_if_error_llave -> . PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE LLAVEA bloque_codigo LLAVEC
    (57) declarar_if_error_llave -> . ID PA condicion PC LLAVEA bloque_codigo LLAVEC
    (58) declarar_if_error_llave -> . ID PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE LLAVEA bloque_codigo LLAVEC
    (59) declarar_if_error_llave -> . IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC LLAVEA bloque_codigo LLAVEC
    (34) tipo_dato -> . IFINT
    (35) tipo_dato -> . STRIFING
    (36) tipo_dato -> . AFARRAFAY
    (37) tipo_dato -> . STRUFUCT
    (38) tipo_dato -> . VOFOIFID
    (39) tipo_dato -> . CHAFAR
    (40) tipo_dato -> . BOFOOFOL
    (41) tipo_dato -> . FLOFOAFAT
    (64) declaracion_error -> . ID PYC
    (65) declaracion_error -> . ID ASG ID operacion_matematica ID PYC
    (66) declaracion_error -> . ID ASG dato PYC
    (67) declaracion_error -> . ID ID PYC
    (68) declaracion_error -> . ID ID ASG ID operacion_matematica ID PYC
    (69) declaracion_error -> . ID ID ASG valores PYC
    (70) declaracion_error -> . ID ID dimensiones PYC
    (71) declaracion_error -> . ID dimensiones PYC
    (90) declaracion_while_error -> . PA condicion PC LLAVEA bloque_codigo LLAVEC
    (91) declaracion_while_error -> . ID PA condicion PC LLAVEA bloque_codigo LLAVEC
    (92) declaracion_while_error -> . WHIFILEFE PA condicion PC bloque_codigo LLAVEC
    (93) declaracion_while_error -> . WHIFILEFE PA condicion PC LLAVEA bloque_codigo

    VACIO           shift and go to state 83
    IFIF            shift and go to state 84
    AFARRAFAY       shift and go to state 88
    STRUF           shift and go to state 90
    ID              shift and go to state 87
    PRIFINT         shift and go to state 91
    IFINPUFUT       shift and go to state 92
    WHIFILEFE       shift and go to state 93
    PA              shift and go to state 73
    IFINT           shift and go to state 23
    STRIFING        shift and go to state 24
    STRUFUCT        shift and go to state 26
    VOFOIFID        shift and go to state 27
    CHAFAR          shift and go to state 28
    BOFOOFOL        shift and go to state 29
    FLOFOAFAT       shift and go to state 30

    bloque_codigo                  shift and go to state 337
    declarar_if                    shift and go to state 75
    declaracion                    shift and go to state 76
    asignar_estructuras            shift and go to state 77
    asignar_array                  shift and go to state 78
    funcion                        shift and go to state 79
    print                          shift and go to state 80
    input                          shift and go to state 81
    declaracion_while              shift and go to state 82
    declarar_if_error_llave        shift and go to state 85
    tipo_dato                      shift and go to state 86
    declaracion_error              shift and go to state 89
    declaracion_while_error        shift and go to state 94

state 330

    (52) declarar_if -> IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE . LLAVEA bloque_codigo LLAVEC
    (54) declarar_if_error_llave -> IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE . LLAVEA bloque_codigo
    (55) declarar_if_error_llave -> IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE . bloque_codigo LLAVEC
    (42) bloque_codigo -> . declarar_if bloque_codigo
    (43) bloque_codigo -> . declaracion bloque_codigo
    (44) bloque_codigo -> . asignar_estructuras bloque_codigo
    (45) bloque_codigo -> . asignar_array bloque_codigo
    (46) bloque_codigo -> . funcion bloque_codigo
    (47) bloque_codigo -> . print bloque_codigo
    (48) bloque_codigo -> . input bloque_codigo
    (49) bloque_codigo -> . declaracion_while bloque_codigo
    (50) bloque_codigo -> . VACIO
    (51) declarar_if -> . IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC
    (52) declarar_if -> . IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE LLAVEA bloque_codigo LLAVEC
    (53) declarar_if -> . declarar_if_error_llave
    (60) declaracion -> . tipo_dato ID ASG ID operacion_matematica ID PYC
    (61) declaracion -> . tipo_dato ID ASG dato PYC
    (62) declaracion -> . AFARRAFAY ID dimensiones PYC
    (63) declaracion -> . declaracion_error
    (82) asignar_estructuras -> . STRUF ID PUNTO ID ASG dato PYC
    (81) asignar_array -> . ID dimensiones ASG dato PYC
    (83) funcion -> . ID PA valores PC PYC
    (84) funcion -> . ID PA PC PYC
    (85) funcion -> . ID PA valores COMA valores PC PYC
    (86) print -> . PRIFINT PA ID PC PYC
    (87) input -> . IFINPUFUT PA ID PC PYC
    (88) declaracion_while -> . WHIFILEFE PA condicion PC LLAVEA bloque_codigo LLAVEC
    (89) declaracion_while -> . declaracion_while_error
    (54) declarar_if_error_llave -> . IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE LLAVEA bloque_codigo
    (55) declarar_if_error_llave -> . IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE bloque_codigo LLAVEC
    (56) declarar_if_error_llave -> . PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE LLAVEA bloque_codigo LLAVEC
    (57) declarar_if_error_llave -> . ID PA condicion PC LLAVEA bloque_codigo LLAVEC
    (58) declarar_if_error_llave -> . ID PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE LLAVEA bloque_codigo LLAVEC
    (59) declarar_if_error_llave -> . IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC LLAVEA bloque_codigo LLAVEC
    (34) tipo_dato -> . IFINT
    (35) tipo_dato -> . STRIFING
    (36) tipo_dato -> . AFARRAFAY
    (37) tipo_dato -> . STRUFUCT
    (38) tipo_dato -> . VOFOIFID
    (39) tipo_dato -> . CHAFAR
    (40) tipo_dato -> . BOFOOFOL
    (41) tipo_dato -> . FLOFOAFAT
    (64) declaracion_error -> . ID PYC
    (65) declaracion_error -> . ID ASG ID operacion_matematica ID PYC
    (66) declaracion_error -> . ID ASG dato PYC
    (67) declaracion_error -> . ID ID PYC
    (68) declaracion_error -> . ID ID ASG ID operacion_matematica ID PYC
    (69) declaracion_error -> . ID ID ASG valores PYC
    (70) declaracion_error -> . ID ID dimensiones PYC
    (71) declaracion_error -> . ID dimensiones PYC
    (90) declaracion_while_error -> . PA condicion PC LLAVEA bloque_codigo LLAVEC
    (91) declaracion_while_error -> . ID PA condicion PC LLAVEA bloque_codigo LLAVEC
    (92) declaracion_while_error -> . WHIFILEFE PA condicion PC bloque_codigo LLAVEC
    (93) declaracion_while_error -> . WHIFILEFE PA condicion PC LLAVEA bloque_codigo

    LLAVEA          shift and go to state 338
    VACIO           shift and go to state 83
    IFIF            shift and go to state 84
    AFARRAFAY       shift and go to state 88
    STRUF           shift and go to state 90
    ID              shift and go to state 87
    PRIFINT         shift and go to state 91
    IFINPUFUT       shift and go to state 92
    WHIFILEFE       shift and go to state 93
    PA              shift and go to state 73
    IFINT           shift and go to state 23
    STRIFING        shift and go to state 24
    STRUFUCT        shift and go to state 26
    VOFOIFID        shift and go to state 27
    CHAFAR          shift and go to state 28
    BOFOOFOL        shift and go to state 29
    FLOFOAFAT       shift and go to state 30

    bloque_codigo                  shift and go to state 339
    declarar_if                    shift and go to state 75
    declaracion                    shift and go to state 76
    asignar_estructuras            shift and go to state 77
    asignar_array                  shift and go to state 78
    funcion                        shift and go to state 79
    print                          shift and go to state 80
    input                          shift and go to state 81
    declaracion_while              shift and go to state 82
    declarar_if_error_llave        shift and go to state 85
    tipo_dato                      shift and go to state 86
    declaracion_error              shift and go to state 89
    declaracion_while_error        shift and go to state 94

state 331

    (58) declarar_if_error_llave -> ID PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE . LLAVEA bloque_codigo LLAVEC

    LLAVEA          shift and go to state 340


state 332

    (13) declarar_estructuras_error -> STRUFUCT ID LLAVEA tipo_dato ID PYC tipo_dato ID PYC tipo_dato ID PYC LLAVEC .

    IFINT           reduce using rule 13 (declarar_estructuras_error -> STRUFUCT ID LLAVEA tipo_dato ID PYC tipo_dato ID PYC tipo_dato ID PYC LLAVEC .)
    FUNCTION        reduce using rule 13 (declarar_estructuras_error -> STRUFUCT ID LLAVEA tipo_dato ID PYC tipo_dato ID PYC tipo_dato ID PYC LLAVEC .)
    MAFAIFIN        reduce using rule 13 (declarar_estructuras_error -> STRUFUCT ID LLAVEA tipo_dato ID PYC tipo_dato ID PYC tipo_dato ID PYC LLAVEC .)
    ID              reduce using rule 13 (declarar_estructuras_error -> STRUFUCT ID LLAVEA tipo_dato ID PYC tipo_dato ID PYC tipo_dato ID PYC LLAVEC .)


state 333

    (14) declarar_funciones -> FUNCTION tipo_dato ID PA tipo_dato ID PC LLAVEA bloque_codigo REFETUFURN ID PYC LLAVEC .

    IFINT           reduce using rule 14 (declarar_funciones -> FUNCTION tipo_dato ID PA tipo_dato ID PC LLAVEA bloque_codigo REFETUFURN ID PYC LLAVEC .)
    MAFAIFIN        reduce using rule 14 (declarar_funciones -> FUNCTION tipo_dato ID PA tipo_dato ID PC LLAVEA bloque_codigo REFETUFURN ID PYC LLAVEC .)
    ID              reduce using rule 14 (declarar_funciones -> FUNCTION tipo_dato ID PA tipo_dato ID PC LLAVEA bloque_codigo REFETUFURN ID PYC LLAVEC .)


state 334

    (16) declarar_funciones -> FUNCTION tipo_dato ID PA tipo_dato ID COMA tipo_dato ID PC LLAVEA bloque_codigo REFETUFURN . ID PYC LLAVEC
    (21) declarar_funciones_error -> FUNCTION tipo_dato ID PA tipo_dato ID COMA tipo_dato ID PC LLAVEA bloque_codigo REFETUFURN . PYC LLAVEC

    ID              shift and go to state 341
    PYC             shift and go to state 342


state 335

    (19) declarar_funciones -> FUNCTION ID PA tipo_dato ID COMA tipo_dato ID PC LLAVEA bloque_codigo REFETUFURN PYC . LLAVEC

    LLAVEC          shift and go to state 343


state 336

    (56) declarar_if_error_llave -> PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE LLAVEA bloque_codigo . LLAVEC

    LLAVEC          shift and go to state 344


state 337

    (59) declarar_if_error_llave -> IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC LLAVEA bloque_codigo . LLAVEC

    LLAVEC          shift and go to state 345


state 338

    (52) declarar_if -> IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE LLAVEA . bloque_codigo LLAVEC
    (54) declarar_if_error_llave -> IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE LLAVEA . bloque_codigo
    (42) bloque_codigo -> . declarar_if bloque_codigo
    (43) bloque_codigo -> . declaracion bloque_codigo
    (44) bloque_codigo -> . asignar_estructuras bloque_codigo
    (45) bloque_codigo -> . asignar_array bloque_codigo
    (46) bloque_codigo -> . funcion bloque_codigo
    (47) bloque_codigo -> . print bloque_codigo
    (48) bloque_codigo -> . input bloque_codigo
    (49) bloque_codigo -> . declaracion_while bloque_codigo
    (50) bloque_codigo -> . VACIO
    (51) declarar_if -> . IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC
    (52) declarar_if -> . IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE LLAVEA bloque_codigo LLAVEC
    (53) declarar_if -> . declarar_if_error_llave
    (60) declaracion -> . tipo_dato ID ASG ID operacion_matematica ID PYC
    (61) declaracion -> . tipo_dato ID ASG dato PYC
    (62) declaracion -> . AFARRAFAY ID dimensiones PYC
    (63) declaracion -> . declaracion_error
    (82) asignar_estructuras -> . STRUF ID PUNTO ID ASG dato PYC
    (81) asignar_array -> . ID dimensiones ASG dato PYC
    (83) funcion -> . ID PA valores PC PYC
    (84) funcion -> . ID PA PC PYC
    (85) funcion -> . ID PA valores COMA valores PC PYC
    (86) print -> . PRIFINT PA ID PC PYC
    (87) input -> . IFINPUFUT PA ID PC PYC
    (88) declaracion_while -> . WHIFILEFE PA condicion PC LLAVEA bloque_codigo LLAVEC
    (89) declaracion_while -> . declaracion_while_error
    (54) declarar_if_error_llave -> . IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE LLAVEA bloque_codigo
    (55) declarar_if_error_llave -> . IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE bloque_codigo LLAVEC
    (56) declarar_if_error_llave -> . PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE LLAVEA bloque_codigo LLAVEC
    (57) declarar_if_error_llave -> . ID PA condicion PC LLAVEA bloque_codigo LLAVEC
    (58) declarar_if_error_llave -> . ID PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE LLAVEA bloque_codigo LLAVEC
    (59) declarar_if_error_llave -> . IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC LLAVEA bloque_codigo LLAVEC
    (34) tipo_dato -> . IFINT
    (35) tipo_dato -> . STRIFING
    (36) tipo_dato -> . AFARRAFAY
    (37) tipo_dato -> . STRUFUCT
    (38) tipo_dato -> . VOFOIFID
    (39) tipo_dato -> . CHAFAR
    (40) tipo_dato -> . BOFOOFOL
    (41) tipo_dato -> . FLOFOAFAT
    (64) declaracion_error -> . ID PYC
    (65) declaracion_error -> . ID ASG ID operacion_matematica ID PYC
    (66) declaracion_error -> . ID ASG dato PYC
    (67) declaracion_error -> . ID ID PYC
    (68) declaracion_error -> . ID ID ASG ID operacion_matematica ID PYC
    (69) declaracion_error -> . ID ID ASG valores PYC
    (70) declaracion_error -> . ID ID dimensiones PYC
    (71) declaracion_error -> . ID dimensiones PYC
    (90) declaracion_while_error -> . PA condicion PC LLAVEA bloque_codigo LLAVEC
    (91) declaracion_while_error -> . ID PA condicion PC LLAVEA bloque_codigo LLAVEC
    (92) declaracion_while_error -> . WHIFILEFE PA condicion PC bloque_codigo LLAVEC
    (93) declaracion_while_error -> . WHIFILEFE PA condicion PC LLAVEA bloque_codigo

    VACIO           shift and go to state 83
    IFIF            shift and go to state 84
    AFARRAFAY       shift and go to state 88
    STRUF           shift and go to state 90
    ID              shift and go to state 87
    PRIFINT         shift and go to state 91
    IFINPUFUT       shift and go to state 92
    WHIFILEFE       shift and go to state 93
    PA              shift and go to state 73
    IFINT           shift and go to state 23
    STRIFING        shift and go to state 24
    STRUFUCT        shift and go to state 26
    VOFOIFID        shift and go to state 27
    CHAFAR          shift and go to state 28
    BOFOOFOL        shift and go to state 29
    FLOFOAFAT       shift and go to state 30

    bloque_codigo                  shift and go to state 346
    declarar_if                    shift and go to state 75
    declaracion                    shift and go to state 76
    asignar_estructuras            shift and go to state 77
    asignar_array                  shift and go to state 78
    funcion                        shift and go to state 79
    print                          shift and go to state 80
    input                          shift and go to state 81
    declaracion_while              shift and go to state 82
    declarar_if_error_llave        shift and go to state 85
    tipo_dato                      shift and go to state 86
    declaracion_error              shift and go to state 89
    declaracion_while_error        shift and go to state 94

state 339

    (55) declarar_if_error_llave -> IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE bloque_codigo . LLAVEC

    LLAVEC          shift and go to state 347


state 340

    (58) declarar_if_error_llave -> ID PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE LLAVEA . bloque_codigo LLAVEC
    (42) bloque_codigo -> . declarar_if bloque_codigo
    (43) bloque_codigo -> . declaracion bloque_codigo
    (44) bloque_codigo -> . asignar_estructuras bloque_codigo
    (45) bloque_codigo -> . asignar_array bloque_codigo
    (46) bloque_codigo -> . funcion bloque_codigo
    (47) bloque_codigo -> . print bloque_codigo
    (48) bloque_codigo -> . input bloque_codigo
    (49) bloque_codigo -> . declaracion_while bloque_codigo
    (50) bloque_codigo -> . VACIO
    (51) declarar_if -> . IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC
    (52) declarar_if -> . IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE LLAVEA bloque_codigo LLAVEC
    (53) declarar_if -> . declarar_if_error_llave
    (60) declaracion -> . tipo_dato ID ASG ID operacion_matematica ID PYC
    (61) declaracion -> . tipo_dato ID ASG dato PYC
    (62) declaracion -> . AFARRAFAY ID dimensiones PYC
    (63) declaracion -> . declaracion_error
    (82) asignar_estructuras -> . STRUF ID PUNTO ID ASG dato PYC
    (81) asignar_array -> . ID dimensiones ASG dato PYC
    (83) funcion -> . ID PA valores PC PYC
    (84) funcion -> . ID PA PC PYC
    (85) funcion -> . ID PA valores COMA valores PC PYC
    (86) print -> . PRIFINT PA ID PC PYC
    (87) input -> . IFINPUFUT PA ID PC PYC
    (88) declaracion_while -> . WHIFILEFE PA condicion PC LLAVEA bloque_codigo LLAVEC
    (89) declaracion_while -> . declaracion_while_error
    (54) declarar_if_error_llave -> . IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE LLAVEA bloque_codigo
    (55) declarar_if_error_llave -> . IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE bloque_codigo LLAVEC
    (56) declarar_if_error_llave -> . PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE LLAVEA bloque_codigo LLAVEC
    (57) declarar_if_error_llave -> . ID PA condicion PC LLAVEA bloque_codigo LLAVEC
    (58) declarar_if_error_llave -> . ID PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE LLAVEA bloque_codigo LLAVEC
    (59) declarar_if_error_llave -> . IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC LLAVEA bloque_codigo LLAVEC
    (34) tipo_dato -> . IFINT
    (35) tipo_dato -> . STRIFING
    (36) tipo_dato -> . AFARRAFAY
    (37) tipo_dato -> . STRUFUCT
    (38) tipo_dato -> . VOFOIFID
    (39) tipo_dato -> . CHAFAR
    (40) tipo_dato -> . BOFOOFOL
    (41) tipo_dato -> . FLOFOAFAT
    (64) declaracion_error -> . ID PYC
    (65) declaracion_error -> . ID ASG ID operacion_matematica ID PYC
    (66) declaracion_error -> . ID ASG dato PYC
    (67) declaracion_error -> . ID ID PYC
    (68) declaracion_error -> . ID ID ASG ID operacion_matematica ID PYC
    (69) declaracion_error -> . ID ID ASG valores PYC
    (70) declaracion_error -> . ID ID dimensiones PYC
    (71) declaracion_error -> . ID dimensiones PYC
    (90) declaracion_while_error -> . PA condicion PC LLAVEA bloque_codigo LLAVEC
    (91) declaracion_while_error -> . ID PA condicion PC LLAVEA bloque_codigo LLAVEC
    (92) declaracion_while_error -> . WHIFILEFE PA condicion PC bloque_codigo LLAVEC
    (93) declaracion_while_error -> . WHIFILEFE PA condicion PC LLAVEA bloque_codigo

    VACIO           shift and go to state 83
    IFIF            shift and go to state 84
    AFARRAFAY       shift and go to state 88
    STRUF           shift and go to state 90
    ID              shift and go to state 87
    PRIFINT         shift and go to state 91
    IFINPUFUT       shift and go to state 92
    WHIFILEFE       shift and go to state 93
    PA              shift and go to state 73
    IFINT           shift and go to state 23
    STRIFING        shift and go to state 24
    STRUFUCT        shift and go to state 26
    VOFOIFID        shift and go to state 27
    CHAFAR          shift and go to state 28
    BOFOOFOL        shift and go to state 29
    FLOFOAFAT       shift and go to state 30

    bloque_codigo                  shift and go to state 348
    declarar_if                    shift and go to state 75
    declaracion                    shift and go to state 76
    asignar_estructuras            shift and go to state 77
    asignar_array                  shift and go to state 78
    funcion                        shift and go to state 79
    print                          shift and go to state 80
    input                          shift and go to state 81
    declaracion_while              shift and go to state 82
    declarar_if_error_llave        shift and go to state 85
    tipo_dato                      shift and go to state 86
    declaracion_error              shift and go to state 89
    declaracion_while_error        shift and go to state 94

state 341

    (16) declarar_funciones -> FUNCTION tipo_dato ID PA tipo_dato ID COMA tipo_dato ID PC LLAVEA bloque_codigo REFETUFURN ID . PYC LLAVEC

    PYC             shift and go to state 349


state 342

    (21) declarar_funciones_error -> FUNCTION tipo_dato ID PA tipo_dato ID COMA tipo_dato ID PC LLAVEA bloque_codigo REFETUFURN PYC . LLAVEC

    LLAVEC          shift and go to state 350


state 343

    (19) declarar_funciones -> FUNCTION ID PA tipo_dato ID COMA tipo_dato ID PC LLAVEA bloque_codigo REFETUFURN PYC LLAVEC .

    IFINT           reduce using rule 19 (declarar_funciones -> FUNCTION ID PA tipo_dato ID COMA tipo_dato ID PC LLAVEA bloque_codigo REFETUFURN PYC LLAVEC .)
    MAFAIFIN        reduce using rule 19 (declarar_funciones -> FUNCTION ID PA tipo_dato ID COMA tipo_dato ID PC LLAVEA bloque_codigo REFETUFURN PYC LLAVEC .)
    ID              reduce using rule 19 (declarar_funciones -> FUNCTION ID PA tipo_dato ID COMA tipo_dato ID PC LLAVEA bloque_codigo REFETUFURN PYC LLAVEC .)


state 344

    (56) declarar_if_error_llave -> PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE LLAVEA bloque_codigo LLAVEC .

    VACIO           reduce using rule 56 (declarar_if_error_llave -> PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE LLAVEA bloque_codigo LLAVEC .)
    IFIF            reduce using rule 56 (declarar_if_error_llave -> PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE LLAVEA bloque_codigo LLAVEC .)
    AFARRAFAY       reduce using rule 56 (declarar_if_error_llave -> PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE LLAVEA bloque_codigo LLAVEC .)
    STRUF           reduce using rule 56 (declarar_if_error_llave -> PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE LLAVEA bloque_codigo LLAVEC .)
    ID              reduce using rule 56 (declarar_if_error_llave -> PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE LLAVEA bloque_codigo LLAVEC .)
    PRIFINT         reduce using rule 56 (declarar_if_error_llave -> PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE LLAVEA bloque_codigo LLAVEC .)
    IFINPUFUT       reduce using rule 56 (declarar_if_error_llave -> PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE LLAVEA bloque_codigo LLAVEC .)
    WHIFILEFE       reduce using rule 56 (declarar_if_error_llave -> PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE LLAVEA bloque_codigo LLAVEC .)
    PA              reduce using rule 56 (declarar_if_error_llave -> PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE LLAVEA bloque_codigo LLAVEC .)
    IFINT           reduce using rule 56 (declarar_if_error_llave -> PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE LLAVEA bloque_codigo LLAVEC .)
    STRIFING        reduce using rule 56 (declarar_if_error_llave -> PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE LLAVEA bloque_codigo LLAVEC .)
    STRUFUCT        reduce using rule 56 (declarar_if_error_llave -> PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE LLAVEA bloque_codigo LLAVEC .)
    VOFOIFID        reduce using rule 56 (declarar_if_error_llave -> PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE LLAVEA bloque_codigo LLAVEC .)
    CHAFAR          reduce using rule 56 (declarar_if_error_llave -> PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE LLAVEA bloque_codigo LLAVEC .)
    BOFOOFOL        reduce using rule 56 (declarar_if_error_llave -> PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE LLAVEA bloque_codigo LLAVEC .)
    FLOFOAFAT       reduce using rule 56 (declarar_if_error_llave -> PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE LLAVEA bloque_codigo LLAVEC .)


state 345

    (59) declarar_if_error_llave -> IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC LLAVEA bloque_codigo LLAVEC .

    VACIO           reduce using rule 59 (declarar_if_error_llave -> IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC LLAVEA bloque_codigo LLAVEC .)
    IFIF            reduce using rule 59 (declarar_if_error_llave -> IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC LLAVEA bloque_codigo LLAVEC .)
    AFARRAFAY       reduce using rule 59 (declarar_if_error_llave -> IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC LLAVEA bloque_codigo LLAVEC .)
    STRUF           reduce using rule 59 (declarar_if_error_llave -> IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC LLAVEA bloque_codigo LLAVEC .)
    ID              reduce using rule 59 (declarar_if_error_llave -> IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC LLAVEA bloque_codigo LLAVEC .)
    PRIFINT         reduce using rule 59 (declarar_if_error_llave -> IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC LLAVEA bloque_codigo LLAVEC .)
    IFINPUFUT       reduce using rule 59 (declarar_if_error_llave -> IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC LLAVEA bloque_codigo LLAVEC .)
    WHIFILEFE       reduce using rule 59 (declarar_if_error_llave -> IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC LLAVEA bloque_codigo LLAVEC .)
    PA              reduce using rule 59 (declarar_if_error_llave -> IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC LLAVEA bloque_codigo LLAVEC .)
    IFINT           reduce using rule 59 (declarar_if_error_llave -> IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC LLAVEA bloque_codigo LLAVEC .)
    STRIFING        reduce using rule 59 (declarar_if_error_llave -> IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC LLAVEA bloque_codigo LLAVEC .)
    STRUFUCT        reduce using rule 59 (declarar_if_error_llave -> IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC LLAVEA bloque_codigo LLAVEC .)
    VOFOIFID        reduce using rule 59 (declarar_if_error_llave -> IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC LLAVEA bloque_codigo LLAVEC .)
    CHAFAR          reduce using rule 59 (declarar_if_error_llave -> IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC LLAVEA bloque_codigo LLAVEC .)
    BOFOOFOL        reduce using rule 59 (declarar_if_error_llave -> IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC LLAVEA bloque_codigo LLAVEC .)
    FLOFOAFAT       reduce using rule 59 (declarar_if_error_llave -> IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC LLAVEA bloque_codigo LLAVEC .)


state 346

    (52) declarar_if -> IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE LLAVEA bloque_codigo . LLAVEC
    (54) declarar_if_error_llave -> IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE LLAVEA bloque_codigo .

    LLAVEC          shift and go to state 351
    VACIO           reduce using rule 54 (declarar_if_error_llave -> IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE LLAVEA bloque_codigo .)
    IFIF            reduce using rule 54 (declarar_if_error_llave -> IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE LLAVEA bloque_codigo .)
    AFARRAFAY       reduce using rule 54 (declarar_if_error_llave -> IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE LLAVEA bloque_codigo .)
    STRUF           reduce using rule 54 (declarar_if_error_llave -> IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE LLAVEA bloque_codigo .)
    ID              reduce using rule 54 (declarar_if_error_llave -> IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE LLAVEA bloque_codigo .)
    PRIFINT         reduce using rule 54 (declarar_if_error_llave -> IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE LLAVEA bloque_codigo .)
    IFINPUFUT       reduce using rule 54 (declarar_if_error_llave -> IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE LLAVEA bloque_codigo .)
    WHIFILEFE       reduce using rule 54 (declarar_if_error_llave -> IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE LLAVEA bloque_codigo .)
    PA              reduce using rule 54 (declarar_if_error_llave -> IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE LLAVEA bloque_codigo .)
    IFINT           reduce using rule 54 (declarar_if_error_llave -> IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE LLAVEA bloque_codigo .)
    STRIFING        reduce using rule 54 (declarar_if_error_llave -> IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE LLAVEA bloque_codigo .)
    STRUFUCT        reduce using rule 54 (declarar_if_error_llave -> IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE LLAVEA bloque_codigo .)
    VOFOIFID        reduce using rule 54 (declarar_if_error_llave -> IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE LLAVEA bloque_codigo .)
    CHAFAR          reduce using rule 54 (declarar_if_error_llave -> IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE LLAVEA bloque_codigo .)
    BOFOOFOL        reduce using rule 54 (declarar_if_error_llave -> IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE LLAVEA bloque_codigo .)
    FLOFOAFAT       reduce using rule 54 (declarar_if_error_llave -> IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE LLAVEA bloque_codigo .)


state 347

    (55) declarar_if_error_llave -> IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE bloque_codigo LLAVEC .

    VACIO           reduce using rule 55 (declarar_if_error_llave -> IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE bloque_codigo LLAVEC .)
    IFIF            reduce using rule 55 (declarar_if_error_llave -> IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE bloque_codigo LLAVEC .)
    AFARRAFAY       reduce using rule 55 (declarar_if_error_llave -> IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE bloque_codigo LLAVEC .)
    STRUF           reduce using rule 55 (declarar_if_error_llave -> IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE bloque_codigo LLAVEC .)
    ID              reduce using rule 55 (declarar_if_error_llave -> IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE bloque_codigo LLAVEC .)
    PRIFINT         reduce using rule 55 (declarar_if_error_llave -> IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE bloque_codigo LLAVEC .)
    IFINPUFUT       reduce using rule 55 (declarar_if_error_llave -> IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE bloque_codigo LLAVEC .)
    WHIFILEFE       reduce using rule 55 (declarar_if_error_llave -> IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE bloque_codigo LLAVEC .)
    PA              reduce using rule 55 (declarar_if_error_llave -> IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE bloque_codigo LLAVEC .)
    IFINT           reduce using rule 55 (declarar_if_error_llave -> IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE bloque_codigo LLAVEC .)
    STRIFING        reduce using rule 55 (declarar_if_error_llave -> IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE bloque_codigo LLAVEC .)
    STRUFUCT        reduce using rule 55 (declarar_if_error_llave -> IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE bloque_codigo LLAVEC .)
    VOFOIFID        reduce using rule 55 (declarar_if_error_llave -> IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE bloque_codigo LLAVEC .)
    CHAFAR          reduce using rule 55 (declarar_if_error_llave -> IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE bloque_codigo LLAVEC .)
    BOFOOFOL        reduce using rule 55 (declarar_if_error_llave -> IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE bloque_codigo LLAVEC .)
    FLOFOAFAT       reduce using rule 55 (declarar_if_error_llave -> IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE bloque_codigo LLAVEC .)


state 348

    (58) declarar_if_error_llave -> ID PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE LLAVEA bloque_codigo . LLAVEC

    LLAVEC          shift and go to state 352


state 349

    (16) declarar_funciones -> FUNCTION tipo_dato ID PA tipo_dato ID COMA tipo_dato ID PC LLAVEA bloque_codigo REFETUFURN ID PYC . LLAVEC

    LLAVEC          shift and go to state 353


state 350

    (21) declarar_funciones_error -> FUNCTION tipo_dato ID PA tipo_dato ID COMA tipo_dato ID PC LLAVEA bloque_codigo REFETUFURN PYC LLAVEC .

    IFINT           reduce using rule 21 (declarar_funciones_error -> FUNCTION tipo_dato ID PA tipo_dato ID COMA tipo_dato ID PC LLAVEA bloque_codigo REFETUFURN PYC LLAVEC .)
    MAFAIFIN        reduce using rule 21 (declarar_funciones_error -> FUNCTION tipo_dato ID PA tipo_dato ID COMA tipo_dato ID PC LLAVEA bloque_codigo REFETUFURN PYC LLAVEC .)
    ID              reduce using rule 21 (declarar_funciones_error -> FUNCTION tipo_dato ID PA tipo_dato ID COMA tipo_dato ID PC LLAVEA bloque_codigo REFETUFURN PYC LLAVEC .)


state 351

    (52) declarar_if -> IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE LLAVEA bloque_codigo LLAVEC .

    VACIO           reduce using rule 52 (declarar_if -> IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE LLAVEA bloque_codigo LLAVEC .)
    IFIF            reduce using rule 52 (declarar_if -> IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE LLAVEA bloque_codigo LLAVEC .)
    AFARRAFAY       reduce using rule 52 (declarar_if -> IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE LLAVEA bloque_codigo LLAVEC .)
    STRUF           reduce using rule 52 (declarar_if -> IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE LLAVEA bloque_codigo LLAVEC .)
    ID              reduce using rule 52 (declarar_if -> IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE LLAVEA bloque_codigo LLAVEC .)
    PRIFINT         reduce using rule 52 (declarar_if -> IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE LLAVEA bloque_codigo LLAVEC .)
    IFINPUFUT       reduce using rule 52 (declarar_if -> IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE LLAVEA bloque_codigo LLAVEC .)
    WHIFILEFE       reduce using rule 52 (declarar_if -> IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE LLAVEA bloque_codigo LLAVEC .)
    PA              reduce using rule 52 (declarar_if -> IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE LLAVEA bloque_codigo LLAVEC .)
    IFINT           reduce using rule 52 (declarar_if -> IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE LLAVEA bloque_codigo LLAVEC .)
    STRIFING        reduce using rule 52 (declarar_if -> IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE LLAVEA bloque_codigo LLAVEC .)
    STRUFUCT        reduce using rule 52 (declarar_if -> IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE LLAVEA bloque_codigo LLAVEC .)
    VOFOIFID        reduce using rule 52 (declarar_if -> IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE LLAVEA bloque_codigo LLAVEC .)
    CHAFAR          reduce using rule 52 (declarar_if -> IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE LLAVEA bloque_codigo LLAVEC .)
    BOFOOFOL        reduce using rule 52 (declarar_if -> IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE LLAVEA bloque_codigo LLAVEC .)
    FLOFOAFAT       reduce using rule 52 (declarar_if -> IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE LLAVEA bloque_codigo LLAVEC .)


state 352

    (58) declarar_if_error_llave -> ID PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE LLAVEA bloque_codigo LLAVEC .

    VACIO           reduce using rule 58 (declarar_if_error_llave -> ID PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE LLAVEA bloque_codigo LLAVEC .)
    IFIF            reduce using rule 58 (declarar_if_error_llave -> ID PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE LLAVEA bloque_codigo LLAVEC .)
    AFARRAFAY       reduce using rule 58 (declarar_if_error_llave -> ID PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE LLAVEA bloque_codigo LLAVEC .)
    STRUF           reduce using rule 58 (declarar_if_error_llave -> ID PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE LLAVEA bloque_codigo LLAVEC .)
    ID              reduce using rule 58 (declarar_if_error_llave -> ID PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE LLAVEA bloque_codigo LLAVEC .)
    PRIFINT         reduce using rule 58 (declarar_if_error_llave -> ID PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE LLAVEA bloque_codigo LLAVEC .)
    IFINPUFUT       reduce using rule 58 (declarar_if_error_llave -> ID PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE LLAVEA bloque_codigo LLAVEC .)
    WHIFILEFE       reduce using rule 58 (declarar_if_error_llave -> ID PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE LLAVEA bloque_codigo LLAVEC .)
    PA              reduce using rule 58 (declarar_if_error_llave -> ID PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE LLAVEA bloque_codigo LLAVEC .)
    IFINT           reduce using rule 58 (declarar_if_error_llave -> ID PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE LLAVEA bloque_codigo LLAVEC .)
    STRIFING        reduce using rule 58 (declarar_if_error_llave -> ID PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE LLAVEA bloque_codigo LLAVEC .)
    STRUFUCT        reduce using rule 58 (declarar_if_error_llave -> ID PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE LLAVEA bloque_codigo LLAVEC .)
    VOFOIFID        reduce using rule 58 (declarar_if_error_llave -> ID PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE LLAVEA bloque_codigo LLAVEC .)
    CHAFAR          reduce using rule 58 (declarar_if_error_llave -> ID PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE LLAVEA bloque_codigo LLAVEC .)
    BOFOOFOL        reduce using rule 58 (declarar_if_error_llave -> ID PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE LLAVEA bloque_codigo LLAVEC .)
    FLOFOAFAT       reduce using rule 58 (declarar_if_error_llave -> ID PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE LLAVEA bloque_codigo LLAVEC .)


state 353

    (16) declarar_funciones -> FUNCTION tipo_dato ID PA tipo_dato ID COMA tipo_dato ID PC LLAVEA bloque_codigo REFETUFURN ID PYC LLAVEC .

    IFINT           reduce using rule 16 (declarar_funciones -> FUNCTION tipo_dato ID PA tipo_dato ID COMA tipo_dato ID PC LLAVEA bloque_codigo REFETUFURN ID PYC LLAVEC .)
    MAFAIFIN        reduce using rule 16 (declarar_funciones -> FUNCTION tipo_dato ID PA tipo_dato ID COMA tipo_dato ID PC LLAVEA bloque_codigo REFETUFURN ID PYC LLAVEC .)
    ID              reduce using rule 16 (declarar_funciones -> FUNCTION tipo_dato ID PA tipo_dato ID COMA tipo_dato ID PC LLAVEA bloque_codigo REFETUFURN ID PYC LLAVEC .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for ID in state 88 resolved as shift
WARNING: reduce/reduce conflict in state 320 resolved using rule (declarar_if_error_llave -> ID PA condicion PC LLAVEA bloque_codigo LLAVEC)
WARNING: rejected rule (declaracion_while_error -> ID PA condicion PC LLAVEA bloque_codigo LLAVEC) in state 320
WARNING: Rule (declaracion_while_error -> ID PA condicion PC LLAVEA bloque_codigo LLAVEC) is never reduced
