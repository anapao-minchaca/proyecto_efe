Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    CA
    CC
    REAL

Grammar

Rule 0     S' -> start
Rule 1     start -> declarar_estructuras declarar_main
Rule 2     start -> declarar_funciones declarar_main
Rule 3     start -> declarar_estructuras declarar_funciones declarar_main
Rule 4     start -> declarar_main
Rule 5     declarar_estructuras -> STRUFUCT ID LLAVEA tipo_dato ID PYC tipo_dato ID PYC LLAVEC
Rule 6     declarar_estructuras -> declarar_estructuras_error
Rule 7     declarar_estructuras_error -> ID LLAVEA tipo_dato ID PYC tipo_dato ID PYC LLAVEC
Rule 8     declarar_estructuras_error -> STRUFUCT ID LLAVEA tipo_dato PYC tipo_dato ID PYC LLAVEC
Rule 9     declarar_estructuras_error -> STRUFUCT ID LLAVEA tipo_dato ID PYC tipo_dato PYC LLAVEC
Rule 10    declarar_estructuras_error -> STRUFUCT ID LLAVEA tipo_dato PYC tipo_dato PYC LLAVEC
Rule 11    declarar_estructuras_error -> STRUFUCT ID LLAVEA ID PYC ID PYC LLAVEC
Rule 12    declarar_funciones -> FUNCTION tipo_dato ID PA tipo_dato ID PC LLAVEA bloque_codigo REFETUFURN ID PYC LLAVEC
Rule 13    declarar_funciones -> FUNCTION tipo_dato ID PA PC LLAVEA bloque_codigo REFETUFURN ID PYC LLAVEC
Rule 14    declarar_funciones -> FUNCTION tipo_dato ID PA PC LLAVEA bloque_codigo REFETUFURN PYC LLAVEC
Rule 15    declarar_funciones -> FUNCTION tipo_dato ID PA tipo_dato ID COMA tipo_dato ID PC LLAVEA bloque_codigo REFETUFURN ID PYC LLAVEC
Rule 16    declarar_funciones_error -> <empty>
Rule 17    declarar_main -> IFINT MAFAIFIN PA PC LLAVEA bloque_codigo REFETUFURN PYC LLAVEC
Rule 18    declarar_main -> declarar_main_error
Rule 19    declarar_main_error -> MAFAIFIN PA PC LLAVEA bloque_codigo REFETUFURN PYC LLAVEC
Rule 20    declarar_main_error -> IFINT MAFAIFIN PA PC LLAVEA bloque_codigo LLAVEC
Rule 21    declarar_main_error -> MAFAIFIN PA PC LLAVEA bloque_codigo LLAVEC
Rule 22    tipo_dato -> IFINT
Rule 23    tipo_dato -> STRIFING
Rule 24    tipo_dato -> AFARRAFAY
Rule 25    tipo_dato -> STRUFUCT
Rule 26    tipo_dato -> VOFOIFID
Rule 27    tipo_dato -> CHAFAR
Rule 28    tipo_dato -> BOFOOFOL
Rule 29    tipo_dato -> FLOFOAFAT
Rule 30    bloque_codigo -> declarar_if bloque_codigo
Rule 31    bloque_codigo -> declaracion bloque_codigo
Rule 32    bloque_codigo -> asignar_estructuras bloque_codigo
Rule 33    bloque_codigo -> funcion bloque_codigo
Rule 34    bloque_codigo -> print bloque_codigo
Rule 35    bloque_codigo -> input bloque_codigo
Rule 36    bloque_codigo -> declaracion_while bloque_codigo
Rule 37    bloque_codigo -> VACIO
Rule 38    declarar_if -> IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC
Rule 39    declarar_if -> IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE LLAVEA bloque_codigo LLAVEC
Rule 40    declarar_if -> declarar_if_error_llave
Rule 41    declarar_if_error_llave -> IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE LLAVEA bloque_codigo
Rule 42    declarar_if_error_llave -> IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE bloque_codigo LLAVEC
Rule 43    declaracion -> tipo_dato ID PYC
Rule 44    declaracion -> tipo_dato ID ASG ID operacion_matematica ID PYC
Rule 45    declaracion -> tipo_dato ID ASG valores PYC
Rule 46    declaracion -> declaracion_error
Rule 47    declaracion_error -> ID PYC
Rule 48    declaracion_error -> ID ASG ID operacion_matematica ID PYC
Rule 49    declaracion_error -> ID ASG valores PYC
Rule 50    asignar_estructuras -> ID PUNTO ID ASG
Rule 51    funcion -> ID PA valores PC PYC
Rule 52    funcion -> ID PA PC PYC
Rule 53    funcion -> ID PA valores COMA valores PC PYC
Rule 54    print -> PRIFINT PA ID PC PYC
Rule 55    input -> IFINPUFUT PA ID PC PYC
Rule 56    declaracion_while -> WHIFILEFE PA condicion PC LLAVEA bloque_codigo LLAVEC
Rule 57    declaracion_while -> declaracion_while_error
Rule 58    declaracion_while_error -> PA condicion PC LLAVEA bloque_codigo LLAVEC
Rule 59    declaracion_while_error -> WHIFILEFE PA condicion PC bloque_codigo LLAVEC
Rule 60    declaracion_while_error -> WHIFILEFE PA condicion PC LLAVEA bloque_codigo
Rule 61    condicion -> valores operadores valores
Rule 62    condicion -> valores
Rule 63    condicion -> valores operadores_logicos condicion
Rule 64    condicion -> valores NOT valores
Rule 65    operacion_matematica -> SUM
Rule 66    operacion_matematica -> RES
Rule 67    operacion_matematica -> MUL
Rule 68    operacion_matematica -> DIV
Rule 69    operacion_matematica -> RED
Rule 70    operacion_matematica -> POT
Rule 71    valores -> INT
Rule 72    valores -> CHAR
Rule 73    valores -> TRUFUEFE
Rule 74    valores -> FAFALSEFE
Rule 75    valores -> PCC
Rule 76    valores -> ID
Rule 77    operadores -> MEN
Rule 78    operadores -> MAY
Rule 79    operadores -> MENIG
Rule 80    operadores -> MAYIG
Rule 81    operadores -> CMP
Rule 82    operadores -> DIF
Rule 83    operadores_logicos -> AND
Rule 84    operadores_logicos -> OR
Rule 85    vacio -> VACIO

Terminals, with rules where they appear

AFARRAFAY            : 24
AND                  : 83
ASG                  : 44 45 48 49 50
BOFOOFOL             : 28
CA                   : 
CC                   : 
CHAFAR               : 27
CHAR                 : 72
CMP                  : 81
COMA                 : 15 53
DIF                  : 82
DIV                  : 68
EFELSEFE             : 39 41 42
FAFALSEFE            : 74
FLOFOAFAT            : 29
FUNCTION             : 12 13 14 15
ID                   : 5 5 5 7 7 7 8 8 9 9 10 11 11 11 12 12 12 13 13 14 15 15 15 15 43 44 44 44 45 47 48 48 48 49 50 50 51 52 53 54 55 76
IFIF                 : 38 39 41 42
IFINPUFUT            : 55
IFINT                : 17 20 22
INT                  : 71
LLAVEA               : 5 7 8 9 10 11 12 13 14 15 17 19 20 21 38 39 39 41 41 42 56 58 60
LLAVEC               : 5 7 8 9 10 11 12 13 14 15 17 19 20 21 38 39 39 41 42 42 56 58 59
MAFAIFIN             : 17 19 20 21
MAY                  : 78
MAYIG                : 80
MEN                  : 77
MENIG                : 79
MUL                  : 67
NOT                  : 64
OR                   : 84
PA                   : 12 13 14 15 17 19 20 21 38 39 41 42 51 52 53 54 55 56 58 59 60
PC                   : 12 13 14 15 17 19 20 21 38 39 41 42 51 52 53 54 55 56 58 59 60
PCC                  : 75
POT                  : 70
PRIFINT              : 54
PUNTO                : 50
PYC                  : 5 5 7 7 8 8 9 9 10 10 11 11 12 13 14 15 17 19 43 44 45 47 48 49 51 52 53 54 55
REAL                 : 
RED                  : 69
REFETUFURN           : 12 13 14 15 17 19
RES                  : 66
STRIFING             : 23
STRUFUCT             : 5 8 9 10 11 25
SUM                  : 65
TRUFUEFE             : 73
VACIO                : 37 85
VOFOIFID             : 26
WHIFILEFE            : 56 59 60
error                : 

Nonterminals, with rules where they appear

asignar_estructuras  : 32
bloque_codigo        : 12 13 14 15 17 19 20 21 30 31 32 33 34 35 36 38 39 39 41 41 42 42 56 58 59 60
condicion            : 38 39 41 42 56 58 59 60 63
declaracion          : 31
declaracion_error    : 46
declaracion_while    : 36
declaracion_while_error : 57
declarar_estructuras : 1 3
declarar_estructuras_error : 6
declarar_funciones   : 2 3
declarar_funciones_error : 
declarar_if          : 30
declarar_if_error_llave : 40
declarar_main        : 1 2 3 4
declarar_main_error  : 18
funcion              : 33
input                : 35
operacion_matematica : 44 48
operadores           : 61
operadores_logicos   : 63
print                : 34
start                : 0
tipo_dato            : 5 5 7 7 8 8 9 9 10 10 12 12 13 14 15 15 15 43 44 45
vacio                : 
valores              : 45 49 51 53 53 61 61 62 63 64 64

Parsing method: LALR

state 0

    (0) S' -> . start
    (1) start -> . declarar_estructuras declarar_main
    (2) start -> . declarar_funciones declarar_main
    (3) start -> . declarar_estructuras declarar_funciones declarar_main
    (4) start -> . declarar_main
    (5) declarar_estructuras -> . STRUFUCT ID LLAVEA tipo_dato ID PYC tipo_dato ID PYC LLAVEC
    (6) declarar_estructuras -> . declarar_estructuras_error
    (12) declarar_funciones -> . FUNCTION tipo_dato ID PA tipo_dato ID PC LLAVEA bloque_codigo REFETUFURN ID PYC LLAVEC
    (13) declarar_funciones -> . FUNCTION tipo_dato ID PA PC LLAVEA bloque_codigo REFETUFURN ID PYC LLAVEC
    (14) declarar_funciones -> . FUNCTION tipo_dato ID PA PC LLAVEA bloque_codigo REFETUFURN PYC LLAVEC
    (15) declarar_funciones -> . FUNCTION tipo_dato ID PA tipo_dato ID COMA tipo_dato ID PC LLAVEA bloque_codigo REFETUFURN ID PYC LLAVEC
    (17) declarar_main -> . IFINT MAFAIFIN PA PC LLAVEA bloque_codigo REFETUFURN PYC LLAVEC
    (18) declarar_main -> . declarar_main_error
    (7) declarar_estructuras_error -> . ID LLAVEA tipo_dato ID PYC tipo_dato ID PYC LLAVEC
    (8) declarar_estructuras_error -> . STRUFUCT ID LLAVEA tipo_dato PYC tipo_dato ID PYC LLAVEC
    (9) declarar_estructuras_error -> . STRUFUCT ID LLAVEA tipo_dato ID PYC tipo_dato PYC LLAVEC
    (10) declarar_estructuras_error -> . STRUFUCT ID LLAVEA tipo_dato PYC tipo_dato PYC LLAVEC
    (11) declarar_estructuras_error -> . STRUFUCT ID LLAVEA ID PYC ID PYC LLAVEC
    (19) declarar_main_error -> . MAFAIFIN PA PC LLAVEA bloque_codigo REFETUFURN PYC LLAVEC
    (20) declarar_main_error -> . IFINT MAFAIFIN PA PC LLAVEA bloque_codigo LLAVEC
    (21) declarar_main_error -> . MAFAIFIN PA PC LLAVEA bloque_codigo LLAVEC

    STRUFUCT        shift and go to state 5
    FUNCTION        shift and go to state 8
    IFINT           shift and go to state 9
    ID              shift and go to state 6
    MAFAIFIN        shift and go to state 10

    start                          shift and go to state 1
    declarar_estructuras           shift and go to state 2
    declarar_main                  shift and go to state 3
    declarar_funciones             shift and go to state 4
    declarar_estructuras_error     shift and go to state 7
    declarar_main_error            shift and go to state 11

state 1

    (0) S' -> start .



state 2

    (1) start -> declarar_estructuras . declarar_main
    (3) start -> declarar_estructuras . declarar_funciones declarar_main
    (17) declarar_main -> . IFINT MAFAIFIN PA PC LLAVEA bloque_codigo REFETUFURN PYC LLAVEC
    (18) declarar_main -> . declarar_main_error
    (12) declarar_funciones -> . FUNCTION tipo_dato ID PA tipo_dato ID PC LLAVEA bloque_codigo REFETUFURN ID PYC LLAVEC
    (13) declarar_funciones -> . FUNCTION tipo_dato ID PA PC LLAVEA bloque_codigo REFETUFURN ID PYC LLAVEC
    (14) declarar_funciones -> . FUNCTION tipo_dato ID PA PC LLAVEA bloque_codigo REFETUFURN PYC LLAVEC
    (15) declarar_funciones -> . FUNCTION tipo_dato ID PA tipo_dato ID COMA tipo_dato ID PC LLAVEA bloque_codigo REFETUFURN ID PYC LLAVEC
    (19) declarar_main_error -> . MAFAIFIN PA PC LLAVEA bloque_codigo REFETUFURN PYC LLAVEC
    (20) declarar_main_error -> . IFINT MAFAIFIN PA PC LLAVEA bloque_codigo LLAVEC
    (21) declarar_main_error -> . MAFAIFIN PA PC LLAVEA bloque_codigo LLAVEC

    IFINT           shift and go to state 9
    FUNCTION        shift and go to state 8
    MAFAIFIN        shift and go to state 10

    declarar_main                  shift and go to state 12
    declarar_funciones             shift and go to state 13
    declarar_main_error            shift and go to state 11

state 3

    (4) start -> declarar_main .

    $end            reduce using rule 4 (start -> declarar_main .)


state 4

    (2) start -> declarar_funciones . declarar_main
    (17) declarar_main -> . IFINT MAFAIFIN PA PC LLAVEA bloque_codigo REFETUFURN PYC LLAVEC
    (18) declarar_main -> . declarar_main_error
    (19) declarar_main_error -> . MAFAIFIN PA PC LLAVEA bloque_codigo REFETUFURN PYC LLAVEC
    (20) declarar_main_error -> . IFINT MAFAIFIN PA PC LLAVEA bloque_codigo LLAVEC
    (21) declarar_main_error -> . MAFAIFIN PA PC LLAVEA bloque_codigo LLAVEC

    IFINT           shift and go to state 9
    MAFAIFIN        shift and go to state 10

    declarar_main                  shift and go to state 14
    declarar_main_error            shift and go to state 11

state 5

    (5) declarar_estructuras -> STRUFUCT . ID LLAVEA tipo_dato ID PYC tipo_dato ID PYC LLAVEC
    (8) declarar_estructuras_error -> STRUFUCT . ID LLAVEA tipo_dato PYC tipo_dato ID PYC LLAVEC
    (9) declarar_estructuras_error -> STRUFUCT . ID LLAVEA tipo_dato ID PYC tipo_dato PYC LLAVEC
    (10) declarar_estructuras_error -> STRUFUCT . ID LLAVEA tipo_dato PYC tipo_dato PYC LLAVEC
    (11) declarar_estructuras_error -> STRUFUCT . ID LLAVEA ID PYC ID PYC LLAVEC

    ID              shift and go to state 15


state 6

    (7) declarar_estructuras_error -> ID . LLAVEA tipo_dato ID PYC tipo_dato ID PYC LLAVEC

    LLAVEA          shift and go to state 16


state 7

    (6) declarar_estructuras -> declarar_estructuras_error .

    IFINT           reduce using rule 6 (declarar_estructuras -> declarar_estructuras_error .)
    FUNCTION        reduce using rule 6 (declarar_estructuras -> declarar_estructuras_error .)
    MAFAIFIN        reduce using rule 6 (declarar_estructuras -> declarar_estructuras_error .)


state 8

    (12) declarar_funciones -> FUNCTION . tipo_dato ID PA tipo_dato ID PC LLAVEA bloque_codigo REFETUFURN ID PYC LLAVEC
    (13) declarar_funciones -> FUNCTION . tipo_dato ID PA PC LLAVEA bloque_codigo REFETUFURN ID PYC LLAVEC
    (14) declarar_funciones -> FUNCTION . tipo_dato ID PA PC LLAVEA bloque_codigo REFETUFURN PYC LLAVEC
    (15) declarar_funciones -> FUNCTION . tipo_dato ID PA tipo_dato ID COMA tipo_dato ID PC LLAVEA bloque_codigo REFETUFURN ID PYC LLAVEC
    (22) tipo_dato -> . IFINT
    (23) tipo_dato -> . STRIFING
    (24) tipo_dato -> . AFARRAFAY
    (25) tipo_dato -> . STRUFUCT
    (26) tipo_dato -> . VOFOIFID
    (27) tipo_dato -> . CHAFAR
    (28) tipo_dato -> . BOFOOFOL
    (29) tipo_dato -> . FLOFOAFAT

    IFINT           shift and go to state 18
    STRIFING        shift and go to state 19
    AFARRAFAY       shift and go to state 20
    STRUFUCT        shift and go to state 21
    VOFOIFID        shift and go to state 22
    CHAFAR          shift and go to state 23
    BOFOOFOL        shift and go to state 24
    FLOFOAFAT       shift and go to state 25

    tipo_dato                      shift and go to state 17

state 9

    (17) declarar_main -> IFINT . MAFAIFIN PA PC LLAVEA bloque_codigo REFETUFURN PYC LLAVEC
    (20) declarar_main_error -> IFINT . MAFAIFIN PA PC LLAVEA bloque_codigo LLAVEC

    MAFAIFIN        shift and go to state 26


state 10

    (19) declarar_main_error -> MAFAIFIN . PA PC LLAVEA bloque_codigo REFETUFURN PYC LLAVEC
    (21) declarar_main_error -> MAFAIFIN . PA PC LLAVEA bloque_codigo LLAVEC

    PA              shift and go to state 27


state 11

    (18) declarar_main -> declarar_main_error .

    $end            reduce using rule 18 (declarar_main -> declarar_main_error .)


state 12

    (1) start -> declarar_estructuras declarar_main .

    $end            reduce using rule 1 (start -> declarar_estructuras declarar_main .)


state 13

    (3) start -> declarar_estructuras declarar_funciones . declarar_main
    (17) declarar_main -> . IFINT MAFAIFIN PA PC LLAVEA bloque_codigo REFETUFURN PYC LLAVEC
    (18) declarar_main -> . declarar_main_error
    (19) declarar_main_error -> . MAFAIFIN PA PC LLAVEA bloque_codigo REFETUFURN PYC LLAVEC
    (20) declarar_main_error -> . IFINT MAFAIFIN PA PC LLAVEA bloque_codigo LLAVEC
    (21) declarar_main_error -> . MAFAIFIN PA PC LLAVEA bloque_codigo LLAVEC

    IFINT           shift and go to state 9
    MAFAIFIN        shift and go to state 10

    declarar_main                  shift and go to state 28
    declarar_main_error            shift and go to state 11

state 14

    (2) start -> declarar_funciones declarar_main .

    $end            reduce using rule 2 (start -> declarar_funciones declarar_main .)


state 15

    (5) declarar_estructuras -> STRUFUCT ID . LLAVEA tipo_dato ID PYC tipo_dato ID PYC LLAVEC
    (8) declarar_estructuras_error -> STRUFUCT ID . LLAVEA tipo_dato PYC tipo_dato ID PYC LLAVEC
    (9) declarar_estructuras_error -> STRUFUCT ID . LLAVEA tipo_dato ID PYC tipo_dato PYC LLAVEC
    (10) declarar_estructuras_error -> STRUFUCT ID . LLAVEA tipo_dato PYC tipo_dato PYC LLAVEC
    (11) declarar_estructuras_error -> STRUFUCT ID . LLAVEA ID PYC ID PYC LLAVEC

    LLAVEA          shift and go to state 29


state 16

    (7) declarar_estructuras_error -> ID LLAVEA . tipo_dato ID PYC tipo_dato ID PYC LLAVEC
    (22) tipo_dato -> . IFINT
    (23) tipo_dato -> . STRIFING
    (24) tipo_dato -> . AFARRAFAY
    (25) tipo_dato -> . STRUFUCT
    (26) tipo_dato -> . VOFOIFID
    (27) tipo_dato -> . CHAFAR
    (28) tipo_dato -> . BOFOOFOL
    (29) tipo_dato -> . FLOFOAFAT

    IFINT           shift and go to state 18
    STRIFING        shift and go to state 19
    AFARRAFAY       shift and go to state 20
    STRUFUCT        shift and go to state 21
    VOFOIFID        shift and go to state 22
    CHAFAR          shift and go to state 23
    BOFOOFOL        shift and go to state 24
    FLOFOAFAT       shift and go to state 25

    tipo_dato                      shift and go to state 30

state 17

    (12) declarar_funciones -> FUNCTION tipo_dato . ID PA tipo_dato ID PC LLAVEA bloque_codigo REFETUFURN ID PYC LLAVEC
    (13) declarar_funciones -> FUNCTION tipo_dato . ID PA PC LLAVEA bloque_codigo REFETUFURN ID PYC LLAVEC
    (14) declarar_funciones -> FUNCTION tipo_dato . ID PA PC LLAVEA bloque_codigo REFETUFURN PYC LLAVEC
    (15) declarar_funciones -> FUNCTION tipo_dato . ID PA tipo_dato ID COMA tipo_dato ID PC LLAVEA bloque_codigo REFETUFURN ID PYC LLAVEC

    ID              shift and go to state 31


state 18

    (22) tipo_dato -> IFINT .

    ID              reduce using rule 22 (tipo_dato -> IFINT .)
    PYC             reduce using rule 22 (tipo_dato -> IFINT .)


state 19

    (23) tipo_dato -> STRIFING .

    ID              reduce using rule 23 (tipo_dato -> STRIFING .)
    PYC             reduce using rule 23 (tipo_dato -> STRIFING .)


state 20

    (24) tipo_dato -> AFARRAFAY .

    ID              reduce using rule 24 (tipo_dato -> AFARRAFAY .)
    PYC             reduce using rule 24 (tipo_dato -> AFARRAFAY .)


state 21

    (25) tipo_dato -> STRUFUCT .

    ID              reduce using rule 25 (tipo_dato -> STRUFUCT .)
    PYC             reduce using rule 25 (tipo_dato -> STRUFUCT .)


state 22

    (26) tipo_dato -> VOFOIFID .

    ID              reduce using rule 26 (tipo_dato -> VOFOIFID .)
    PYC             reduce using rule 26 (tipo_dato -> VOFOIFID .)


state 23

    (27) tipo_dato -> CHAFAR .

    ID              reduce using rule 27 (tipo_dato -> CHAFAR .)
    PYC             reduce using rule 27 (tipo_dato -> CHAFAR .)


state 24

    (28) tipo_dato -> BOFOOFOL .

    ID              reduce using rule 28 (tipo_dato -> BOFOOFOL .)
    PYC             reduce using rule 28 (tipo_dato -> BOFOOFOL .)


state 25

    (29) tipo_dato -> FLOFOAFAT .

    ID              reduce using rule 29 (tipo_dato -> FLOFOAFAT .)
    PYC             reduce using rule 29 (tipo_dato -> FLOFOAFAT .)


state 26

    (17) declarar_main -> IFINT MAFAIFIN . PA PC LLAVEA bloque_codigo REFETUFURN PYC LLAVEC
    (20) declarar_main_error -> IFINT MAFAIFIN . PA PC LLAVEA bloque_codigo LLAVEC

    PA              shift and go to state 32


state 27

    (19) declarar_main_error -> MAFAIFIN PA . PC LLAVEA bloque_codigo REFETUFURN PYC LLAVEC
    (21) declarar_main_error -> MAFAIFIN PA . PC LLAVEA bloque_codigo LLAVEC

    PC              shift and go to state 33


state 28

    (3) start -> declarar_estructuras declarar_funciones declarar_main .

    $end            reduce using rule 3 (start -> declarar_estructuras declarar_funciones declarar_main .)


state 29

    (5) declarar_estructuras -> STRUFUCT ID LLAVEA . tipo_dato ID PYC tipo_dato ID PYC LLAVEC
    (8) declarar_estructuras_error -> STRUFUCT ID LLAVEA . tipo_dato PYC tipo_dato ID PYC LLAVEC
    (9) declarar_estructuras_error -> STRUFUCT ID LLAVEA . tipo_dato ID PYC tipo_dato PYC LLAVEC
    (10) declarar_estructuras_error -> STRUFUCT ID LLAVEA . tipo_dato PYC tipo_dato PYC LLAVEC
    (11) declarar_estructuras_error -> STRUFUCT ID LLAVEA . ID PYC ID PYC LLAVEC
    (22) tipo_dato -> . IFINT
    (23) tipo_dato -> . STRIFING
    (24) tipo_dato -> . AFARRAFAY
    (25) tipo_dato -> . STRUFUCT
    (26) tipo_dato -> . VOFOIFID
    (27) tipo_dato -> . CHAFAR
    (28) tipo_dato -> . BOFOOFOL
    (29) tipo_dato -> . FLOFOAFAT

    ID              shift and go to state 34
    IFINT           shift and go to state 18
    STRIFING        shift and go to state 19
    AFARRAFAY       shift and go to state 20
    STRUFUCT        shift and go to state 21
    VOFOIFID        shift and go to state 22
    CHAFAR          shift and go to state 23
    BOFOOFOL        shift and go to state 24
    FLOFOAFAT       shift and go to state 25

    tipo_dato                      shift and go to state 35

state 30

    (7) declarar_estructuras_error -> ID LLAVEA tipo_dato . ID PYC tipo_dato ID PYC LLAVEC

    ID              shift and go to state 36


state 31

    (12) declarar_funciones -> FUNCTION tipo_dato ID . PA tipo_dato ID PC LLAVEA bloque_codigo REFETUFURN ID PYC LLAVEC
    (13) declarar_funciones -> FUNCTION tipo_dato ID . PA PC LLAVEA bloque_codigo REFETUFURN ID PYC LLAVEC
    (14) declarar_funciones -> FUNCTION tipo_dato ID . PA PC LLAVEA bloque_codigo REFETUFURN PYC LLAVEC
    (15) declarar_funciones -> FUNCTION tipo_dato ID . PA tipo_dato ID COMA tipo_dato ID PC LLAVEA bloque_codigo REFETUFURN ID PYC LLAVEC

    PA              shift and go to state 37


state 32

    (17) declarar_main -> IFINT MAFAIFIN PA . PC LLAVEA bloque_codigo REFETUFURN PYC LLAVEC
    (20) declarar_main_error -> IFINT MAFAIFIN PA . PC LLAVEA bloque_codigo LLAVEC

    PC              shift and go to state 38


state 33

    (19) declarar_main_error -> MAFAIFIN PA PC . LLAVEA bloque_codigo REFETUFURN PYC LLAVEC
    (21) declarar_main_error -> MAFAIFIN PA PC . LLAVEA bloque_codigo LLAVEC

    LLAVEA          shift and go to state 39


state 34

    (11) declarar_estructuras_error -> STRUFUCT ID LLAVEA ID . PYC ID PYC LLAVEC

    PYC             shift and go to state 40


state 35

    (5) declarar_estructuras -> STRUFUCT ID LLAVEA tipo_dato . ID PYC tipo_dato ID PYC LLAVEC
    (8) declarar_estructuras_error -> STRUFUCT ID LLAVEA tipo_dato . PYC tipo_dato ID PYC LLAVEC
    (9) declarar_estructuras_error -> STRUFUCT ID LLAVEA tipo_dato . ID PYC tipo_dato PYC LLAVEC
    (10) declarar_estructuras_error -> STRUFUCT ID LLAVEA tipo_dato . PYC tipo_dato PYC LLAVEC

    ID              shift and go to state 41
    PYC             shift and go to state 42


state 36

    (7) declarar_estructuras_error -> ID LLAVEA tipo_dato ID . PYC tipo_dato ID PYC LLAVEC

    PYC             shift and go to state 43


state 37

    (12) declarar_funciones -> FUNCTION tipo_dato ID PA . tipo_dato ID PC LLAVEA bloque_codigo REFETUFURN ID PYC LLAVEC
    (13) declarar_funciones -> FUNCTION tipo_dato ID PA . PC LLAVEA bloque_codigo REFETUFURN ID PYC LLAVEC
    (14) declarar_funciones -> FUNCTION tipo_dato ID PA . PC LLAVEA bloque_codigo REFETUFURN PYC LLAVEC
    (15) declarar_funciones -> FUNCTION tipo_dato ID PA . tipo_dato ID COMA tipo_dato ID PC LLAVEA bloque_codigo REFETUFURN ID PYC LLAVEC
    (22) tipo_dato -> . IFINT
    (23) tipo_dato -> . STRIFING
    (24) tipo_dato -> . AFARRAFAY
    (25) tipo_dato -> . STRUFUCT
    (26) tipo_dato -> . VOFOIFID
    (27) tipo_dato -> . CHAFAR
    (28) tipo_dato -> . BOFOOFOL
    (29) tipo_dato -> . FLOFOAFAT

    PC              shift and go to state 45
    IFINT           shift and go to state 18
    STRIFING        shift and go to state 19
    AFARRAFAY       shift and go to state 20
    STRUFUCT        shift and go to state 21
    VOFOIFID        shift and go to state 22
    CHAFAR          shift and go to state 23
    BOFOOFOL        shift and go to state 24
    FLOFOAFAT       shift and go to state 25

    tipo_dato                      shift and go to state 44

state 38

    (17) declarar_main -> IFINT MAFAIFIN PA PC . LLAVEA bloque_codigo REFETUFURN PYC LLAVEC
    (20) declarar_main_error -> IFINT MAFAIFIN PA PC . LLAVEA bloque_codigo LLAVEC

    LLAVEA          shift and go to state 46


state 39

    (19) declarar_main_error -> MAFAIFIN PA PC LLAVEA . bloque_codigo REFETUFURN PYC LLAVEC
    (21) declarar_main_error -> MAFAIFIN PA PC LLAVEA . bloque_codigo LLAVEC
    (30) bloque_codigo -> . declarar_if bloque_codigo
    (31) bloque_codigo -> . declaracion bloque_codigo
    (32) bloque_codigo -> . asignar_estructuras bloque_codigo
    (33) bloque_codigo -> . funcion bloque_codigo
    (34) bloque_codigo -> . print bloque_codigo
    (35) bloque_codigo -> . input bloque_codigo
    (36) bloque_codigo -> . declaracion_while bloque_codigo
    (37) bloque_codigo -> . VACIO
    (38) declarar_if -> . IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC
    (39) declarar_if -> . IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE LLAVEA bloque_codigo LLAVEC
    (40) declarar_if -> . declarar_if_error_llave
    (43) declaracion -> . tipo_dato ID PYC
    (44) declaracion -> . tipo_dato ID ASG ID operacion_matematica ID PYC
    (45) declaracion -> . tipo_dato ID ASG valores PYC
    (46) declaracion -> . declaracion_error
    (50) asignar_estructuras -> . ID PUNTO ID ASG
    (51) funcion -> . ID PA valores PC PYC
    (52) funcion -> . ID PA PC PYC
    (53) funcion -> . ID PA valores COMA valores PC PYC
    (54) print -> . PRIFINT PA ID PC PYC
    (55) input -> . IFINPUFUT PA ID PC PYC
    (56) declaracion_while -> . WHIFILEFE PA condicion PC LLAVEA bloque_codigo LLAVEC
    (57) declaracion_while -> . declaracion_while_error
    (41) declarar_if_error_llave -> . IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE LLAVEA bloque_codigo
    (42) declarar_if_error_llave -> . IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE bloque_codigo LLAVEC
    (22) tipo_dato -> . IFINT
    (23) tipo_dato -> . STRIFING
    (24) tipo_dato -> . AFARRAFAY
    (25) tipo_dato -> . STRUFUCT
    (26) tipo_dato -> . VOFOIFID
    (27) tipo_dato -> . CHAFAR
    (28) tipo_dato -> . BOFOOFOL
    (29) tipo_dato -> . FLOFOAFAT
    (47) declaracion_error -> . ID PYC
    (48) declaracion_error -> . ID ASG ID operacion_matematica ID PYC
    (49) declaracion_error -> . ID ASG valores PYC
    (58) declaracion_while_error -> . PA condicion PC LLAVEA bloque_codigo LLAVEC
    (59) declaracion_while_error -> . WHIFILEFE PA condicion PC bloque_codigo LLAVEC
    (60) declaracion_while_error -> . WHIFILEFE PA condicion PC LLAVEA bloque_codigo

    VACIO           shift and go to state 56
    IFIF            shift and go to state 57
    ID              shift and go to state 60
    PRIFINT         shift and go to state 62
    IFINPUFUT       shift and go to state 63
    WHIFILEFE       shift and go to state 64
    IFINT           shift and go to state 18
    STRIFING        shift and go to state 19
    AFARRAFAY       shift and go to state 20
    STRUFUCT        shift and go to state 21
    VOFOIFID        shift and go to state 22
    CHAFAR          shift and go to state 23
    BOFOOFOL        shift and go to state 24
    FLOFOAFAT       shift and go to state 25
    PA              shift and go to state 47

    bloque_codigo                  shift and go to state 48
    declarar_if                    shift and go to state 49
    declaracion                    shift and go to state 50
    asignar_estructuras            shift and go to state 51
    funcion                        shift and go to state 52
    print                          shift and go to state 53
    input                          shift and go to state 54
    declaracion_while              shift and go to state 55
    declarar_if_error_llave        shift and go to state 58
    tipo_dato                      shift and go to state 59
    declaracion_error              shift and go to state 61
    declaracion_while_error        shift and go to state 65

state 40

    (11) declarar_estructuras_error -> STRUFUCT ID LLAVEA ID PYC . ID PYC LLAVEC

    ID              shift and go to state 66


state 41

    (5) declarar_estructuras -> STRUFUCT ID LLAVEA tipo_dato ID . PYC tipo_dato ID PYC LLAVEC
    (9) declarar_estructuras_error -> STRUFUCT ID LLAVEA tipo_dato ID . PYC tipo_dato PYC LLAVEC

    PYC             shift and go to state 67


state 42

    (8) declarar_estructuras_error -> STRUFUCT ID LLAVEA tipo_dato PYC . tipo_dato ID PYC LLAVEC
    (10) declarar_estructuras_error -> STRUFUCT ID LLAVEA tipo_dato PYC . tipo_dato PYC LLAVEC
    (22) tipo_dato -> . IFINT
    (23) tipo_dato -> . STRIFING
    (24) tipo_dato -> . AFARRAFAY
    (25) tipo_dato -> . STRUFUCT
    (26) tipo_dato -> . VOFOIFID
    (27) tipo_dato -> . CHAFAR
    (28) tipo_dato -> . BOFOOFOL
    (29) tipo_dato -> . FLOFOAFAT

    IFINT           shift and go to state 18
    STRIFING        shift and go to state 19
    AFARRAFAY       shift and go to state 20
    STRUFUCT        shift and go to state 21
    VOFOIFID        shift and go to state 22
    CHAFAR          shift and go to state 23
    BOFOOFOL        shift and go to state 24
    FLOFOAFAT       shift and go to state 25

    tipo_dato                      shift and go to state 68

state 43

    (7) declarar_estructuras_error -> ID LLAVEA tipo_dato ID PYC . tipo_dato ID PYC LLAVEC
    (22) tipo_dato -> . IFINT
    (23) tipo_dato -> . STRIFING
    (24) tipo_dato -> . AFARRAFAY
    (25) tipo_dato -> . STRUFUCT
    (26) tipo_dato -> . VOFOIFID
    (27) tipo_dato -> . CHAFAR
    (28) tipo_dato -> . BOFOOFOL
    (29) tipo_dato -> . FLOFOAFAT

    IFINT           shift and go to state 18
    STRIFING        shift and go to state 19
    AFARRAFAY       shift and go to state 20
    STRUFUCT        shift and go to state 21
    VOFOIFID        shift and go to state 22
    CHAFAR          shift and go to state 23
    BOFOOFOL        shift and go to state 24
    FLOFOAFAT       shift and go to state 25

    tipo_dato                      shift and go to state 69

state 44

    (12) declarar_funciones -> FUNCTION tipo_dato ID PA tipo_dato . ID PC LLAVEA bloque_codigo REFETUFURN ID PYC LLAVEC
    (15) declarar_funciones -> FUNCTION tipo_dato ID PA tipo_dato . ID COMA tipo_dato ID PC LLAVEA bloque_codigo REFETUFURN ID PYC LLAVEC

    ID              shift and go to state 70


state 45

    (13) declarar_funciones -> FUNCTION tipo_dato ID PA PC . LLAVEA bloque_codigo REFETUFURN ID PYC LLAVEC
    (14) declarar_funciones -> FUNCTION tipo_dato ID PA PC . LLAVEA bloque_codigo REFETUFURN PYC LLAVEC

    LLAVEA          shift and go to state 71


state 46

    (17) declarar_main -> IFINT MAFAIFIN PA PC LLAVEA . bloque_codigo REFETUFURN PYC LLAVEC
    (20) declarar_main_error -> IFINT MAFAIFIN PA PC LLAVEA . bloque_codigo LLAVEC
    (30) bloque_codigo -> . declarar_if bloque_codigo
    (31) bloque_codigo -> . declaracion bloque_codigo
    (32) bloque_codigo -> . asignar_estructuras bloque_codigo
    (33) bloque_codigo -> . funcion bloque_codigo
    (34) bloque_codigo -> . print bloque_codigo
    (35) bloque_codigo -> . input bloque_codigo
    (36) bloque_codigo -> . declaracion_while bloque_codigo
    (37) bloque_codigo -> . VACIO
    (38) declarar_if -> . IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC
    (39) declarar_if -> . IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE LLAVEA bloque_codigo LLAVEC
    (40) declarar_if -> . declarar_if_error_llave
    (43) declaracion -> . tipo_dato ID PYC
    (44) declaracion -> . tipo_dato ID ASG ID operacion_matematica ID PYC
    (45) declaracion -> . tipo_dato ID ASG valores PYC
    (46) declaracion -> . declaracion_error
    (50) asignar_estructuras -> . ID PUNTO ID ASG
    (51) funcion -> . ID PA valores PC PYC
    (52) funcion -> . ID PA PC PYC
    (53) funcion -> . ID PA valores COMA valores PC PYC
    (54) print -> . PRIFINT PA ID PC PYC
    (55) input -> . IFINPUFUT PA ID PC PYC
    (56) declaracion_while -> . WHIFILEFE PA condicion PC LLAVEA bloque_codigo LLAVEC
    (57) declaracion_while -> . declaracion_while_error
    (41) declarar_if_error_llave -> . IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE LLAVEA bloque_codigo
    (42) declarar_if_error_llave -> . IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE bloque_codigo LLAVEC
    (22) tipo_dato -> . IFINT
    (23) tipo_dato -> . STRIFING
    (24) tipo_dato -> . AFARRAFAY
    (25) tipo_dato -> . STRUFUCT
    (26) tipo_dato -> . VOFOIFID
    (27) tipo_dato -> . CHAFAR
    (28) tipo_dato -> . BOFOOFOL
    (29) tipo_dato -> . FLOFOAFAT
    (47) declaracion_error -> . ID PYC
    (48) declaracion_error -> . ID ASG ID operacion_matematica ID PYC
    (49) declaracion_error -> . ID ASG valores PYC
    (58) declaracion_while_error -> . PA condicion PC LLAVEA bloque_codigo LLAVEC
    (59) declaracion_while_error -> . WHIFILEFE PA condicion PC bloque_codigo LLAVEC
    (60) declaracion_while_error -> . WHIFILEFE PA condicion PC LLAVEA bloque_codigo

    VACIO           shift and go to state 56
    IFIF            shift and go to state 57
    ID              shift and go to state 60
    PRIFINT         shift and go to state 62
    IFINPUFUT       shift and go to state 63
    WHIFILEFE       shift and go to state 64
    IFINT           shift and go to state 18
    STRIFING        shift and go to state 19
    AFARRAFAY       shift and go to state 20
    STRUFUCT        shift and go to state 21
    VOFOIFID        shift and go to state 22
    CHAFAR          shift and go to state 23
    BOFOOFOL        shift and go to state 24
    FLOFOAFAT       shift and go to state 25
    PA              shift and go to state 47

    bloque_codigo                  shift and go to state 72
    declarar_if                    shift and go to state 49
    declaracion                    shift and go to state 50
    asignar_estructuras            shift and go to state 51
    funcion                        shift and go to state 52
    print                          shift and go to state 53
    input                          shift and go to state 54
    declaracion_while              shift and go to state 55
    declarar_if_error_llave        shift and go to state 58
    tipo_dato                      shift and go to state 59
    declaracion_error              shift and go to state 61
    declaracion_while_error        shift and go to state 65

state 47

    (58) declaracion_while_error -> PA . condicion PC LLAVEA bloque_codigo LLAVEC
    (61) condicion -> . valores operadores valores
    (62) condicion -> . valores
    (63) condicion -> . valores operadores_logicos condicion
    (64) condicion -> . valores NOT valores
    (71) valores -> . INT
    (72) valores -> . CHAR
    (73) valores -> . TRUFUEFE
    (74) valores -> . FAFALSEFE
    (75) valores -> . PCC
    (76) valores -> . ID

    INT             shift and go to state 75
    CHAR            shift and go to state 76
    TRUFUEFE        shift and go to state 77
    FAFALSEFE       shift and go to state 78
    PCC             shift and go to state 79
    ID              shift and go to state 80

    condicion                      shift and go to state 73
    valores                        shift and go to state 74

state 48

    (19) declarar_main_error -> MAFAIFIN PA PC LLAVEA bloque_codigo . REFETUFURN PYC LLAVEC
    (21) declarar_main_error -> MAFAIFIN PA PC LLAVEA bloque_codigo . LLAVEC

    REFETUFURN      shift and go to state 81
    LLAVEC          shift and go to state 82


state 49

    (30) bloque_codigo -> declarar_if . bloque_codigo
    (30) bloque_codigo -> . declarar_if bloque_codigo
    (31) bloque_codigo -> . declaracion bloque_codigo
    (32) bloque_codigo -> . asignar_estructuras bloque_codigo
    (33) bloque_codigo -> . funcion bloque_codigo
    (34) bloque_codigo -> . print bloque_codigo
    (35) bloque_codigo -> . input bloque_codigo
    (36) bloque_codigo -> . declaracion_while bloque_codigo
    (37) bloque_codigo -> . VACIO
    (38) declarar_if -> . IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC
    (39) declarar_if -> . IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE LLAVEA bloque_codigo LLAVEC
    (40) declarar_if -> . declarar_if_error_llave
    (43) declaracion -> . tipo_dato ID PYC
    (44) declaracion -> . tipo_dato ID ASG ID operacion_matematica ID PYC
    (45) declaracion -> . tipo_dato ID ASG valores PYC
    (46) declaracion -> . declaracion_error
    (50) asignar_estructuras -> . ID PUNTO ID ASG
    (51) funcion -> . ID PA valores PC PYC
    (52) funcion -> . ID PA PC PYC
    (53) funcion -> . ID PA valores COMA valores PC PYC
    (54) print -> . PRIFINT PA ID PC PYC
    (55) input -> . IFINPUFUT PA ID PC PYC
    (56) declaracion_while -> . WHIFILEFE PA condicion PC LLAVEA bloque_codigo LLAVEC
    (57) declaracion_while -> . declaracion_while_error
    (41) declarar_if_error_llave -> . IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE LLAVEA bloque_codigo
    (42) declarar_if_error_llave -> . IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE bloque_codigo LLAVEC
    (22) tipo_dato -> . IFINT
    (23) tipo_dato -> . STRIFING
    (24) tipo_dato -> . AFARRAFAY
    (25) tipo_dato -> . STRUFUCT
    (26) tipo_dato -> . VOFOIFID
    (27) tipo_dato -> . CHAFAR
    (28) tipo_dato -> . BOFOOFOL
    (29) tipo_dato -> . FLOFOAFAT
    (47) declaracion_error -> . ID PYC
    (48) declaracion_error -> . ID ASG ID operacion_matematica ID PYC
    (49) declaracion_error -> . ID ASG valores PYC
    (58) declaracion_while_error -> . PA condicion PC LLAVEA bloque_codigo LLAVEC
    (59) declaracion_while_error -> . WHIFILEFE PA condicion PC bloque_codigo LLAVEC
    (60) declaracion_while_error -> . WHIFILEFE PA condicion PC LLAVEA bloque_codigo

    VACIO           shift and go to state 56
    IFIF            shift and go to state 57
    ID              shift and go to state 60
    PRIFINT         shift and go to state 62
    IFINPUFUT       shift and go to state 63
    WHIFILEFE       shift and go to state 64
    IFINT           shift and go to state 18
    STRIFING        shift and go to state 19
    AFARRAFAY       shift and go to state 20
    STRUFUCT        shift and go to state 21
    VOFOIFID        shift and go to state 22
    CHAFAR          shift and go to state 23
    BOFOOFOL        shift and go to state 24
    FLOFOAFAT       shift and go to state 25
    PA              shift and go to state 47

    declarar_if                    shift and go to state 49
    bloque_codigo                  shift and go to state 83
    declaracion                    shift and go to state 50
    asignar_estructuras            shift and go to state 51
    funcion                        shift and go to state 52
    print                          shift and go to state 53
    input                          shift and go to state 54
    declaracion_while              shift and go to state 55
    declarar_if_error_llave        shift and go to state 58
    tipo_dato                      shift and go to state 59
    declaracion_error              shift and go to state 61
    declaracion_while_error        shift and go to state 65

state 50

    (31) bloque_codigo -> declaracion . bloque_codigo
    (30) bloque_codigo -> . declarar_if bloque_codigo
    (31) bloque_codigo -> . declaracion bloque_codigo
    (32) bloque_codigo -> . asignar_estructuras bloque_codigo
    (33) bloque_codigo -> . funcion bloque_codigo
    (34) bloque_codigo -> . print bloque_codigo
    (35) bloque_codigo -> . input bloque_codigo
    (36) bloque_codigo -> . declaracion_while bloque_codigo
    (37) bloque_codigo -> . VACIO
    (38) declarar_if -> . IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC
    (39) declarar_if -> . IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE LLAVEA bloque_codigo LLAVEC
    (40) declarar_if -> . declarar_if_error_llave
    (43) declaracion -> . tipo_dato ID PYC
    (44) declaracion -> . tipo_dato ID ASG ID operacion_matematica ID PYC
    (45) declaracion -> . tipo_dato ID ASG valores PYC
    (46) declaracion -> . declaracion_error
    (50) asignar_estructuras -> . ID PUNTO ID ASG
    (51) funcion -> . ID PA valores PC PYC
    (52) funcion -> . ID PA PC PYC
    (53) funcion -> . ID PA valores COMA valores PC PYC
    (54) print -> . PRIFINT PA ID PC PYC
    (55) input -> . IFINPUFUT PA ID PC PYC
    (56) declaracion_while -> . WHIFILEFE PA condicion PC LLAVEA bloque_codigo LLAVEC
    (57) declaracion_while -> . declaracion_while_error
    (41) declarar_if_error_llave -> . IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE LLAVEA bloque_codigo
    (42) declarar_if_error_llave -> . IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE bloque_codigo LLAVEC
    (22) tipo_dato -> . IFINT
    (23) tipo_dato -> . STRIFING
    (24) tipo_dato -> . AFARRAFAY
    (25) tipo_dato -> . STRUFUCT
    (26) tipo_dato -> . VOFOIFID
    (27) tipo_dato -> . CHAFAR
    (28) tipo_dato -> . BOFOOFOL
    (29) tipo_dato -> . FLOFOAFAT
    (47) declaracion_error -> . ID PYC
    (48) declaracion_error -> . ID ASG ID operacion_matematica ID PYC
    (49) declaracion_error -> . ID ASG valores PYC
    (58) declaracion_while_error -> . PA condicion PC LLAVEA bloque_codigo LLAVEC
    (59) declaracion_while_error -> . WHIFILEFE PA condicion PC bloque_codigo LLAVEC
    (60) declaracion_while_error -> . WHIFILEFE PA condicion PC LLAVEA bloque_codigo

    VACIO           shift and go to state 56
    IFIF            shift and go to state 57
    ID              shift and go to state 60
    PRIFINT         shift and go to state 62
    IFINPUFUT       shift and go to state 63
    WHIFILEFE       shift and go to state 64
    IFINT           shift and go to state 18
    STRIFING        shift and go to state 19
    AFARRAFAY       shift and go to state 20
    STRUFUCT        shift and go to state 21
    VOFOIFID        shift and go to state 22
    CHAFAR          shift and go to state 23
    BOFOOFOL        shift and go to state 24
    FLOFOAFAT       shift and go to state 25
    PA              shift and go to state 47

    declaracion                    shift and go to state 50
    bloque_codigo                  shift and go to state 84
    declarar_if                    shift and go to state 49
    asignar_estructuras            shift and go to state 51
    funcion                        shift and go to state 52
    print                          shift and go to state 53
    input                          shift and go to state 54
    declaracion_while              shift and go to state 55
    declarar_if_error_llave        shift and go to state 58
    tipo_dato                      shift and go to state 59
    declaracion_error              shift and go to state 61
    declaracion_while_error        shift and go to state 65

state 51

    (32) bloque_codigo -> asignar_estructuras . bloque_codigo
    (30) bloque_codigo -> . declarar_if bloque_codigo
    (31) bloque_codigo -> . declaracion bloque_codigo
    (32) bloque_codigo -> . asignar_estructuras bloque_codigo
    (33) bloque_codigo -> . funcion bloque_codigo
    (34) bloque_codigo -> . print bloque_codigo
    (35) bloque_codigo -> . input bloque_codigo
    (36) bloque_codigo -> . declaracion_while bloque_codigo
    (37) bloque_codigo -> . VACIO
    (38) declarar_if -> . IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC
    (39) declarar_if -> . IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE LLAVEA bloque_codigo LLAVEC
    (40) declarar_if -> . declarar_if_error_llave
    (43) declaracion -> . tipo_dato ID PYC
    (44) declaracion -> . tipo_dato ID ASG ID operacion_matematica ID PYC
    (45) declaracion -> . tipo_dato ID ASG valores PYC
    (46) declaracion -> . declaracion_error
    (50) asignar_estructuras -> . ID PUNTO ID ASG
    (51) funcion -> . ID PA valores PC PYC
    (52) funcion -> . ID PA PC PYC
    (53) funcion -> . ID PA valores COMA valores PC PYC
    (54) print -> . PRIFINT PA ID PC PYC
    (55) input -> . IFINPUFUT PA ID PC PYC
    (56) declaracion_while -> . WHIFILEFE PA condicion PC LLAVEA bloque_codigo LLAVEC
    (57) declaracion_while -> . declaracion_while_error
    (41) declarar_if_error_llave -> . IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE LLAVEA bloque_codigo
    (42) declarar_if_error_llave -> . IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE bloque_codigo LLAVEC
    (22) tipo_dato -> . IFINT
    (23) tipo_dato -> . STRIFING
    (24) tipo_dato -> . AFARRAFAY
    (25) tipo_dato -> . STRUFUCT
    (26) tipo_dato -> . VOFOIFID
    (27) tipo_dato -> . CHAFAR
    (28) tipo_dato -> . BOFOOFOL
    (29) tipo_dato -> . FLOFOAFAT
    (47) declaracion_error -> . ID PYC
    (48) declaracion_error -> . ID ASG ID operacion_matematica ID PYC
    (49) declaracion_error -> . ID ASG valores PYC
    (58) declaracion_while_error -> . PA condicion PC LLAVEA bloque_codigo LLAVEC
    (59) declaracion_while_error -> . WHIFILEFE PA condicion PC bloque_codigo LLAVEC
    (60) declaracion_while_error -> . WHIFILEFE PA condicion PC LLAVEA bloque_codigo

    VACIO           shift and go to state 56
    IFIF            shift and go to state 57
    ID              shift and go to state 60
    PRIFINT         shift and go to state 62
    IFINPUFUT       shift and go to state 63
    WHIFILEFE       shift and go to state 64
    IFINT           shift and go to state 18
    STRIFING        shift and go to state 19
    AFARRAFAY       shift and go to state 20
    STRUFUCT        shift and go to state 21
    VOFOIFID        shift and go to state 22
    CHAFAR          shift and go to state 23
    BOFOOFOL        shift and go to state 24
    FLOFOAFAT       shift and go to state 25
    PA              shift and go to state 47

    asignar_estructuras            shift and go to state 51
    bloque_codigo                  shift and go to state 85
    declarar_if                    shift and go to state 49
    declaracion                    shift and go to state 50
    funcion                        shift and go to state 52
    print                          shift and go to state 53
    input                          shift and go to state 54
    declaracion_while              shift and go to state 55
    declarar_if_error_llave        shift and go to state 58
    tipo_dato                      shift and go to state 59
    declaracion_error              shift and go to state 61
    declaracion_while_error        shift and go to state 65

state 52

    (33) bloque_codigo -> funcion . bloque_codigo
    (30) bloque_codigo -> . declarar_if bloque_codigo
    (31) bloque_codigo -> . declaracion bloque_codigo
    (32) bloque_codigo -> . asignar_estructuras bloque_codigo
    (33) bloque_codigo -> . funcion bloque_codigo
    (34) bloque_codigo -> . print bloque_codigo
    (35) bloque_codigo -> . input bloque_codigo
    (36) bloque_codigo -> . declaracion_while bloque_codigo
    (37) bloque_codigo -> . VACIO
    (38) declarar_if -> . IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC
    (39) declarar_if -> . IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE LLAVEA bloque_codigo LLAVEC
    (40) declarar_if -> . declarar_if_error_llave
    (43) declaracion -> . tipo_dato ID PYC
    (44) declaracion -> . tipo_dato ID ASG ID operacion_matematica ID PYC
    (45) declaracion -> . tipo_dato ID ASG valores PYC
    (46) declaracion -> . declaracion_error
    (50) asignar_estructuras -> . ID PUNTO ID ASG
    (51) funcion -> . ID PA valores PC PYC
    (52) funcion -> . ID PA PC PYC
    (53) funcion -> . ID PA valores COMA valores PC PYC
    (54) print -> . PRIFINT PA ID PC PYC
    (55) input -> . IFINPUFUT PA ID PC PYC
    (56) declaracion_while -> . WHIFILEFE PA condicion PC LLAVEA bloque_codigo LLAVEC
    (57) declaracion_while -> . declaracion_while_error
    (41) declarar_if_error_llave -> . IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE LLAVEA bloque_codigo
    (42) declarar_if_error_llave -> . IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE bloque_codigo LLAVEC
    (22) tipo_dato -> . IFINT
    (23) tipo_dato -> . STRIFING
    (24) tipo_dato -> . AFARRAFAY
    (25) tipo_dato -> . STRUFUCT
    (26) tipo_dato -> . VOFOIFID
    (27) tipo_dato -> . CHAFAR
    (28) tipo_dato -> . BOFOOFOL
    (29) tipo_dato -> . FLOFOAFAT
    (47) declaracion_error -> . ID PYC
    (48) declaracion_error -> . ID ASG ID operacion_matematica ID PYC
    (49) declaracion_error -> . ID ASG valores PYC
    (58) declaracion_while_error -> . PA condicion PC LLAVEA bloque_codigo LLAVEC
    (59) declaracion_while_error -> . WHIFILEFE PA condicion PC bloque_codigo LLAVEC
    (60) declaracion_while_error -> . WHIFILEFE PA condicion PC LLAVEA bloque_codigo

    VACIO           shift and go to state 56
    IFIF            shift and go to state 57
    ID              shift and go to state 60
    PRIFINT         shift and go to state 62
    IFINPUFUT       shift and go to state 63
    WHIFILEFE       shift and go to state 64
    IFINT           shift and go to state 18
    STRIFING        shift and go to state 19
    AFARRAFAY       shift and go to state 20
    STRUFUCT        shift and go to state 21
    VOFOIFID        shift and go to state 22
    CHAFAR          shift and go to state 23
    BOFOOFOL        shift and go to state 24
    FLOFOAFAT       shift and go to state 25
    PA              shift and go to state 47

    funcion                        shift and go to state 52
    bloque_codigo                  shift and go to state 86
    declarar_if                    shift and go to state 49
    declaracion                    shift and go to state 50
    asignar_estructuras            shift and go to state 51
    print                          shift and go to state 53
    input                          shift and go to state 54
    declaracion_while              shift and go to state 55
    declarar_if_error_llave        shift and go to state 58
    tipo_dato                      shift and go to state 59
    declaracion_error              shift and go to state 61
    declaracion_while_error        shift and go to state 65

state 53

    (34) bloque_codigo -> print . bloque_codigo
    (30) bloque_codigo -> . declarar_if bloque_codigo
    (31) bloque_codigo -> . declaracion bloque_codigo
    (32) bloque_codigo -> . asignar_estructuras bloque_codigo
    (33) bloque_codigo -> . funcion bloque_codigo
    (34) bloque_codigo -> . print bloque_codigo
    (35) bloque_codigo -> . input bloque_codigo
    (36) bloque_codigo -> . declaracion_while bloque_codigo
    (37) bloque_codigo -> . VACIO
    (38) declarar_if -> . IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC
    (39) declarar_if -> . IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE LLAVEA bloque_codigo LLAVEC
    (40) declarar_if -> . declarar_if_error_llave
    (43) declaracion -> . tipo_dato ID PYC
    (44) declaracion -> . tipo_dato ID ASG ID operacion_matematica ID PYC
    (45) declaracion -> . tipo_dato ID ASG valores PYC
    (46) declaracion -> . declaracion_error
    (50) asignar_estructuras -> . ID PUNTO ID ASG
    (51) funcion -> . ID PA valores PC PYC
    (52) funcion -> . ID PA PC PYC
    (53) funcion -> . ID PA valores COMA valores PC PYC
    (54) print -> . PRIFINT PA ID PC PYC
    (55) input -> . IFINPUFUT PA ID PC PYC
    (56) declaracion_while -> . WHIFILEFE PA condicion PC LLAVEA bloque_codigo LLAVEC
    (57) declaracion_while -> . declaracion_while_error
    (41) declarar_if_error_llave -> . IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE LLAVEA bloque_codigo
    (42) declarar_if_error_llave -> . IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE bloque_codigo LLAVEC
    (22) tipo_dato -> . IFINT
    (23) tipo_dato -> . STRIFING
    (24) tipo_dato -> . AFARRAFAY
    (25) tipo_dato -> . STRUFUCT
    (26) tipo_dato -> . VOFOIFID
    (27) tipo_dato -> . CHAFAR
    (28) tipo_dato -> . BOFOOFOL
    (29) tipo_dato -> . FLOFOAFAT
    (47) declaracion_error -> . ID PYC
    (48) declaracion_error -> . ID ASG ID operacion_matematica ID PYC
    (49) declaracion_error -> . ID ASG valores PYC
    (58) declaracion_while_error -> . PA condicion PC LLAVEA bloque_codigo LLAVEC
    (59) declaracion_while_error -> . WHIFILEFE PA condicion PC bloque_codigo LLAVEC
    (60) declaracion_while_error -> . WHIFILEFE PA condicion PC LLAVEA bloque_codigo

    VACIO           shift and go to state 56
    IFIF            shift and go to state 57
    ID              shift and go to state 60
    PRIFINT         shift and go to state 62
    IFINPUFUT       shift and go to state 63
    WHIFILEFE       shift and go to state 64
    IFINT           shift and go to state 18
    STRIFING        shift and go to state 19
    AFARRAFAY       shift and go to state 20
    STRUFUCT        shift and go to state 21
    VOFOIFID        shift and go to state 22
    CHAFAR          shift and go to state 23
    BOFOOFOL        shift and go to state 24
    FLOFOAFAT       shift and go to state 25
    PA              shift and go to state 47

    print                          shift and go to state 53
    bloque_codigo                  shift and go to state 87
    declarar_if                    shift and go to state 49
    declaracion                    shift and go to state 50
    asignar_estructuras            shift and go to state 51
    funcion                        shift and go to state 52
    input                          shift and go to state 54
    declaracion_while              shift and go to state 55
    declarar_if_error_llave        shift and go to state 58
    tipo_dato                      shift and go to state 59
    declaracion_error              shift and go to state 61
    declaracion_while_error        shift and go to state 65

state 54

    (35) bloque_codigo -> input . bloque_codigo
    (30) bloque_codigo -> . declarar_if bloque_codigo
    (31) bloque_codigo -> . declaracion bloque_codigo
    (32) bloque_codigo -> . asignar_estructuras bloque_codigo
    (33) bloque_codigo -> . funcion bloque_codigo
    (34) bloque_codigo -> . print bloque_codigo
    (35) bloque_codigo -> . input bloque_codigo
    (36) bloque_codigo -> . declaracion_while bloque_codigo
    (37) bloque_codigo -> . VACIO
    (38) declarar_if -> . IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC
    (39) declarar_if -> . IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE LLAVEA bloque_codigo LLAVEC
    (40) declarar_if -> . declarar_if_error_llave
    (43) declaracion -> . tipo_dato ID PYC
    (44) declaracion -> . tipo_dato ID ASG ID operacion_matematica ID PYC
    (45) declaracion -> . tipo_dato ID ASG valores PYC
    (46) declaracion -> . declaracion_error
    (50) asignar_estructuras -> . ID PUNTO ID ASG
    (51) funcion -> . ID PA valores PC PYC
    (52) funcion -> . ID PA PC PYC
    (53) funcion -> . ID PA valores COMA valores PC PYC
    (54) print -> . PRIFINT PA ID PC PYC
    (55) input -> . IFINPUFUT PA ID PC PYC
    (56) declaracion_while -> . WHIFILEFE PA condicion PC LLAVEA bloque_codigo LLAVEC
    (57) declaracion_while -> . declaracion_while_error
    (41) declarar_if_error_llave -> . IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE LLAVEA bloque_codigo
    (42) declarar_if_error_llave -> . IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE bloque_codigo LLAVEC
    (22) tipo_dato -> . IFINT
    (23) tipo_dato -> . STRIFING
    (24) tipo_dato -> . AFARRAFAY
    (25) tipo_dato -> . STRUFUCT
    (26) tipo_dato -> . VOFOIFID
    (27) tipo_dato -> . CHAFAR
    (28) tipo_dato -> . BOFOOFOL
    (29) tipo_dato -> . FLOFOAFAT
    (47) declaracion_error -> . ID PYC
    (48) declaracion_error -> . ID ASG ID operacion_matematica ID PYC
    (49) declaracion_error -> . ID ASG valores PYC
    (58) declaracion_while_error -> . PA condicion PC LLAVEA bloque_codigo LLAVEC
    (59) declaracion_while_error -> . WHIFILEFE PA condicion PC bloque_codigo LLAVEC
    (60) declaracion_while_error -> . WHIFILEFE PA condicion PC LLAVEA bloque_codigo

    VACIO           shift and go to state 56
    IFIF            shift and go to state 57
    ID              shift and go to state 60
    PRIFINT         shift and go to state 62
    IFINPUFUT       shift and go to state 63
    WHIFILEFE       shift and go to state 64
    IFINT           shift and go to state 18
    STRIFING        shift and go to state 19
    AFARRAFAY       shift and go to state 20
    STRUFUCT        shift and go to state 21
    VOFOIFID        shift and go to state 22
    CHAFAR          shift and go to state 23
    BOFOOFOL        shift and go to state 24
    FLOFOAFAT       shift and go to state 25
    PA              shift and go to state 47

    input                          shift and go to state 54
    bloque_codigo                  shift and go to state 88
    declarar_if                    shift and go to state 49
    declaracion                    shift and go to state 50
    asignar_estructuras            shift and go to state 51
    funcion                        shift and go to state 52
    print                          shift and go to state 53
    declaracion_while              shift and go to state 55
    declarar_if_error_llave        shift and go to state 58
    tipo_dato                      shift and go to state 59
    declaracion_error              shift and go to state 61
    declaracion_while_error        shift and go to state 65

state 55

    (36) bloque_codigo -> declaracion_while . bloque_codigo
    (30) bloque_codigo -> . declarar_if bloque_codigo
    (31) bloque_codigo -> . declaracion bloque_codigo
    (32) bloque_codigo -> . asignar_estructuras bloque_codigo
    (33) bloque_codigo -> . funcion bloque_codigo
    (34) bloque_codigo -> . print bloque_codigo
    (35) bloque_codigo -> . input bloque_codigo
    (36) bloque_codigo -> . declaracion_while bloque_codigo
    (37) bloque_codigo -> . VACIO
    (38) declarar_if -> . IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC
    (39) declarar_if -> . IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE LLAVEA bloque_codigo LLAVEC
    (40) declarar_if -> . declarar_if_error_llave
    (43) declaracion -> . tipo_dato ID PYC
    (44) declaracion -> . tipo_dato ID ASG ID operacion_matematica ID PYC
    (45) declaracion -> . tipo_dato ID ASG valores PYC
    (46) declaracion -> . declaracion_error
    (50) asignar_estructuras -> . ID PUNTO ID ASG
    (51) funcion -> . ID PA valores PC PYC
    (52) funcion -> . ID PA PC PYC
    (53) funcion -> . ID PA valores COMA valores PC PYC
    (54) print -> . PRIFINT PA ID PC PYC
    (55) input -> . IFINPUFUT PA ID PC PYC
    (56) declaracion_while -> . WHIFILEFE PA condicion PC LLAVEA bloque_codigo LLAVEC
    (57) declaracion_while -> . declaracion_while_error
    (41) declarar_if_error_llave -> . IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE LLAVEA bloque_codigo
    (42) declarar_if_error_llave -> . IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE bloque_codigo LLAVEC
    (22) tipo_dato -> . IFINT
    (23) tipo_dato -> . STRIFING
    (24) tipo_dato -> . AFARRAFAY
    (25) tipo_dato -> . STRUFUCT
    (26) tipo_dato -> . VOFOIFID
    (27) tipo_dato -> . CHAFAR
    (28) tipo_dato -> . BOFOOFOL
    (29) tipo_dato -> . FLOFOAFAT
    (47) declaracion_error -> . ID PYC
    (48) declaracion_error -> . ID ASG ID operacion_matematica ID PYC
    (49) declaracion_error -> . ID ASG valores PYC
    (58) declaracion_while_error -> . PA condicion PC LLAVEA bloque_codigo LLAVEC
    (59) declaracion_while_error -> . WHIFILEFE PA condicion PC bloque_codigo LLAVEC
    (60) declaracion_while_error -> . WHIFILEFE PA condicion PC LLAVEA bloque_codigo

    VACIO           shift and go to state 56
    IFIF            shift and go to state 57
    ID              shift and go to state 60
    PRIFINT         shift and go to state 62
    IFINPUFUT       shift and go to state 63
    WHIFILEFE       shift and go to state 64
    IFINT           shift and go to state 18
    STRIFING        shift and go to state 19
    AFARRAFAY       shift and go to state 20
    STRUFUCT        shift and go to state 21
    VOFOIFID        shift and go to state 22
    CHAFAR          shift and go to state 23
    BOFOOFOL        shift and go to state 24
    FLOFOAFAT       shift and go to state 25
    PA              shift and go to state 47

    declaracion_while              shift and go to state 55
    bloque_codigo                  shift and go to state 89
    declarar_if                    shift and go to state 49
    declaracion                    shift and go to state 50
    asignar_estructuras            shift and go to state 51
    funcion                        shift and go to state 52
    print                          shift and go to state 53
    input                          shift and go to state 54
    declarar_if_error_llave        shift and go to state 58
    tipo_dato                      shift and go to state 59
    declaracion_error              shift and go to state 61
    declaracion_while_error        shift and go to state 65

state 56

    (37) bloque_codigo -> VACIO .

    REFETUFURN      reduce using rule 37 (bloque_codigo -> VACIO .)
    LLAVEC          reduce using rule 37 (bloque_codigo -> VACIO .)
    VACIO           reduce using rule 37 (bloque_codigo -> VACIO .)
    IFIF            reduce using rule 37 (bloque_codigo -> VACIO .)
    ID              reduce using rule 37 (bloque_codigo -> VACIO .)
    PRIFINT         reduce using rule 37 (bloque_codigo -> VACIO .)
    IFINPUFUT       reduce using rule 37 (bloque_codigo -> VACIO .)
    WHIFILEFE       reduce using rule 37 (bloque_codigo -> VACIO .)
    IFINT           reduce using rule 37 (bloque_codigo -> VACIO .)
    STRIFING        reduce using rule 37 (bloque_codigo -> VACIO .)
    AFARRAFAY       reduce using rule 37 (bloque_codigo -> VACIO .)
    STRUFUCT        reduce using rule 37 (bloque_codigo -> VACIO .)
    VOFOIFID        reduce using rule 37 (bloque_codigo -> VACIO .)
    CHAFAR          reduce using rule 37 (bloque_codigo -> VACIO .)
    BOFOOFOL        reduce using rule 37 (bloque_codigo -> VACIO .)
    FLOFOAFAT       reduce using rule 37 (bloque_codigo -> VACIO .)
    PA              reduce using rule 37 (bloque_codigo -> VACIO .)


state 57

    (38) declarar_if -> IFIF . PA condicion PC LLAVEA bloque_codigo LLAVEC
    (39) declarar_if -> IFIF . PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE LLAVEA bloque_codigo LLAVEC
    (41) declarar_if_error_llave -> IFIF . PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE LLAVEA bloque_codigo
    (42) declarar_if_error_llave -> IFIF . PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE bloque_codigo LLAVEC

    PA              shift and go to state 90


state 58

    (40) declarar_if -> declarar_if_error_llave .

    VACIO           reduce using rule 40 (declarar_if -> declarar_if_error_llave .)
    IFIF            reduce using rule 40 (declarar_if -> declarar_if_error_llave .)
    ID              reduce using rule 40 (declarar_if -> declarar_if_error_llave .)
    PRIFINT         reduce using rule 40 (declarar_if -> declarar_if_error_llave .)
    IFINPUFUT       reduce using rule 40 (declarar_if -> declarar_if_error_llave .)
    WHIFILEFE       reduce using rule 40 (declarar_if -> declarar_if_error_llave .)
    IFINT           reduce using rule 40 (declarar_if -> declarar_if_error_llave .)
    STRIFING        reduce using rule 40 (declarar_if -> declarar_if_error_llave .)
    AFARRAFAY       reduce using rule 40 (declarar_if -> declarar_if_error_llave .)
    STRUFUCT        reduce using rule 40 (declarar_if -> declarar_if_error_llave .)
    VOFOIFID        reduce using rule 40 (declarar_if -> declarar_if_error_llave .)
    CHAFAR          reduce using rule 40 (declarar_if -> declarar_if_error_llave .)
    BOFOOFOL        reduce using rule 40 (declarar_if -> declarar_if_error_llave .)
    FLOFOAFAT       reduce using rule 40 (declarar_if -> declarar_if_error_llave .)
    PA              reduce using rule 40 (declarar_if -> declarar_if_error_llave .)


state 59

    (43) declaracion -> tipo_dato . ID PYC
    (44) declaracion -> tipo_dato . ID ASG ID operacion_matematica ID PYC
    (45) declaracion -> tipo_dato . ID ASG valores PYC

    ID              shift and go to state 91


state 60

    (50) asignar_estructuras -> ID . PUNTO ID ASG
    (51) funcion -> ID . PA valores PC PYC
    (52) funcion -> ID . PA PC PYC
    (53) funcion -> ID . PA valores COMA valores PC PYC
    (47) declaracion_error -> ID . PYC
    (48) declaracion_error -> ID . ASG ID operacion_matematica ID PYC
    (49) declaracion_error -> ID . ASG valores PYC

    PUNTO           shift and go to state 92
    PA              shift and go to state 94
    PYC             shift and go to state 95
    ASG             shift and go to state 93


state 61

    (46) declaracion -> declaracion_error .

    VACIO           reduce using rule 46 (declaracion -> declaracion_error .)
    IFIF            reduce using rule 46 (declaracion -> declaracion_error .)
    ID              reduce using rule 46 (declaracion -> declaracion_error .)
    PRIFINT         reduce using rule 46 (declaracion -> declaracion_error .)
    IFINPUFUT       reduce using rule 46 (declaracion -> declaracion_error .)
    WHIFILEFE       reduce using rule 46 (declaracion -> declaracion_error .)
    IFINT           reduce using rule 46 (declaracion -> declaracion_error .)
    STRIFING        reduce using rule 46 (declaracion -> declaracion_error .)
    AFARRAFAY       reduce using rule 46 (declaracion -> declaracion_error .)
    STRUFUCT        reduce using rule 46 (declaracion -> declaracion_error .)
    VOFOIFID        reduce using rule 46 (declaracion -> declaracion_error .)
    CHAFAR          reduce using rule 46 (declaracion -> declaracion_error .)
    BOFOOFOL        reduce using rule 46 (declaracion -> declaracion_error .)
    FLOFOAFAT       reduce using rule 46 (declaracion -> declaracion_error .)
    PA              reduce using rule 46 (declaracion -> declaracion_error .)


state 62

    (54) print -> PRIFINT . PA ID PC PYC

    PA              shift and go to state 96


state 63

    (55) input -> IFINPUFUT . PA ID PC PYC

    PA              shift and go to state 97


state 64

    (56) declaracion_while -> WHIFILEFE . PA condicion PC LLAVEA bloque_codigo LLAVEC
    (59) declaracion_while_error -> WHIFILEFE . PA condicion PC bloque_codigo LLAVEC
    (60) declaracion_while_error -> WHIFILEFE . PA condicion PC LLAVEA bloque_codigo

    PA              shift and go to state 98


state 65

    (57) declaracion_while -> declaracion_while_error .

    VACIO           reduce using rule 57 (declaracion_while -> declaracion_while_error .)
    IFIF            reduce using rule 57 (declaracion_while -> declaracion_while_error .)
    ID              reduce using rule 57 (declaracion_while -> declaracion_while_error .)
    PRIFINT         reduce using rule 57 (declaracion_while -> declaracion_while_error .)
    IFINPUFUT       reduce using rule 57 (declaracion_while -> declaracion_while_error .)
    WHIFILEFE       reduce using rule 57 (declaracion_while -> declaracion_while_error .)
    IFINT           reduce using rule 57 (declaracion_while -> declaracion_while_error .)
    STRIFING        reduce using rule 57 (declaracion_while -> declaracion_while_error .)
    AFARRAFAY       reduce using rule 57 (declaracion_while -> declaracion_while_error .)
    STRUFUCT        reduce using rule 57 (declaracion_while -> declaracion_while_error .)
    VOFOIFID        reduce using rule 57 (declaracion_while -> declaracion_while_error .)
    CHAFAR          reduce using rule 57 (declaracion_while -> declaracion_while_error .)
    BOFOOFOL        reduce using rule 57 (declaracion_while -> declaracion_while_error .)
    FLOFOAFAT       reduce using rule 57 (declaracion_while -> declaracion_while_error .)
    PA              reduce using rule 57 (declaracion_while -> declaracion_while_error .)


state 66

    (11) declarar_estructuras_error -> STRUFUCT ID LLAVEA ID PYC ID . PYC LLAVEC

    PYC             shift and go to state 99


state 67

    (5) declarar_estructuras -> STRUFUCT ID LLAVEA tipo_dato ID PYC . tipo_dato ID PYC LLAVEC
    (9) declarar_estructuras_error -> STRUFUCT ID LLAVEA tipo_dato ID PYC . tipo_dato PYC LLAVEC
    (22) tipo_dato -> . IFINT
    (23) tipo_dato -> . STRIFING
    (24) tipo_dato -> . AFARRAFAY
    (25) tipo_dato -> . STRUFUCT
    (26) tipo_dato -> . VOFOIFID
    (27) tipo_dato -> . CHAFAR
    (28) tipo_dato -> . BOFOOFOL
    (29) tipo_dato -> . FLOFOAFAT

    IFINT           shift and go to state 18
    STRIFING        shift and go to state 19
    AFARRAFAY       shift and go to state 20
    STRUFUCT        shift and go to state 21
    VOFOIFID        shift and go to state 22
    CHAFAR          shift and go to state 23
    BOFOOFOL        shift and go to state 24
    FLOFOAFAT       shift and go to state 25

    tipo_dato                      shift and go to state 100

state 68

    (8) declarar_estructuras_error -> STRUFUCT ID LLAVEA tipo_dato PYC tipo_dato . ID PYC LLAVEC
    (10) declarar_estructuras_error -> STRUFUCT ID LLAVEA tipo_dato PYC tipo_dato . PYC LLAVEC

    ID              shift and go to state 101
    PYC             shift and go to state 102


state 69

    (7) declarar_estructuras_error -> ID LLAVEA tipo_dato ID PYC tipo_dato . ID PYC LLAVEC

    ID              shift and go to state 103


state 70

    (12) declarar_funciones -> FUNCTION tipo_dato ID PA tipo_dato ID . PC LLAVEA bloque_codigo REFETUFURN ID PYC LLAVEC
    (15) declarar_funciones -> FUNCTION tipo_dato ID PA tipo_dato ID . COMA tipo_dato ID PC LLAVEA bloque_codigo REFETUFURN ID PYC LLAVEC

    PC              shift and go to state 104
    COMA            shift and go to state 105


state 71

    (13) declarar_funciones -> FUNCTION tipo_dato ID PA PC LLAVEA . bloque_codigo REFETUFURN ID PYC LLAVEC
    (14) declarar_funciones -> FUNCTION tipo_dato ID PA PC LLAVEA . bloque_codigo REFETUFURN PYC LLAVEC
    (30) bloque_codigo -> . declarar_if bloque_codigo
    (31) bloque_codigo -> . declaracion bloque_codigo
    (32) bloque_codigo -> . asignar_estructuras bloque_codigo
    (33) bloque_codigo -> . funcion bloque_codigo
    (34) bloque_codigo -> . print bloque_codigo
    (35) bloque_codigo -> . input bloque_codigo
    (36) bloque_codigo -> . declaracion_while bloque_codigo
    (37) bloque_codigo -> . VACIO
    (38) declarar_if -> . IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC
    (39) declarar_if -> . IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE LLAVEA bloque_codigo LLAVEC
    (40) declarar_if -> . declarar_if_error_llave
    (43) declaracion -> . tipo_dato ID PYC
    (44) declaracion -> . tipo_dato ID ASG ID operacion_matematica ID PYC
    (45) declaracion -> . tipo_dato ID ASG valores PYC
    (46) declaracion -> . declaracion_error
    (50) asignar_estructuras -> . ID PUNTO ID ASG
    (51) funcion -> . ID PA valores PC PYC
    (52) funcion -> . ID PA PC PYC
    (53) funcion -> . ID PA valores COMA valores PC PYC
    (54) print -> . PRIFINT PA ID PC PYC
    (55) input -> . IFINPUFUT PA ID PC PYC
    (56) declaracion_while -> . WHIFILEFE PA condicion PC LLAVEA bloque_codigo LLAVEC
    (57) declaracion_while -> . declaracion_while_error
    (41) declarar_if_error_llave -> . IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE LLAVEA bloque_codigo
    (42) declarar_if_error_llave -> . IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE bloque_codigo LLAVEC
    (22) tipo_dato -> . IFINT
    (23) tipo_dato -> . STRIFING
    (24) tipo_dato -> . AFARRAFAY
    (25) tipo_dato -> . STRUFUCT
    (26) tipo_dato -> . VOFOIFID
    (27) tipo_dato -> . CHAFAR
    (28) tipo_dato -> . BOFOOFOL
    (29) tipo_dato -> . FLOFOAFAT
    (47) declaracion_error -> . ID PYC
    (48) declaracion_error -> . ID ASG ID operacion_matematica ID PYC
    (49) declaracion_error -> . ID ASG valores PYC
    (58) declaracion_while_error -> . PA condicion PC LLAVEA bloque_codigo LLAVEC
    (59) declaracion_while_error -> . WHIFILEFE PA condicion PC bloque_codigo LLAVEC
    (60) declaracion_while_error -> . WHIFILEFE PA condicion PC LLAVEA bloque_codigo

    VACIO           shift and go to state 56
    IFIF            shift and go to state 57
    ID              shift and go to state 60
    PRIFINT         shift and go to state 62
    IFINPUFUT       shift and go to state 63
    WHIFILEFE       shift and go to state 64
    IFINT           shift and go to state 18
    STRIFING        shift and go to state 19
    AFARRAFAY       shift and go to state 20
    STRUFUCT        shift and go to state 21
    VOFOIFID        shift and go to state 22
    CHAFAR          shift and go to state 23
    BOFOOFOL        shift and go to state 24
    FLOFOAFAT       shift and go to state 25
    PA              shift and go to state 47

    tipo_dato                      shift and go to state 59
    bloque_codigo                  shift and go to state 106
    declarar_if                    shift and go to state 49
    declaracion                    shift and go to state 50
    asignar_estructuras            shift and go to state 51
    funcion                        shift and go to state 52
    print                          shift and go to state 53
    input                          shift and go to state 54
    declaracion_while              shift and go to state 55
    declarar_if_error_llave        shift and go to state 58
    declaracion_error              shift and go to state 61
    declaracion_while_error        shift and go to state 65

state 72

    (17) declarar_main -> IFINT MAFAIFIN PA PC LLAVEA bloque_codigo . REFETUFURN PYC LLAVEC
    (20) declarar_main_error -> IFINT MAFAIFIN PA PC LLAVEA bloque_codigo . LLAVEC

    REFETUFURN      shift and go to state 107
    LLAVEC          shift and go to state 108


state 73

    (58) declaracion_while_error -> PA condicion . PC LLAVEA bloque_codigo LLAVEC

    PC              shift and go to state 109


state 74

    (61) condicion -> valores . operadores valores
    (62) condicion -> valores .
    (63) condicion -> valores . operadores_logicos condicion
    (64) condicion -> valores . NOT valores
    (77) operadores -> . MEN
    (78) operadores -> . MAY
    (79) operadores -> . MENIG
    (80) operadores -> . MAYIG
    (81) operadores -> . CMP
    (82) operadores -> . DIF
    (83) operadores_logicos -> . AND
    (84) operadores_logicos -> . OR

    PC              reduce using rule 62 (condicion -> valores .)
    NOT             shift and go to state 112
    MEN             shift and go to state 113
    MAY             shift and go to state 114
    MENIG           shift and go to state 115
    MAYIG           shift and go to state 116
    CMP             shift and go to state 117
    DIF             shift and go to state 118
    AND             shift and go to state 119
    OR              shift and go to state 120

    operadores                     shift and go to state 110
    operadores_logicos             shift and go to state 111

state 75

    (71) valores -> INT .

    NOT             reduce using rule 71 (valores -> INT .)
    MEN             reduce using rule 71 (valores -> INT .)
    MAY             reduce using rule 71 (valores -> INT .)
    MENIG           reduce using rule 71 (valores -> INT .)
    MAYIG           reduce using rule 71 (valores -> INT .)
    CMP             reduce using rule 71 (valores -> INT .)
    DIF             reduce using rule 71 (valores -> INT .)
    AND             reduce using rule 71 (valores -> INT .)
    OR              reduce using rule 71 (valores -> INT .)
    PC              reduce using rule 71 (valores -> INT .)
    PYC             reduce using rule 71 (valores -> INT .)
    COMA            reduce using rule 71 (valores -> INT .)


state 76

    (72) valores -> CHAR .

    NOT             reduce using rule 72 (valores -> CHAR .)
    MEN             reduce using rule 72 (valores -> CHAR .)
    MAY             reduce using rule 72 (valores -> CHAR .)
    MENIG           reduce using rule 72 (valores -> CHAR .)
    MAYIG           reduce using rule 72 (valores -> CHAR .)
    CMP             reduce using rule 72 (valores -> CHAR .)
    DIF             reduce using rule 72 (valores -> CHAR .)
    AND             reduce using rule 72 (valores -> CHAR .)
    OR              reduce using rule 72 (valores -> CHAR .)
    PC              reduce using rule 72 (valores -> CHAR .)
    PYC             reduce using rule 72 (valores -> CHAR .)
    COMA            reduce using rule 72 (valores -> CHAR .)


state 77

    (73) valores -> TRUFUEFE .

    NOT             reduce using rule 73 (valores -> TRUFUEFE .)
    MEN             reduce using rule 73 (valores -> TRUFUEFE .)
    MAY             reduce using rule 73 (valores -> TRUFUEFE .)
    MENIG           reduce using rule 73 (valores -> TRUFUEFE .)
    MAYIG           reduce using rule 73 (valores -> TRUFUEFE .)
    CMP             reduce using rule 73 (valores -> TRUFUEFE .)
    DIF             reduce using rule 73 (valores -> TRUFUEFE .)
    AND             reduce using rule 73 (valores -> TRUFUEFE .)
    OR              reduce using rule 73 (valores -> TRUFUEFE .)
    PC              reduce using rule 73 (valores -> TRUFUEFE .)
    PYC             reduce using rule 73 (valores -> TRUFUEFE .)
    COMA            reduce using rule 73 (valores -> TRUFUEFE .)


state 78

    (74) valores -> FAFALSEFE .

    NOT             reduce using rule 74 (valores -> FAFALSEFE .)
    MEN             reduce using rule 74 (valores -> FAFALSEFE .)
    MAY             reduce using rule 74 (valores -> FAFALSEFE .)
    MENIG           reduce using rule 74 (valores -> FAFALSEFE .)
    MAYIG           reduce using rule 74 (valores -> FAFALSEFE .)
    CMP             reduce using rule 74 (valores -> FAFALSEFE .)
    DIF             reduce using rule 74 (valores -> FAFALSEFE .)
    AND             reduce using rule 74 (valores -> FAFALSEFE .)
    OR              reduce using rule 74 (valores -> FAFALSEFE .)
    PC              reduce using rule 74 (valores -> FAFALSEFE .)
    PYC             reduce using rule 74 (valores -> FAFALSEFE .)
    COMA            reduce using rule 74 (valores -> FAFALSEFE .)


state 79

    (75) valores -> PCC .

    NOT             reduce using rule 75 (valores -> PCC .)
    MEN             reduce using rule 75 (valores -> PCC .)
    MAY             reduce using rule 75 (valores -> PCC .)
    MENIG           reduce using rule 75 (valores -> PCC .)
    MAYIG           reduce using rule 75 (valores -> PCC .)
    CMP             reduce using rule 75 (valores -> PCC .)
    DIF             reduce using rule 75 (valores -> PCC .)
    AND             reduce using rule 75 (valores -> PCC .)
    OR              reduce using rule 75 (valores -> PCC .)
    PC              reduce using rule 75 (valores -> PCC .)
    PYC             reduce using rule 75 (valores -> PCC .)
    COMA            reduce using rule 75 (valores -> PCC .)


state 80

    (76) valores -> ID .

    NOT             reduce using rule 76 (valores -> ID .)
    MEN             reduce using rule 76 (valores -> ID .)
    MAY             reduce using rule 76 (valores -> ID .)
    MENIG           reduce using rule 76 (valores -> ID .)
    MAYIG           reduce using rule 76 (valores -> ID .)
    CMP             reduce using rule 76 (valores -> ID .)
    DIF             reduce using rule 76 (valores -> ID .)
    AND             reduce using rule 76 (valores -> ID .)
    OR              reduce using rule 76 (valores -> ID .)
    PC              reduce using rule 76 (valores -> ID .)
    COMA            reduce using rule 76 (valores -> ID .)


state 81

    (19) declarar_main_error -> MAFAIFIN PA PC LLAVEA bloque_codigo REFETUFURN . PYC LLAVEC

    PYC             shift and go to state 121


state 82

    (21) declarar_main_error -> MAFAIFIN PA PC LLAVEA bloque_codigo LLAVEC .

    $end            reduce using rule 21 (declarar_main_error -> MAFAIFIN PA PC LLAVEA bloque_codigo LLAVEC .)


state 83

    (30) bloque_codigo -> declarar_if bloque_codigo .

    REFETUFURN      reduce using rule 30 (bloque_codigo -> declarar_if bloque_codigo .)
    LLAVEC          reduce using rule 30 (bloque_codigo -> declarar_if bloque_codigo .)
    VACIO           reduce using rule 30 (bloque_codigo -> declarar_if bloque_codigo .)
    IFIF            reduce using rule 30 (bloque_codigo -> declarar_if bloque_codigo .)
    ID              reduce using rule 30 (bloque_codigo -> declarar_if bloque_codigo .)
    PRIFINT         reduce using rule 30 (bloque_codigo -> declarar_if bloque_codigo .)
    IFINPUFUT       reduce using rule 30 (bloque_codigo -> declarar_if bloque_codigo .)
    WHIFILEFE       reduce using rule 30 (bloque_codigo -> declarar_if bloque_codigo .)
    IFINT           reduce using rule 30 (bloque_codigo -> declarar_if bloque_codigo .)
    STRIFING        reduce using rule 30 (bloque_codigo -> declarar_if bloque_codigo .)
    AFARRAFAY       reduce using rule 30 (bloque_codigo -> declarar_if bloque_codigo .)
    STRUFUCT        reduce using rule 30 (bloque_codigo -> declarar_if bloque_codigo .)
    VOFOIFID        reduce using rule 30 (bloque_codigo -> declarar_if bloque_codigo .)
    CHAFAR          reduce using rule 30 (bloque_codigo -> declarar_if bloque_codigo .)
    BOFOOFOL        reduce using rule 30 (bloque_codigo -> declarar_if bloque_codigo .)
    FLOFOAFAT       reduce using rule 30 (bloque_codigo -> declarar_if bloque_codigo .)
    PA              reduce using rule 30 (bloque_codigo -> declarar_if bloque_codigo .)


state 84

    (31) bloque_codigo -> declaracion bloque_codigo .

    REFETUFURN      reduce using rule 31 (bloque_codigo -> declaracion bloque_codigo .)
    LLAVEC          reduce using rule 31 (bloque_codigo -> declaracion bloque_codigo .)
    VACIO           reduce using rule 31 (bloque_codigo -> declaracion bloque_codigo .)
    IFIF            reduce using rule 31 (bloque_codigo -> declaracion bloque_codigo .)
    ID              reduce using rule 31 (bloque_codigo -> declaracion bloque_codigo .)
    PRIFINT         reduce using rule 31 (bloque_codigo -> declaracion bloque_codigo .)
    IFINPUFUT       reduce using rule 31 (bloque_codigo -> declaracion bloque_codigo .)
    WHIFILEFE       reduce using rule 31 (bloque_codigo -> declaracion bloque_codigo .)
    IFINT           reduce using rule 31 (bloque_codigo -> declaracion bloque_codigo .)
    STRIFING        reduce using rule 31 (bloque_codigo -> declaracion bloque_codigo .)
    AFARRAFAY       reduce using rule 31 (bloque_codigo -> declaracion bloque_codigo .)
    STRUFUCT        reduce using rule 31 (bloque_codigo -> declaracion bloque_codigo .)
    VOFOIFID        reduce using rule 31 (bloque_codigo -> declaracion bloque_codigo .)
    CHAFAR          reduce using rule 31 (bloque_codigo -> declaracion bloque_codigo .)
    BOFOOFOL        reduce using rule 31 (bloque_codigo -> declaracion bloque_codigo .)
    FLOFOAFAT       reduce using rule 31 (bloque_codigo -> declaracion bloque_codigo .)
    PA              reduce using rule 31 (bloque_codigo -> declaracion bloque_codigo .)


state 85

    (32) bloque_codigo -> asignar_estructuras bloque_codigo .

    REFETUFURN      reduce using rule 32 (bloque_codigo -> asignar_estructuras bloque_codigo .)
    LLAVEC          reduce using rule 32 (bloque_codigo -> asignar_estructuras bloque_codigo .)
    VACIO           reduce using rule 32 (bloque_codigo -> asignar_estructuras bloque_codigo .)
    IFIF            reduce using rule 32 (bloque_codigo -> asignar_estructuras bloque_codigo .)
    ID              reduce using rule 32 (bloque_codigo -> asignar_estructuras bloque_codigo .)
    PRIFINT         reduce using rule 32 (bloque_codigo -> asignar_estructuras bloque_codigo .)
    IFINPUFUT       reduce using rule 32 (bloque_codigo -> asignar_estructuras bloque_codigo .)
    WHIFILEFE       reduce using rule 32 (bloque_codigo -> asignar_estructuras bloque_codigo .)
    IFINT           reduce using rule 32 (bloque_codigo -> asignar_estructuras bloque_codigo .)
    STRIFING        reduce using rule 32 (bloque_codigo -> asignar_estructuras bloque_codigo .)
    AFARRAFAY       reduce using rule 32 (bloque_codigo -> asignar_estructuras bloque_codigo .)
    STRUFUCT        reduce using rule 32 (bloque_codigo -> asignar_estructuras bloque_codigo .)
    VOFOIFID        reduce using rule 32 (bloque_codigo -> asignar_estructuras bloque_codigo .)
    CHAFAR          reduce using rule 32 (bloque_codigo -> asignar_estructuras bloque_codigo .)
    BOFOOFOL        reduce using rule 32 (bloque_codigo -> asignar_estructuras bloque_codigo .)
    FLOFOAFAT       reduce using rule 32 (bloque_codigo -> asignar_estructuras bloque_codigo .)
    PA              reduce using rule 32 (bloque_codigo -> asignar_estructuras bloque_codigo .)


state 86

    (33) bloque_codigo -> funcion bloque_codigo .

    REFETUFURN      reduce using rule 33 (bloque_codigo -> funcion bloque_codigo .)
    LLAVEC          reduce using rule 33 (bloque_codigo -> funcion bloque_codigo .)
    VACIO           reduce using rule 33 (bloque_codigo -> funcion bloque_codigo .)
    IFIF            reduce using rule 33 (bloque_codigo -> funcion bloque_codigo .)
    ID              reduce using rule 33 (bloque_codigo -> funcion bloque_codigo .)
    PRIFINT         reduce using rule 33 (bloque_codigo -> funcion bloque_codigo .)
    IFINPUFUT       reduce using rule 33 (bloque_codigo -> funcion bloque_codigo .)
    WHIFILEFE       reduce using rule 33 (bloque_codigo -> funcion bloque_codigo .)
    IFINT           reduce using rule 33 (bloque_codigo -> funcion bloque_codigo .)
    STRIFING        reduce using rule 33 (bloque_codigo -> funcion bloque_codigo .)
    AFARRAFAY       reduce using rule 33 (bloque_codigo -> funcion bloque_codigo .)
    STRUFUCT        reduce using rule 33 (bloque_codigo -> funcion bloque_codigo .)
    VOFOIFID        reduce using rule 33 (bloque_codigo -> funcion bloque_codigo .)
    CHAFAR          reduce using rule 33 (bloque_codigo -> funcion bloque_codigo .)
    BOFOOFOL        reduce using rule 33 (bloque_codigo -> funcion bloque_codigo .)
    FLOFOAFAT       reduce using rule 33 (bloque_codigo -> funcion bloque_codigo .)
    PA              reduce using rule 33 (bloque_codigo -> funcion bloque_codigo .)


state 87

    (34) bloque_codigo -> print bloque_codigo .

    REFETUFURN      reduce using rule 34 (bloque_codigo -> print bloque_codigo .)
    LLAVEC          reduce using rule 34 (bloque_codigo -> print bloque_codigo .)
    VACIO           reduce using rule 34 (bloque_codigo -> print bloque_codigo .)
    IFIF            reduce using rule 34 (bloque_codigo -> print bloque_codigo .)
    ID              reduce using rule 34 (bloque_codigo -> print bloque_codigo .)
    PRIFINT         reduce using rule 34 (bloque_codigo -> print bloque_codigo .)
    IFINPUFUT       reduce using rule 34 (bloque_codigo -> print bloque_codigo .)
    WHIFILEFE       reduce using rule 34 (bloque_codigo -> print bloque_codigo .)
    IFINT           reduce using rule 34 (bloque_codigo -> print bloque_codigo .)
    STRIFING        reduce using rule 34 (bloque_codigo -> print bloque_codigo .)
    AFARRAFAY       reduce using rule 34 (bloque_codigo -> print bloque_codigo .)
    STRUFUCT        reduce using rule 34 (bloque_codigo -> print bloque_codigo .)
    VOFOIFID        reduce using rule 34 (bloque_codigo -> print bloque_codigo .)
    CHAFAR          reduce using rule 34 (bloque_codigo -> print bloque_codigo .)
    BOFOOFOL        reduce using rule 34 (bloque_codigo -> print bloque_codigo .)
    FLOFOAFAT       reduce using rule 34 (bloque_codigo -> print bloque_codigo .)
    PA              reduce using rule 34 (bloque_codigo -> print bloque_codigo .)


state 88

    (35) bloque_codigo -> input bloque_codigo .

    REFETUFURN      reduce using rule 35 (bloque_codigo -> input bloque_codigo .)
    LLAVEC          reduce using rule 35 (bloque_codigo -> input bloque_codigo .)
    VACIO           reduce using rule 35 (bloque_codigo -> input bloque_codigo .)
    IFIF            reduce using rule 35 (bloque_codigo -> input bloque_codigo .)
    ID              reduce using rule 35 (bloque_codigo -> input bloque_codigo .)
    PRIFINT         reduce using rule 35 (bloque_codigo -> input bloque_codigo .)
    IFINPUFUT       reduce using rule 35 (bloque_codigo -> input bloque_codigo .)
    WHIFILEFE       reduce using rule 35 (bloque_codigo -> input bloque_codigo .)
    IFINT           reduce using rule 35 (bloque_codigo -> input bloque_codigo .)
    STRIFING        reduce using rule 35 (bloque_codigo -> input bloque_codigo .)
    AFARRAFAY       reduce using rule 35 (bloque_codigo -> input bloque_codigo .)
    STRUFUCT        reduce using rule 35 (bloque_codigo -> input bloque_codigo .)
    VOFOIFID        reduce using rule 35 (bloque_codigo -> input bloque_codigo .)
    CHAFAR          reduce using rule 35 (bloque_codigo -> input bloque_codigo .)
    BOFOOFOL        reduce using rule 35 (bloque_codigo -> input bloque_codigo .)
    FLOFOAFAT       reduce using rule 35 (bloque_codigo -> input bloque_codigo .)
    PA              reduce using rule 35 (bloque_codigo -> input bloque_codigo .)


state 89

    (36) bloque_codigo -> declaracion_while bloque_codigo .

    REFETUFURN      reduce using rule 36 (bloque_codigo -> declaracion_while bloque_codigo .)
    LLAVEC          reduce using rule 36 (bloque_codigo -> declaracion_while bloque_codigo .)
    VACIO           reduce using rule 36 (bloque_codigo -> declaracion_while bloque_codigo .)
    IFIF            reduce using rule 36 (bloque_codigo -> declaracion_while bloque_codigo .)
    ID              reduce using rule 36 (bloque_codigo -> declaracion_while bloque_codigo .)
    PRIFINT         reduce using rule 36 (bloque_codigo -> declaracion_while bloque_codigo .)
    IFINPUFUT       reduce using rule 36 (bloque_codigo -> declaracion_while bloque_codigo .)
    WHIFILEFE       reduce using rule 36 (bloque_codigo -> declaracion_while bloque_codigo .)
    IFINT           reduce using rule 36 (bloque_codigo -> declaracion_while bloque_codigo .)
    STRIFING        reduce using rule 36 (bloque_codigo -> declaracion_while bloque_codigo .)
    AFARRAFAY       reduce using rule 36 (bloque_codigo -> declaracion_while bloque_codigo .)
    STRUFUCT        reduce using rule 36 (bloque_codigo -> declaracion_while bloque_codigo .)
    VOFOIFID        reduce using rule 36 (bloque_codigo -> declaracion_while bloque_codigo .)
    CHAFAR          reduce using rule 36 (bloque_codigo -> declaracion_while bloque_codigo .)
    BOFOOFOL        reduce using rule 36 (bloque_codigo -> declaracion_while bloque_codigo .)
    FLOFOAFAT       reduce using rule 36 (bloque_codigo -> declaracion_while bloque_codigo .)
    PA              reduce using rule 36 (bloque_codigo -> declaracion_while bloque_codigo .)


state 90

    (38) declarar_if -> IFIF PA . condicion PC LLAVEA bloque_codigo LLAVEC
    (39) declarar_if -> IFIF PA . condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE LLAVEA bloque_codigo LLAVEC
    (41) declarar_if_error_llave -> IFIF PA . condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE LLAVEA bloque_codigo
    (42) declarar_if_error_llave -> IFIF PA . condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE bloque_codigo LLAVEC
    (61) condicion -> . valores operadores valores
    (62) condicion -> . valores
    (63) condicion -> . valores operadores_logicos condicion
    (64) condicion -> . valores NOT valores
    (71) valores -> . INT
    (72) valores -> . CHAR
    (73) valores -> . TRUFUEFE
    (74) valores -> . FAFALSEFE
    (75) valores -> . PCC
    (76) valores -> . ID

    INT             shift and go to state 75
    CHAR            shift and go to state 76
    TRUFUEFE        shift and go to state 77
    FAFALSEFE       shift and go to state 78
    PCC             shift and go to state 79
    ID              shift and go to state 80

    condicion                      shift and go to state 122
    valores                        shift and go to state 74

state 91

    (43) declaracion -> tipo_dato ID . PYC
    (44) declaracion -> tipo_dato ID . ASG ID operacion_matematica ID PYC
    (45) declaracion -> tipo_dato ID . ASG valores PYC

    PYC             shift and go to state 123
    ASG             shift and go to state 124


state 92

    (50) asignar_estructuras -> ID PUNTO . ID ASG

    ID              shift and go to state 125


state 93

    (48) declaracion_error -> ID ASG . ID operacion_matematica ID PYC
    (49) declaracion_error -> ID ASG . valores PYC
    (71) valores -> . INT
    (72) valores -> . CHAR
    (73) valores -> . TRUFUEFE
    (74) valores -> . FAFALSEFE
    (75) valores -> . PCC
    (76) valores -> . ID

    ID              shift and go to state 126
    INT             shift and go to state 75
    CHAR            shift and go to state 76
    TRUFUEFE        shift and go to state 77
    FAFALSEFE       shift and go to state 78
    PCC             shift and go to state 79

    valores                        shift and go to state 127

state 94

    (51) funcion -> ID PA . valores PC PYC
    (52) funcion -> ID PA . PC PYC
    (53) funcion -> ID PA . valores COMA valores PC PYC
    (71) valores -> . INT
    (72) valores -> . CHAR
    (73) valores -> . TRUFUEFE
    (74) valores -> . FAFALSEFE
    (75) valores -> . PCC
    (76) valores -> . ID

    PC              shift and go to state 129
    INT             shift and go to state 75
    CHAR            shift and go to state 76
    TRUFUEFE        shift and go to state 77
    FAFALSEFE       shift and go to state 78
    PCC             shift and go to state 79
    ID              shift and go to state 80

    valores                        shift and go to state 128

state 95

    (47) declaracion_error -> ID PYC .

    VACIO           reduce using rule 47 (declaracion_error -> ID PYC .)
    IFIF            reduce using rule 47 (declaracion_error -> ID PYC .)
    ID              reduce using rule 47 (declaracion_error -> ID PYC .)
    PRIFINT         reduce using rule 47 (declaracion_error -> ID PYC .)
    IFINPUFUT       reduce using rule 47 (declaracion_error -> ID PYC .)
    WHIFILEFE       reduce using rule 47 (declaracion_error -> ID PYC .)
    IFINT           reduce using rule 47 (declaracion_error -> ID PYC .)
    STRIFING        reduce using rule 47 (declaracion_error -> ID PYC .)
    AFARRAFAY       reduce using rule 47 (declaracion_error -> ID PYC .)
    STRUFUCT        reduce using rule 47 (declaracion_error -> ID PYC .)
    VOFOIFID        reduce using rule 47 (declaracion_error -> ID PYC .)
    CHAFAR          reduce using rule 47 (declaracion_error -> ID PYC .)
    BOFOOFOL        reduce using rule 47 (declaracion_error -> ID PYC .)
    FLOFOAFAT       reduce using rule 47 (declaracion_error -> ID PYC .)
    PA              reduce using rule 47 (declaracion_error -> ID PYC .)


state 96

    (54) print -> PRIFINT PA . ID PC PYC

    ID              shift and go to state 130


state 97

    (55) input -> IFINPUFUT PA . ID PC PYC

    ID              shift and go to state 131


state 98

    (56) declaracion_while -> WHIFILEFE PA . condicion PC LLAVEA bloque_codigo LLAVEC
    (59) declaracion_while_error -> WHIFILEFE PA . condicion PC bloque_codigo LLAVEC
    (60) declaracion_while_error -> WHIFILEFE PA . condicion PC LLAVEA bloque_codigo
    (61) condicion -> . valores operadores valores
    (62) condicion -> . valores
    (63) condicion -> . valores operadores_logicos condicion
    (64) condicion -> . valores NOT valores
    (71) valores -> . INT
    (72) valores -> . CHAR
    (73) valores -> . TRUFUEFE
    (74) valores -> . FAFALSEFE
    (75) valores -> . PCC
    (76) valores -> . ID

    INT             shift and go to state 75
    CHAR            shift and go to state 76
    TRUFUEFE        shift and go to state 77
    FAFALSEFE       shift and go to state 78
    PCC             shift and go to state 79
    ID              shift and go to state 80

    condicion                      shift and go to state 132
    valores                        shift and go to state 74

state 99

    (11) declarar_estructuras_error -> STRUFUCT ID LLAVEA ID PYC ID PYC . LLAVEC

    LLAVEC          shift and go to state 133


state 100

    (5) declarar_estructuras -> STRUFUCT ID LLAVEA tipo_dato ID PYC tipo_dato . ID PYC LLAVEC
    (9) declarar_estructuras_error -> STRUFUCT ID LLAVEA tipo_dato ID PYC tipo_dato . PYC LLAVEC

    ID              shift and go to state 134
    PYC             shift and go to state 135


state 101

    (8) declarar_estructuras_error -> STRUFUCT ID LLAVEA tipo_dato PYC tipo_dato ID . PYC LLAVEC

    PYC             shift and go to state 136


state 102

    (10) declarar_estructuras_error -> STRUFUCT ID LLAVEA tipo_dato PYC tipo_dato PYC . LLAVEC

    LLAVEC          shift and go to state 137


state 103

    (7) declarar_estructuras_error -> ID LLAVEA tipo_dato ID PYC tipo_dato ID . PYC LLAVEC

    PYC             shift and go to state 138


state 104

    (12) declarar_funciones -> FUNCTION tipo_dato ID PA tipo_dato ID PC . LLAVEA bloque_codigo REFETUFURN ID PYC LLAVEC

    LLAVEA          shift and go to state 139


state 105

    (15) declarar_funciones -> FUNCTION tipo_dato ID PA tipo_dato ID COMA . tipo_dato ID PC LLAVEA bloque_codigo REFETUFURN ID PYC LLAVEC
    (22) tipo_dato -> . IFINT
    (23) tipo_dato -> . STRIFING
    (24) tipo_dato -> . AFARRAFAY
    (25) tipo_dato -> . STRUFUCT
    (26) tipo_dato -> . VOFOIFID
    (27) tipo_dato -> . CHAFAR
    (28) tipo_dato -> . BOFOOFOL
    (29) tipo_dato -> . FLOFOAFAT

    IFINT           shift and go to state 18
    STRIFING        shift and go to state 19
    AFARRAFAY       shift and go to state 20
    STRUFUCT        shift and go to state 21
    VOFOIFID        shift and go to state 22
    CHAFAR          shift and go to state 23
    BOFOOFOL        shift and go to state 24
    FLOFOAFAT       shift and go to state 25

    tipo_dato                      shift and go to state 140

state 106

    (13) declarar_funciones -> FUNCTION tipo_dato ID PA PC LLAVEA bloque_codigo . REFETUFURN ID PYC LLAVEC
    (14) declarar_funciones -> FUNCTION tipo_dato ID PA PC LLAVEA bloque_codigo . REFETUFURN PYC LLAVEC

    REFETUFURN      shift and go to state 141


state 107

    (17) declarar_main -> IFINT MAFAIFIN PA PC LLAVEA bloque_codigo REFETUFURN . PYC LLAVEC

    PYC             shift and go to state 142


state 108

    (20) declarar_main_error -> IFINT MAFAIFIN PA PC LLAVEA bloque_codigo LLAVEC .

    $end            reduce using rule 20 (declarar_main_error -> IFINT MAFAIFIN PA PC LLAVEA bloque_codigo LLAVEC .)


state 109

    (58) declaracion_while_error -> PA condicion PC . LLAVEA bloque_codigo LLAVEC

    LLAVEA          shift and go to state 143


state 110

    (61) condicion -> valores operadores . valores
    (71) valores -> . INT
    (72) valores -> . CHAR
    (73) valores -> . TRUFUEFE
    (74) valores -> . FAFALSEFE
    (75) valores -> . PCC
    (76) valores -> . ID

    INT             shift and go to state 75
    CHAR            shift and go to state 76
    TRUFUEFE        shift and go to state 77
    FAFALSEFE       shift and go to state 78
    PCC             shift and go to state 79
    ID              shift and go to state 80

    valores                        shift and go to state 144

state 111

    (63) condicion -> valores operadores_logicos . condicion
    (61) condicion -> . valores operadores valores
    (62) condicion -> . valores
    (63) condicion -> . valores operadores_logicos condicion
    (64) condicion -> . valores NOT valores
    (71) valores -> . INT
    (72) valores -> . CHAR
    (73) valores -> . TRUFUEFE
    (74) valores -> . FAFALSEFE
    (75) valores -> . PCC
    (76) valores -> . ID

    INT             shift and go to state 75
    CHAR            shift and go to state 76
    TRUFUEFE        shift and go to state 77
    FAFALSEFE       shift and go to state 78
    PCC             shift and go to state 79
    ID              shift and go to state 80

    valores                        shift and go to state 74
    condicion                      shift and go to state 145

state 112

    (64) condicion -> valores NOT . valores
    (71) valores -> . INT
    (72) valores -> . CHAR
    (73) valores -> . TRUFUEFE
    (74) valores -> . FAFALSEFE
    (75) valores -> . PCC
    (76) valores -> . ID

    INT             shift and go to state 75
    CHAR            shift and go to state 76
    TRUFUEFE        shift and go to state 77
    FAFALSEFE       shift and go to state 78
    PCC             shift and go to state 79
    ID              shift and go to state 80

    valores                        shift and go to state 146

state 113

    (77) operadores -> MEN .

    INT             reduce using rule 77 (operadores -> MEN .)
    CHAR            reduce using rule 77 (operadores -> MEN .)
    TRUFUEFE        reduce using rule 77 (operadores -> MEN .)
    FAFALSEFE       reduce using rule 77 (operadores -> MEN .)
    PCC             reduce using rule 77 (operadores -> MEN .)
    ID              reduce using rule 77 (operadores -> MEN .)


state 114

    (78) operadores -> MAY .

    INT             reduce using rule 78 (operadores -> MAY .)
    CHAR            reduce using rule 78 (operadores -> MAY .)
    TRUFUEFE        reduce using rule 78 (operadores -> MAY .)
    FAFALSEFE       reduce using rule 78 (operadores -> MAY .)
    PCC             reduce using rule 78 (operadores -> MAY .)
    ID              reduce using rule 78 (operadores -> MAY .)


state 115

    (79) operadores -> MENIG .

    INT             reduce using rule 79 (operadores -> MENIG .)
    CHAR            reduce using rule 79 (operadores -> MENIG .)
    TRUFUEFE        reduce using rule 79 (operadores -> MENIG .)
    FAFALSEFE       reduce using rule 79 (operadores -> MENIG .)
    PCC             reduce using rule 79 (operadores -> MENIG .)
    ID              reduce using rule 79 (operadores -> MENIG .)


state 116

    (80) operadores -> MAYIG .

    INT             reduce using rule 80 (operadores -> MAYIG .)
    CHAR            reduce using rule 80 (operadores -> MAYIG .)
    TRUFUEFE        reduce using rule 80 (operadores -> MAYIG .)
    FAFALSEFE       reduce using rule 80 (operadores -> MAYIG .)
    PCC             reduce using rule 80 (operadores -> MAYIG .)
    ID              reduce using rule 80 (operadores -> MAYIG .)


state 117

    (81) operadores -> CMP .

    INT             reduce using rule 81 (operadores -> CMP .)
    CHAR            reduce using rule 81 (operadores -> CMP .)
    TRUFUEFE        reduce using rule 81 (operadores -> CMP .)
    FAFALSEFE       reduce using rule 81 (operadores -> CMP .)
    PCC             reduce using rule 81 (operadores -> CMP .)
    ID              reduce using rule 81 (operadores -> CMP .)


state 118

    (82) operadores -> DIF .

    INT             reduce using rule 82 (operadores -> DIF .)
    CHAR            reduce using rule 82 (operadores -> DIF .)
    TRUFUEFE        reduce using rule 82 (operadores -> DIF .)
    FAFALSEFE       reduce using rule 82 (operadores -> DIF .)
    PCC             reduce using rule 82 (operadores -> DIF .)
    ID              reduce using rule 82 (operadores -> DIF .)


state 119

    (83) operadores_logicos -> AND .

    INT             reduce using rule 83 (operadores_logicos -> AND .)
    CHAR            reduce using rule 83 (operadores_logicos -> AND .)
    TRUFUEFE        reduce using rule 83 (operadores_logicos -> AND .)
    FAFALSEFE       reduce using rule 83 (operadores_logicos -> AND .)
    PCC             reduce using rule 83 (operadores_logicos -> AND .)
    ID              reduce using rule 83 (operadores_logicos -> AND .)


state 120

    (84) operadores_logicos -> OR .

    INT             reduce using rule 84 (operadores_logicos -> OR .)
    CHAR            reduce using rule 84 (operadores_logicos -> OR .)
    TRUFUEFE        reduce using rule 84 (operadores_logicos -> OR .)
    FAFALSEFE       reduce using rule 84 (operadores_logicos -> OR .)
    PCC             reduce using rule 84 (operadores_logicos -> OR .)
    ID              reduce using rule 84 (operadores_logicos -> OR .)


state 121

    (19) declarar_main_error -> MAFAIFIN PA PC LLAVEA bloque_codigo REFETUFURN PYC . LLAVEC

    LLAVEC          shift and go to state 147


state 122

    (38) declarar_if -> IFIF PA condicion . PC LLAVEA bloque_codigo LLAVEC
    (39) declarar_if -> IFIF PA condicion . PC LLAVEA bloque_codigo LLAVEC EFELSEFE LLAVEA bloque_codigo LLAVEC
    (41) declarar_if_error_llave -> IFIF PA condicion . PC LLAVEA bloque_codigo LLAVEC EFELSEFE LLAVEA bloque_codigo
    (42) declarar_if_error_llave -> IFIF PA condicion . PC LLAVEA bloque_codigo LLAVEC EFELSEFE bloque_codigo LLAVEC

    PC              shift and go to state 148


state 123

    (43) declaracion -> tipo_dato ID PYC .

    VACIO           reduce using rule 43 (declaracion -> tipo_dato ID PYC .)
    IFIF            reduce using rule 43 (declaracion -> tipo_dato ID PYC .)
    ID              reduce using rule 43 (declaracion -> tipo_dato ID PYC .)
    PRIFINT         reduce using rule 43 (declaracion -> tipo_dato ID PYC .)
    IFINPUFUT       reduce using rule 43 (declaracion -> tipo_dato ID PYC .)
    WHIFILEFE       reduce using rule 43 (declaracion -> tipo_dato ID PYC .)
    IFINT           reduce using rule 43 (declaracion -> tipo_dato ID PYC .)
    STRIFING        reduce using rule 43 (declaracion -> tipo_dato ID PYC .)
    AFARRAFAY       reduce using rule 43 (declaracion -> tipo_dato ID PYC .)
    STRUFUCT        reduce using rule 43 (declaracion -> tipo_dato ID PYC .)
    VOFOIFID        reduce using rule 43 (declaracion -> tipo_dato ID PYC .)
    CHAFAR          reduce using rule 43 (declaracion -> tipo_dato ID PYC .)
    BOFOOFOL        reduce using rule 43 (declaracion -> tipo_dato ID PYC .)
    FLOFOAFAT       reduce using rule 43 (declaracion -> tipo_dato ID PYC .)
    PA              reduce using rule 43 (declaracion -> tipo_dato ID PYC .)


state 124

    (44) declaracion -> tipo_dato ID ASG . ID operacion_matematica ID PYC
    (45) declaracion -> tipo_dato ID ASG . valores PYC
    (71) valores -> . INT
    (72) valores -> . CHAR
    (73) valores -> . TRUFUEFE
    (74) valores -> . FAFALSEFE
    (75) valores -> . PCC
    (76) valores -> . ID

    ID              shift and go to state 149
    INT             shift and go to state 75
    CHAR            shift and go to state 76
    TRUFUEFE        shift and go to state 77
    FAFALSEFE       shift and go to state 78
    PCC             shift and go to state 79

    valores                        shift and go to state 150

state 125

    (50) asignar_estructuras -> ID PUNTO ID . ASG

    ASG             shift and go to state 151


state 126

    (48) declaracion_error -> ID ASG ID . operacion_matematica ID PYC
    (76) valores -> ID .
    (65) operacion_matematica -> . SUM
    (66) operacion_matematica -> . RES
    (67) operacion_matematica -> . MUL
    (68) operacion_matematica -> . DIV
    (69) operacion_matematica -> . RED
    (70) operacion_matematica -> . POT

    PYC             reduce using rule 76 (valores -> ID .)
    SUM             shift and go to state 153
    RES             shift and go to state 154
    MUL             shift and go to state 155
    DIV             shift and go to state 156
    RED             shift and go to state 157
    POT             shift and go to state 158

    operacion_matematica           shift and go to state 152

state 127

    (49) declaracion_error -> ID ASG valores . PYC

    PYC             shift and go to state 159


state 128

    (51) funcion -> ID PA valores . PC PYC
    (53) funcion -> ID PA valores . COMA valores PC PYC

    PC              shift and go to state 160
    COMA            shift and go to state 161


state 129

    (52) funcion -> ID PA PC . PYC

    PYC             shift and go to state 162


state 130

    (54) print -> PRIFINT PA ID . PC PYC

    PC              shift and go to state 163


state 131

    (55) input -> IFINPUFUT PA ID . PC PYC

    PC              shift and go to state 164


state 132

    (56) declaracion_while -> WHIFILEFE PA condicion . PC LLAVEA bloque_codigo LLAVEC
    (59) declaracion_while_error -> WHIFILEFE PA condicion . PC bloque_codigo LLAVEC
    (60) declaracion_while_error -> WHIFILEFE PA condicion . PC LLAVEA bloque_codigo

    PC              shift and go to state 165


state 133

    (11) declarar_estructuras_error -> STRUFUCT ID LLAVEA ID PYC ID PYC LLAVEC .

    IFINT           reduce using rule 11 (declarar_estructuras_error -> STRUFUCT ID LLAVEA ID PYC ID PYC LLAVEC .)
    FUNCTION        reduce using rule 11 (declarar_estructuras_error -> STRUFUCT ID LLAVEA ID PYC ID PYC LLAVEC .)
    MAFAIFIN        reduce using rule 11 (declarar_estructuras_error -> STRUFUCT ID LLAVEA ID PYC ID PYC LLAVEC .)


state 134

    (5) declarar_estructuras -> STRUFUCT ID LLAVEA tipo_dato ID PYC tipo_dato ID . PYC LLAVEC

    PYC             shift and go to state 166


state 135

    (9) declarar_estructuras_error -> STRUFUCT ID LLAVEA tipo_dato ID PYC tipo_dato PYC . LLAVEC

    LLAVEC          shift and go to state 167


state 136

    (8) declarar_estructuras_error -> STRUFUCT ID LLAVEA tipo_dato PYC tipo_dato ID PYC . LLAVEC

    LLAVEC          shift and go to state 168


state 137

    (10) declarar_estructuras_error -> STRUFUCT ID LLAVEA tipo_dato PYC tipo_dato PYC LLAVEC .

    IFINT           reduce using rule 10 (declarar_estructuras_error -> STRUFUCT ID LLAVEA tipo_dato PYC tipo_dato PYC LLAVEC .)
    FUNCTION        reduce using rule 10 (declarar_estructuras_error -> STRUFUCT ID LLAVEA tipo_dato PYC tipo_dato PYC LLAVEC .)
    MAFAIFIN        reduce using rule 10 (declarar_estructuras_error -> STRUFUCT ID LLAVEA tipo_dato PYC tipo_dato PYC LLAVEC .)


state 138

    (7) declarar_estructuras_error -> ID LLAVEA tipo_dato ID PYC tipo_dato ID PYC . LLAVEC

    LLAVEC          shift and go to state 169


state 139

    (12) declarar_funciones -> FUNCTION tipo_dato ID PA tipo_dato ID PC LLAVEA . bloque_codigo REFETUFURN ID PYC LLAVEC
    (30) bloque_codigo -> . declarar_if bloque_codigo
    (31) bloque_codigo -> . declaracion bloque_codigo
    (32) bloque_codigo -> . asignar_estructuras bloque_codigo
    (33) bloque_codigo -> . funcion bloque_codigo
    (34) bloque_codigo -> . print bloque_codigo
    (35) bloque_codigo -> . input bloque_codigo
    (36) bloque_codigo -> . declaracion_while bloque_codigo
    (37) bloque_codigo -> . VACIO
    (38) declarar_if -> . IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC
    (39) declarar_if -> . IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE LLAVEA bloque_codigo LLAVEC
    (40) declarar_if -> . declarar_if_error_llave
    (43) declaracion -> . tipo_dato ID PYC
    (44) declaracion -> . tipo_dato ID ASG ID operacion_matematica ID PYC
    (45) declaracion -> . tipo_dato ID ASG valores PYC
    (46) declaracion -> . declaracion_error
    (50) asignar_estructuras -> . ID PUNTO ID ASG
    (51) funcion -> . ID PA valores PC PYC
    (52) funcion -> . ID PA PC PYC
    (53) funcion -> . ID PA valores COMA valores PC PYC
    (54) print -> . PRIFINT PA ID PC PYC
    (55) input -> . IFINPUFUT PA ID PC PYC
    (56) declaracion_while -> . WHIFILEFE PA condicion PC LLAVEA bloque_codigo LLAVEC
    (57) declaracion_while -> . declaracion_while_error
    (41) declarar_if_error_llave -> . IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE LLAVEA bloque_codigo
    (42) declarar_if_error_llave -> . IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE bloque_codigo LLAVEC
    (22) tipo_dato -> . IFINT
    (23) tipo_dato -> . STRIFING
    (24) tipo_dato -> . AFARRAFAY
    (25) tipo_dato -> . STRUFUCT
    (26) tipo_dato -> . VOFOIFID
    (27) tipo_dato -> . CHAFAR
    (28) tipo_dato -> . BOFOOFOL
    (29) tipo_dato -> . FLOFOAFAT
    (47) declaracion_error -> . ID PYC
    (48) declaracion_error -> . ID ASG ID operacion_matematica ID PYC
    (49) declaracion_error -> . ID ASG valores PYC
    (58) declaracion_while_error -> . PA condicion PC LLAVEA bloque_codigo LLAVEC
    (59) declaracion_while_error -> . WHIFILEFE PA condicion PC bloque_codigo LLAVEC
    (60) declaracion_while_error -> . WHIFILEFE PA condicion PC LLAVEA bloque_codigo

    VACIO           shift and go to state 56
    IFIF            shift and go to state 57
    ID              shift and go to state 60
    PRIFINT         shift and go to state 62
    IFINPUFUT       shift and go to state 63
    WHIFILEFE       shift and go to state 64
    IFINT           shift and go to state 18
    STRIFING        shift and go to state 19
    AFARRAFAY       shift and go to state 20
    STRUFUCT        shift and go to state 21
    VOFOIFID        shift and go to state 22
    CHAFAR          shift and go to state 23
    BOFOOFOL        shift and go to state 24
    FLOFOAFAT       shift and go to state 25
    PA              shift and go to state 47

    tipo_dato                      shift and go to state 59
    bloque_codigo                  shift and go to state 170
    declarar_if                    shift and go to state 49
    declaracion                    shift and go to state 50
    asignar_estructuras            shift and go to state 51
    funcion                        shift and go to state 52
    print                          shift and go to state 53
    input                          shift and go to state 54
    declaracion_while              shift and go to state 55
    declarar_if_error_llave        shift and go to state 58
    declaracion_error              shift and go to state 61
    declaracion_while_error        shift and go to state 65

state 140

    (15) declarar_funciones -> FUNCTION tipo_dato ID PA tipo_dato ID COMA tipo_dato . ID PC LLAVEA bloque_codigo REFETUFURN ID PYC LLAVEC

    ID              shift and go to state 171


state 141

    (13) declarar_funciones -> FUNCTION tipo_dato ID PA PC LLAVEA bloque_codigo REFETUFURN . ID PYC LLAVEC
    (14) declarar_funciones -> FUNCTION tipo_dato ID PA PC LLAVEA bloque_codigo REFETUFURN . PYC LLAVEC

    ID              shift and go to state 172
    PYC             shift and go to state 173


state 142

    (17) declarar_main -> IFINT MAFAIFIN PA PC LLAVEA bloque_codigo REFETUFURN PYC . LLAVEC

    LLAVEC          shift and go to state 174


state 143

    (58) declaracion_while_error -> PA condicion PC LLAVEA . bloque_codigo LLAVEC
    (30) bloque_codigo -> . declarar_if bloque_codigo
    (31) bloque_codigo -> . declaracion bloque_codigo
    (32) bloque_codigo -> . asignar_estructuras bloque_codigo
    (33) bloque_codigo -> . funcion bloque_codigo
    (34) bloque_codigo -> . print bloque_codigo
    (35) bloque_codigo -> . input bloque_codigo
    (36) bloque_codigo -> . declaracion_while bloque_codigo
    (37) bloque_codigo -> . VACIO
    (38) declarar_if -> . IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC
    (39) declarar_if -> . IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE LLAVEA bloque_codigo LLAVEC
    (40) declarar_if -> . declarar_if_error_llave
    (43) declaracion -> . tipo_dato ID PYC
    (44) declaracion -> . tipo_dato ID ASG ID operacion_matematica ID PYC
    (45) declaracion -> . tipo_dato ID ASG valores PYC
    (46) declaracion -> . declaracion_error
    (50) asignar_estructuras -> . ID PUNTO ID ASG
    (51) funcion -> . ID PA valores PC PYC
    (52) funcion -> . ID PA PC PYC
    (53) funcion -> . ID PA valores COMA valores PC PYC
    (54) print -> . PRIFINT PA ID PC PYC
    (55) input -> . IFINPUFUT PA ID PC PYC
    (56) declaracion_while -> . WHIFILEFE PA condicion PC LLAVEA bloque_codigo LLAVEC
    (57) declaracion_while -> . declaracion_while_error
    (41) declarar_if_error_llave -> . IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE LLAVEA bloque_codigo
    (42) declarar_if_error_llave -> . IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE bloque_codigo LLAVEC
    (22) tipo_dato -> . IFINT
    (23) tipo_dato -> . STRIFING
    (24) tipo_dato -> . AFARRAFAY
    (25) tipo_dato -> . STRUFUCT
    (26) tipo_dato -> . VOFOIFID
    (27) tipo_dato -> . CHAFAR
    (28) tipo_dato -> . BOFOOFOL
    (29) tipo_dato -> . FLOFOAFAT
    (47) declaracion_error -> . ID PYC
    (48) declaracion_error -> . ID ASG ID operacion_matematica ID PYC
    (49) declaracion_error -> . ID ASG valores PYC
    (58) declaracion_while_error -> . PA condicion PC LLAVEA bloque_codigo LLAVEC
    (59) declaracion_while_error -> . WHIFILEFE PA condicion PC bloque_codigo LLAVEC
    (60) declaracion_while_error -> . WHIFILEFE PA condicion PC LLAVEA bloque_codigo

    VACIO           shift and go to state 56
    IFIF            shift and go to state 57
    ID              shift and go to state 60
    PRIFINT         shift and go to state 62
    IFINPUFUT       shift and go to state 63
    WHIFILEFE       shift and go to state 64
    IFINT           shift and go to state 18
    STRIFING        shift and go to state 19
    AFARRAFAY       shift and go to state 20
    STRUFUCT        shift and go to state 21
    VOFOIFID        shift and go to state 22
    CHAFAR          shift and go to state 23
    BOFOOFOL        shift and go to state 24
    FLOFOAFAT       shift and go to state 25
    PA              shift and go to state 47

    bloque_codigo                  shift and go to state 175
    declarar_if                    shift and go to state 49
    declaracion                    shift and go to state 50
    asignar_estructuras            shift and go to state 51
    funcion                        shift and go to state 52
    print                          shift and go to state 53
    input                          shift and go to state 54
    declaracion_while              shift and go to state 55
    declarar_if_error_llave        shift and go to state 58
    tipo_dato                      shift and go to state 59
    declaracion_error              shift and go to state 61
    declaracion_while_error        shift and go to state 65

state 144

    (61) condicion -> valores operadores valores .

    PC              reduce using rule 61 (condicion -> valores operadores valores .)


state 145

    (63) condicion -> valores operadores_logicos condicion .

    PC              reduce using rule 63 (condicion -> valores operadores_logicos condicion .)


state 146

    (64) condicion -> valores NOT valores .

    PC              reduce using rule 64 (condicion -> valores NOT valores .)


state 147

    (19) declarar_main_error -> MAFAIFIN PA PC LLAVEA bloque_codigo REFETUFURN PYC LLAVEC .

    $end            reduce using rule 19 (declarar_main_error -> MAFAIFIN PA PC LLAVEA bloque_codigo REFETUFURN PYC LLAVEC .)


state 148

    (38) declarar_if -> IFIF PA condicion PC . LLAVEA bloque_codigo LLAVEC
    (39) declarar_if -> IFIF PA condicion PC . LLAVEA bloque_codigo LLAVEC EFELSEFE LLAVEA bloque_codigo LLAVEC
    (41) declarar_if_error_llave -> IFIF PA condicion PC . LLAVEA bloque_codigo LLAVEC EFELSEFE LLAVEA bloque_codigo
    (42) declarar_if_error_llave -> IFIF PA condicion PC . LLAVEA bloque_codigo LLAVEC EFELSEFE bloque_codigo LLAVEC

    LLAVEA          shift and go to state 176


state 149

    (44) declaracion -> tipo_dato ID ASG ID . operacion_matematica ID PYC
    (76) valores -> ID .
    (65) operacion_matematica -> . SUM
    (66) operacion_matematica -> . RES
    (67) operacion_matematica -> . MUL
    (68) operacion_matematica -> . DIV
    (69) operacion_matematica -> . RED
    (70) operacion_matematica -> . POT

    PYC             reduce using rule 76 (valores -> ID .)
    SUM             shift and go to state 153
    RES             shift and go to state 154
    MUL             shift and go to state 155
    DIV             shift and go to state 156
    RED             shift and go to state 157
    POT             shift and go to state 158

    operacion_matematica           shift and go to state 177

state 150

    (45) declaracion -> tipo_dato ID ASG valores . PYC

    PYC             shift and go to state 178


state 151

    (50) asignar_estructuras -> ID PUNTO ID ASG .

    VACIO           reduce using rule 50 (asignar_estructuras -> ID PUNTO ID ASG .)
    IFIF            reduce using rule 50 (asignar_estructuras -> ID PUNTO ID ASG .)
    ID              reduce using rule 50 (asignar_estructuras -> ID PUNTO ID ASG .)
    PRIFINT         reduce using rule 50 (asignar_estructuras -> ID PUNTO ID ASG .)
    IFINPUFUT       reduce using rule 50 (asignar_estructuras -> ID PUNTO ID ASG .)
    WHIFILEFE       reduce using rule 50 (asignar_estructuras -> ID PUNTO ID ASG .)
    IFINT           reduce using rule 50 (asignar_estructuras -> ID PUNTO ID ASG .)
    STRIFING        reduce using rule 50 (asignar_estructuras -> ID PUNTO ID ASG .)
    AFARRAFAY       reduce using rule 50 (asignar_estructuras -> ID PUNTO ID ASG .)
    STRUFUCT        reduce using rule 50 (asignar_estructuras -> ID PUNTO ID ASG .)
    VOFOIFID        reduce using rule 50 (asignar_estructuras -> ID PUNTO ID ASG .)
    CHAFAR          reduce using rule 50 (asignar_estructuras -> ID PUNTO ID ASG .)
    BOFOOFOL        reduce using rule 50 (asignar_estructuras -> ID PUNTO ID ASG .)
    FLOFOAFAT       reduce using rule 50 (asignar_estructuras -> ID PUNTO ID ASG .)
    PA              reduce using rule 50 (asignar_estructuras -> ID PUNTO ID ASG .)


state 152

    (48) declaracion_error -> ID ASG ID operacion_matematica . ID PYC

    ID              shift and go to state 179


state 153

    (65) operacion_matematica -> SUM .

    ID              reduce using rule 65 (operacion_matematica -> SUM .)


state 154

    (66) operacion_matematica -> RES .

    ID              reduce using rule 66 (operacion_matematica -> RES .)


state 155

    (67) operacion_matematica -> MUL .

    ID              reduce using rule 67 (operacion_matematica -> MUL .)


state 156

    (68) operacion_matematica -> DIV .

    ID              reduce using rule 68 (operacion_matematica -> DIV .)


state 157

    (69) operacion_matematica -> RED .

    ID              reduce using rule 69 (operacion_matematica -> RED .)


state 158

    (70) operacion_matematica -> POT .

    ID              reduce using rule 70 (operacion_matematica -> POT .)


state 159

    (49) declaracion_error -> ID ASG valores PYC .

    VACIO           reduce using rule 49 (declaracion_error -> ID ASG valores PYC .)
    IFIF            reduce using rule 49 (declaracion_error -> ID ASG valores PYC .)
    ID              reduce using rule 49 (declaracion_error -> ID ASG valores PYC .)
    PRIFINT         reduce using rule 49 (declaracion_error -> ID ASG valores PYC .)
    IFINPUFUT       reduce using rule 49 (declaracion_error -> ID ASG valores PYC .)
    WHIFILEFE       reduce using rule 49 (declaracion_error -> ID ASG valores PYC .)
    IFINT           reduce using rule 49 (declaracion_error -> ID ASG valores PYC .)
    STRIFING        reduce using rule 49 (declaracion_error -> ID ASG valores PYC .)
    AFARRAFAY       reduce using rule 49 (declaracion_error -> ID ASG valores PYC .)
    STRUFUCT        reduce using rule 49 (declaracion_error -> ID ASG valores PYC .)
    VOFOIFID        reduce using rule 49 (declaracion_error -> ID ASG valores PYC .)
    CHAFAR          reduce using rule 49 (declaracion_error -> ID ASG valores PYC .)
    BOFOOFOL        reduce using rule 49 (declaracion_error -> ID ASG valores PYC .)
    FLOFOAFAT       reduce using rule 49 (declaracion_error -> ID ASG valores PYC .)
    PA              reduce using rule 49 (declaracion_error -> ID ASG valores PYC .)


state 160

    (51) funcion -> ID PA valores PC . PYC

    PYC             shift and go to state 180


state 161

    (53) funcion -> ID PA valores COMA . valores PC PYC
    (71) valores -> . INT
    (72) valores -> . CHAR
    (73) valores -> . TRUFUEFE
    (74) valores -> . FAFALSEFE
    (75) valores -> . PCC
    (76) valores -> . ID

    INT             shift and go to state 75
    CHAR            shift and go to state 76
    TRUFUEFE        shift and go to state 77
    FAFALSEFE       shift and go to state 78
    PCC             shift and go to state 79
    ID              shift and go to state 80

    valores                        shift and go to state 181

state 162

    (52) funcion -> ID PA PC PYC .

    VACIO           reduce using rule 52 (funcion -> ID PA PC PYC .)
    IFIF            reduce using rule 52 (funcion -> ID PA PC PYC .)
    ID              reduce using rule 52 (funcion -> ID PA PC PYC .)
    PRIFINT         reduce using rule 52 (funcion -> ID PA PC PYC .)
    IFINPUFUT       reduce using rule 52 (funcion -> ID PA PC PYC .)
    WHIFILEFE       reduce using rule 52 (funcion -> ID PA PC PYC .)
    IFINT           reduce using rule 52 (funcion -> ID PA PC PYC .)
    STRIFING        reduce using rule 52 (funcion -> ID PA PC PYC .)
    AFARRAFAY       reduce using rule 52 (funcion -> ID PA PC PYC .)
    STRUFUCT        reduce using rule 52 (funcion -> ID PA PC PYC .)
    VOFOIFID        reduce using rule 52 (funcion -> ID PA PC PYC .)
    CHAFAR          reduce using rule 52 (funcion -> ID PA PC PYC .)
    BOFOOFOL        reduce using rule 52 (funcion -> ID PA PC PYC .)
    FLOFOAFAT       reduce using rule 52 (funcion -> ID PA PC PYC .)
    PA              reduce using rule 52 (funcion -> ID PA PC PYC .)


state 163

    (54) print -> PRIFINT PA ID PC . PYC

    PYC             shift and go to state 182


state 164

    (55) input -> IFINPUFUT PA ID PC . PYC

    PYC             shift and go to state 183


state 165

    (56) declaracion_while -> WHIFILEFE PA condicion PC . LLAVEA bloque_codigo LLAVEC
    (59) declaracion_while_error -> WHIFILEFE PA condicion PC . bloque_codigo LLAVEC
    (60) declaracion_while_error -> WHIFILEFE PA condicion PC . LLAVEA bloque_codigo
    (30) bloque_codigo -> . declarar_if bloque_codigo
    (31) bloque_codigo -> . declaracion bloque_codigo
    (32) bloque_codigo -> . asignar_estructuras bloque_codigo
    (33) bloque_codigo -> . funcion bloque_codigo
    (34) bloque_codigo -> . print bloque_codigo
    (35) bloque_codigo -> . input bloque_codigo
    (36) bloque_codigo -> . declaracion_while bloque_codigo
    (37) bloque_codigo -> . VACIO
    (38) declarar_if -> . IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC
    (39) declarar_if -> . IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE LLAVEA bloque_codigo LLAVEC
    (40) declarar_if -> . declarar_if_error_llave
    (43) declaracion -> . tipo_dato ID PYC
    (44) declaracion -> . tipo_dato ID ASG ID operacion_matematica ID PYC
    (45) declaracion -> . tipo_dato ID ASG valores PYC
    (46) declaracion -> . declaracion_error
    (50) asignar_estructuras -> . ID PUNTO ID ASG
    (51) funcion -> . ID PA valores PC PYC
    (52) funcion -> . ID PA PC PYC
    (53) funcion -> . ID PA valores COMA valores PC PYC
    (54) print -> . PRIFINT PA ID PC PYC
    (55) input -> . IFINPUFUT PA ID PC PYC
    (56) declaracion_while -> . WHIFILEFE PA condicion PC LLAVEA bloque_codigo LLAVEC
    (57) declaracion_while -> . declaracion_while_error
    (41) declarar_if_error_llave -> . IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE LLAVEA bloque_codigo
    (42) declarar_if_error_llave -> . IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE bloque_codigo LLAVEC
    (22) tipo_dato -> . IFINT
    (23) tipo_dato -> . STRIFING
    (24) tipo_dato -> . AFARRAFAY
    (25) tipo_dato -> . STRUFUCT
    (26) tipo_dato -> . VOFOIFID
    (27) tipo_dato -> . CHAFAR
    (28) tipo_dato -> . BOFOOFOL
    (29) tipo_dato -> . FLOFOAFAT
    (47) declaracion_error -> . ID PYC
    (48) declaracion_error -> . ID ASG ID operacion_matematica ID PYC
    (49) declaracion_error -> . ID ASG valores PYC
    (58) declaracion_while_error -> . PA condicion PC LLAVEA bloque_codigo LLAVEC
    (59) declaracion_while_error -> . WHIFILEFE PA condicion PC bloque_codigo LLAVEC
    (60) declaracion_while_error -> . WHIFILEFE PA condicion PC LLAVEA bloque_codigo

    LLAVEA          shift and go to state 184
    VACIO           shift and go to state 56
    IFIF            shift and go to state 57
    ID              shift and go to state 60
    PRIFINT         shift and go to state 62
    IFINPUFUT       shift and go to state 63
    WHIFILEFE       shift and go to state 64
    IFINT           shift and go to state 18
    STRIFING        shift and go to state 19
    AFARRAFAY       shift and go to state 20
    STRUFUCT        shift and go to state 21
    VOFOIFID        shift and go to state 22
    CHAFAR          shift and go to state 23
    BOFOOFOL        shift and go to state 24
    FLOFOAFAT       shift and go to state 25
    PA              shift and go to state 47

    bloque_codigo                  shift and go to state 185
    declarar_if                    shift and go to state 49
    declaracion                    shift and go to state 50
    asignar_estructuras            shift and go to state 51
    funcion                        shift and go to state 52
    print                          shift and go to state 53
    input                          shift and go to state 54
    declaracion_while              shift and go to state 55
    declarar_if_error_llave        shift and go to state 58
    tipo_dato                      shift and go to state 59
    declaracion_error              shift and go to state 61
    declaracion_while_error        shift and go to state 65

state 166

    (5) declarar_estructuras -> STRUFUCT ID LLAVEA tipo_dato ID PYC tipo_dato ID PYC . LLAVEC

    LLAVEC          shift and go to state 186


state 167

    (9) declarar_estructuras_error -> STRUFUCT ID LLAVEA tipo_dato ID PYC tipo_dato PYC LLAVEC .

    IFINT           reduce using rule 9 (declarar_estructuras_error -> STRUFUCT ID LLAVEA tipo_dato ID PYC tipo_dato PYC LLAVEC .)
    FUNCTION        reduce using rule 9 (declarar_estructuras_error -> STRUFUCT ID LLAVEA tipo_dato ID PYC tipo_dato PYC LLAVEC .)
    MAFAIFIN        reduce using rule 9 (declarar_estructuras_error -> STRUFUCT ID LLAVEA tipo_dato ID PYC tipo_dato PYC LLAVEC .)


state 168

    (8) declarar_estructuras_error -> STRUFUCT ID LLAVEA tipo_dato PYC tipo_dato ID PYC LLAVEC .

    IFINT           reduce using rule 8 (declarar_estructuras_error -> STRUFUCT ID LLAVEA tipo_dato PYC tipo_dato ID PYC LLAVEC .)
    FUNCTION        reduce using rule 8 (declarar_estructuras_error -> STRUFUCT ID LLAVEA tipo_dato PYC tipo_dato ID PYC LLAVEC .)
    MAFAIFIN        reduce using rule 8 (declarar_estructuras_error -> STRUFUCT ID LLAVEA tipo_dato PYC tipo_dato ID PYC LLAVEC .)


state 169

    (7) declarar_estructuras_error -> ID LLAVEA tipo_dato ID PYC tipo_dato ID PYC LLAVEC .

    IFINT           reduce using rule 7 (declarar_estructuras_error -> ID LLAVEA tipo_dato ID PYC tipo_dato ID PYC LLAVEC .)
    FUNCTION        reduce using rule 7 (declarar_estructuras_error -> ID LLAVEA tipo_dato ID PYC tipo_dato ID PYC LLAVEC .)
    MAFAIFIN        reduce using rule 7 (declarar_estructuras_error -> ID LLAVEA tipo_dato ID PYC tipo_dato ID PYC LLAVEC .)


state 170

    (12) declarar_funciones -> FUNCTION tipo_dato ID PA tipo_dato ID PC LLAVEA bloque_codigo . REFETUFURN ID PYC LLAVEC

    REFETUFURN      shift and go to state 187


state 171

    (15) declarar_funciones -> FUNCTION tipo_dato ID PA tipo_dato ID COMA tipo_dato ID . PC LLAVEA bloque_codigo REFETUFURN ID PYC LLAVEC

    PC              shift and go to state 188


state 172

    (13) declarar_funciones -> FUNCTION tipo_dato ID PA PC LLAVEA bloque_codigo REFETUFURN ID . PYC LLAVEC

    PYC             shift and go to state 189


state 173

    (14) declarar_funciones -> FUNCTION tipo_dato ID PA PC LLAVEA bloque_codigo REFETUFURN PYC . LLAVEC

    LLAVEC          shift and go to state 190


state 174

    (17) declarar_main -> IFINT MAFAIFIN PA PC LLAVEA bloque_codigo REFETUFURN PYC LLAVEC .

    $end            reduce using rule 17 (declarar_main -> IFINT MAFAIFIN PA PC LLAVEA bloque_codigo REFETUFURN PYC LLAVEC .)


state 175

    (58) declaracion_while_error -> PA condicion PC LLAVEA bloque_codigo . LLAVEC

    LLAVEC          shift and go to state 191


state 176

    (38) declarar_if -> IFIF PA condicion PC LLAVEA . bloque_codigo LLAVEC
    (39) declarar_if -> IFIF PA condicion PC LLAVEA . bloque_codigo LLAVEC EFELSEFE LLAVEA bloque_codigo LLAVEC
    (41) declarar_if_error_llave -> IFIF PA condicion PC LLAVEA . bloque_codigo LLAVEC EFELSEFE LLAVEA bloque_codigo
    (42) declarar_if_error_llave -> IFIF PA condicion PC LLAVEA . bloque_codigo LLAVEC EFELSEFE bloque_codigo LLAVEC
    (30) bloque_codigo -> . declarar_if bloque_codigo
    (31) bloque_codigo -> . declaracion bloque_codigo
    (32) bloque_codigo -> . asignar_estructuras bloque_codigo
    (33) bloque_codigo -> . funcion bloque_codigo
    (34) bloque_codigo -> . print bloque_codigo
    (35) bloque_codigo -> . input bloque_codigo
    (36) bloque_codigo -> . declaracion_while bloque_codigo
    (37) bloque_codigo -> . VACIO
    (38) declarar_if -> . IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC
    (39) declarar_if -> . IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE LLAVEA bloque_codigo LLAVEC
    (40) declarar_if -> . declarar_if_error_llave
    (43) declaracion -> . tipo_dato ID PYC
    (44) declaracion -> . tipo_dato ID ASG ID operacion_matematica ID PYC
    (45) declaracion -> . tipo_dato ID ASG valores PYC
    (46) declaracion -> . declaracion_error
    (50) asignar_estructuras -> . ID PUNTO ID ASG
    (51) funcion -> . ID PA valores PC PYC
    (52) funcion -> . ID PA PC PYC
    (53) funcion -> . ID PA valores COMA valores PC PYC
    (54) print -> . PRIFINT PA ID PC PYC
    (55) input -> . IFINPUFUT PA ID PC PYC
    (56) declaracion_while -> . WHIFILEFE PA condicion PC LLAVEA bloque_codigo LLAVEC
    (57) declaracion_while -> . declaracion_while_error
    (41) declarar_if_error_llave -> . IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE LLAVEA bloque_codigo
    (42) declarar_if_error_llave -> . IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE bloque_codigo LLAVEC
    (22) tipo_dato -> . IFINT
    (23) tipo_dato -> . STRIFING
    (24) tipo_dato -> . AFARRAFAY
    (25) tipo_dato -> . STRUFUCT
    (26) tipo_dato -> . VOFOIFID
    (27) tipo_dato -> . CHAFAR
    (28) tipo_dato -> . BOFOOFOL
    (29) tipo_dato -> . FLOFOAFAT
    (47) declaracion_error -> . ID PYC
    (48) declaracion_error -> . ID ASG ID operacion_matematica ID PYC
    (49) declaracion_error -> . ID ASG valores PYC
    (58) declaracion_while_error -> . PA condicion PC LLAVEA bloque_codigo LLAVEC
    (59) declaracion_while_error -> . WHIFILEFE PA condicion PC bloque_codigo LLAVEC
    (60) declaracion_while_error -> . WHIFILEFE PA condicion PC LLAVEA bloque_codigo

    VACIO           shift and go to state 56
    IFIF            shift and go to state 57
    ID              shift and go to state 60
    PRIFINT         shift and go to state 62
    IFINPUFUT       shift and go to state 63
    WHIFILEFE       shift and go to state 64
    IFINT           shift and go to state 18
    STRIFING        shift and go to state 19
    AFARRAFAY       shift and go to state 20
    STRUFUCT        shift and go to state 21
    VOFOIFID        shift and go to state 22
    CHAFAR          shift and go to state 23
    BOFOOFOL        shift and go to state 24
    FLOFOAFAT       shift and go to state 25
    PA              shift and go to state 47

    bloque_codigo                  shift and go to state 192
    declarar_if                    shift and go to state 49
    declaracion                    shift and go to state 50
    asignar_estructuras            shift and go to state 51
    funcion                        shift and go to state 52
    print                          shift and go to state 53
    input                          shift and go to state 54
    declaracion_while              shift and go to state 55
    declarar_if_error_llave        shift and go to state 58
    tipo_dato                      shift and go to state 59
    declaracion_error              shift and go to state 61
    declaracion_while_error        shift and go to state 65

state 177

    (44) declaracion -> tipo_dato ID ASG ID operacion_matematica . ID PYC

    ID              shift and go to state 193


state 178

    (45) declaracion -> tipo_dato ID ASG valores PYC .

    VACIO           reduce using rule 45 (declaracion -> tipo_dato ID ASG valores PYC .)
    IFIF            reduce using rule 45 (declaracion -> tipo_dato ID ASG valores PYC .)
    ID              reduce using rule 45 (declaracion -> tipo_dato ID ASG valores PYC .)
    PRIFINT         reduce using rule 45 (declaracion -> tipo_dato ID ASG valores PYC .)
    IFINPUFUT       reduce using rule 45 (declaracion -> tipo_dato ID ASG valores PYC .)
    WHIFILEFE       reduce using rule 45 (declaracion -> tipo_dato ID ASG valores PYC .)
    IFINT           reduce using rule 45 (declaracion -> tipo_dato ID ASG valores PYC .)
    STRIFING        reduce using rule 45 (declaracion -> tipo_dato ID ASG valores PYC .)
    AFARRAFAY       reduce using rule 45 (declaracion -> tipo_dato ID ASG valores PYC .)
    STRUFUCT        reduce using rule 45 (declaracion -> tipo_dato ID ASG valores PYC .)
    VOFOIFID        reduce using rule 45 (declaracion -> tipo_dato ID ASG valores PYC .)
    CHAFAR          reduce using rule 45 (declaracion -> tipo_dato ID ASG valores PYC .)
    BOFOOFOL        reduce using rule 45 (declaracion -> tipo_dato ID ASG valores PYC .)
    FLOFOAFAT       reduce using rule 45 (declaracion -> tipo_dato ID ASG valores PYC .)
    PA              reduce using rule 45 (declaracion -> tipo_dato ID ASG valores PYC .)


state 179

    (48) declaracion_error -> ID ASG ID operacion_matematica ID . PYC

    PYC             shift and go to state 194


state 180

    (51) funcion -> ID PA valores PC PYC .

    VACIO           reduce using rule 51 (funcion -> ID PA valores PC PYC .)
    IFIF            reduce using rule 51 (funcion -> ID PA valores PC PYC .)
    ID              reduce using rule 51 (funcion -> ID PA valores PC PYC .)
    PRIFINT         reduce using rule 51 (funcion -> ID PA valores PC PYC .)
    IFINPUFUT       reduce using rule 51 (funcion -> ID PA valores PC PYC .)
    WHIFILEFE       reduce using rule 51 (funcion -> ID PA valores PC PYC .)
    IFINT           reduce using rule 51 (funcion -> ID PA valores PC PYC .)
    STRIFING        reduce using rule 51 (funcion -> ID PA valores PC PYC .)
    AFARRAFAY       reduce using rule 51 (funcion -> ID PA valores PC PYC .)
    STRUFUCT        reduce using rule 51 (funcion -> ID PA valores PC PYC .)
    VOFOIFID        reduce using rule 51 (funcion -> ID PA valores PC PYC .)
    CHAFAR          reduce using rule 51 (funcion -> ID PA valores PC PYC .)
    BOFOOFOL        reduce using rule 51 (funcion -> ID PA valores PC PYC .)
    FLOFOAFAT       reduce using rule 51 (funcion -> ID PA valores PC PYC .)
    PA              reduce using rule 51 (funcion -> ID PA valores PC PYC .)


state 181

    (53) funcion -> ID PA valores COMA valores . PC PYC

    PC              shift and go to state 195


state 182

    (54) print -> PRIFINT PA ID PC PYC .

    VACIO           reduce using rule 54 (print -> PRIFINT PA ID PC PYC .)
    IFIF            reduce using rule 54 (print -> PRIFINT PA ID PC PYC .)
    ID              reduce using rule 54 (print -> PRIFINT PA ID PC PYC .)
    PRIFINT         reduce using rule 54 (print -> PRIFINT PA ID PC PYC .)
    IFINPUFUT       reduce using rule 54 (print -> PRIFINT PA ID PC PYC .)
    WHIFILEFE       reduce using rule 54 (print -> PRIFINT PA ID PC PYC .)
    IFINT           reduce using rule 54 (print -> PRIFINT PA ID PC PYC .)
    STRIFING        reduce using rule 54 (print -> PRIFINT PA ID PC PYC .)
    AFARRAFAY       reduce using rule 54 (print -> PRIFINT PA ID PC PYC .)
    STRUFUCT        reduce using rule 54 (print -> PRIFINT PA ID PC PYC .)
    VOFOIFID        reduce using rule 54 (print -> PRIFINT PA ID PC PYC .)
    CHAFAR          reduce using rule 54 (print -> PRIFINT PA ID PC PYC .)
    BOFOOFOL        reduce using rule 54 (print -> PRIFINT PA ID PC PYC .)
    FLOFOAFAT       reduce using rule 54 (print -> PRIFINT PA ID PC PYC .)
    PA              reduce using rule 54 (print -> PRIFINT PA ID PC PYC .)


state 183

    (55) input -> IFINPUFUT PA ID PC PYC .

    VACIO           reduce using rule 55 (input -> IFINPUFUT PA ID PC PYC .)
    IFIF            reduce using rule 55 (input -> IFINPUFUT PA ID PC PYC .)
    ID              reduce using rule 55 (input -> IFINPUFUT PA ID PC PYC .)
    PRIFINT         reduce using rule 55 (input -> IFINPUFUT PA ID PC PYC .)
    IFINPUFUT       reduce using rule 55 (input -> IFINPUFUT PA ID PC PYC .)
    WHIFILEFE       reduce using rule 55 (input -> IFINPUFUT PA ID PC PYC .)
    IFINT           reduce using rule 55 (input -> IFINPUFUT PA ID PC PYC .)
    STRIFING        reduce using rule 55 (input -> IFINPUFUT PA ID PC PYC .)
    AFARRAFAY       reduce using rule 55 (input -> IFINPUFUT PA ID PC PYC .)
    STRUFUCT        reduce using rule 55 (input -> IFINPUFUT PA ID PC PYC .)
    VOFOIFID        reduce using rule 55 (input -> IFINPUFUT PA ID PC PYC .)
    CHAFAR          reduce using rule 55 (input -> IFINPUFUT PA ID PC PYC .)
    BOFOOFOL        reduce using rule 55 (input -> IFINPUFUT PA ID PC PYC .)
    FLOFOAFAT       reduce using rule 55 (input -> IFINPUFUT PA ID PC PYC .)
    PA              reduce using rule 55 (input -> IFINPUFUT PA ID PC PYC .)


state 184

    (56) declaracion_while -> WHIFILEFE PA condicion PC LLAVEA . bloque_codigo LLAVEC
    (60) declaracion_while_error -> WHIFILEFE PA condicion PC LLAVEA . bloque_codigo
    (30) bloque_codigo -> . declarar_if bloque_codigo
    (31) bloque_codigo -> . declaracion bloque_codigo
    (32) bloque_codigo -> . asignar_estructuras bloque_codigo
    (33) bloque_codigo -> . funcion bloque_codigo
    (34) bloque_codigo -> . print bloque_codigo
    (35) bloque_codigo -> . input bloque_codigo
    (36) bloque_codigo -> . declaracion_while bloque_codigo
    (37) bloque_codigo -> . VACIO
    (38) declarar_if -> . IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC
    (39) declarar_if -> . IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE LLAVEA bloque_codigo LLAVEC
    (40) declarar_if -> . declarar_if_error_llave
    (43) declaracion -> . tipo_dato ID PYC
    (44) declaracion -> . tipo_dato ID ASG ID operacion_matematica ID PYC
    (45) declaracion -> . tipo_dato ID ASG valores PYC
    (46) declaracion -> . declaracion_error
    (50) asignar_estructuras -> . ID PUNTO ID ASG
    (51) funcion -> . ID PA valores PC PYC
    (52) funcion -> . ID PA PC PYC
    (53) funcion -> . ID PA valores COMA valores PC PYC
    (54) print -> . PRIFINT PA ID PC PYC
    (55) input -> . IFINPUFUT PA ID PC PYC
    (56) declaracion_while -> . WHIFILEFE PA condicion PC LLAVEA bloque_codigo LLAVEC
    (57) declaracion_while -> . declaracion_while_error
    (41) declarar_if_error_llave -> . IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE LLAVEA bloque_codigo
    (42) declarar_if_error_llave -> . IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE bloque_codigo LLAVEC
    (22) tipo_dato -> . IFINT
    (23) tipo_dato -> . STRIFING
    (24) tipo_dato -> . AFARRAFAY
    (25) tipo_dato -> . STRUFUCT
    (26) tipo_dato -> . VOFOIFID
    (27) tipo_dato -> . CHAFAR
    (28) tipo_dato -> . BOFOOFOL
    (29) tipo_dato -> . FLOFOAFAT
    (47) declaracion_error -> . ID PYC
    (48) declaracion_error -> . ID ASG ID operacion_matematica ID PYC
    (49) declaracion_error -> . ID ASG valores PYC
    (58) declaracion_while_error -> . PA condicion PC LLAVEA bloque_codigo LLAVEC
    (59) declaracion_while_error -> . WHIFILEFE PA condicion PC bloque_codigo LLAVEC
    (60) declaracion_while_error -> . WHIFILEFE PA condicion PC LLAVEA bloque_codigo

    VACIO           shift and go to state 56
    IFIF            shift and go to state 57
    ID              shift and go to state 60
    PRIFINT         shift and go to state 62
    IFINPUFUT       shift and go to state 63
    WHIFILEFE       shift and go to state 64
    IFINT           shift and go to state 18
    STRIFING        shift and go to state 19
    AFARRAFAY       shift and go to state 20
    STRUFUCT        shift and go to state 21
    VOFOIFID        shift and go to state 22
    CHAFAR          shift and go to state 23
    BOFOOFOL        shift and go to state 24
    FLOFOAFAT       shift and go to state 25
    PA              shift and go to state 47

    bloque_codigo                  shift and go to state 196
    declarar_if                    shift and go to state 49
    declaracion                    shift and go to state 50
    asignar_estructuras            shift and go to state 51
    funcion                        shift and go to state 52
    print                          shift and go to state 53
    input                          shift and go to state 54
    declaracion_while              shift and go to state 55
    declarar_if_error_llave        shift and go to state 58
    tipo_dato                      shift and go to state 59
    declaracion_error              shift and go to state 61
    declaracion_while_error        shift and go to state 65

state 185

    (59) declaracion_while_error -> WHIFILEFE PA condicion PC bloque_codigo . LLAVEC

    LLAVEC          shift and go to state 197


state 186

    (5) declarar_estructuras -> STRUFUCT ID LLAVEA tipo_dato ID PYC tipo_dato ID PYC LLAVEC .

    IFINT           reduce using rule 5 (declarar_estructuras -> STRUFUCT ID LLAVEA tipo_dato ID PYC tipo_dato ID PYC LLAVEC .)
    FUNCTION        reduce using rule 5 (declarar_estructuras -> STRUFUCT ID LLAVEA tipo_dato ID PYC tipo_dato ID PYC LLAVEC .)
    MAFAIFIN        reduce using rule 5 (declarar_estructuras -> STRUFUCT ID LLAVEA tipo_dato ID PYC tipo_dato ID PYC LLAVEC .)


state 187

    (12) declarar_funciones -> FUNCTION tipo_dato ID PA tipo_dato ID PC LLAVEA bloque_codigo REFETUFURN . ID PYC LLAVEC

    ID              shift and go to state 198


state 188

    (15) declarar_funciones -> FUNCTION tipo_dato ID PA tipo_dato ID COMA tipo_dato ID PC . LLAVEA bloque_codigo REFETUFURN ID PYC LLAVEC

    LLAVEA          shift and go to state 199


state 189

    (13) declarar_funciones -> FUNCTION tipo_dato ID PA PC LLAVEA bloque_codigo REFETUFURN ID PYC . LLAVEC

    LLAVEC          shift and go to state 200


state 190

    (14) declarar_funciones -> FUNCTION tipo_dato ID PA PC LLAVEA bloque_codigo REFETUFURN PYC LLAVEC .

    IFINT           reduce using rule 14 (declarar_funciones -> FUNCTION tipo_dato ID PA PC LLAVEA bloque_codigo REFETUFURN PYC LLAVEC .)
    MAFAIFIN        reduce using rule 14 (declarar_funciones -> FUNCTION tipo_dato ID PA PC LLAVEA bloque_codigo REFETUFURN PYC LLAVEC .)


state 191

    (58) declaracion_while_error -> PA condicion PC LLAVEA bloque_codigo LLAVEC .

    VACIO           reduce using rule 58 (declaracion_while_error -> PA condicion PC LLAVEA bloque_codigo LLAVEC .)
    IFIF            reduce using rule 58 (declaracion_while_error -> PA condicion PC LLAVEA bloque_codigo LLAVEC .)
    ID              reduce using rule 58 (declaracion_while_error -> PA condicion PC LLAVEA bloque_codigo LLAVEC .)
    PRIFINT         reduce using rule 58 (declaracion_while_error -> PA condicion PC LLAVEA bloque_codigo LLAVEC .)
    IFINPUFUT       reduce using rule 58 (declaracion_while_error -> PA condicion PC LLAVEA bloque_codigo LLAVEC .)
    WHIFILEFE       reduce using rule 58 (declaracion_while_error -> PA condicion PC LLAVEA bloque_codigo LLAVEC .)
    IFINT           reduce using rule 58 (declaracion_while_error -> PA condicion PC LLAVEA bloque_codigo LLAVEC .)
    STRIFING        reduce using rule 58 (declaracion_while_error -> PA condicion PC LLAVEA bloque_codigo LLAVEC .)
    AFARRAFAY       reduce using rule 58 (declaracion_while_error -> PA condicion PC LLAVEA bloque_codigo LLAVEC .)
    STRUFUCT        reduce using rule 58 (declaracion_while_error -> PA condicion PC LLAVEA bloque_codigo LLAVEC .)
    VOFOIFID        reduce using rule 58 (declaracion_while_error -> PA condicion PC LLAVEA bloque_codigo LLAVEC .)
    CHAFAR          reduce using rule 58 (declaracion_while_error -> PA condicion PC LLAVEA bloque_codigo LLAVEC .)
    BOFOOFOL        reduce using rule 58 (declaracion_while_error -> PA condicion PC LLAVEA bloque_codigo LLAVEC .)
    FLOFOAFAT       reduce using rule 58 (declaracion_while_error -> PA condicion PC LLAVEA bloque_codigo LLAVEC .)
    PA              reduce using rule 58 (declaracion_while_error -> PA condicion PC LLAVEA bloque_codigo LLAVEC .)


state 192

    (38) declarar_if -> IFIF PA condicion PC LLAVEA bloque_codigo . LLAVEC
    (39) declarar_if -> IFIF PA condicion PC LLAVEA bloque_codigo . LLAVEC EFELSEFE LLAVEA bloque_codigo LLAVEC
    (41) declarar_if_error_llave -> IFIF PA condicion PC LLAVEA bloque_codigo . LLAVEC EFELSEFE LLAVEA bloque_codigo
    (42) declarar_if_error_llave -> IFIF PA condicion PC LLAVEA bloque_codigo . LLAVEC EFELSEFE bloque_codigo LLAVEC

    LLAVEC          shift and go to state 201


state 193

    (44) declaracion -> tipo_dato ID ASG ID operacion_matematica ID . PYC

    PYC             shift and go to state 202


state 194

    (48) declaracion_error -> ID ASG ID operacion_matematica ID PYC .

    VACIO           reduce using rule 48 (declaracion_error -> ID ASG ID operacion_matematica ID PYC .)
    IFIF            reduce using rule 48 (declaracion_error -> ID ASG ID operacion_matematica ID PYC .)
    ID              reduce using rule 48 (declaracion_error -> ID ASG ID operacion_matematica ID PYC .)
    PRIFINT         reduce using rule 48 (declaracion_error -> ID ASG ID operacion_matematica ID PYC .)
    IFINPUFUT       reduce using rule 48 (declaracion_error -> ID ASG ID operacion_matematica ID PYC .)
    WHIFILEFE       reduce using rule 48 (declaracion_error -> ID ASG ID operacion_matematica ID PYC .)
    IFINT           reduce using rule 48 (declaracion_error -> ID ASG ID operacion_matematica ID PYC .)
    STRIFING        reduce using rule 48 (declaracion_error -> ID ASG ID operacion_matematica ID PYC .)
    AFARRAFAY       reduce using rule 48 (declaracion_error -> ID ASG ID operacion_matematica ID PYC .)
    STRUFUCT        reduce using rule 48 (declaracion_error -> ID ASG ID operacion_matematica ID PYC .)
    VOFOIFID        reduce using rule 48 (declaracion_error -> ID ASG ID operacion_matematica ID PYC .)
    CHAFAR          reduce using rule 48 (declaracion_error -> ID ASG ID operacion_matematica ID PYC .)
    BOFOOFOL        reduce using rule 48 (declaracion_error -> ID ASG ID operacion_matematica ID PYC .)
    FLOFOAFAT       reduce using rule 48 (declaracion_error -> ID ASG ID operacion_matematica ID PYC .)
    PA              reduce using rule 48 (declaracion_error -> ID ASG ID operacion_matematica ID PYC .)


state 195

    (53) funcion -> ID PA valores COMA valores PC . PYC

    PYC             shift and go to state 203


state 196

    (56) declaracion_while -> WHIFILEFE PA condicion PC LLAVEA bloque_codigo . LLAVEC
    (60) declaracion_while_error -> WHIFILEFE PA condicion PC LLAVEA bloque_codigo .

    LLAVEC          shift and go to state 204
    VACIO           reduce using rule 60 (declaracion_while_error -> WHIFILEFE PA condicion PC LLAVEA bloque_codigo .)
    IFIF            reduce using rule 60 (declaracion_while_error -> WHIFILEFE PA condicion PC LLAVEA bloque_codigo .)
    ID              reduce using rule 60 (declaracion_while_error -> WHIFILEFE PA condicion PC LLAVEA bloque_codigo .)
    PRIFINT         reduce using rule 60 (declaracion_while_error -> WHIFILEFE PA condicion PC LLAVEA bloque_codigo .)
    IFINPUFUT       reduce using rule 60 (declaracion_while_error -> WHIFILEFE PA condicion PC LLAVEA bloque_codigo .)
    WHIFILEFE       reduce using rule 60 (declaracion_while_error -> WHIFILEFE PA condicion PC LLAVEA bloque_codigo .)
    IFINT           reduce using rule 60 (declaracion_while_error -> WHIFILEFE PA condicion PC LLAVEA bloque_codigo .)
    STRIFING        reduce using rule 60 (declaracion_while_error -> WHIFILEFE PA condicion PC LLAVEA bloque_codigo .)
    AFARRAFAY       reduce using rule 60 (declaracion_while_error -> WHIFILEFE PA condicion PC LLAVEA bloque_codigo .)
    STRUFUCT        reduce using rule 60 (declaracion_while_error -> WHIFILEFE PA condicion PC LLAVEA bloque_codigo .)
    VOFOIFID        reduce using rule 60 (declaracion_while_error -> WHIFILEFE PA condicion PC LLAVEA bloque_codigo .)
    CHAFAR          reduce using rule 60 (declaracion_while_error -> WHIFILEFE PA condicion PC LLAVEA bloque_codigo .)
    BOFOOFOL        reduce using rule 60 (declaracion_while_error -> WHIFILEFE PA condicion PC LLAVEA bloque_codigo .)
    FLOFOAFAT       reduce using rule 60 (declaracion_while_error -> WHIFILEFE PA condicion PC LLAVEA bloque_codigo .)
    PA              reduce using rule 60 (declaracion_while_error -> WHIFILEFE PA condicion PC LLAVEA bloque_codigo .)


state 197

    (59) declaracion_while_error -> WHIFILEFE PA condicion PC bloque_codigo LLAVEC .

    VACIO           reduce using rule 59 (declaracion_while_error -> WHIFILEFE PA condicion PC bloque_codigo LLAVEC .)
    IFIF            reduce using rule 59 (declaracion_while_error -> WHIFILEFE PA condicion PC bloque_codigo LLAVEC .)
    ID              reduce using rule 59 (declaracion_while_error -> WHIFILEFE PA condicion PC bloque_codigo LLAVEC .)
    PRIFINT         reduce using rule 59 (declaracion_while_error -> WHIFILEFE PA condicion PC bloque_codigo LLAVEC .)
    IFINPUFUT       reduce using rule 59 (declaracion_while_error -> WHIFILEFE PA condicion PC bloque_codigo LLAVEC .)
    WHIFILEFE       reduce using rule 59 (declaracion_while_error -> WHIFILEFE PA condicion PC bloque_codigo LLAVEC .)
    IFINT           reduce using rule 59 (declaracion_while_error -> WHIFILEFE PA condicion PC bloque_codigo LLAVEC .)
    STRIFING        reduce using rule 59 (declaracion_while_error -> WHIFILEFE PA condicion PC bloque_codigo LLAVEC .)
    AFARRAFAY       reduce using rule 59 (declaracion_while_error -> WHIFILEFE PA condicion PC bloque_codigo LLAVEC .)
    STRUFUCT        reduce using rule 59 (declaracion_while_error -> WHIFILEFE PA condicion PC bloque_codigo LLAVEC .)
    VOFOIFID        reduce using rule 59 (declaracion_while_error -> WHIFILEFE PA condicion PC bloque_codigo LLAVEC .)
    CHAFAR          reduce using rule 59 (declaracion_while_error -> WHIFILEFE PA condicion PC bloque_codigo LLAVEC .)
    BOFOOFOL        reduce using rule 59 (declaracion_while_error -> WHIFILEFE PA condicion PC bloque_codigo LLAVEC .)
    FLOFOAFAT       reduce using rule 59 (declaracion_while_error -> WHIFILEFE PA condicion PC bloque_codigo LLAVEC .)
    PA              reduce using rule 59 (declaracion_while_error -> WHIFILEFE PA condicion PC bloque_codigo LLAVEC .)


state 198

    (12) declarar_funciones -> FUNCTION tipo_dato ID PA tipo_dato ID PC LLAVEA bloque_codigo REFETUFURN ID . PYC LLAVEC

    PYC             shift and go to state 205


state 199

    (15) declarar_funciones -> FUNCTION tipo_dato ID PA tipo_dato ID COMA tipo_dato ID PC LLAVEA . bloque_codigo REFETUFURN ID PYC LLAVEC
    (30) bloque_codigo -> . declarar_if bloque_codigo
    (31) bloque_codigo -> . declaracion bloque_codigo
    (32) bloque_codigo -> . asignar_estructuras bloque_codigo
    (33) bloque_codigo -> . funcion bloque_codigo
    (34) bloque_codigo -> . print bloque_codigo
    (35) bloque_codigo -> . input bloque_codigo
    (36) bloque_codigo -> . declaracion_while bloque_codigo
    (37) bloque_codigo -> . VACIO
    (38) declarar_if -> . IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC
    (39) declarar_if -> . IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE LLAVEA bloque_codigo LLAVEC
    (40) declarar_if -> . declarar_if_error_llave
    (43) declaracion -> . tipo_dato ID PYC
    (44) declaracion -> . tipo_dato ID ASG ID operacion_matematica ID PYC
    (45) declaracion -> . tipo_dato ID ASG valores PYC
    (46) declaracion -> . declaracion_error
    (50) asignar_estructuras -> . ID PUNTO ID ASG
    (51) funcion -> . ID PA valores PC PYC
    (52) funcion -> . ID PA PC PYC
    (53) funcion -> . ID PA valores COMA valores PC PYC
    (54) print -> . PRIFINT PA ID PC PYC
    (55) input -> . IFINPUFUT PA ID PC PYC
    (56) declaracion_while -> . WHIFILEFE PA condicion PC LLAVEA bloque_codigo LLAVEC
    (57) declaracion_while -> . declaracion_while_error
    (41) declarar_if_error_llave -> . IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE LLAVEA bloque_codigo
    (42) declarar_if_error_llave -> . IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE bloque_codigo LLAVEC
    (22) tipo_dato -> . IFINT
    (23) tipo_dato -> . STRIFING
    (24) tipo_dato -> . AFARRAFAY
    (25) tipo_dato -> . STRUFUCT
    (26) tipo_dato -> . VOFOIFID
    (27) tipo_dato -> . CHAFAR
    (28) tipo_dato -> . BOFOOFOL
    (29) tipo_dato -> . FLOFOAFAT
    (47) declaracion_error -> . ID PYC
    (48) declaracion_error -> . ID ASG ID operacion_matematica ID PYC
    (49) declaracion_error -> . ID ASG valores PYC
    (58) declaracion_while_error -> . PA condicion PC LLAVEA bloque_codigo LLAVEC
    (59) declaracion_while_error -> . WHIFILEFE PA condicion PC bloque_codigo LLAVEC
    (60) declaracion_while_error -> . WHIFILEFE PA condicion PC LLAVEA bloque_codigo

    VACIO           shift and go to state 56
    IFIF            shift and go to state 57
    ID              shift and go to state 60
    PRIFINT         shift and go to state 62
    IFINPUFUT       shift and go to state 63
    WHIFILEFE       shift and go to state 64
    IFINT           shift and go to state 18
    STRIFING        shift and go to state 19
    AFARRAFAY       shift and go to state 20
    STRUFUCT        shift and go to state 21
    VOFOIFID        shift and go to state 22
    CHAFAR          shift and go to state 23
    BOFOOFOL        shift and go to state 24
    FLOFOAFAT       shift and go to state 25
    PA              shift and go to state 47

    tipo_dato                      shift and go to state 59
    bloque_codigo                  shift and go to state 206
    declarar_if                    shift and go to state 49
    declaracion                    shift and go to state 50
    asignar_estructuras            shift and go to state 51
    funcion                        shift and go to state 52
    print                          shift and go to state 53
    input                          shift and go to state 54
    declaracion_while              shift and go to state 55
    declarar_if_error_llave        shift and go to state 58
    declaracion_error              shift and go to state 61
    declaracion_while_error        shift and go to state 65

state 200

    (13) declarar_funciones -> FUNCTION tipo_dato ID PA PC LLAVEA bloque_codigo REFETUFURN ID PYC LLAVEC .

    IFINT           reduce using rule 13 (declarar_funciones -> FUNCTION tipo_dato ID PA PC LLAVEA bloque_codigo REFETUFURN ID PYC LLAVEC .)
    MAFAIFIN        reduce using rule 13 (declarar_funciones -> FUNCTION tipo_dato ID PA PC LLAVEA bloque_codigo REFETUFURN ID PYC LLAVEC .)


state 201

    (38) declarar_if -> IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC .
    (39) declarar_if -> IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC . EFELSEFE LLAVEA bloque_codigo LLAVEC
    (41) declarar_if_error_llave -> IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC . EFELSEFE LLAVEA bloque_codigo
    (42) declarar_if_error_llave -> IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC . EFELSEFE bloque_codigo LLAVEC

    VACIO           reduce using rule 38 (declarar_if -> IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC .)
    IFIF            reduce using rule 38 (declarar_if -> IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC .)
    ID              reduce using rule 38 (declarar_if -> IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC .)
    PRIFINT         reduce using rule 38 (declarar_if -> IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC .)
    IFINPUFUT       reduce using rule 38 (declarar_if -> IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC .)
    WHIFILEFE       reduce using rule 38 (declarar_if -> IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC .)
    IFINT           reduce using rule 38 (declarar_if -> IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC .)
    STRIFING        reduce using rule 38 (declarar_if -> IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC .)
    AFARRAFAY       reduce using rule 38 (declarar_if -> IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC .)
    STRUFUCT        reduce using rule 38 (declarar_if -> IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC .)
    VOFOIFID        reduce using rule 38 (declarar_if -> IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC .)
    CHAFAR          reduce using rule 38 (declarar_if -> IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC .)
    BOFOOFOL        reduce using rule 38 (declarar_if -> IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC .)
    FLOFOAFAT       reduce using rule 38 (declarar_if -> IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC .)
    PA              reduce using rule 38 (declarar_if -> IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC .)
    EFELSEFE        shift and go to state 207


state 202

    (44) declaracion -> tipo_dato ID ASG ID operacion_matematica ID PYC .

    VACIO           reduce using rule 44 (declaracion -> tipo_dato ID ASG ID operacion_matematica ID PYC .)
    IFIF            reduce using rule 44 (declaracion -> tipo_dato ID ASG ID operacion_matematica ID PYC .)
    ID              reduce using rule 44 (declaracion -> tipo_dato ID ASG ID operacion_matematica ID PYC .)
    PRIFINT         reduce using rule 44 (declaracion -> tipo_dato ID ASG ID operacion_matematica ID PYC .)
    IFINPUFUT       reduce using rule 44 (declaracion -> tipo_dato ID ASG ID operacion_matematica ID PYC .)
    WHIFILEFE       reduce using rule 44 (declaracion -> tipo_dato ID ASG ID operacion_matematica ID PYC .)
    IFINT           reduce using rule 44 (declaracion -> tipo_dato ID ASG ID operacion_matematica ID PYC .)
    STRIFING        reduce using rule 44 (declaracion -> tipo_dato ID ASG ID operacion_matematica ID PYC .)
    AFARRAFAY       reduce using rule 44 (declaracion -> tipo_dato ID ASG ID operacion_matematica ID PYC .)
    STRUFUCT        reduce using rule 44 (declaracion -> tipo_dato ID ASG ID operacion_matematica ID PYC .)
    VOFOIFID        reduce using rule 44 (declaracion -> tipo_dato ID ASG ID operacion_matematica ID PYC .)
    CHAFAR          reduce using rule 44 (declaracion -> tipo_dato ID ASG ID operacion_matematica ID PYC .)
    BOFOOFOL        reduce using rule 44 (declaracion -> tipo_dato ID ASG ID operacion_matematica ID PYC .)
    FLOFOAFAT       reduce using rule 44 (declaracion -> tipo_dato ID ASG ID operacion_matematica ID PYC .)
    PA              reduce using rule 44 (declaracion -> tipo_dato ID ASG ID operacion_matematica ID PYC .)


state 203

    (53) funcion -> ID PA valores COMA valores PC PYC .

    VACIO           reduce using rule 53 (funcion -> ID PA valores COMA valores PC PYC .)
    IFIF            reduce using rule 53 (funcion -> ID PA valores COMA valores PC PYC .)
    ID              reduce using rule 53 (funcion -> ID PA valores COMA valores PC PYC .)
    PRIFINT         reduce using rule 53 (funcion -> ID PA valores COMA valores PC PYC .)
    IFINPUFUT       reduce using rule 53 (funcion -> ID PA valores COMA valores PC PYC .)
    WHIFILEFE       reduce using rule 53 (funcion -> ID PA valores COMA valores PC PYC .)
    IFINT           reduce using rule 53 (funcion -> ID PA valores COMA valores PC PYC .)
    STRIFING        reduce using rule 53 (funcion -> ID PA valores COMA valores PC PYC .)
    AFARRAFAY       reduce using rule 53 (funcion -> ID PA valores COMA valores PC PYC .)
    STRUFUCT        reduce using rule 53 (funcion -> ID PA valores COMA valores PC PYC .)
    VOFOIFID        reduce using rule 53 (funcion -> ID PA valores COMA valores PC PYC .)
    CHAFAR          reduce using rule 53 (funcion -> ID PA valores COMA valores PC PYC .)
    BOFOOFOL        reduce using rule 53 (funcion -> ID PA valores COMA valores PC PYC .)
    FLOFOAFAT       reduce using rule 53 (funcion -> ID PA valores COMA valores PC PYC .)
    PA              reduce using rule 53 (funcion -> ID PA valores COMA valores PC PYC .)


state 204

    (56) declaracion_while -> WHIFILEFE PA condicion PC LLAVEA bloque_codigo LLAVEC .

    VACIO           reduce using rule 56 (declaracion_while -> WHIFILEFE PA condicion PC LLAVEA bloque_codigo LLAVEC .)
    IFIF            reduce using rule 56 (declaracion_while -> WHIFILEFE PA condicion PC LLAVEA bloque_codigo LLAVEC .)
    ID              reduce using rule 56 (declaracion_while -> WHIFILEFE PA condicion PC LLAVEA bloque_codigo LLAVEC .)
    PRIFINT         reduce using rule 56 (declaracion_while -> WHIFILEFE PA condicion PC LLAVEA bloque_codigo LLAVEC .)
    IFINPUFUT       reduce using rule 56 (declaracion_while -> WHIFILEFE PA condicion PC LLAVEA bloque_codigo LLAVEC .)
    WHIFILEFE       reduce using rule 56 (declaracion_while -> WHIFILEFE PA condicion PC LLAVEA bloque_codigo LLAVEC .)
    IFINT           reduce using rule 56 (declaracion_while -> WHIFILEFE PA condicion PC LLAVEA bloque_codigo LLAVEC .)
    STRIFING        reduce using rule 56 (declaracion_while -> WHIFILEFE PA condicion PC LLAVEA bloque_codigo LLAVEC .)
    AFARRAFAY       reduce using rule 56 (declaracion_while -> WHIFILEFE PA condicion PC LLAVEA bloque_codigo LLAVEC .)
    STRUFUCT        reduce using rule 56 (declaracion_while -> WHIFILEFE PA condicion PC LLAVEA bloque_codigo LLAVEC .)
    VOFOIFID        reduce using rule 56 (declaracion_while -> WHIFILEFE PA condicion PC LLAVEA bloque_codigo LLAVEC .)
    CHAFAR          reduce using rule 56 (declaracion_while -> WHIFILEFE PA condicion PC LLAVEA bloque_codigo LLAVEC .)
    BOFOOFOL        reduce using rule 56 (declaracion_while -> WHIFILEFE PA condicion PC LLAVEA bloque_codigo LLAVEC .)
    FLOFOAFAT       reduce using rule 56 (declaracion_while -> WHIFILEFE PA condicion PC LLAVEA bloque_codigo LLAVEC .)
    PA              reduce using rule 56 (declaracion_while -> WHIFILEFE PA condicion PC LLAVEA bloque_codigo LLAVEC .)


state 205

    (12) declarar_funciones -> FUNCTION tipo_dato ID PA tipo_dato ID PC LLAVEA bloque_codigo REFETUFURN ID PYC . LLAVEC

    LLAVEC          shift and go to state 208


state 206

    (15) declarar_funciones -> FUNCTION tipo_dato ID PA tipo_dato ID COMA tipo_dato ID PC LLAVEA bloque_codigo . REFETUFURN ID PYC LLAVEC

    REFETUFURN      shift and go to state 209


state 207

    (39) declarar_if -> IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE . LLAVEA bloque_codigo LLAVEC
    (41) declarar_if_error_llave -> IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE . LLAVEA bloque_codigo
    (42) declarar_if_error_llave -> IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE . bloque_codigo LLAVEC
    (30) bloque_codigo -> . declarar_if bloque_codigo
    (31) bloque_codigo -> . declaracion bloque_codigo
    (32) bloque_codigo -> . asignar_estructuras bloque_codigo
    (33) bloque_codigo -> . funcion bloque_codigo
    (34) bloque_codigo -> . print bloque_codigo
    (35) bloque_codigo -> . input bloque_codigo
    (36) bloque_codigo -> . declaracion_while bloque_codigo
    (37) bloque_codigo -> . VACIO
    (38) declarar_if -> . IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC
    (39) declarar_if -> . IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE LLAVEA bloque_codigo LLAVEC
    (40) declarar_if -> . declarar_if_error_llave
    (43) declaracion -> . tipo_dato ID PYC
    (44) declaracion -> . tipo_dato ID ASG ID operacion_matematica ID PYC
    (45) declaracion -> . tipo_dato ID ASG valores PYC
    (46) declaracion -> . declaracion_error
    (50) asignar_estructuras -> . ID PUNTO ID ASG
    (51) funcion -> . ID PA valores PC PYC
    (52) funcion -> . ID PA PC PYC
    (53) funcion -> . ID PA valores COMA valores PC PYC
    (54) print -> . PRIFINT PA ID PC PYC
    (55) input -> . IFINPUFUT PA ID PC PYC
    (56) declaracion_while -> . WHIFILEFE PA condicion PC LLAVEA bloque_codigo LLAVEC
    (57) declaracion_while -> . declaracion_while_error
    (41) declarar_if_error_llave -> . IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE LLAVEA bloque_codigo
    (42) declarar_if_error_llave -> . IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE bloque_codigo LLAVEC
    (22) tipo_dato -> . IFINT
    (23) tipo_dato -> . STRIFING
    (24) tipo_dato -> . AFARRAFAY
    (25) tipo_dato -> . STRUFUCT
    (26) tipo_dato -> . VOFOIFID
    (27) tipo_dato -> . CHAFAR
    (28) tipo_dato -> . BOFOOFOL
    (29) tipo_dato -> . FLOFOAFAT
    (47) declaracion_error -> . ID PYC
    (48) declaracion_error -> . ID ASG ID operacion_matematica ID PYC
    (49) declaracion_error -> . ID ASG valores PYC
    (58) declaracion_while_error -> . PA condicion PC LLAVEA bloque_codigo LLAVEC
    (59) declaracion_while_error -> . WHIFILEFE PA condicion PC bloque_codigo LLAVEC
    (60) declaracion_while_error -> . WHIFILEFE PA condicion PC LLAVEA bloque_codigo

    LLAVEA          shift and go to state 210
    VACIO           shift and go to state 56
    IFIF            shift and go to state 57
    ID              shift and go to state 60
    PRIFINT         shift and go to state 62
    IFINPUFUT       shift and go to state 63
    WHIFILEFE       shift and go to state 64
    IFINT           shift and go to state 18
    STRIFING        shift and go to state 19
    AFARRAFAY       shift and go to state 20
    STRUFUCT        shift and go to state 21
    VOFOIFID        shift and go to state 22
    CHAFAR          shift and go to state 23
    BOFOOFOL        shift and go to state 24
    FLOFOAFAT       shift and go to state 25
    PA              shift and go to state 47

    bloque_codigo                  shift and go to state 211
    declarar_if                    shift and go to state 49
    declaracion                    shift and go to state 50
    asignar_estructuras            shift and go to state 51
    funcion                        shift and go to state 52
    print                          shift and go to state 53
    input                          shift and go to state 54
    declaracion_while              shift and go to state 55
    declarar_if_error_llave        shift and go to state 58
    tipo_dato                      shift and go to state 59
    declaracion_error              shift and go to state 61
    declaracion_while_error        shift and go to state 65

state 208

    (12) declarar_funciones -> FUNCTION tipo_dato ID PA tipo_dato ID PC LLAVEA bloque_codigo REFETUFURN ID PYC LLAVEC .

    IFINT           reduce using rule 12 (declarar_funciones -> FUNCTION tipo_dato ID PA tipo_dato ID PC LLAVEA bloque_codigo REFETUFURN ID PYC LLAVEC .)
    MAFAIFIN        reduce using rule 12 (declarar_funciones -> FUNCTION tipo_dato ID PA tipo_dato ID PC LLAVEA bloque_codigo REFETUFURN ID PYC LLAVEC .)


state 209

    (15) declarar_funciones -> FUNCTION tipo_dato ID PA tipo_dato ID COMA tipo_dato ID PC LLAVEA bloque_codigo REFETUFURN . ID PYC LLAVEC

    ID              shift and go to state 212


state 210

    (39) declarar_if -> IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE LLAVEA . bloque_codigo LLAVEC
    (41) declarar_if_error_llave -> IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE LLAVEA . bloque_codigo
    (30) bloque_codigo -> . declarar_if bloque_codigo
    (31) bloque_codigo -> . declaracion bloque_codigo
    (32) bloque_codigo -> . asignar_estructuras bloque_codigo
    (33) bloque_codigo -> . funcion bloque_codigo
    (34) bloque_codigo -> . print bloque_codigo
    (35) bloque_codigo -> . input bloque_codigo
    (36) bloque_codigo -> . declaracion_while bloque_codigo
    (37) bloque_codigo -> . VACIO
    (38) declarar_if -> . IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC
    (39) declarar_if -> . IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE LLAVEA bloque_codigo LLAVEC
    (40) declarar_if -> . declarar_if_error_llave
    (43) declaracion -> . tipo_dato ID PYC
    (44) declaracion -> . tipo_dato ID ASG ID operacion_matematica ID PYC
    (45) declaracion -> . tipo_dato ID ASG valores PYC
    (46) declaracion -> . declaracion_error
    (50) asignar_estructuras -> . ID PUNTO ID ASG
    (51) funcion -> . ID PA valores PC PYC
    (52) funcion -> . ID PA PC PYC
    (53) funcion -> . ID PA valores COMA valores PC PYC
    (54) print -> . PRIFINT PA ID PC PYC
    (55) input -> . IFINPUFUT PA ID PC PYC
    (56) declaracion_while -> . WHIFILEFE PA condicion PC LLAVEA bloque_codigo LLAVEC
    (57) declaracion_while -> . declaracion_while_error
    (41) declarar_if_error_llave -> . IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE LLAVEA bloque_codigo
    (42) declarar_if_error_llave -> . IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE bloque_codigo LLAVEC
    (22) tipo_dato -> . IFINT
    (23) tipo_dato -> . STRIFING
    (24) tipo_dato -> . AFARRAFAY
    (25) tipo_dato -> . STRUFUCT
    (26) tipo_dato -> . VOFOIFID
    (27) tipo_dato -> . CHAFAR
    (28) tipo_dato -> . BOFOOFOL
    (29) tipo_dato -> . FLOFOAFAT
    (47) declaracion_error -> . ID PYC
    (48) declaracion_error -> . ID ASG ID operacion_matematica ID PYC
    (49) declaracion_error -> . ID ASG valores PYC
    (58) declaracion_while_error -> . PA condicion PC LLAVEA bloque_codigo LLAVEC
    (59) declaracion_while_error -> . WHIFILEFE PA condicion PC bloque_codigo LLAVEC
    (60) declaracion_while_error -> . WHIFILEFE PA condicion PC LLAVEA bloque_codigo

    VACIO           shift and go to state 56
    IFIF            shift and go to state 57
    ID              shift and go to state 60
    PRIFINT         shift and go to state 62
    IFINPUFUT       shift and go to state 63
    WHIFILEFE       shift and go to state 64
    IFINT           shift and go to state 18
    STRIFING        shift and go to state 19
    AFARRAFAY       shift and go to state 20
    STRUFUCT        shift and go to state 21
    VOFOIFID        shift and go to state 22
    CHAFAR          shift and go to state 23
    BOFOOFOL        shift and go to state 24
    FLOFOAFAT       shift and go to state 25
    PA              shift and go to state 47

    bloque_codigo                  shift and go to state 213
    declarar_if                    shift and go to state 49
    declaracion                    shift and go to state 50
    asignar_estructuras            shift and go to state 51
    funcion                        shift and go to state 52
    print                          shift and go to state 53
    input                          shift and go to state 54
    declaracion_while              shift and go to state 55
    declarar_if_error_llave        shift and go to state 58
    tipo_dato                      shift and go to state 59
    declaracion_error              shift and go to state 61
    declaracion_while_error        shift and go to state 65

state 211

    (42) declarar_if_error_llave -> IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE bloque_codigo . LLAVEC

    LLAVEC          shift and go to state 214


state 212

    (15) declarar_funciones -> FUNCTION tipo_dato ID PA tipo_dato ID COMA tipo_dato ID PC LLAVEA bloque_codigo REFETUFURN ID . PYC LLAVEC

    PYC             shift and go to state 215


state 213

    (39) declarar_if -> IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE LLAVEA bloque_codigo . LLAVEC
    (41) declarar_if_error_llave -> IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE LLAVEA bloque_codigo .

    LLAVEC          shift and go to state 216
    VACIO           reduce using rule 41 (declarar_if_error_llave -> IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE LLAVEA bloque_codigo .)
    IFIF            reduce using rule 41 (declarar_if_error_llave -> IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE LLAVEA bloque_codigo .)
    ID              reduce using rule 41 (declarar_if_error_llave -> IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE LLAVEA bloque_codigo .)
    PRIFINT         reduce using rule 41 (declarar_if_error_llave -> IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE LLAVEA bloque_codigo .)
    IFINPUFUT       reduce using rule 41 (declarar_if_error_llave -> IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE LLAVEA bloque_codigo .)
    WHIFILEFE       reduce using rule 41 (declarar_if_error_llave -> IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE LLAVEA bloque_codigo .)
    IFINT           reduce using rule 41 (declarar_if_error_llave -> IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE LLAVEA bloque_codigo .)
    STRIFING        reduce using rule 41 (declarar_if_error_llave -> IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE LLAVEA bloque_codigo .)
    AFARRAFAY       reduce using rule 41 (declarar_if_error_llave -> IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE LLAVEA bloque_codigo .)
    STRUFUCT        reduce using rule 41 (declarar_if_error_llave -> IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE LLAVEA bloque_codigo .)
    VOFOIFID        reduce using rule 41 (declarar_if_error_llave -> IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE LLAVEA bloque_codigo .)
    CHAFAR          reduce using rule 41 (declarar_if_error_llave -> IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE LLAVEA bloque_codigo .)
    BOFOOFOL        reduce using rule 41 (declarar_if_error_llave -> IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE LLAVEA bloque_codigo .)
    FLOFOAFAT       reduce using rule 41 (declarar_if_error_llave -> IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE LLAVEA bloque_codigo .)
    PA              reduce using rule 41 (declarar_if_error_llave -> IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE LLAVEA bloque_codigo .)


state 214

    (42) declarar_if_error_llave -> IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE bloque_codigo LLAVEC .

    VACIO           reduce using rule 42 (declarar_if_error_llave -> IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE bloque_codigo LLAVEC .)
    IFIF            reduce using rule 42 (declarar_if_error_llave -> IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE bloque_codigo LLAVEC .)
    ID              reduce using rule 42 (declarar_if_error_llave -> IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE bloque_codigo LLAVEC .)
    PRIFINT         reduce using rule 42 (declarar_if_error_llave -> IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE bloque_codigo LLAVEC .)
    IFINPUFUT       reduce using rule 42 (declarar_if_error_llave -> IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE bloque_codigo LLAVEC .)
    WHIFILEFE       reduce using rule 42 (declarar_if_error_llave -> IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE bloque_codigo LLAVEC .)
    IFINT           reduce using rule 42 (declarar_if_error_llave -> IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE bloque_codigo LLAVEC .)
    STRIFING        reduce using rule 42 (declarar_if_error_llave -> IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE bloque_codigo LLAVEC .)
    AFARRAFAY       reduce using rule 42 (declarar_if_error_llave -> IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE bloque_codigo LLAVEC .)
    STRUFUCT        reduce using rule 42 (declarar_if_error_llave -> IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE bloque_codigo LLAVEC .)
    VOFOIFID        reduce using rule 42 (declarar_if_error_llave -> IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE bloque_codigo LLAVEC .)
    CHAFAR          reduce using rule 42 (declarar_if_error_llave -> IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE bloque_codigo LLAVEC .)
    BOFOOFOL        reduce using rule 42 (declarar_if_error_llave -> IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE bloque_codigo LLAVEC .)
    FLOFOAFAT       reduce using rule 42 (declarar_if_error_llave -> IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE bloque_codigo LLAVEC .)
    PA              reduce using rule 42 (declarar_if_error_llave -> IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE bloque_codigo LLAVEC .)


state 215

    (15) declarar_funciones -> FUNCTION tipo_dato ID PA tipo_dato ID COMA tipo_dato ID PC LLAVEA bloque_codigo REFETUFURN ID PYC . LLAVEC

    LLAVEC          shift and go to state 217


state 216

    (39) declarar_if -> IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE LLAVEA bloque_codigo LLAVEC .

    VACIO           reduce using rule 39 (declarar_if -> IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE LLAVEA bloque_codigo LLAVEC .)
    IFIF            reduce using rule 39 (declarar_if -> IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE LLAVEA bloque_codigo LLAVEC .)
    ID              reduce using rule 39 (declarar_if -> IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE LLAVEA bloque_codigo LLAVEC .)
    PRIFINT         reduce using rule 39 (declarar_if -> IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE LLAVEA bloque_codigo LLAVEC .)
    IFINPUFUT       reduce using rule 39 (declarar_if -> IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE LLAVEA bloque_codigo LLAVEC .)
    WHIFILEFE       reduce using rule 39 (declarar_if -> IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE LLAVEA bloque_codigo LLAVEC .)
    IFINT           reduce using rule 39 (declarar_if -> IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE LLAVEA bloque_codigo LLAVEC .)
    STRIFING        reduce using rule 39 (declarar_if -> IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE LLAVEA bloque_codigo LLAVEC .)
    AFARRAFAY       reduce using rule 39 (declarar_if -> IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE LLAVEA bloque_codigo LLAVEC .)
    STRUFUCT        reduce using rule 39 (declarar_if -> IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE LLAVEA bloque_codigo LLAVEC .)
    VOFOIFID        reduce using rule 39 (declarar_if -> IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE LLAVEA bloque_codigo LLAVEC .)
    CHAFAR          reduce using rule 39 (declarar_if -> IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE LLAVEA bloque_codigo LLAVEC .)
    BOFOOFOL        reduce using rule 39 (declarar_if -> IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE LLAVEA bloque_codigo LLAVEC .)
    FLOFOAFAT       reduce using rule 39 (declarar_if -> IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE LLAVEA bloque_codigo LLAVEC .)
    PA              reduce using rule 39 (declarar_if -> IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE LLAVEA bloque_codigo LLAVEC .)


state 217

    (15) declarar_funciones -> FUNCTION tipo_dato ID PA tipo_dato ID COMA tipo_dato ID PC LLAVEA bloque_codigo REFETUFURN ID PYC LLAVEC .

    IFINT           reduce using rule 15 (declarar_funciones -> FUNCTION tipo_dato ID PA tipo_dato ID COMA tipo_dato ID PC LLAVEA bloque_codigo REFETUFURN ID PYC LLAVEC .)
    MAFAIFIN        reduce using rule 15 (declarar_funciones -> FUNCTION tipo_dato ID PA tipo_dato ID COMA tipo_dato ID PC LLAVEA bloque_codigo REFETUFURN ID PYC LLAVEC .)

