Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    NOT

Grammar

Rule 0     S' -> start
Rule 1     start -> declarar_estructuras declarar_main
Rule 2     start -> declarar_funciones declarar_main
Rule 3     start -> declarar_estructuras declarar_funciones declarar_main
Rule 4     start -> declarar_main
Rule 5     declarar_estructuras -> STRUFUCT ID LLAVEA tipo_dato ID PYC tipo_dato ID PYC LLAVEC
Rule 6     declarar_estructuras -> declarar_estructuras_error
Rule 7     declarar_estructuras_error -> ID LLAVEA tipo_dato ID PYC tipo_dato ID PYC LLAVEC
Rule 8     declarar_estructuras_error -> ID ID LLAVEA tipo_dato ID PYC tipo_dato ID PYC LLAVEC
Rule 9     declarar_estructuras_error -> STRUFUCT ID LLAVEA tipo_dato PYC tipo_dato ID PYC LLAVEC
Rule 10    declarar_estructuras_error -> STRUFUCT ID LLAVEA tipo_dato ID PYC tipo_dato PYC LLAVEC
Rule 11    declarar_estructuras_error -> STRUFUCT ID LLAVEA tipo_dato PYC tipo_dato PYC LLAVEC
Rule 12    declarar_estructuras_error -> STRUFUCT ID LLAVEA ID PYC ID PYC LLAVEC
Rule 13    declarar_estructuras_error -> STRUFUCT ID LLAVEA tipo_dato ID PYC tipo_dato ID PYC tipo_dato ID PYC LLAVEC
Rule 14    declarar_funciones -> FUNCTION tipo_dato ID PA tipo_dato ID PC LLAVEA bloque_codigo REFETUFURN ID PYC LLAVEC
Rule 15    declarar_funciones -> FUNCTION tipo_dato ID PA PC LLAVEA bloque_codigo REFETUFURN ID PYC LLAVEC
Rule 16    declarar_funciones -> FUNCTION tipo_dato ID PA PC LLAVEA bloque_codigo REFETUFURN PYC LLAVEC
Rule 17    declarar_funciones -> FUNCTION tipo_dato ID PA tipo_dato ID COMA tipo_dato ID PC LLAVEA bloque_codigo REFETUFURN ID PYC LLAVEC
Rule 18    declarar_main -> IFINT MAFAIFIN PA PC LLAVEA bloque_codigo REFETUFURN PYC LLAVEC
Rule 19    declarar_main -> declarar_main_error
Rule 20    declarar_main_error -> MAFAIFIN PA PC LLAVEA bloque_codigo REFETUFURN PYC LLAVEC
Rule 21    declarar_main_error -> IFINT MAFAIFIN PA PC LLAVEA bloque_codigo LLAVEC
Rule 22    declarar_main_error -> MAFAIFIN PA PC LLAVEA bloque_codigo LLAVEC
Rule 23    declarar_main_error -> IFINT PA PC LLAVEA bloque_codigo REFETUFURN PYC LLAVEC
Rule 24    declarar_main_error -> IFINT ID PA PC LLAVEA bloque_codigo REFETUFURN PYC LLAVEC
Rule 25    tipo_dato -> IFINT
Rule 26    tipo_dato -> STRIFING
Rule 27    tipo_dato -> AFARRAFAY
Rule 28    tipo_dato -> STRUFUCT
Rule 29    tipo_dato -> VOFOIFID
Rule 30    tipo_dato -> CHAFAR
Rule 31    tipo_dato -> BOFOOFOL
Rule 32    tipo_dato -> FLOFOAFAT
Rule 33    bloque_codigo -> declarar_if bloque_codigo
Rule 34    bloque_codigo -> declaracion bloque_codigo
Rule 35    bloque_codigo -> asignar_estructuras bloque_codigo
Rule 36    bloque_codigo -> asignar_array bloque_codigo
Rule 37    bloque_codigo -> funcion bloque_codigo
Rule 38    bloque_codigo -> print bloque_codigo
Rule 39    bloque_codigo -> input bloque_codigo
Rule 40    bloque_codigo -> declaracion_while bloque_codigo
Rule 41    bloque_codigo -> VACIO
Rule 42    declarar_if -> IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC
Rule 43    declarar_if -> IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE LLAVEA bloque_codigo LLAVEC
Rule 44    declarar_if -> declarar_if_error_llave
Rule 45    declarar_if_error_llave -> IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE LLAVEA bloque_codigo
Rule 46    declarar_if_error_llave -> IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE bloque_codigo LLAVEC
Rule 47    declaracion -> tipo_dato ID ASG ID operacion_matematica ID PYC
Rule 48    declaracion -> tipo_dato ID ASG dato PYC
Rule 49    declaracion -> AFARRAFAY ID dimensiones PYC
Rule 50    declaracion -> declaracion_error
Rule 51    declaracion_error -> ID PYC
Rule 52    declaracion_error -> ID ASG ID operacion_matematica ID PYC
Rule 53    declaracion_error -> ID ASG valores PYC
Rule 54    declaracion_error -> ID ID PYC
Rule 55    declaracion_error -> ID ID ASG ID operacion_matematica ID PYC
Rule 56    declaracion_error -> ID ID ASG valores PYC
Rule 57    declaracion_error -> ID ID dimensiones PYC
Rule 58    declaracion_error -> ID dimensiones PYC
Rule 59    dimensiones -> dimension dimensiones
Rule 60    dimensiones -> VACIO
Rule 61    dimension -> CA INT CC
Rule 62    asignar_array -> ID dimensiones ASG dato PYC
Rule 63    asignar_estructuras -> ID PUNTO ID ASG dato PYC
Rule 64    funcion -> ID PA valores PC PYC
Rule 65    funcion -> ID PA PC PYC
Rule 66    funcion -> ID PA valores COMA valores PC PYC
Rule 67    print -> PRIFINT PA ID PC PYC
Rule 68    input -> IFINPUFUT PA ID PC PYC
Rule 69    declaracion_while -> WHIFILEFE PA condicion PC LLAVEA bloque_codigo LLAVEC
Rule 70    declaracion_while -> declaracion_while_error
Rule 71    declaracion_while_error -> PA condicion PC LLAVEA bloque_codigo LLAVEC
Rule 72    declaracion_while_error -> ID PA condicion PC LLAVEA bloque_codigo LLAVEC
Rule 73    declaracion_while_error -> WHIFILEFE PA condicion PC bloque_codigo LLAVEC
Rule 74    declaracion_while_error -> WHIFILEFE PA condicion PC LLAVEA bloque_codigo
Rule 75    condicion -> ID operadores ID
Rule 76    operacion_matematica -> SUM
Rule 77    operacion_matematica -> RES
Rule 78    operacion_matematica -> MUL
Rule 79    operacion_matematica -> DIV
Rule 80    operacion_matematica -> RED
Rule 81    operacion_matematica -> POT
Rule 82    valores -> INT
Rule 83    valores -> CHAR
Rule 84    valores -> TRUFUEFE
Rule 85    valores -> FAFALSEFE
Rule 86    valores -> PCC
Rule 87    valores -> ID
Rule 88    dato -> INT
Rule 89    dato -> CHAR
Rule 90    dato -> TRUFUEFE
Rule 91    dato -> FAFALSEFE
Rule 92    dato -> PCC
Rule 93    dato -> REAL
Rule 94    operadores -> MEN
Rule 95    operadores -> MAY
Rule 96    operadores -> MENIG
Rule 97    operadores -> MAYIG
Rule 98    operadores -> CMP
Rule 99    operadores -> DIF
Rule 100   operadores_logicos -> AND
Rule 101   operadores_logicos -> OR
Rule 102   vacio -> VACIO

Terminals, with rules where they appear

AFARRAFAY            : 27 49
AND                  : 100
ASG                  : 47 48 52 53 55 56 62 63
BOFOOFOL             : 31
CA                   : 61
CC                   : 61
CHAFAR               : 30
CHAR                 : 83 89
CMP                  : 98
COMA                 : 17 66
DIF                  : 99
DIV                  : 79
EFELSEFE             : 43 45 46
FAFALSEFE            : 85 91
FLOFOAFAT            : 32
FUNCTION             : 14 15 16 17
ID                   : 5 5 5 7 7 7 8 8 8 8 9 9 10 10 11 12 12 12 13 13 13 13 14 14 14 15 15 16 17 17 17 17 24 47 47 47 48 49 51 52 52 52 53 54 54 55 55 55 55 56 56 57 57 58 62 63 63 64 65 66 67 68 72 75 75 87
IFIF                 : 42 43 45 46
IFINPUFUT            : 68
IFINT                : 18 21 23 24 25
INT                  : 61 82 88
LLAVEA               : 5 7 8 9 10 11 12 13 14 15 16 17 18 20 21 22 23 24 42 43 43 45 45 46 69 71 72 74
LLAVEC               : 5 7 8 9 10 11 12 13 14 15 16 17 18 20 21 22 23 24 42 43 43 45 46 46 69 71 72 73
MAFAIFIN             : 18 20 21 22
MAY                  : 95
MAYIG                : 97
MEN                  : 94
MENIG                : 96
MUL                  : 78
NOT                  : 
OR                   : 101
PA                   : 14 15 16 17 18 20 21 22 23 24 42 43 45 46 64 65 66 67 68 69 71 72 73 74
PC                   : 14 15 16 17 18 20 21 22 23 24 42 43 45 46 64 65 66 67 68 69 71 72 73 74
PCC                  : 86 92
POT                  : 81
PRIFINT              : 67
PUNTO                : 63
PYC                  : 5 5 7 7 8 8 9 9 10 10 11 11 12 12 13 13 13 14 15 16 17 18 20 23 24 47 48 49 51 52 53 54 55 56 57 58 62 63 64 65 66 67 68
REAL                 : 93
RED                  : 80
REFETUFURN           : 14 15 16 17 18 20 23 24
RES                  : 77
STRIFING             : 26
STRUFUCT             : 5 9 10 11 12 13 28
SUM                  : 76
TRUFUEFE             : 84 90
VACIO                : 41 60 102
VOFOIFID             : 29
WHIFILEFE            : 69 73 74
error                : 

Nonterminals, with rules where they appear

asignar_array        : 36
asignar_estructuras  : 35
bloque_codigo        : 14 15 16 17 18 20 21 22 23 24 33 34 35 36 37 38 39 40 42 43 43 45 45 46 46 69 71 72 73 74
condicion            : 42 43 45 46 69 71 72 73 74
dato                 : 48 62 63
declaracion          : 34
declaracion_error    : 50
declaracion_while    : 40
declaracion_while_error : 70
declarar_estructuras : 1 3
declarar_estructuras_error : 6
declarar_funciones   : 2 3
declarar_if          : 33
declarar_if_error_llave : 44
declarar_main        : 1 2 3 4
declarar_main_error  : 19
dimension            : 59
dimensiones          : 49 57 58 59 62
funcion              : 37
input                : 39
operacion_matematica : 47 52 55
operadores           : 75
operadores_logicos   : 
print                : 38
start                : 0
tipo_dato            : 5 5 7 7 8 8 9 9 10 10 11 11 13 13 13 14 14 15 16 17 17 17 47 48
vacio                : 
valores              : 53 56 64 66 66

Parsing method: LALR

state 0

    (0) S' -> . start
    (1) start -> . declarar_estructuras declarar_main
    (2) start -> . declarar_funciones declarar_main
    (3) start -> . declarar_estructuras declarar_funciones declarar_main
    (4) start -> . declarar_main
    (5) declarar_estructuras -> . STRUFUCT ID LLAVEA tipo_dato ID PYC tipo_dato ID PYC LLAVEC
    (6) declarar_estructuras -> . declarar_estructuras_error
    (14) declarar_funciones -> . FUNCTION tipo_dato ID PA tipo_dato ID PC LLAVEA bloque_codigo REFETUFURN ID PYC LLAVEC
    (15) declarar_funciones -> . FUNCTION tipo_dato ID PA PC LLAVEA bloque_codigo REFETUFURN ID PYC LLAVEC
    (16) declarar_funciones -> . FUNCTION tipo_dato ID PA PC LLAVEA bloque_codigo REFETUFURN PYC LLAVEC
    (17) declarar_funciones -> . FUNCTION tipo_dato ID PA tipo_dato ID COMA tipo_dato ID PC LLAVEA bloque_codigo REFETUFURN ID PYC LLAVEC
    (18) declarar_main -> . IFINT MAFAIFIN PA PC LLAVEA bloque_codigo REFETUFURN PYC LLAVEC
    (19) declarar_main -> . declarar_main_error
    (7) declarar_estructuras_error -> . ID LLAVEA tipo_dato ID PYC tipo_dato ID PYC LLAVEC
    (8) declarar_estructuras_error -> . ID ID LLAVEA tipo_dato ID PYC tipo_dato ID PYC LLAVEC
    (9) declarar_estructuras_error -> . STRUFUCT ID LLAVEA tipo_dato PYC tipo_dato ID PYC LLAVEC
    (10) declarar_estructuras_error -> . STRUFUCT ID LLAVEA tipo_dato ID PYC tipo_dato PYC LLAVEC
    (11) declarar_estructuras_error -> . STRUFUCT ID LLAVEA tipo_dato PYC tipo_dato PYC LLAVEC
    (12) declarar_estructuras_error -> . STRUFUCT ID LLAVEA ID PYC ID PYC LLAVEC
    (13) declarar_estructuras_error -> . STRUFUCT ID LLAVEA tipo_dato ID PYC tipo_dato ID PYC tipo_dato ID PYC LLAVEC
    (20) declarar_main_error -> . MAFAIFIN PA PC LLAVEA bloque_codigo REFETUFURN PYC LLAVEC
    (21) declarar_main_error -> . IFINT MAFAIFIN PA PC LLAVEA bloque_codigo LLAVEC
    (22) declarar_main_error -> . MAFAIFIN PA PC LLAVEA bloque_codigo LLAVEC
    (23) declarar_main_error -> . IFINT PA PC LLAVEA bloque_codigo REFETUFURN PYC LLAVEC
    (24) declarar_main_error -> . IFINT ID PA PC LLAVEA bloque_codigo REFETUFURN PYC LLAVEC

    STRUFUCT        shift and go to state 5
    FUNCTION        shift and go to state 8
    IFINT           shift and go to state 9
    ID              shift and go to state 6
    MAFAIFIN        shift and go to state 10

    start                          shift and go to state 1
    declarar_estructuras           shift and go to state 2
    declarar_main                  shift and go to state 3
    declarar_funciones             shift and go to state 4
    declarar_estructuras_error     shift and go to state 7
    declarar_main_error            shift and go to state 11

state 1

    (0) S' -> start .



state 2

    (1) start -> declarar_estructuras . declarar_main
    (3) start -> declarar_estructuras . declarar_funciones declarar_main
    (18) declarar_main -> . IFINT MAFAIFIN PA PC LLAVEA bloque_codigo REFETUFURN PYC LLAVEC
    (19) declarar_main -> . declarar_main_error
    (14) declarar_funciones -> . FUNCTION tipo_dato ID PA tipo_dato ID PC LLAVEA bloque_codigo REFETUFURN ID PYC LLAVEC
    (15) declarar_funciones -> . FUNCTION tipo_dato ID PA PC LLAVEA bloque_codigo REFETUFURN ID PYC LLAVEC
    (16) declarar_funciones -> . FUNCTION tipo_dato ID PA PC LLAVEA bloque_codigo REFETUFURN PYC LLAVEC
    (17) declarar_funciones -> . FUNCTION tipo_dato ID PA tipo_dato ID COMA tipo_dato ID PC LLAVEA bloque_codigo REFETUFURN ID PYC LLAVEC
    (20) declarar_main_error -> . MAFAIFIN PA PC LLAVEA bloque_codigo REFETUFURN PYC LLAVEC
    (21) declarar_main_error -> . IFINT MAFAIFIN PA PC LLAVEA bloque_codigo LLAVEC
    (22) declarar_main_error -> . MAFAIFIN PA PC LLAVEA bloque_codigo LLAVEC
    (23) declarar_main_error -> . IFINT PA PC LLAVEA bloque_codigo REFETUFURN PYC LLAVEC
    (24) declarar_main_error -> . IFINT ID PA PC LLAVEA bloque_codigo REFETUFURN PYC LLAVEC

    IFINT           shift and go to state 9
    FUNCTION        shift and go to state 8
    MAFAIFIN        shift and go to state 10

    declarar_main                  shift and go to state 12
    declarar_funciones             shift and go to state 13
    declarar_main_error            shift and go to state 11

state 3

    (4) start -> declarar_main .

    $end            reduce using rule 4 (start -> declarar_main .)


state 4

    (2) start -> declarar_funciones . declarar_main
    (18) declarar_main -> . IFINT MAFAIFIN PA PC LLAVEA bloque_codigo REFETUFURN PYC LLAVEC
    (19) declarar_main -> . declarar_main_error
    (20) declarar_main_error -> . MAFAIFIN PA PC LLAVEA bloque_codigo REFETUFURN PYC LLAVEC
    (21) declarar_main_error -> . IFINT MAFAIFIN PA PC LLAVEA bloque_codigo LLAVEC
    (22) declarar_main_error -> . MAFAIFIN PA PC LLAVEA bloque_codigo LLAVEC
    (23) declarar_main_error -> . IFINT PA PC LLAVEA bloque_codigo REFETUFURN PYC LLAVEC
    (24) declarar_main_error -> . IFINT ID PA PC LLAVEA bloque_codigo REFETUFURN PYC LLAVEC

    IFINT           shift and go to state 9
    MAFAIFIN        shift and go to state 10

    declarar_main                  shift and go to state 14
    declarar_main_error            shift and go to state 11

state 5

    (5) declarar_estructuras -> STRUFUCT . ID LLAVEA tipo_dato ID PYC tipo_dato ID PYC LLAVEC
    (9) declarar_estructuras_error -> STRUFUCT . ID LLAVEA tipo_dato PYC tipo_dato ID PYC LLAVEC
    (10) declarar_estructuras_error -> STRUFUCT . ID LLAVEA tipo_dato ID PYC tipo_dato PYC LLAVEC
    (11) declarar_estructuras_error -> STRUFUCT . ID LLAVEA tipo_dato PYC tipo_dato PYC LLAVEC
    (12) declarar_estructuras_error -> STRUFUCT . ID LLAVEA ID PYC ID PYC LLAVEC
    (13) declarar_estructuras_error -> STRUFUCT . ID LLAVEA tipo_dato ID PYC tipo_dato ID PYC tipo_dato ID PYC LLAVEC

    ID              shift and go to state 15


state 6

    (7) declarar_estructuras_error -> ID . LLAVEA tipo_dato ID PYC tipo_dato ID PYC LLAVEC
    (8) declarar_estructuras_error -> ID . ID LLAVEA tipo_dato ID PYC tipo_dato ID PYC LLAVEC

    LLAVEA          shift and go to state 17
    ID              shift and go to state 16


state 7

    (6) declarar_estructuras -> declarar_estructuras_error .

    IFINT           reduce using rule 6 (declarar_estructuras -> declarar_estructuras_error .)
    FUNCTION        reduce using rule 6 (declarar_estructuras -> declarar_estructuras_error .)
    MAFAIFIN        reduce using rule 6 (declarar_estructuras -> declarar_estructuras_error .)


state 8

    (14) declarar_funciones -> FUNCTION . tipo_dato ID PA tipo_dato ID PC LLAVEA bloque_codigo REFETUFURN ID PYC LLAVEC
    (15) declarar_funciones -> FUNCTION . tipo_dato ID PA PC LLAVEA bloque_codigo REFETUFURN ID PYC LLAVEC
    (16) declarar_funciones -> FUNCTION . tipo_dato ID PA PC LLAVEA bloque_codigo REFETUFURN PYC LLAVEC
    (17) declarar_funciones -> FUNCTION . tipo_dato ID PA tipo_dato ID COMA tipo_dato ID PC LLAVEA bloque_codigo REFETUFURN ID PYC LLAVEC
    (25) tipo_dato -> . IFINT
    (26) tipo_dato -> . STRIFING
    (27) tipo_dato -> . AFARRAFAY
    (28) tipo_dato -> . STRUFUCT
    (29) tipo_dato -> . VOFOIFID
    (30) tipo_dato -> . CHAFAR
    (31) tipo_dato -> . BOFOOFOL
    (32) tipo_dato -> . FLOFOAFAT

    IFINT           shift and go to state 19
    STRIFING        shift and go to state 20
    AFARRAFAY       shift and go to state 21
    STRUFUCT        shift and go to state 22
    VOFOIFID        shift and go to state 23
    CHAFAR          shift and go to state 24
    BOFOOFOL        shift and go to state 25
    FLOFOAFAT       shift and go to state 26

    tipo_dato                      shift and go to state 18

state 9

    (18) declarar_main -> IFINT . MAFAIFIN PA PC LLAVEA bloque_codigo REFETUFURN PYC LLAVEC
    (21) declarar_main_error -> IFINT . MAFAIFIN PA PC LLAVEA bloque_codigo LLAVEC
    (23) declarar_main_error -> IFINT . PA PC LLAVEA bloque_codigo REFETUFURN PYC LLAVEC
    (24) declarar_main_error -> IFINT . ID PA PC LLAVEA bloque_codigo REFETUFURN PYC LLAVEC

    MAFAIFIN        shift and go to state 27
    PA              shift and go to state 28
    ID              shift and go to state 29


state 10

    (20) declarar_main_error -> MAFAIFIN . PA PC LLAVEA bloque_codigo REFETUFURN PYC LLAVEC
    (22) declarar_main_error -> MAFAIFIN . PA PC LLAVEA bloque_codigo LLAVEC

    PA              shift and go to state 30


state 11

    (19) declarar_main -> declarar_main_error .

    $end            reduce using rule 19 (declarar_main -> declarar_main_error .)


state 12

    (1) start -> declarar_estructuras declarar_main .

    $end            reduce using rule 1 (start -> declarar_estructuras declarar_main .)


state 13

    (3) start -> declarar_estructuras declarar_funciones . declarar_main
    (18) declarar_main -> . IFINT MAFAIFIN PA PC LLAVEA bloque_codigo REFETUFURN PYC LLAVEC
    (19) declarar_main -> . declarar_main_error
    (20) declarar_main_error -> . MAFAIFIN PA PC LLAVEA bloque_codigo REFETUFURN PYC LLAVEC
    (21) declarar_main_error -> . IFINT MAFAIFIN PA PC LLAVEA bloque_codigo LLAVEC
    (22) declarar_main_error -> . MAFAIFIN PA PC LLAVEA bloque_codigo LLAVEC
    (23) declarar_main_error -> . IFINT PA PC LLAVEA bloque_codigo REFETUFURN PYC LLAVEC
    (24) declarar_main_error -> . IFINT ID PA PC LLAVEA bloque_codigo REFETUFURN PYC LLAVEC

    IFINT           shift and go to state 9
    MAFAIFIN        shift and go to state 10

    declarar_main                  shift and go to state 31
    declarar_main_error            shift and go to state 11

state 14

    (2) start -> declarar_funciones declarar_main .

    $end            reduce using rule 2 (start -> declarar_funciones declarar_main .)


state 15

    (5) declarar_estructuras -> STRUFUCT ID . LLAVEA tipo_dato ID PYC tipo_dato ID PYC LLAVEC
    (9) declarar_estructuras_error -> STRUFUCT ID . LLAVEA tipo_dato PYC tipo_dato ID PYC LLAVEC
    (10) declarar_estructuras_error -> STRUFUCT ID . LLAVEA tipo_dato ID PYC tipo_dato PYC LLAVEC
    (11) declarar_estructuras_error -> STRUFUCT ID . LLAVEA tipo_dato PYC tipo_dato PYC LLAVEC
    (12) declarar_estructuras_error -> STRUFUCT ID . LLAVEA ID PYC ID PYC LLAVEC
    (13) declarar_estructuras_error -> STRUFUCT ID . LLAVEA tipo_dato ID PYC tipo_dato ID PYC tipo_dato ID PYC LLAVEC

    LLAVEA          shift and go to state 32


state 16

    (8) declarar_estructuras_error -> ID ID . LLAVEA tipo_dato ID PYC tipo_dato ID PYC LLAVEC

    LLAVEA          shift and go to state 33


state 17

    (7) declarar_estructuras_error -> ID LLAVEA . tipo_dato ID PYC tipo_dato ID PYC LLAVEC
    (25) tipo_dato -> . IFINT
    (26) tipo_dato -> . STRIFING
    (27) tipo_dato -> . AFARRAFAY
    (28) tipo_dato -> . STRUFUCT
    (29) tipo_dato -> . VOFOIFID
    (30) tipo_dato -> . CHAFAR
    (31) tipo_dato -> . BOFOOFOL
    (32) tipo_dato -> . FLOFOAFAT

    IFINT           shift and go to state 19
    STRIFING        shift and go to state 20
    AFARRAFAY       shift and go to state 21
    STRUFUCT        shift and go to state 22
    VOFOIFID        shift and go to state 23
    CHAFAR          shift and go to state 24
    BOFOOFOL        shift and go to state 25
    FLOFOAFAT       shift and go to state 26

    tipo_dato                      shift and go to state 34

state 18

    (14) declarar_funciones -> FUNCTION tipo_dato . ID PA tipo_dato ID PC LLAVEA bloque_codigo REFETUFURN ID PYC LLAVEC
    (15) declarar_funciones -> FUNCTION tipo_dato . ID PA PC LLAVEA bloque_codigo REFETUFURN ID PYC LLAVEC
    (16) declarar_funciones -> FUNCTION tipo_dato . ID PA PC LLAVEA bloque_codigo REFETUFURN PYC LLAVEC
    (17) declarar_funciones -> FUNCTION tipo_dato . ID PA tipo_dato ID COMA tipo_dato ID PC LLAVEA bloque_codigo REFETUFURN ID PYC LLAVEC

    ID              shift and go to state 35


state 19

    (25) tipo_dato -> IFINT .

    ID              reduce using rule 25 (tipo_dato -> IFINT .)
    PYC             reduce using rule 25 (tipo_dato -> IFINT .)


state 20

    (26) tipo_dato -> STRIFING .

    ID              reduce using rule 26 (tipo_dato -> STRIFING .)
    PYC             reduce using rule 26 (tipo_dato -> STRIFING .)


state 21

    (27) tipo_dato -> AFARRAFAY .

    ID              reduce using rule 27 (tipo_dato -> AFARRAFAY .)
    PYC             reduce using rule 27 (tipo_dato -> AFARRAFAY .)


state 22

    (28) tipo_dato -> STRUFUCT .

    ID              reduce using rule 28 (tipo_dato -> STRUFUCT .)
    PYC             reduce using rule 28 (tipo_dato -> STRUFUCT .)


state 23

    (29) tipo_dato -> VOFOIFID .

    ID              reduce using rule 29 (tipo_dato -> VOFOIFID .)
    PYC             reduce using rule 29 (tipo_dato -> VOFOIFID .)


state 24

    (30) tipo_dato -> CHAFAR .

    ID              reduce using rule 30 (tipo_dato -> CHAFAR .)
    PYC             reduce using rule 30 (tipo_dato -> CHAFAR .)


state 25

    (31) tipo_dato -> BOFOOFOL .

    ID              reduce using rule 31 (tipo_dato -> BOFOOFOL .)
    PYC             reduce using rule 31 (tipo_dato -> BOFOOFOL .)


state 26

    (32) tipo_dato -> FLOFOAFAT .

    ID              reduce using rule 32 (tipo_dato -> FLOFOAFAT .)
    PYC             reduce using rule 32 (tipo_dato -> FLOFOAFAT .)


state 27

    (18) declarar_main -> IFINT MAFAIFIN . PA PC LLAVEA bloque_codigo REFETUFURN PYC LLAVEC
    (21) declarar_main_error -> IFINT MAFAIFIN . PA PC LLAVEA bloque_codigo LLAVEC

    PA              shift and go to state 36


state 28

    (23) declarar_main_error -> IFINT PA . PC LLAVEA bloque_codigo REFETUFURN PYC LLAVEC

    PC              shift and go to state 37


state 29

    (24) declarar_main_error -> IFINT ID . PA PC LLAVEA bloque_codigo REFETUFURN PYC LLAVEC

    PA              shift and go to state 38


state 30

    (20) declarar_main_error -> MAFAIFIN PA . PC LLAVEA bloque_codigo REFETUFURN PYC LLAVEC
    (22) declarar_main_error -> MAFAIFIN PA . PC LLAVEA bloque_codigo LLAVEC

    PC              shift and go to state 39


state 31

    (3) start -> declarar_estructuras declarar_funciones declarar_main .

    $end            reduce using rule 3 (start -> declarar_estructuras declarar_funciones declarar_main .)


state 32

    (5) declarar_estructuras -> STRUFUCT ID LLAVEA . tipo_dato ID PYC tipo_dato ID PYC LLAVEC
    (9) declarar_estructuras_error -> STRUFUCT ID LLAVEA . tipo_dato PYC tipo_dato ID PYC LLAVEC
    (10) declarar_estructuras_error -> STRUFUCT ID LLAVEA . tipo_dato ID PYC tipo_dato PYC LLAVEC
    (11) declarar_estructuras_error -> STRUFUCT ID LLAVEA . tipo_dato PYC tipo_dato PYC LLAVEC
    (12) declarar_estructuras_error -> STRUFUCT ID LLAVEA . ID PYC ID PYC LLAVEC
    (13) declarar_estructuras_error -> STRUFUCT ID LLAVEA . tipo_dato ID PYC tipo_dato ID PYC tipo_dato ID PYC LLAVEC
    (25) tipo_dato -> . IFINT
    (26) tipo_dato -> . STRIFING
    (27) tipo_dato -> . AFARRAFAY
    (28) tipo_dato -> . STRUFUCT
    (29) tipo_dato -> . VOFOIFID
    (30) tipo_dato -> . CHAFAR
    (31) tipo_dato -> . BOFOOFOL
    (32) tipo_dato -> . FLOFOAFAT

    ID              shift and go to state 40
    IFINT           shift and go to state 19
    STRIFING        shift and go to state 20
    AFARRAFAY       shift and go to state 21
    STRUFUCT        shift and go to state 22
    VOFOIFID        shift and go to state 23
    CHAFAR          shift and go to state 24
    BOFOOFOL        shift and go to state 25
    FLOFOAFAT       shift and go to state 26

    tipo_dato                      shift and go to state 41

state 33

    (8) declarar_estructuras_error -> ID ID LLAVEA . tipo_dato ID PYC tipo_dato ID PYC LLAVEC
    (25) tipo_dato -> . IFINT
    (26) tipo_dato -> . STRIFING
    (27) tipo_dato -> . AFARRAFAY
    (28) tipo_dato -> . STRUFUCT
    (29) tipo_dato -> . VOFOIFID
    (30) tipo_dato -> . CHAFAR
    (31) tipo_dato -> . BOFOOFOL
    (32) tipo_dato -> . FLOFOAFAT

    IFINT           shift and go to state 19
    STRIFING        shift and go to state 20
    AFARRAFAY       shift and go to state 21
    STRUFUCT        shift and go to state 22
    VOFOIFID        shift and go to state 23
    CHAFAR          shift and go to state 24
    BOFOOFOL        shift and go to state 25
    FLOFOAFAT       shift and go to state 26

    tipo_dato                      shift and go to state 42

state 34

    (7) declarar_estructuras_error -> ID LLAVEA tipo_dato . ID PYC tipo_dato ID PYC LLAVEC

    ID              shift and go to state 43


state 35

    (14) declarar_funciones -> FUNCTION tipo_dato ID . PA tipo_dato ID PC LLAVEA bloque_codigo REFETUFURN ID PYC LLAVEC
    (15) declarar_funciones -> FUNCTION tipo_dato ID . PA PC LLAVEA bloque_codigo REFETUFURN ID PYC LLAVEC
    (16) declarar_funciones -> FUNCTION tipo_dato ID . PA PC LLAVEA bloque_codigo REFETUFURN PYC LLAVEC
    (17) declarar_funciones -> FUNCTION tipo_dato ID . PA tipo_dato ID COMA tipo_dato ID PC LLAVEA bloque_codigo REFETUFURN ID PYC LLAVEC

    PA              shift and go to state 44


state 36

    (18) declarar_main -> IFINT MAFAIFIN PA . PC LLAVEA bloque_codigo REFETUFURN PYC LLAVEC
    (21) declarar_main_error -> IFINT MAFAIFIN PA . PC LLAVEA bloque_codigo LLAVEC

    PC              shift and go to state 45


state 37

    (23) declarar_main_error -> IFINT PA PC . LLAVEA bloque_codigo REFETUFURN PYC LLAVEC

    LLAVEA          shift and go to state 46


state 38

    (24) declarar_main_error -> IFINT ID PA . PC LLAVEA bloque_codigo REFETUFURN PYC LLAVEC

    PC              shift and go to state 47


state 39

    (20) declarar_main_error -> MAFAIFIN PA PC . LLAVEA bloque_codigo REFETUFURN PYC LLAVEC
    (22) declarar_main_error -> MAFAIFIN PA PC . LLAVEA bloque_codigo LLAVEC

    LLAVEA          shift and go to state 48


state 40

    (12) declarar_estructuras_error -> STRUFUCT ID LLAVEA ID . PYC ID PYC LLAVEC

    PYC             shift and go to state 49


state 41

    (5) declarar_estructuras -> STRUFUCT ID LLAVEA tipo_dato . ID PYC tipo_dato ID PYC LLAVEC
    (9) declarar_estructuras_error -> STRUFUCT ID LLAVEA tipo_dato . PYC tipo_dato ID PYC LLAVEC
    (10) declarar_estructuras_error -> STRUFUCT ID LLAVEA tipo_dato . ID PYC tipo_dato PYC LLAVEC
    (11) declarar_estructuras_error -> STRUFUCT ID LLAVEA tipo_dato . PYC tipo_dato PYC LLAVEC
    (13) declarar_estructuras_error -> STRUFUCT ID LLAVEA tipo_dato . ID PYC tipo_dato ID PYC tipo_dato ID PYC LLAVEC

    ID              shift and go to state 50
    PYC             shift and go to state 51


state 42

    (8) declarar_estructuras_error -> ID ID LLAVEA tipo_dato . ID PYC tipo_dato ID PYC LLAVEC

    ID              shift and go to state 52


state 43

    (7) declarar_estructuras_error -> ID LLAVEA tipo_dato ID . PYC tipo_dato ID PYC LLAVEC

    PYC             shift and go to state 53


state 44

    (14) declarar_funciones -> FUNCTION tipo_dato ID PA . tipo_dato ID PC LLAVEA bloque_codigo REFETUFURN ID PYC LLAVEC
    (15) declarar_funciones -> FUNCTION tipo_dato ID PA . PC LLAVEA bloque_codigo REFETUFURN ID PYC LLAVEC
    (16) declarar_funciones -> FUNCTION tipo_dato ID PA . PC LLAVEA bloque_codigo REFETUFURN PYC LLAVEC
    (17) declarar_funciones -> FUNCTION tipo_dato ID PA . tipo_dato ID COMA tipo_dato ID PC LLAVEA bloque_codigo REFETUFURN ID PYC LLAVEC
    (25) tipo_dato -> . IFINT
    (26) tipo_dato -> . STRIFING
    (27) tipo_dato -> . AFARRAFAY
    (28) tipo_dato -> . STRUFUCT
    (29) tipo_dato -> . VOFOIFID
    (30) tipo_dato -> . CHAFAR
    (31) tipo_dato -> . BOFOOFOL
    (32) tipo_dato -> . FLOFOAFAT

    PC              shift and go to state 55
    IFINT           shift and go to state 19
    STRIFING        shift and go to state 20
    AFARRAFAY       shift and go to state 21
    STRUFUCT        shift and go to state 22
    VOFOIFID        shift and go to state 23
    CHAFAR          shift and go to state 24
    BOFOOFOL        shift and go to state 25
    FLOFOAFAT       shift and go to state 26

    tipo_dato                      shift and go to state 54

state 45

    (18) declarar_main -> IFINT MAFAIFIN PA PC . LLAVEA bloque_codigo REFETUFURN PYC LLAVEC
    (21) declarar_main_error -> IFINT MAFAIFIN PA PC . LLAVEA bloque_codigo LLAVEC

    LLAVEA          shift and go to state 56


state 46

    (23) declarar_main_error -> IFINT PA PC LLAVEA . bloque_codigo REFETUFURN PYC LLAVEC
    (33) bloque_codigo -> . declarar_if bloque_codigo
    (34) bloque_codigo -> . declaracion bloque_codigo
    (35) bloque_codigo -> . asignar_estructuras bloque_codigo
    (36) bloque_codigo -> . asignar_array bloque_codigo
    (37) bloque_codigo -> . funcion bloque_codigo
    (38) bloque_codigo -> . print bloque_codigo
    (39) bloque_codigo -> . input bloque_codigo
    (40) bloque_codigo -> . declaracion_while bloque_codigo
    (41) bloque_codigo -> . VACIO
    (42) declarar_if -> . IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC
    (43) declarar_if -> . IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE LLAVEA bloque_codigo LLAVEC
    (44) declarar_if -> . declarar_if_error_llave
    (47) declaracion -> . tipo_dato ID ASG ID operacion_matematica ID PYC
    (48) declaracion -> . tipo_dato ID ASG dato PYC
    (49) declaracion -> . AFARRAFAY ID dimensiones PYC
    (50) declaracion -> . declaracion_error
    (63) asignar_estructuras -> . ID PUNTO ID ASG dato PYC
    (62) asignar_array -> . ID dimensiones ASG dato PYC
    (64) funcion -> . ID PA valores PC PYC
    (65) funcion -> . ID PA PC PYC
    (66) funcion -> . ID PA valores COMA valores PC PYC
    (67) print -> . PRIFINT PA ID PC PYC
    (68) input -> . IFINPUFUT PA ID PC PYC
    (69) declaracion_while -> . WHIFILEFE PA condicion PC LLAVEA bloque_codigo LLAVEC
    (70) declaracion_while -> . declaracion_while_error
    (45) declarar_if_error_llave -> . IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE LLAVEA bloque_codigo
    (46) declarar_if_error_llave -> . IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE bloque_codigo LLAVEC
    (25) tipo_dato -> . IFINT
    (26) tipo_dato -> . STRIFING
    (27) tipo_dato -> . AFARRAFAY
    (28) tipo_dato -> . STRUFUCT
    (29) tipo_dato -> . VOFOIFID
    (30) tipo_dato -> . CHAFAR
    (31) tipo_dato -> . BOFOOFOL
    (32) tipo_dato -> . FLOFOAFAT
    (51) declaracion_error -> . ID PYC
    (52) declaracion_error -> . ID ASG ID operacion_matematica ID PYC
    (53) declaracion_error -> . ID ASG valores PYC
    (54) declaracion_error -> . ID ID PYC
    (55) declaracion_error -> . ID ID ASG ID operacion_matematica ID PYC
    (56) declaracion_error -> . ID ID ASG valores PYC
    (57) declaracion_error -> . ID ID dimensiones PYC
    (58) declaracion_error -> . ID dimensiones PYC
    (71) declaracion_while_error -> . PA condicion PC LLAVEA bloque_codigo LLAVEC
    (72) declaracion_while_error -> . ID PA condicion PC LLAVEA bloque_codigo LLAVEC
    (73) declaracion_while_error -> . WHIFILEFE PA condicion PC bloque_codigo LLAVEC
    (74) declaracion_while_error -> . WHIFILEFE PA condicion PC LLAVEA bloque_codigo

    VACIO           shift and go to state 67
    IFIF            shift and go to state 68
    AFARRAFAY       shift and go to state 72
    ID              shift and go to state 71
    PRIFINT         shift and go to state 74
    IFINPUFUT       shift and go to state 75
    WHIFILEFE       shift and go to state 76
    IFINT           shift and go to state 19
    STRIFING        shift and go to state 20
    STRUFUCT        shift and go to state 22
    VOFOIFID        shift and go to state 23
    CHAFAR          shift and go to state 24
    BOFOOFOL        shift and go to state 25
    FLOFOAFAT       shift and go to state 26
    PA              shift and go to state 57

    bloque_codigo                  shift and go to state 58
    declarar_if                    shift and go to state 59
    declaracion                    shift and go to state 60
    asignar_estructuras            shift and go to state 61
    asignar_array                  shift and go to state 62
    funcion                        shift and go to state 63
    print                          shift and go to state 64
    input                          shift and go to state 65
    declaracion_while              shift and go to state 66
    declarar_if_error_llave        shift and go to state 69
    tipo_dato                      shift and go to state 70
    declaracion_error              shift and go to state 73
    declaracion_while_error        shift and go to state 77

state 47

    (24) declarar_main_error -> IFINT ID PA PC . LLAVEA bloque_codigo REFETUFURN PYC LLAVEC

    LLAVEA          shift and go to state 78


state 48

    (20) declarar_main_error -> MAFAIFIN PA PC LLAVEA . bloque_codigo REFETUFURN PYC LLAVEC
    (22) declarar_main_error -> MAFAIFIN PA PC LLAVEA . bloque_codigo LLAVEC
    (33) bloque_codigo -> . declarar_if bloque_codigo
    (34) bloque_codigo -> . declaracion bloque_codigo
    (35) bloque_codigo -> . asignar_estructuras bloque_codigo
    (36) bloque_codigo -> . asignar_array bloque_codigo
    (37) bloque_codigo -> . funcion bloque_codigo
    (38) bloque_codigo -> . print bloque_codigo
    (39) bloque_codigo -> . input bloque_codigo
    (40) bloque_codigo -> . declaracion_while bloque_codigo
    (41) bloque_codigo -> . VACIO
    (42) declarar_if -> . IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC
    (43) declarar_if -> . IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE LLAVEA bloque_codigo LLAVEC
    (44) declarar_if -> . declarar_if_error_llave
    (47) declaracion -> . tipo_dato ID ASG ID operacion_matematica ID PYC
    (48) declaracion -> . tipo_dato ID ASG dato PYC
    (49) declaracion -> . AFARRAFAY ID dimensiones PYC
    (50) declaracion -> . declaracion_error
    (63) asignar_estructuras -> . ID PUNTO ID ASG dato PYC
    (62) asignar_array -> . ID dimensiones ASG dato PYC
    (64) funcion -> . ID PA valores PC PYC
    (65) funcion -> . ID PA PC PYC
    (66) funcion -> . ID PA valores COMA valores PC PYC
    (67) print -> . PRIFINT PA ID PC PYC
    (68) input -> . IFINPUFUT PA ID PC PYC
    (69) declaracion_while -> . WHIFILEFE PA condicion PC LLAVEA bloque_codigo LLAVEC
    (70) declaracion_while -> . declaracion_while_error
    (45) declarar_if_error_llave -> . IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE LLAVEA bloque_codigo
    (46) declarar_if_error_llave -> . IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE bloque_codigo LLAVEC
    (25) tipo_dato -> . IFINT
    (26) tipo_dato -> . STRIFING
    (27) tipo_dato -> . AFARRAFAY
    (28) tipo_dato -> . STRUFUCT
    (29) tipo_dato -> . VOFOIFID
    (30) tipo_dato -> . CHAFAR
    (31) tipo_dato -> . BOFOOFOL
    (32) tipo_dato -> . FLOFOAFAT
    (51) declaracion_error -> . ID PYC
    (52) declaracion_error -> . ID ASG ID operacion_matematica ID PYC
    (53) declaracion_error -> . ID ASG valores PYC
    (54) declaracion_error -> . ID ID PYC
    (55) declaracion_error -> . ID ID ASG ID operacion_matematica ID PYC
    (56) declaracion_error -> . ID ID ASG valores PYC
    (57) declaracion_error -> . ID ID dimensiones PYC
    (58) declaracion_error -> . ID dimensiones PYC
    (71) declaracion_while_error -> . PA condicion PC LLAVEA bloque_codigo LLAVEC
    (72) declaracion_while_error -> . ID PA condicion PC LLAVEA bloque_codigo LLAVEC
    (73) declaracion_while_error -> . WHIFILEFE PA condicion PC bloque_codigo LLAVEC
    (74) declaracion_while_error -> . WHIFILEFE PA condicion PC LLAVEA bloque_codigo

    VACIO           shift and go to state 67
    IFIF            shift and go to state 68
    AFARRAFAY       shift and go to state 72
    ID              shift and go to state 71
    PRIFINT         shift and go to state 74
    IFINPUFUT       shift and go to state 75
    WHIFILEFE       shift and go to state 76
    IFINT           shift and go to state 19
    STRIFING        shift and go to state 20
    STRUFUCT        shift and go to state 22
    VOFOIFID        shift and go to state 23
    CHAFAR          shift and go to state 24
    BOFOOFOL        shift and go to state 25
    FLOFOAFAT       shift and go to state 26
    PA              shift and go to state 57

    bloque_codigo                  shift and go to state 79
    declarar_if                    shift and go to state 59
    declaracion                    shift and go to state 60
    asignar_estructuras            shift and go to state 61
    asignar_array                  shift and go to state 62
    funcion                        shift and go to state 63
    print                          shift and go to state 64
    input                          shift and go to state 65
    declaracion_while              shift and go to state 66
    declarar_if_error_llave        shift and go to state 69
    tipo_dato                      shift and go to state 70
    declaracion_error              shift and go to state 73
    declaracion_while_error        shift and go to state 77

state 49

    (12) declarar_estructuras_error -> STRUFUCT ID LLAVEA ID PYC . ID PYC LLAVEC

    ID              shift and go to state 80


state 50

    (5) declarar_estructuras -> STRUFUCT ID LLAVEA tipo_dato ID . PYC tipo_dato ID PYC LLAVEC
    (10) declarar_estructuras_error -> STRUFUCT ID LLAVEA tipo_dato ID . PYC tipo_dato PYC LLAVEC
    (13) declarar_estructuras_error -> STRUFUCT ID LLAVEA tipo_dato ID . PYC tipo_dato ID PYC tipo_dato ID PYC LLAVEC

    PYC             shift and go to state 81


state 51

    (9) declarar_estructuras_error -> STRUFUCT ID LLAVEA tipo_dato PYC . tipo_dato ID PYC LLAVEC
    (11) declarar_estructuras_error -> STRUFUCT ID LLAVEA tipo_dato PYC . tipo_dato PYC LLAVEC
    (25) tipo_dato -> . IFINT
    (26) tipo_dato -> . STRIFING
    (27) tipo_dato -> . AFARRAFAY
    (28) tipo_dato -> . STRUFUCT
    (29) tipo_dato -> . VOFOIFID
    (30) tipo_dato -> . CHAFAR
    (31) tipo_dato -> . BOFOOFOL
    (32) tipo_dato -> . FLOFOAFAT

    IFINT           shift and go to state 19
    STRIFING        shift and go to state 20
    AFARRAFAY       shift and go to state 21
    STRUFUCT        shift and go to state 22
    VOFOIFID        shift and go to state 23
    CHAFAR          shift and go to state 24
    BOFOOFOL        shift and go to state 25
    FLOFOAFAT       shift and go to state 26

    tipo_dato                      shift and go to state 82

state 52

    (8) declarar_estructuras_error -> ID ID LLAVEA tipo_dato ID . PYC tipo_dato ID PYC LLAVEC

    PYC             shift and go to state 83


state 53

    (7) declarar_estructuras_error -> ID LLAVEA tipo_dato ID PYC . tipo_dato ID PYC LLAVEC
    (25) tipo_dato -> . IFINT
    (26) tipo_dato -> . STRIFING
    (27) tipo_dato -> . AFARRAFAY
    (28) tipo_dato -> . STRUFUCT
    (29) tipo_dato -> . VOFOIFID
    (30) tipo_dato -> . CHAFAR
    (31) tipo_dato -> . BOFOOFOL
    (32) tipo_dato -> . FLOFOAFAT

    IFINT           shift and go to state 19
    STRIFING        shift and go to state 20
    AFARRAFAY       shift and go to state 21
    STRUFUCT        shift and go to state 22
    VOFOIFID        shift and go to state 23
    CHAFAR          shift and go to state 24
    BOFOOFOL        shift and go to state 25
    FLOFOAFAT       shift and go to state 26

    tipo_dato                      shift and go to state 84

state 54

    (14) declarar_funciones -> FUNCTION tipo_dato ID PA tipo_dato . ID PC LLAVEA bloque_codigo REFETUFURN ID PYC LLAVEC
    (17) declarar_funciones -> FUNCTION tipo_dato ID PA tipo_dato . ID COMA tipo_dato ID PC LLAVEA bloque_codigo REFETUFURN ID PYC LLAVEC

    ID              shift and go to state 85


state 55

    (15) declarar_funciones -> FUNCTION tipo_dato ID PA PC . LLAVEA bloque_codigo REFETUFURN ID PYC LLAVEC
    (16) declarar_funciones -> FUNCTION tipo_dato ID PA PC . LLAVEA bloque_codigo REFETUFURN PYC LLAVEC

    LLAVEA          shift and go to state 86


state 56

    (18) declarar_main -> IFINT MAFAIFIN PA PC LLAVEA . bloque_codigo REFETUFURN PYC LLAVEC
    (21) declarar_main_error -> IFINT MAFAIFIN PA PC LLAVEA . bloque_codigo LLAVEC
    (33) bloque_codigo -> . declarar_if bloque_codigo
    (34) bloque_codigo -> . declaracion bloque_codigo
    (35) bloque_codigo -> . asignar_estructuras bloque_codigo
    (36) bloque_codigo -> . asignar_array bloque_codigo
    (37) bloque_codigo -> . funcion bloque_codigo
    (38) bloque_codigo -> . print bloque_codigo
    (39) bloque_codigo -> . input bloque_codigo
    (40) bloque_codigo -> . declaracion_while bloque_codigo
    (41) bloque_codigo -> . VACIO
    (42) declarar_if -> . IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC
    (43) declarar_if -> . IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE LLAVEA bloque_codigo LLAVEC
    (44) declarar_if -> . declarar_if_error_llave
    (47) declaracion -> . tipo_dato ID ASG ID operacion_matematica ID PYC
    (48) declaracion -> . tipo_dato ID ASG dato PYC
    (49) declaracion -> . AFARRAFAY ID dimensiones PYC
    (50) declaracion -> . declaracion_error
    (63) asignar_estructuras -> . ID PUNTO ID ASG dato PYC
    (62) asignar_array -> . ID dimensiones ASG dato PYC
    (64) funcion -> . ID PA valores PC PYC
    (65) funcion -> . ID PA PC PYC
    (66) funcion -> . ID PA valores COMA valores PC PYC
    (67) print -> . PRIFINT PA ID PC PYC
    (68) input -> . IFINPUFUT PA ID PC PYC
    (69) declaracion_while -> . WHIFILEFE PA condicion PC LLAVEA bloque_codigo LLAVEC
    (70) declaracion_while -> . declaracion_while_error
    (45) declarar_if_error_llave -> . IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE LLAVEA bloque_codigo
    (46) declarar_if_error_llave -> . IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE bloque_codigo LLAVEC
    (25) tipo_dato -> . IFINT
    (26) tipo_dato -> . STRIFING
    (27) tipo_dato -> . AFARRAFAY
    (28) tipo_dato -> . STRUFUCT
    (29) tipo_dato -> . VOFOIFID
    (30) tipo_dato -> . CHAFAR
    (31) tipo_dato -> . BOFOOFOL
    (32) tipo_dato -> . FLOFOAFAT
    (51) declaracion_error -> . ID PYC
    (52) declaracion_error -> . ID ASG ID operacion_matematica ID PYC
    (53) declaracion_error -> . ID ASG valores PYC
    (54) declaracion_error -> . ID ID PYC
    (55) declaracion_error -> . ID ID ASG ID operacion_matematica ID PYC
    (56) declaracion_error -> . ID ID ASG valores PYC
    (57) declaracion_error -> . ID ID dimensiones PYC
    (58) declaracion_error -> . ID dimensiones PYC
    (71) declaracion_while_error -> . PA condicion PC LLAVEA bloque_codigo LLAVEC
    (72) declaracion_while_error -> . ID PA condicion PC LLAVEA bloque_codigo LLAVEC
    (73) declaracion_while_error -> . WHIFILEFE PA condicion PC bloque_codigo LLAVEC
    (74) declaracion_while_error -> . WHIFILEFE PA condicion PC LLAVEA bloque_codigo

    VACIO           shift and go to state 67
    IFIF            shift and go to state 68
    AFARRAFAY       shift and go to state 72
    ID              shift and go to state 71
    PRIFINT         shift and go to state 74
    IFINPUFUT       shift and go to state 75
    WHIFILEFE       shift and go to state 76
    IFINT           shift and go to state 19
    STRIFING        shift and go to state 20
    STRUFUCT        shift and go to state 22
    VOFOIFID        shift and go to state 23
    CHAFAR          shift and go to state 24
    BOFOOFOL        shift and go to state 25
    FLOFOAFAT       shift and go to state 26
    PA              shift and go to state 57

    bloque_codigo                  shift and go to state 87
    declarar_if                    shift and go to state 59
    declaracion                    shift and go to state 60
    asignar_estructuras            shift and go to state 61
    asignar_array                  shift and go to state 62
    funcion                        shift and go to state 63
    print                          shift and go to state 64
    input                          shift and go to state 65
    declaracion_while              shift and go to state 66
    declarar_if_error_llave        shift and go to state 69
    tipo_dato                      shift and go to state 70
    declaracion_error              shift and go to state 73
    declaracion_while_error        shift and go to state 77

state 57

    (71) declaracion_while_error -> PA . condicion PC LLAVEA bloque_codigo LLAVEC
    (75) condicion -> . ID operadores ID

    ID              shift and go to state 89

    condicion                      shift and go to state 88

state 58

    (23) declarar_main_error -> IFINT PA PC LLAVEA bloque_codigo . REFETUFURN PYC LLAVEC

    REFETUFURN      shift and go to state 90


state 59

    (33) bloque_codigo -> declarar_if . bloque_codigo
    (33) bloque_codigo -> . declarar_if bloque_codigo
    (34) bloque_codigo -> . declaracion bloque_codigo
    (35) bloque_codigo -> . asignar_estructuras bloque_codigo
    (36) bloque_codigo -> . asignar_array bloque_codigo
    (37) bloque_codigo -> . funcion bloque_codigo
    (38) bloque_codigo -> . print bloque_codigo
    (39) bloque_codigo -> . input bloque_codigo
    (40) bloque_codigo -> . declaracion_while bloque_codigo
    (41) bloque_codigo -> . VACIO
    (42) declarar_if -> . IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC
    (43) declarar_if -> . IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE LLAVEA bloque_codigo LLAVEC
    (44) declarar_if -> . declarar_if_error_llave
    (47) declaracion -> . tipo_dato ID ASG ID operacion_matematica ID PYC
    (48) declaracion -> . tipo_dato ID ASG dato PYC
    (49) declaracion -> . AFARRAFAY ID dimensiones PYC
    (50) declaracion -> . declaracion_error
    (63) asignar_estructuras -> . ID PUNTO ID ASG dato PYC
    (62) asignar_array -> . ID dimensiones ASG dato PYC
    (64) funcion -> . ID PA valores PC PYC
    (65) funcion -> . ID PA PC PYC
    (66) funcion -> . ID PA valores COMA valores PC PYC
    (67) print -> . PRIFINT PA ID PC PYC
    (68) input -> . IFINPUFUT PA ID PC PYC
    (69) declaracion_while -> . WHIFILEFE PA condicion PC LLAVEA bloque_codigo LLAVEC
    (70) declaracion_while -> . declaracion_while_error
    (45) declarar_if_error_llave -> . IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE LLAVEA bloque_codigo
    (46) declarar_if_error_llave -> . IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE bloque_codigo LLAVEC
    (25) tipo_dato -> . IFINT
    (26) tipo_dato -> . STRIFING
    (27) tipo_dato -> . AFARRAFAY
    (28) tipo_dato -> . STRUFUCT
    (29) tipo_dato -> . VOFOIFID
    (30) tipo_dato -> . CHAFAR
    (31) tipo_dato -> . BOFOOFOL
    (32) tipo_dato -> . FLOFOAFAT
    (51) declaracion_error -> . ID PYC
    (52) declaracion_error -> . ID ASG ID operacion_matematica ID PYC
    (53) declaracion_error -> . ID ASG valores PYC
    (54) declaracion_error -> . ID ID PYC
    (55) declaracion_error -> . ID ID ASG ID operacion_matematica ID PYC
    (56) declaracion_error -> . ID ID ASG valores PYC
    (57) declaracion_error -> . ID ID dimensiones PYC
    (58) declaracion_error -> . ID dimensiones PYC
    (71) declaracion_while_error -> . PA condicion PC LLAVEA bloque_codigo LLAVEC
    (72) declaracion_while_error -> . ID PA condicion PC LLAVEA bloque_codigo LLAVEC
    (73) declaracion_while_error -> . WHIFILEFE PA condicion PC bloque_codigo LLAVEC
    (74) declaracion_while_error -> . WHIFILEFE PA condicion PC LLAVEA bloque_codigo

    VACIO           shift and go to state 67
    IFIF            shift and go to state 68
    AFARRAFAY       shift and go to state 72
    ID              shift and go to state 71
    PRIFINT         shift and go to state 74
    IFINPUFUT       shift and go to state 75
    WHIFILEFE       shift and go to state 76
    IFINT           shift and go to state 19
    STRIFING        shift and go to state 20
    STRUFUCT        shift and go to state 22
    VOFOIFID        shift and go to state 23
    CHAFAR          shift and go to state 24
    BOFOOFOL        shift and go to state 25
    FLOFOAFAT       shift and go to state 26
    PA              shift and go to state 57

    declarar_if                    shift and go to state 59
    bloque_codigo                  shift and go to state 91
    declaracion                    shift and go to state 60
    asignar_estructuras            shift and go to state 61
    asignar_array                  shift and go to state 62
    funcion                        shift and go to state 63
    print                          shift and go to state 64
    input                          shift and go to state 65
    declaracion_while              shift and go to state 66
    declarar_if_error_llave        shift and go to state 69
    tipo_dato                      shift and go to state 70
    declaracion_error              shift and go to state 73
    declaracion_while_error        shift and go to state 77

state 60

    (34) bloque_codigo -> declaracion . bloque_codigo
    (33) bloque_codigo -> . declarar_if bloque_codigo
    (34) bloque_codigo -> . declaracion bloque_codigo
    (35) bloque_codigo -> . asignar_estructuras bloque_codigo
    (36) bloque_codigo -> . asignar_array bloque_codigo
    (37) bloque_codigo -> . funcion bloque_codigo
    (38) bloque_codigo -> . print bloque_codigo
    (39) bloque_codigo -> . input bloque_codigo
    (40) bloque_codigo -> . declaracion_while bloque_codigo
    (41) bloque_codigo -> . VACIO
    (42) declarar_if -> . IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC
    (43) declarar_if -> . IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE LLAVEA bloque_codigo LLAVEC
    (44) declarar_if -> . declarar_if_error_llave
    (47) declaracion -> . tipo_dato ID ASG ID operacion_matematica ID PYC
    (48) declaracion -> . tipo_dato ID ASG dato PYC
    (49) declaracion -> . AFARRAFAY ID dimensiones PYC
    (50) declaracion -> . declaracion_error
    (63) asignar_estructuras -> . ID PUNTO ID ASG dato PYC
    (62) asignar_array -> . ID dimensiones ASG dato PYC
    (64) funcion -> . ID PA valores PC PYC
    (65) funcion -> . ID PA PC PYC
    (66) funcion -> . ID PA valores COMA valores PC PYC
    (67) print -> . PRIFINT PA ID PC PYC
    (68) input -> . IFINPUFUT PA ID PC PYC
    (69) declaracion_while -> . WHIFILEFE PA condicion PC LLAVEA bloque_codigo LLAVEC
    (70) declaracion_while -> . declaracion_while_error
    (45) declarar_if_error_llave -> . IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE LLAVEA bloque_codigo
    (46) declarar_if_error_llave -> . IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE bloque_codigo LLAVEC
    (25) tipo_dato -> . IFINT
    (26) tipo_dato -> . STRIFING
    (27) tipo_dato -> . AFARRAFAY
    (28) tipo_dato -> . STRUFUCT
    (29) tipo_dato -> . VOFOIFID
    (30) tipo_dato -> . CHAFAR
    (31) tipo_dato -> . BOFOOFOL
    (32) tipo_dato -> . FLOFOAFAT
    (51) declaracion_error -> . ID PYC
    (52) declaracion_error -> . ID ASG ID operacion_matematica ID PYC
    (53) declaracion_error -> . ID ASG valores PYC
    (54) declaracion_error -> . ID ID PYC
    (55) declaracion_error -> . ID ID ASG ID operacion_matematica ID PYC
    (56) declaracion_error -> . ID ID ASG valores PYC
    (57) declaracion_error -> . ID ID dimensiones PYC
    (58) declaracion_error -> . ID dimensiones PYC
    (71) declaracion_while_error -> . PA condicion PC LLAVEA bloque_codigo LLAVEC
    (72) declaracion_while_error -> . ID PA condicion PC LLAVEA bloque_codigo LLAVEC
    (73) declaracion_while_error -> . WHIFILEFE PA condicion PC bloque_codigo LLAVEC
    (74) declaracion_while_error -> . WHIFILEFE PA condicion PC LLAVEA bloque_codigo

    VACIO           shift and go to state 67
    IFIF            shift and go to state 68
    AFARRAFAY       shift and go to state 72
    ID              shift and go to state 71
    PRIFINT         shift and go to state 74
    IFINPUFUT       shift and go to state 75
    WHIFILEFE       shift and go to state 76
    IFINT           shift and go to state 19
    STRIFING        shift and go to state 20
    STRUFUCT        shift and go to state 22
    VOFOIFID        shift and go to state 23
    CHAFAR          shift and go to state 24
    BOFOOFOL        shift and go to state 25
    FLOFOAFAT       shift and go to state 26
    PA              shift and go to state 57

    declaracion                    shift and go to state 60
    bloque_codigo                  shift and go to state 92
    declarar_if                    shift and go to state 59
    asignar_estructuras            shift and go to state 61
    asignar_array                  shift and go to state 62
    funcion                        shift and go to state 63
    print                          shift and go to state 64
    input                          shift and go to state 65
    declaracion_while              shift and go to state 66
    declarar_if_error_llave        shift and go to state 69
    tipo_dato                      shift and go to state 70
    declaracion_error              shift and go to state 73
    declaracion_while_error        shift and go to state 77

state 61

    (35) bloque_codigo -> asignar_estructuras . bloque_codigo
    (33) bloque_codigo -> . declarar_if bloque_codigo
    (34) bloque_codigo -> . declaracion bloque_codigo
    (35) bloque_codigo -> . asignar_estructuras bloque_codigo
    (36) bloque_codigo -> . asignar_array bloque_codigo
    (37) bloque_codigo -> . funcion bloque_codigo
    (38) bloque_codigo -> . print bloque_codigo
    (39) bloque_codigo -> . input bloque_codigo
    (40) bloque_codigo -> . declaracion_while bloque_codigo
    (41) bloque_codigo -> . VACIO
    (42) declarar_if -> . IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC
    (43) declarar_if -> . IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE LLAVEA bloque_codigo LLAVEC
    (44) declarar_if -> . declarar_if_error_llave
    (47) declaracion -> . tipo_dato ID ASG ID operacion_matematica ID PYC
    (48) declaracion -> . tipo_dato ID ASG dato PYC
    (49) declaracion -> . AFARRAFAY ID dimensiones PYC
    (50) declaracion -> . declaracion_error
    (63) asignar_estructuras -> . ID PUNTO ID ASG dato PYC
    (62) asignar_array -> . ID dimensiones ASG dato PYC
    (64) funcion -> . ID PA valores PC PYC
    (65) funcion -> . ID PA PC PYC
    (66) funcion -> . ID PA valores COMA valores PC PYC
    (67) print -> . PRIFINT PA ID PC PYC
    (68) input -> . IFINPUFUT PA ID PC PYC
    (69) declaracion_while -> . WHIFILEFE PA condicion PC LLAVEA bloque_codigo LLAVEC
    (70) declaracion_while -> . declaracion_while_error
    (45) declarar_if_error_llave -> . IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE LLAVEA bloque_codigo
    (46) declarar_if_error_llave -> . IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE bloque_codigo LLAVEC
    (25) tipo_dato -> . IFINT
    (26) tipo_dato -> . STRIFING
    (27) tipo_dato -> . AFARRAFAY
    (28) tipo_dato -> . STRUFUCT
    (29) tipo_dato -> . VOFOIFID
    (30) tipo_dato -> . CHAFAR
    (31) tipo_dato -> . BOFOOFOL
    (32) tipo_dato -> . FLOFOAFAT
    (51) declaracion_error -> . ID PYC
    (52) declaracion_error -> . ID ASG ID operacion_matematica ID PYC
    (53) declaracion_error -> . ID ASG valores PYC
    (54) declaracion_error -> . ID ID PYC
    (55) declaracion_error -> . ID ID ASG ID operacion_matematica ID PYC
    (56) declaracion_error -> . ID ID ASG valores PYC
    (57) declaracion_error -> . ID ID dimensiones PYC
    (58) declaracion_error -> . ID dimensiones PYC
    (71) declaracion_while_error -> . PA condicion PC LLAVEA bloque_codigo LLAVEC
    (72) declaracion_while_error -> . ID PA condicion PC LLAVEA bloque_codigo LLAVEC
    (73) declaracion_while_error -> . WHIFILEFE PA condicion PC bloque_codigo LLAVEC
    (74) declaracion_while_error -> . WHIFILEFE PA condicion PC LLAVEA bloque_codigo

    VACIO           shift and go to state 67
    IFIF            shift and go to state 68
    AFARRAFAY       shift and go to state 72
    ID              shift and go to state 71
    PRIFINT         shift and go to state 74
    IFINPUFUT       shift and go to state 75
    WHIFILEFE       shift and go to state 76
    IFINT           shift and go to state 19
    STRIFING        shift and go to state 20
    STRUFUCT        shift and go to state 22
    VOFOIFID        shift and go to state 23
    CHAFAR          shift and go to state 24
    BOFOOFOL        shift and go to state 25
    FLOFOAFAT       shift and go to state 26
    PA              shift and go to state 57

    asignar_estructuras            shift and go to state 61
    bloque_codigo                  shift and go to state 93
    declarar_if                    shift and go to state 59
    declaracion                    shift and go to state 60
    asignar_array                  shift and go to state 62
    funcion                        shift and go to state 63
    print                          shift and go to state 64
    input                          shift and go to state 65
    declaracion_while              shift and go to state 66
    declarar_if_error_llave        shift and go to state 69
    tipo_dato                      shift and go to state 70
    declaracion_error              shift and go to state 73
    declaracion_while_error        shift and go to state 77

state 62

    (36) bloque_codigo -> asignar_array . bloque_codigo
    (33) bloque_codigo -> . declarar_if bloque_codigo
    (34) bloque_codigo -> . declaracion bloque_codigo
    (35) bloque_codigo -> . asignar_estructuras bloque_codigo
    (36) bloque_codigo -> . asignar_array bloque_codigo
    (37) bloque_codigo -> . funcion bloque_codigo
    (38) bloque_codigo -> . print bloque_codigo
    (39) bloque_codigo -> . input bloque_codigo
    (40) bloque_codigo -> . declaracion_while bloque_codigo
    (41) bloque_codigo -> . VACIO
    (42) declarar_if -> . IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC
    (43) declarar_if -> . IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE LLAVEA bloque_codigo LLAVEC
    (44) declarar_if -> . declarar_if_error_llave
    (47) declaracion -> . tipo_dato ID ASG ID operacion_matematica ID PYC
    (48) declaracion -> . tipo_dato ID ASG dato PYC
    (49) declaracion -> . AFARRAFAY ID dimensiones PYC
    (50) declaracion -> . declaracion_error
    (63) asignar_estructuras -> . ID PUNTO ID ASG dato PYC
    (62) asignar_array -> . ID dimensiones ASG dato PYC
    (64) funcion -> . ID PA valores PC PYC
    (65) funcion -> . ID PA PC PYC
    (66) funcion -> . ID PA valores COMA valores PC PYC
    (67) print -> . PRIFINT PA ID PC PYC
    (68) input -> . IFINPUFUT PA ID PC PYC
    (69) declaracion_while -> . WHIFILEFE PA condicion PC LLAVEA bloque_codigo LLAVEC
    (70) declaracion_while -> . declaracion_while_error
    (45) declarar_if_error_llave -> . IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE LLAVEA bloque_codigo
    (46) declarar_if_error_llave -> . IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE bloque_codigo LLAVEC
    (25) tipo_dato -> . IFINT
    (26) tipo_dato -> . STRIFING
    (27) tipo_dato -> . AFARRAFAY
    (28) tipo_dato -> . STRUFUCT
    (29) tipo_dato -> . VOFOIFID
    (30) tipo_dato -> . CHAFAR
    (31) tipo_dato -> . BOFOOFOL
    (32) tipo_dato -> . FLOFOAFAT
    (51) declaracion_error -> . ID PYC
    (52) declaracion_error -> . ID ASG ID operacion_matematica ID PYC
    (53) declaracion_error -> . ID ASG valores PYC
    (54) declaracion_error -> . ID ID PYC
    (55) declaracion_error -> . ID ID ASG ID operacion_matematica ID PYC
    (56) declaracion_error -> . ID ID ASG valores PYC
    (57) declaracion_error -> . ID ID dimensiones PYC
    (58) declaracion_error -> . ID dimensiones PYC
    (71) declaracion_while_error -> . PA condicion PC LLAVEA bloque_codigo LLAVEC
    (72) declaracion_while_error -> . ID PA condicion PC LLAVEA bloque_codigo LLAVEC
    (73) declaracion_while_error -> . WHIFILEFE PA condicion PC bloque_codigo LLAVEC
    (74) declaracion_while_error -> . WHIFILEFE PA condicion PC LLAVEA bloque_codigo

    VACIO           shift and go to state 67
    IFIF            shift and go to state 68
    AFARRAFAY       shift and go to state 72
    ID              shift and go to state 71
    PRIFINT         shift and go to state 74
    IFINPUFUT       shift and go to state 75
    WHIFILEFE       shift and go to state 76
    IFINT           shift and go to state 19
    STRIFING        shift and go to state 20
    STRUFUCT        shift and go to state 22
    VOFOIFID        shift and go to state 23
    CHAFAR          shift and go to state 24
    BOFOOFOL        shift and go to state 25
    FLOFOAFAT       shift and go to state 26
    PA              shift and go to state 57

    asignar_array                  shift and go to state 62
    bloque_codigo                  shift and go to state 94
    declarar_if                    shift and go to state 59
    declaracion                    shift and go to state 60
    asignar_estructuras            shift and go to state 61
    funcion                        shift and go to state 63
    print                          shift and go to state 64
    input                          shift and go to state 65
    declaracion_while              shift and go to state 66
    declarar_if_error_llave        shift and go to state 69
    tipo_dato                      shift and go to state 70
    declaracion_error              shift and go to state 73
    declaracion_while_error        shift and go to state 77

state 63

    (37) bloque_codigo -> funcion . bloque_codigo
    (33) bloque_codigo -> . declarar_if bloque_codigo
    (34) bloque_codigo -> . declaracion bloque_codigo
    (35) bloque_codigo -> . asignar_estructuras bloque_codigo
    (36) bloque_codigo -> . asignar_array bloque_codigo
    (37) bloque_codigo -> . funcion bloque_codigo
    (38) bloque_codigo -> . print bloque_codigo
    (39) bloque_codigo -> . input bloque_codigo
    (40) bloque_codigo -> . declaracion_while bloque_codigo
    (41) bloque_codigo -> . VACIO
    (42) declarar_if -> . IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC
    (43) declarar_if -> . IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE LLAVEA bloque_codigo LLAVEC
    (44) declarar_if -> . declarar_if_error_llave
    (47) declaracion -> . tipo_dato ID ASG ID operacion_matematica ID PYC
    (48) declaracion -> . tipo_dato ID ASG dato PYC
    (49) declaracion -> . AFARRAFAY ID dimensiones PYC
    (50) declaracion -> . declaracion_error
    (63) asignar_estructuras -> . ID PUNTO ID ASG dato PYC
    (62) asignar_array -> . ID dimensiones ASG dato PYC
    (64) funcion -> . ID PA valores PC PYC
    (65) funcion -> . ID PA PC PYC
    (66) funcion -> . ID PA valores COMA valores PC PYC
    (67) print -> . PRIFINT PA ID PC PYC
    (68) input -> . IFINPUFUT PA ID PC PYC
    (69) declaracion_while -> . WHIFILEFE PA condicion PC LLAVEA bloque_codigo LLAVEC
    (70) declaracion_while -> . declaracion_while_error
    (45) declarar_if_error_llave -> . IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE LLAVEA bloque_codigo
    (46) declarar_if_error_llave -> . IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE bloque_codigo LLAVEC
    (25) tipo_dato -> . IFINT
    (26) tipo_dato -> . STRIFING
    (27) tipo_dato -> . AFARRAFAY
    (28) tipo_dato -> . STRUFUCT
    (29) tipo_dato -> . VOFOIFID
    (30) tipo_dato -> . CHAFAR
    (31) tipo_dato -> . BOFOOFOL
    (32) tipo_dato -> . FLOFOAFAT
    (51) declaracion_error -> . ID PYC
    (52) declaracion_error -> . ID ASG ID operacion_matematica ID PYC
    (53) declaracion_error -> . ID ASG valores PYC
    (54) declaracion_error -> . ID ID PYC
    (55) declaracion_error -> . ID ID ASG ID operacion_matematica ID PYC
    (56) declaracion_error -> . ID ID ASG valores PYC
    (57) declaracion_error -> . ID ID dimensiones PYC
    (58) declaracion_error -> . ID dimensiones PYC
    (71) declaracion_while_error -> . PA condicion PC LLAVEA bloque_codigo LLAVEC
    (72) declaracion_while_error -> . ID PA condicion PC LLAVEA bloque_codigo LLAVEC
    (73) declaracion_while_error -> . WHIFILEFE PA condicion PC bloque_codigo LLAVEC
    (74) declaracion_while_error -> . WHIFILEFE PA condicion PC LLAVEA bloque_codigo

    VACIO           shift and go to state 67
    IFIF            shift and go to state 68
    AFARRAFAY       shift and go to state 72
    ID              shift and go to state 71
    PRIFINT         shift and go to state 74
    IFINPUFUT       shift and go to state 75
    WHIFILEFE       shift and go to state 76
    IFINT           shift and go to state 19
    STRIFING        shift and go to state 20
    STRUFUCT        shift and go to state 22
    VOFOIFID        shift and go to state 23
    CHAFAR          shift and go to state 24
    BOFOOFOL        shift and go to state 25
    FLOFOAFAT       shift and go to state 26
    PA              shift and go to state 57

    funcion                        shift and go to state 63
    bloque_codigo                  shift and go to state 95
    declarar_if                    shift and go to state 59
    declaracion                    shift and go to state 60
    asignar_estructuras            shift and go to state 61
    asignar_array                  shift and go to state 62
    print                          shift and go to state 64
    input                          shift and go to state 65
    declaracion_while              shift and go to state 66
    declarar_if_error_llave        shift and go to state 69
    tipo_dato                      shift and go to state 70
    declaracion_error              shift and go to state 73
    declaracion_while_error        shift and go to state 77

state 64

    (38) bloque_codigo -> print . bloque_codigo
    (33) bloque_codigo -> . declarar_if bloque_codigo
    (34) bloque_codigo -> . declaracion bloque_codigo
    (35) bloque_codigo -> . asignar_estructuras bloque_codigo
    (36) bloque_codigo -> . asignar_array bloque_codigo
    (37) bloque_codigo -> . funcion bloque_codigo
    (38) bloque_codigo -> . print bloque_codigo
    (39) bloque_codigo -> . input bloque_codigo
    (40) bloque_codigo -> . declaracion_while bloque_codigo
    (41) bloque_codigo -> . VACIO
    (42) declarar_if -> . IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC
    (43) declarar_if -> . IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE LLAVEA bloque_codigo LLAVEC
    (44) declarar_if -> . declarar_if_error_llave
    (47) declaracion -> . tipo_dato ID ASG ID operacion_matematica ID PYC
    (48) declaracion -> . tipo_dato ID ASG dato PYC
    (49) declaracion -> . AFARRAFAY ID dimensiones PYC
    (50) declaracion -> . declaracion_error
    (63) asignar_estructuras -> . ID PUNTO ID ASG dato PYC
    (62) asignar_array -> . ID dimensiones ASG dato PYC
    (64) funcion -> . ID PA valores PC PYC
    (65) funcion -> . ID PA PC PYC
    (66) funcion -> . ID PA valores COMA valores PC PYC
    (67) print -> . PRIFINT PA ID PC PYC
    (68) input -> . IFINPUFUT PA ID PC PYC
    (69) declaracion_while -> . WHIFILEFE PA condicion PC LLAVEA bloque_codigo LLAVEC
    (70) declaracion_while -> . declaracion_while_error
    (45) declarar_if_error_llave -> . IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE LLAVEA bloque_codigo
    (46) declarar_if_error_llave -> . IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE bloque_codigo LLAVEC
    (25) tipo_dato -> . IFINT
    (26) tipo_dato -> . STRIFING
    (27) tipo_dato -> . AFARRAFAY
    (28) tipo_dato -> . STRUFUCT
    (29) tipo_dato -> . VOFOIFID
    (30) tipo_dato -> . CHAFAR
    (31) tipo_dato -> . BOFOOFOL
    (32) tipo_dato -> . FLOFOAFAT
    (51) declaracion_error -> . ID PYC
    (52) declaracion_error -> . ID ASG ID operacion_matematica ID PYC
    (53) declaracion_error -> . ID ASG valores PYC
    (54) declaracion_error -> . ID ID PYC
    (55) declaracion_error -> . ID ID ASG ID operacion_matematica ID PYC
    (56) declaracion_error -> . ID ID ASG valores PYC
    (57) declaracion_error -> . ID ID dimensiones PYC
    (58) declaracion_error -> . ID dimensiones PYC
    (71) declaracion_while_error -> . PA condicion PC LLAVEA bloque_codigo LLAVEC
    (72) declaracion_while_error -> . ID PA condicion PC LLAVEA bloque_codigo LLAVEC
    (73) declaracion_while_error -> . WHIFILEFE PA condicion PC bloque_codigo LLAVEC
    (74) declaracion_while_error -> . WHIFILEFE PA condicion PC LLAVEA bloque_codigo

    VACIO           shift and go to state 67
    IFIF            shift and go to state 68
    AFARRAFAY       shift and go to state 72
    ID              shift and go to state 71
    PRIFINT         shift and go to state 74
    IFINPUFUT       shift and go to state 75
    WHIFILEFE       shift and go to state 76
    IFINT           shift and go to state 19
    STRIFING        shift and go to state 20
    STRUFUCT        shift and go to state 22
    VOFOIFID        shift and go to state 23
    CHAFAR          shift and go to state 24
    BOFOOFOL        shift and go to state 25
    FLOFOAFAT       shift and go to state 26
    PA              shift and go to state 57

    print                          shift and go to state 64
    bloque_codigo                  shift and go to state 96
    declarar_if                    shift and go to state 59
    declaracion                    shift and go to state 60
    asignar_estructuras            shift and go to state 61
    asignar_array                  shift and go to state 62
    funcion                        shift and go to state 63
    input                          shift and go to state 65
    declaracion_while              shift and go to state 66
    declarar_if_error_llave        shift and go to state 69
    tipo_dato                      shift and go to state 70
    declaracion_error              shift and go to state 73
    declaracion_while_error        shift and go to state 77

state 65

    (39) bloque_codigo -> input . bloque_codigo
    (33) bloque_codigo -> . declarar_if bloque_codigo
    (34) bloque_codigo -> . declaracion bloque_codigo
    (35) bloque_codigo -> . asignar_estructuras bloque_codigo
    (36) bloque_codigo -> . asignar_array bloque_codigo
    (37) bloque_codigo -> . funcion bloque_codigo
    (38) bloque_codigo -> . print bloque_codigo
    (39) bloque_codigo -> . input bloque_codigo
    (40) bloque_codigo -> . declaracion_while bloque_codigo
    (41) bloque_codigo -> . VACIO
    (42) declarar_if -> . IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC
    (43) declarar_if -> . IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE LLAVEA bloque_codigo LLAVEC
    (44) declarar_if -> . declarar_if_error_llave
    (47) declaracion -> . tipo_dato ID ASG ID operacion_matematica ID PYC
    (48) declaracion -> . tipo_dato ID ASG dato PYC
    (49) declaracion -> . AFARRAFAY ID dimensiones PYC
    (50) declaracion -> . declaracion_error
    (63) asignar_estructuras -> . ID PUNTO ID ASG dato PYC
    (62) asignar_array -> . ID dimensiones ASG dato PYC
    (64) funcion -> . ID PA valores PC PYC
    (65) funcion -> . ID PA PC PYC
    (66) funcion -> . ID PA valores COMA valores PC PYC
    (67) print -> . PRIFINT PA ID PC PYC
    (68) input -> . IFINPUFUT PA ID PC PYC
    (69) declaracion_while -> . WHIFILEFE PA condicion PC LLAVEA bloque_codigo LLAVEC
    (70) declaracion_while -> . declaracion_while_error
    (45) declarar_if_error_llave -> . IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE LLAVEA bloque_codigo
    (46) declarar_if_error_llave -> . IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE bloque_codigo LLAVEC
    (25) tipo_dato -> . IFINT
    (26) tipo_dato -> . STRIFING
    (27) tipo_dato -> . AFARRAFAY
    (28) tipo_dato -> . STRUFUCT
    (29) tipo_dato -> . VOFOIFID
    (30) tipo_dato -> . CHAFAR
    (31) tipo_dato -> . BOFOOFOL
    (32) tipo_dato -> . FLOFOAFAT
    (51) declaracion_error -> . ID PYC
    (52) declaracion_error -> . ID ASG ID operacion_matematica ID PYC
    (53) declaracion_error -> . ID ASG valores PYC
    (54) declaracion_error -> . ID ID PYC
    (55) declaracion_error -> . ID ID ASG ID operacion_matematica ID PYC
    (56) declaracion_error -> . ID ID ASG valores PYC
    (57) declaracion_error -> . ID ID dimensiones PYC
    (58) declaracion_error -> . ID dimensiones PYC
    (71) declaracion_while_error -> . PA condicion PC LLAVEA bloque_codigo LLAVEC
    (72) declaracion_while_error -> . ID PA condicion PC LLAVEA bloque_codigo LLAVEC
    (73) declaracion_while_error -> . WHIFILEFE PA condicion PC bloque_codigo LLAVEC
    (74) declaracion_while_error -> . WHIFILEFE PA condicion PC LLAVEA bloque_codigo

    VACIO           shift and go to state 67
    IFIF            shift and go to state 68
    AFARRAFAY       shift and go to state 72
    ID              shift and go to state 71
    PRIFINT         shift and go to state 74
    IFINPUFUT       shift and go to state 75
    WHIFILEFE       shift and go to state 76
    IFINT           shift and go to state 19
    STRIFING        shift and go to state 20
    STRUFUCT        shift and go to state 22
    VOFOIFID        shift and go to state 23
    CHAFAR          shift and go to state 24
    BOFOOFOL        shift and go to state 25
    FLOFOAFAT       shift and go to state 26
    PA              shift and go to state 57

    input                          shift and go to state 65
    bloque_codigo                  shift and go to state 97
    declarar_if                    shift and go to state 59
    declaracion                    shift and go to state 60
    asignar_estructuras            shift and go to state 61
    asignar_array                  shift and go to state 62
    funcion                        shift and go to state 63
    print                          shift and go to state 64
    declaracion_while              shift and go to state 66
    declarar_if_error_llave        shift and go to state 69
    tipo_dato                      shift and go to state 70
    declaracion_error              shift and go to state 73
    declaracion_while_error        shift and go to state 77

state 66

    (40) bloque_codigo -> declaracion_while . bloque_codigo
    (33) bloque_codigo -> . declarar_if bloque_codigo
    (34) bloque_codigo -> . declaracion bloque_codigo
    (35) bloque_codigo -> . asignar_estructuras bloque_codigo
    (36) bloque_codigo -> . asignar_array bloque_codigo
    (37) bloque_codigo -> . funcion bloque_codigo
    (38) bloque_codigo -> . print bloque_codigo
    (39) bloque_codigo -> . input bloque_codigo
    (40) bloque_codigo -> . declaracion_while bloque_codigo
    (41) bloque_codigo -> . VACIO
    (42) declarar_if -> . IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC
    (43) declarar_if -> . IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE LLAVEA bloque_codigo LLAVEC
    (44) declarar_if -> . declarar_if_error_llave
    (47) declaracion -> . tipo_dato ID ASG ID operacion_matematica ID PYC
    (48) declaracion -> . tipo_dato ID ASG dato PYC
    (49) declaracion -> . AFARRAFAY ID dimensiones PYC
    (50) declaracion -> . declaracion_error
    (63) asignar_estructuras -> . ID PUNTO ID ASG dato PYC
    (62) asignar_array -> . ID dimensiones ASG dato PYC
    (64) funcion -> . ID PA valores PC PYC
    (65) funcion -> . ID PA PC PYC
    (66) funcion -> . ID PA valores COMA valores PC PYC
    (67) print -> . PRIFINT PA ID PC PYC
    (68) input -> . IFINPUFUT PA ID PC PYC
    (69) declaracion_while -> . WHIFILEFE PA condicion PC LLAVEA bloque_codigo LLAVEC
    (70) declaracion_while -> . declaracion_while_error
    (45) declarar_if_error_llave -> . IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE LLAVEA bloque_codigo
    (46) declarar_if_error_llave -> . IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE bloque_codigo LLAVEC
    (25) tipo_dato -> . IFINT
    (26) tipo_dato -> . STRIFING
    (27) tipo_dato -> . AFARRAFAY
    (28) tipo_dato -> . STRUFUCT
    (29) tipo_dato -> . VOFOIFID
    (30) tipo_dato -> . CHAFAR
    (31) tipo_dato -> . BOFOOFOL
    (32) tipo_dato -> . FLOFOAFAT
    (51) declaracion_error -> . ID PYC
    (52) declaracion_error -> . ID ASG ID operacion_matematica ID PYC
    (53) declaracion_error -> . ID ASG valores PYC
    (54) declaracion_error -> . ID ID PYC
    (55) declaracion_error -> . ID ID ASG ID operacion_matematica ID PYC
    (56) declaracion_error -> . ID ID ASG valores PYC
    (57) declaracion_error -> . ID ID dimensiones PYC
    (58) declaracion_error -> . ID dimensiones PYC
    (71) declaracion_while_error -> . PA condicion PC LLAVEA bloque_codigo LLAVEC
    (72) declaracion_while_error -> . ID PA condicion PC LLAVEA bloque_codigo LLAVEC
    (73) declaracion_while_error -> . WHIFILEFE PA condicion PC bloque_codigo LLAVEC
    (74) declaracion_while_error -> . WHIFILEFE PA condicion PC LLAVEA bloque_codigo

    VACIO           shift and go to state 67
    IFIF            shift and go to state 68
    AFARRAFAY       shift and go to state 72
    ID              shift and go to state 71
    PRIFINT         shift and go to state 74
    IFINPUFUT       shift and go to state 75
    WHIFILEFE       shift and go to state 76
    IFINT           shift and go to state 19
    STRIFING        shift and go to state 20
    STRUFUCT        shift and go to state 22
    VOFOIFID        shift and go to state 23
    CHAFAR          shift and go to state 24
    BOFOOFOL        shift and go to state 25
    FLOFOAFAT       shift and go to state 26
    PA              shift and go to state 57

    declaracion_while              shift and go to state 66
    bloque_codigo                  shift and go to state 98
    declarar_if                    shift and go to state 59
    declaracion                    shift and go to state 60
    asignar_estructuras            shift and go to state 61
    asignar_array                  shift and go to state 62
    funcion                        shift and go to state 63
    print                          shift and go to state 64
    input                          shift and go to state 65
    declarar_if_error_llave        shift and go to state 69
    tipo_dato                      shift and go to state 70
    declaracion_error              shift and go to state 73
    declaracion_while_error        shift and go to state 77

state 67

    (41) bloque_codigo -> VACIO .

    REFETUFURN      reduce using rule 41 (bloque_codigo -> VACIO .)
    LLAVEC          reduce using rule 41 (bloque_codigo -> VACIO .)
    VACIO           reduce using rule 41 (bloque_codigo -> VACIO .)
    IFIF            reduce using rule 41 (bloque_codigo -> VACIO .)
    AFARRAFAY       reduce using rule 41 (bloque_codigo -> VACIO .)
    ID              reduce using rule 41 (bloque_codigo -> VACIO .)
    PRIFINT         reduce using rule 41 (bloque_codigo -> VACIO .)
    IFINPUFUT       reduce using rule 41 (bloque_codigo -> VACIO .)
    WHIFILEFE       reduce using rule 41 (bloque_codigo -> VACIO .)
    IFINT           reduce using rule 41 (bloque_codigo -> VACIO .)
    STRIFING        reduce using rule 41 (bloque_codigo -> VACIO .)
    STRUFUCT        reduce using rule 41 (bloque_codigo -> VACIO .)
    VOFOIFID        reduce using rule 41 (bloque_codigo -> VACIO .)
    CHAFAR          reduce using rule 41 (bloque_codigo -> VACIO .)
    BOFOOFOL        reduce using rule 41 (bloque_codigo -> VACIO .)
    FLOFOAFAT       reduce using rule 41 (bloque_codigo -> VACIO .)
    PA              reduce using rule 41 (bloque_codigo -> VACIO .)


state 68

    (42) declarar_if -> IFIF . PA condicion PC LLAVEA bloque_codigo LLAVEC
    (43) declarar_if -> IFIF . PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE LLAVEA bloque_codigo LLAVEC
    (45) declarar_if_error_llave -> IFIF . PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE LLAVEA bloque_codigo
    (46) declarar_if_error_llave -> IFIF . PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE bloque_codigo LLAVEC

    PA              shift and go to state 99


state 69

    (44) declarar_if -> declarar_if_error_llave .

    VACIO           reduce using rule 44 (declarar_if -> declarar_if_error_llave .)
    IFIF            reduce using rule 44 (declarar_if -> declarar_if_error_llave .)
    AFARRAFAY       reduce using rule 44 (declarar_if -> declarar_if_error_llave .)
    ID              reduce using rule 44 (declarar_if -> declarar_if_error_llave .)
    PRIFINT         reduce using rule 44 (declarar_if -> declarar_if_error_llave .)
    IFINPUFUT       reduce using rule 44 (declarar_if -> declarar_if_error_llave .)
    WHIFILEFE       reduce using rule 44 (declarar_if -> declarar_if_error_llave .)
    IFINT           reduce using rule 44 (declarar_if -> declarar_if_error_llave .)
    STRIFING        reduce using rule 44 (declarar_if -> declarar_if_error_llave .)
    STRUFUCT        reduce using rule 44 (declarar_if -> declarar_if_error_llave .)
    VOFOIFID        reduce using rule 44 (declarar_if -> declarar_if_error_llave .)
    CHAFAR          reduce using rule 44 (declarar_if -> declarar_if_error_llave .)
    BOFOOFOL        reduce using rule 44 (declarar_if -> declarar_if_error_llave .)
    FLOFOAFAT       reduce using rule 44 (declarar_if -> declarar_if_error_llave .)
    PA              reduce using rule 44 (declarar_if -> declarar_if_error_llave .)


state 70

    (47) declaracion -> tipo_dato . ID ASG ID operacion_matematica ID PYC
    (48) declaracion -> tipo_dato . ID ASG dato PYC

    ID              shift and go to state 100


state 71

    (63) asignar_estructuras -> ID . PUNTO ID ASG dato PYC
    (62) asignar_array -> ID . dimensiones ASG dato PYC
    (64) funcion -> ID . PA valores PC PYC
    (65) funcion -> ID . PA PC PYC
    (66) funcion -> ID . PA valores COMA valores PC PYC
    (51) declaracion_error -> ID . PYC
    (52) declaracion_error -> ID . ASG ID operacion_matematica ID PYC
    (53) declaracion_error -> ID . ASG valores PYC
    (54) declaracion_error -> ID . ID PYC
    (55) declaracion_error -> ID . ID ASG ID operacion_matematica ID PYC
    (56) declaracion_error -> ID . ID ASG valores PYC
    (57) declaracion_error -> ID . ID dimensiones PYC
    (58) declaracion_error -> ID . dimensiones PYC
    (72) declaracion_while_error -> ID . PA condicion PC LLAVEA bloque_codigo LLAVEC
    (59) dimensiones -> . dimension dimensiones
    (60) dimensiones -> . VACIO
    (61) dimension -> . CA INT CC

    PUNTO           shift and go to state 102
    PA              shift and go to state 106
    PYC             shift and go to state 104
    ASG             shift and go to state 103
    ID              shift and go to state 101
    VACIO           shift and go to state 108
    CA              shift and go to state 109

    dimensiones                    shift and go to state 105
    dimension                      shift and go to state 107

state 72

    (49) declaracion -> AFARRAFAY . ID dimensiones PYC
    (27) tipo_dato -> AFARRAFAY .

  ! shift/reduce conflict for ID resolved as shift
    ID              shift and go to state 110

  ! ID              [ reduce using rule 27 (tipo_dato -> AFARRAFAY .) ]


state 73

    (50) declaracion -> declaracion_error .

    VACIO           reduce using rule 50 (declaracion -> declaracion_error .)
    IFIF            reduce using rule 50 (declaracion -> declaracion_error .)
    AFARRAFAY       reduce using rule 50 (declaracion -> declaracion_error .)
    ID              reduce using rule 50 (declaracion -> declaracion_error .)
    PRIFINT         reduce using rule 50 (declaracion -> declaracion_error .)
    IFINPUFUT       reduce using rule 50 (declaracion -> declaracion_error .)
    WHIFILEFE       reduce using rule 50 (declaracion -> declaracion_error .)
    IFINT           reduce using rule 50 (declaracion -> declaracion_error .)
    STRIFING        reduce using rule 50 (declaracion -> declaracion_error .)
    STRUFUCT        reduce using rule 50 (declaracion -> declaracion_error .)
    VOFOIFID        reduce using rule 50 (declaracion -> declaracion_error .)
    CHAFAR          reduce using rule 50 (declaracion -> declaracion_error .)
    BOFOOFOL        reduce using rule 50 (declaracion -> declaracion_error .)
    FLOFOAFAT       reduce using rule 50 (declaracion -> declaracion_error .)
    PA              reduce using rule 50 (declaracion -> declaracion_error .)


state 74

    (67) print -> PRIFINT . PA ID PC PYC

    PA              shift and go to state 111


state 75

    (68) input -> IFINPUFUT . PA ID PC PYC

    PA              shift and go to state 112


state 76

    (69) declaracion_while -> WHIFILEFE . PA condicion PC LLAVEA bloque_codigo LLAVEC
    (73) declaracion_while_error -> WHIFILEFE . PA condicion PC bloque_codigo LLAVEC
    (74) declaracion_while_error -> WHIFILEFE . PA condicion PC LLAVEA bloque_codigo

    PA              shift and go to state 113


state 77

    (70) declaracion_while -> declaracion_while_error .

    VACIO           reduce using rule 70 (declaracion_while -> declaracion_while_error .)
    IFIF            reduce using rule 70 (declaracion_while -> declaracion_while_error .)
    AFARRAFAY       reduce using rule 70 (declaracion_while -> declaracion_while_error .)
    ID              reduce using rule 70 (declaracion_while -> declaracion_while_error .)
    PRIFINT         reduce using rule 70 (declaracion_while -> declaracion_while_error .)
    IFINPUFUT       reduce using rule 70 (declaracion_while -> declaracion_while_error .)
    WHIFILEFE       reduce using rule 70 (declaracion_while -> declaracion_while_error .)
    IFINT           reduce using rule 70 (declaracion_while -> declaracion_while_error .)
    STRIFING        reduce using rule 70 (declaracion_while -> declaracion_while_error .)
    STRUFUCT        reduce using rule 70 (declaracion_while -> declaracion_while_error .)
    VOFOIFID        reduce using rule 70 (declaracion_while -> declaracion_while_error .)
    CHAFAR          reduce using rule 70 (declaracion_while -> declaracion_while_error .)
    BOFOOFOL        reduce using rule 70 (declaracion_while -> declaracion_while_error .)
    FLOFOAFAT       reduce using rule 70 (declaracion_while -> declaracion_while_error .)
    PA              reduce using rule 70 (declaracion_while -> declaracion_while_error .)


state 78

    (24) declarar_main_error -> IFINT ID PA PC LLAVEA . bloque_codigo REFETUFURN PYC LLAVEC
    (33) bloque_codigo -> . declarar_if bloque_codigo
    (34) bloque_codigo -> . declaracion bloque_codigo
    (35) bloque_codigo -> . asignar_estructuras bloque_codigo
    (36) bloque_codigo -> . asignar_array bloque_codigo
    (37) bloque_codigo -> . funcion bloque_codigo
    (38) bloque_codigo -> . print bloque_codigo
    (39) bloque_codigo -> . input bloque_codigo
    (40) bloque_codigo -> . declaracion_while bloque_codigo
    (41) bloque_codigo -> . VACIO
    (42) declarar_if -> . IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC
    (43) declarar_if -> . IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE LLAVEA bloque_codigo LLAVEC
    (44) declarar_if -> . declarar_if_error_llave
    (47) declaracion -> . tipo_dato ID ASG ID operacion_matematica ID PYC
    (48) declaracion -> . tipo_dato ID ASG dato PYC
    (49) declaracion -> . AFARRAFAY ID dimensiones PYC
    (50) declaracion -> . declaracion_error
    (63) asignar_estructuras -> . ID PUNTO ID ASG dato PYC
    (62) asignar_array -> . ID dimensiones ASG dato PYC
    (64) funcion -> . ID PA valores PC PYC
    (65) funcion -> . ID PA PC PYC
    (66) funcion -> . ID PA valores COMA valores PC PYC
    (67) print -> . PRIFINT PA ID PC PYC
    (68) input -> . IFINPUFUT PA ID PC PYC
    (69) declaracion_while -> . WHIFILEFE PA condicion PC LLAVEA bloque_codigo LLAVEC
    (70) declaracion_while -> . declaracion_while_error
    (45) declarar_if_error_llave -> . IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE LLAVEA bloque_codigo
    (46) declarar_if_error_llave -> . IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE bloque_codigo LLAVEC
    (25) tipo_dato -> . IFINT
    (26) tipo_dato -> . STRIFING
    (27) tipo_dato -> . AFARRAFAY
    (28) tipo_dato -> . STRUFUCT
    (29) tipo_dato -> . VOFOIFID
    (30) tipo_dato -> . CHAFAR
    (31) tipo_dato -> . BOFOOFOL
    (32) tipo_dato -> . FLOFOAFAT
    (51) declaracion_error -> . ID PYC
    (52) declaracion_error -> . ID ASG ID operacion_matematica ID PYC
    (53) declaracion_error -> . ID ASG valores PYC
    (54) declaracion_error -> . ID ID PYC
    (55) declaracion_error -> . ID ID ASG ID operacion_matematica ID PYC
    (56) declaracion_error -> . ID ID ASG valores PYC
    (57) declaracion_error -> . ID ID dimensiones PYC
    (58) declaracion_error -> . ID dimensiones PYC
    (71) declaracion_while_error -> . PA condicion PC LLAVEA bloque_codigo LLAVEC
    (72) declaracion_while_error -> . ID PA condicion PC LLAVEA bloque_codigo LLAVEC
    (73) declaracion_while_error -> . WHIFILEFE PA condicion PC bloque_codigo LLAVEC
    (74) declaracion_while_error -> . WHIFILEFE PA condicion PC LLAVEA bloque_codigo

    VACIO           shift and go to state 67
    IFIF            shift and go to state 68
    AFARRAFAY       shift and go to state 72
    ID              shift and go to state 71
    PRIFINT         shift and go to state 74
    IFINPUFUT       shift and go to state 75
    WHIFILEFE       shift and go to state 76
    IFINT           shift and go to state 19
    STRIFING        shift and go to state 20
    STRUFUCT        shift and go to state 22
    VOFOIFID        shift and go to state 23
    CHAFAR          shift and go to state 24
    BOFOOFOL        shift and go to state 25
    FLOFOAFAT       shift and go to state 26
    PA              shift and go to state 57

    bloque_codigo                  shift and go to state 114
    declarar_if                    shift and go to state 59
    declaracion                    shift and go to state 60
    asignar_estructuras            shift and go to state 61
    asignar_array                  shift and go to state 62
    funcion                        shift and go to state 63
    print                          shift and go to state 64
    input                          shift and go to state 65
    declaracion_while              shift and go to state 66
    declarar_if_error_llave        shift and go to state 69
    tipo_dato                      shift and go to state 70
    declaracion_error              shift and go to state 73
    declaracion_while_error        shift and go to state 77

state 79

    (20) declarar_main_error -> MAFAIFIN PA PC LLAVEA bloque_codigo . REFETUFURN PYC LLAVEC
    (22) declarar_main_error -> MAFAIFIN PA PC LLAVEA bloque_codigo . LLAVEC

    REFETUFURN      shift and go to state 115
    LLAVEC          shift and go to state 116


state 80

    (12) declarar_estructuras_error -> STRUFUCT ID LLAVEA ID PYC ID . PYC LLAVEC

    PYC             shift and go to state 117


state 81

    (5) declarar_estructuras -> STRUFUCT ID LLAVEA tipo_dato ID PYC . tipo_dato ID PYC LLAVEC
    (10) declarar_estructuras_error -> STRUFUCT ID LLAVEA tipo_dato ID PYC . tipo_dato PYC LLAVEC
    (13) declarar_estructuras_error -> STRUFUCT ID LLAVEA tipo_dato ID PYC . tipo_dato ID PYC tipo_dato ID PYC LLAVEC
    (25) tipo_dato -> . IFINT
    (26) tipo_dato -> . STRIFING
    (27) tipo_dato -> . AFARRAFAY
    (28) tipo_dato -> . STRUFUCT
    (29) tipo_dato -> . VOFOIFID
    (30) tipo_dato -> . CHAFAR
    (31) tipo_dato -> . BOFOOFOL
    (32) tipo_dato -> . FLOFOAFAT

    IFINT           shift and go to state 19
    STRIFING        shift and go to state 20
    AFARRAFAY       shift and go to state 21
    STRUFUCT        shift and go to state 22
    VOFOIFID        shift and go to state 23
    CHAFAR          shift and go to state 24
    BOFOOFOL        shift and go to state 25
    FLOFOAFAT       shift and go to state 26

    tipo_dato                      shift and go to state 118

state 82

    (9) declarar_estructuras_error -> STRUFUCT ID LLAVEA tipo_dato PYC tipo_dato . ID PYC LLAVEC
    (11) declarar_estructuras_error -> STRUFUCT ID LLAVEA tipo_dato PYC tipo_dato . PYC LLAVEC

    ID              shift and go to state 119
    PYC             shift and go to state 120


state 83

    (8) declarar_estructuras_error -> ID ID LLAVEA tipo_dato ID PYC . tipo_dato ID PYC LLAVEC
    (25) tipo_dato -> . IFINT
    (26) tipo_dato -> . STRIFING
    (27) tipo_dato -> . AFARRAFAY
    (28) tipo_dato -> . STRUFUCT
    (29) tipo_dato -> . VOFOIFID
    (30) tipo_dato -> . CHAFAR
    (31) tipo_dato -> . BOFOOFOL
    (32) tipo_dato -> . FLOFOAFAT

    IFINT           shift and go to state 19
    STRIFING        shift and go to state 20
    AFARRAFAY       shift and go to state 21
    STRUFUCT        shift and go to state 22
    VOFOIFID        shift and go to state 23
    CHAFAR          shift and go to state 24
    BOFOOFOL        shift and go to state 25
    FLOFOAFAT       shift and go to state 26

    tipo_dato                      shift and go to state 121

state 84

    (7) declarar_estructuras_error -> ID LLAVEA tipo_dato ID PYC tipo_dato . ID PYC LLAVEC

    ID              shift and go to state 122


state 85

    (14) declarar_funciones -> FUNCTION tipo_dato ID PA tipo_dato ID . PC LLAVEA bloque_codigo REFETUFURN ID PYC LLAVEC
    (17) declarar_funciones -> FUNCTION tipo_dato ID PA tipo_dato ID . COMA tipo_dato ID PC LLAVEA bloque_codigo REFETUFURN ID PYC LLAVEC

    PC              shift and go to state 123
    COMA            shift and go to state 124


state 86

    (15) declarar_funciones -> FUNCTION tipo_dato ID PA PC LLAVEA . bloque_codigo REFETUFURN ID PYC LLAVEC
    (16) declarar_funciones -> FUNCTION tipo_dato ID PA PC LLAVEA . bloque_codigo REFETUFURN PYC LLAVEC
    (33) bloque_codigo -> . declarar_if bloque_codigo
    (34) bloque_codigo -> . declaracion bloque_codigo
    (35) bloque_codigo -> . asignar_estructuras bloque_codigo
    (36) bloque_codigo -> . asignar_array bloque_codigo
    (37) bloque_codigo -> . funcion bloque_codigo
    (38) bloque_codigo -> . print bloque_codigo
    (39) bloque_codigo -> . input bloque_codigo
    (40) bloque_codigo -> . declaracion_while bloque_codigo
    (41) bloque_codigo -> . VACIO
    (42) declarar_if -> . IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC
    (43) declarar_if -> . IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE LLAVEA bloque_codigo LLAVEC
    (44) declarar_if -> . declarar_if_error_llave
    (47) declaracion -> . tipo_dato ID ASG ID operacion_matematica ID PYC
    (48) declaracion -> . tipo_dato ID ASG dato PYC
    (49) declaracion -> . AFARRAFAY ID dimensiones PYC
    (50) declaracion -> . declaracion_error
    (63) asignar_estructuras -> . ID PUNTO ID ASG dato PYC
    (62) asignar_array -> . ID dimensiones ASG dato PYC
    (64) funcion -> . ID PA valores PC PYC
    (65) funcion -> . ID PA PC PYC
    (66) funcion -> . ID PA valores COMA valores PC PYC
    (67) print -> . PRIFINT PA ID PC PYC
    (68) input -> . IFINPUFUT PA ID PC PYC
    (69) declaracion_while -> . WHIFILEFE PA condicion PC LLAVEA bloque_codigo LLAVEC
    (70) declaracion_while -> . declaracion_while_error
    (45) declarar_if_error_llave -> . IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE LLAVEA bloque_codigo
    (46) declarar_if_error_llave -> . IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE bloque_codigo LLAVEC
    (25) tipo_dato -> . IFINT
    (26) tipo_dato -> . STRIFING
    (27) tipo_dato -> . AFARRAFAY
    (28) tipo_dato -> . STRUFUCT
    (29) tipo_dato -> . VOFOIFID
    (30) tipo_dato -> . CHAFAR
    (31) tipo_dato -> . BOFOOFOL
    (32) tipo_dato -> . FLOFOAFAT
    (51) declaracion_error -> . ID PYC
    (52) declaracion_error -> . ID ASG ID operacion_matematica ID PYC
    (53) declaracion_error -> . ID ASG valores PYC
    (54) declaracion_error -> . ID ID PYC
    (55) declaracion_error -> . ID ID ASG ID operacion_matematica ID PYC
    (56) declaracion_error -> . ID ID ASG valores PYC
    (57) declaracion_error -> . ID ID dimensiones PYC
    (58) declaracion_error -> . ID dimensiones PYC
    (71) declaracion_while_error -> . PA condicion PC LLAVEA bloque_codigo LLAVEC
    (72) declaracion_while_error -> . ID PA condicion PC LLAVEA bloque_codigo LLAVEC
    (73) declaracion_while_error -> . WHIFILEFE PA condicion PC bloque_codigo LLAVEC
    (74) declaracion_while_error -> . WHIFILEFE PA condicion PC LLAVEA bloque_codigo

    VACIO           shift and go to state 67
    IFIF            shift and go to state 68
    AFARRAFAY       shift and go to state 72
    ID              shift and go to state 71
    PRIFINT         shift and go to state 74
    IFINPUFUT       shift and go to state 75
    WHIFILEFE       shift and go to state 76
    IFINT           shift and go to state 19
    STRIFING        shift and go to state 20
    STRUFUCT        shift and go to state 22
    VOFOIFID        shift and go to state 23
    CHAFAR          shift and go to state 24
    BOFOOFOL        shift and go to state 25
    FLOFOAFAT       shift and go to state 26
    PA              shift and go to state 57

    tipo_dato                      shift and go to state 70
    bloque_codigo                  shift and go to state 125
    declarar_if                    shift and go to state 59
    declaracion                    shift and go to state 60
    asignar_estructuras            shift and go to state 61
    asignar_array                  shift and go to state 62
    funcion                        shift and go to state 63
    print                          shift and go to state 64
    input                          shift and go to state 65
    declaracion_while              shift and go to state 66
    declarar_if_error_llave        shift and go to state 69
    declaracion_error              shift and go to state 73
    declaracion_while_error        shift and go to state 77

state 87

    (18) declarar_main -> IFINT MAFAIFIN PA PC LLAVEA bloque_codigo . REFETUFURN PYC LLAVEC
    (21) declarar_main_error -> IFINT MAFAIFIN PA PC LLAVEA bloque_codigo . LLAVEC

    REFETUFURN      shift and go to state 126
    LLAVEC          shift and go to state 127


state 88

    (71) declaracion_while_error -> PA condicion . PC LLAVEA bloque_codigo LLAVEC

    PC              shift and go to state 128


state 89

    (75) condicion -> ID . operadores ID
    (94) operadores -> . MEN
    (95) operadores -> . MAY
    (96) operadores -> . MENIG
    (97) operadores -> . MAYIG
    (98) operadores -> . CMP
    (99) operadores -> . DIF

    MEN             shift and go to state 130
    MAY             shift and go to state 131
    MENIG           shift and go to state 132
    MAYIG           shift and go to state 133
    CMP             shift and go to state 134
    DIF             shift and go to state 135

    operadores                     shift and go to state 129

state 90

    (23) declarar_main_error -> IFINT PA PC LLAVEA bloque_codigo REFETUFURN . PYC LLAVEC

    PYC             shift and go to state 136


state 91

    (33) bloque_codigo -> declarar_if bloque_codigo .

    REFETUFURN      reduce using rule 33 (bloque_codigo -> declarar_if bloque_codigo .)
    LLAVEC          reduce using rule 33 (bloque_codigo -> declarar_if bloque_codigo .)
    VACIO           reduce using rule 33 (bloque_codigo -> declarar_if bloque_codigo .)
    IFIF            reduce using rule 33 (bloque_codigo -> declarar_if bloque_codigo .)
    AFARRAFAY       reduce using rule 33 (bloque_codigo -> declarar_if bloque_codigo .)
    ID              reduce using rule 33 (bloque_codigo -> declarar_if bloque_codigo .)
    PRIFINT         reduce using rule 33 (bloque_codigo -> declarar_if bloque_codigo .)
    IFINPUFUT       reduce using rule 33 (bloque_codigo -> declarar_if bloque_codigo .)
    WHIFILEFE       reduce using rule 33 (bloque_codigo -> declarar_if bloque_codigo .)
    IFINT           reduce using rule 33 (bloque_codigo -> declarar_if bloque_codigo .)
    STRIFING        reduce using rule 33 (bloque_codigo -> declarar_if bloque_codigo .)
    STRUFUCT        reduce using rule 33 (bloque_codigo -> declarar_if bloque_codigo .)
    VOFOIFID        reduce using rule 33 (bloque_codigo -> declarar_if bloque_codigo .)
    CHAFAR          reduce using rule 33 (bloque_codigo -> declarar_if bloque_codigo .)
    BOFOOFOL        reduce using rule 33 (bloque_codigo -> declarar_if bloque_codigo .)
    FLOFOAFAT       reduce using rule 33 (bloque_codigo -> declarar_if bloque_codigo .)
    PA              reduce using rule 33 (bloque_codigo -> declarar_if bloque_codigo .)


state 92

    (34) bloque_codigo -> declaracion bloque_codigo .

    REFETUFURN      reduce using rule 34 (bloque_codigo -> declaracion bloque_codigo .)
    LLAVEC          reduce using rule 34 (bloque_codigo -> declaracion bloque_codigo .)
    VACIO           reduce using rule 34 (bloque_codigo -> declaracion bloque_codigo .)
    IFIF            reduce using rule 34 (bloque_codigo -> declaracion bloque_codigo .)
    AFARRAFAY       reduce using rule 34 (bloque_codigo -> declaracion bloque_codigo .)
    ID              reduce using rule 34 (bloque_codigo -> declaracion bloque_codigo .)
    PRIFINT         reduce using rule 34 (bloque_codigo -> declaracion bloque_codigo .)
    IFINPUFUT       reduce using rule 34 (bloque_codigo -> declaracion bloque_codigo .)
    WHIFILEFE       reduce using rule 34 (bloque_codigo -> declaracion bloque_codigo .)
    IFINT           reduce using rule 34 (bloque_codigo -> declaracion bloque_codigo .)
    STRIFING        reduce using rule 34 (bloque_codigo -> declaracion bloque_codigo .)
    STRUFUCT        reduce using rule 34 (bloque_codigo -> declaracion bloque_codigo .)
    VOFOIFID        reduce using rule 34 (bloque_codigo -> declaracion bloque_codigo .)
    CHAFAR          reduce using rule 34 (bloque_codigo -> declaracion bloque_codigo .)
    BOFOOFOL        reduce using rule 34 (bloque_codigo -> declaracion bloque_codigo .)
    FLOFOAFAT       reduce using rule 34 (bloque_codigo -> declaracion bloque_codigo .)
    PA              reduce using rule 34 (bloque_codigo -> declaracion bloque_codigo .)


state 93

    (35) bloque_codigo -> asignar_estructuras bloque_codigo .

    REFETUFURN      reduce using rule 35 (bloque_codigo -> asignar_estructuras bloque_codigo .)
    LLAVEC          reduce using rule 35 (bloque_codigo -> asignar_estructuras bloque_codigo .)
    VACIO           reduce using rule 35 (bloque_codigo -> asignar_estructuras bloque_codigo .)
    IFIF            reduce using rule 35 (bloque_codigo -> asignar_estructuras bloque_codigo .)
    AFARRAFAY       reduce using rule 35 (bloque_codigo -> asignar_estructuras bloque_codigo .)
    ID              reduce using rule 35 (bloque_codigo -> asignar_estructuras bloque_codigo .)
    PRIFINT         reduce using rule 35 (bloque_codigo -> asignar_estructuras bloque_codigo .)
    IFINPUFUT       reduce using rule 35 (bloque_codigo -> asignar_estructuras bloque_codigo .)
    WHIFILEFE       reduce using rule 35 (bloque_codigo -> asignar_estructuras bloque_codigo .)
    IFINT           reduce using rule 35 (bloque_codigo -> asignar_estructuras bloque_codigo .)
    STRIFING        reduce using rule 35 (bloque_codigo -> asignar_estructuras bloque_codigo .)
    STRUFUCT        reduce using rule 35 (bloque_codigo -> asignar_estructuras bloque_codigo .)
    VOFOIFID        reduce using rule 35 (bloque_codigo -> asignar_estructuras bloque_codigo .)
    CHAFAR          reduce using rule 35 (bloque_codigo -> asignar_estructuras bloque_codigo .)
    BOFOOFOL        reduce using rule 35 (bloque_codigo -> asignar_estructuras bloque_codigo .)
    FLOFOAFAT       reduce using rule 35 (bloque_codigo -> asignar_estructuras bloque_codigo .)
    PA              reduce using rule 35 (bloque_codigo -> asignar_estructuras bloque_codigo .)


state 94

    (36) bloque_codigo -> asignar_array bloque_codigo .

    REFETUFURN      reduce using rule 36 (bloque_codigo -> asignar_array bloque_codigo .)
    LLAVEC          reduce using rule 36 (bloque_codigo -> asignar_array bloque_codigo .)
    VACIO           reduce using rule 36 (bloque_codigo -> asignar_array bloque_codigo .)
    IFIF            reduce using rule 36 (bloque_codigo -> asignar_array bloque_codigo .)
    AFARRAFAY       reduce using rule 36 (bloque_codigo -> asignar_array bloque_codigo .)
    ID              reduce using rule 36 (bloque_codigo -> asignar_array bloque_codigo .)
    PRIFINT         reduce using rule 36 (bloque_codigo -> asignar_array bloque_codigo .)
    IFINPUFUT       reduce using rule 36 (bloque_codigo -> asignar_array bloque_codigo .)
    WHIFILEFE       reduce using rule 36 (bloque_codigo -> asignar_array bloque_codigo .)
    IFINT           reduce using rule 36 (bloque_codigo -> asignar_array bloque_codigo .)
    STRIFING        reduce using rule 36 (bloque_codigo -> asignar_array bloque_codigo .)
    STRUFUCT        reduce using rule 36 (bloque_codigo -> asignar_array bloque_codigo .)
    VOFOIFID        reduce using rule 36 (bloque_codigo -> asignar_array bloque_codigo .)
    CHAFAR          reduce using rule 36 (bloque_codigo -> asignar_array bloque_codigo .)
    BOFOOFOL        reduce using rule 36 (bloque_codigo -> asignar_array bloque_codigo .)
    FLOFOAFAT       reduce using rule 36 (bloque_codigo -> asignar_array bloque_codigo .)
    PA              reduce using rule 36 (bloque_codigo -> asignar_array bloque_codigo .)


state 95

    (37) bloque_codigo -> funcion bloque_codigo .

    REFETUFURN      reduce using rule 37 (bloque_codigo -> funcion bloque_codigo .)
    LLAVEC          reduce using rule 37 (bloque_codigo -> funcion bloque_codigo .)
    VACIO           reduce using rule 37 (bloque_codigo -> funcion bloque_codigo .)
    IFIF            reduce using rule 37 (bloque_codigo -> funcion bloque_codigo .)
    AFARRAFAY       reduce using rule 37 (bloque_codigo -> funcion bloque_codigo .)
    ID              reduce using rule 37 (bloque_codigo -> funcion bloque_codigo .)
    PRIFINT         reduce using rule 37 (bloque_codigo -> funcion bloque_codigo .)
    IFINPUFUT       reduce using rule 37 (bloque_codigo -> funcion bloque_codigo .)
    WHIFILEFE       reduce using rule 37 (bloque_codigo -> funcion bloque_codigo .)
    IFINT           reduce using rule 37 (bloque_codigo -> funcion bloque_codigo .)
    STRIFING        reduce using rule 37 (bloque_codigo -> funcion bloque_codigo .)
    STRUFUCT        reduce using rule 37 (bloque_codigo -> funcion bloque_codigo .)
    VOFOIFID        reduce using rule 37 (bloque_codigo -> funcion bloque_codigo .)
    CHAFAR          reduce using rule 37 (bloque_codigo -> funcion bloque_codigo .)
    BOFOOFOL        reduce using rule 37 (bloque_codigo -> funcion bloque_codigo .)
    FLOFOAFAT       reduce using rule 37 (bloque_codigo -> funcion bloque_codigo .)
    PA              reduce using rule 37 (bloque_codigo -> funcion bloque_codigo .)


state 96

    (38) bloque_codigo -> print bloque_codigo .

    REFETUFURN      reduce using rule 38 (bloque_codigo -> print bloque_codigo .)
    LLAVEC          reduce using rule 38 (bloque_codigo -> print bloque_codigo .)
    VACIO           reduce using rule 38 (bloque_codigo -> print bloque_codigo .)
    IFIF            reduce using rule 38 (bloque_codigo -> print bloque_codigo .)
    AFARRAFAY       reduce using rule 38 (bloque_codigo -> print bloque_codigo .)
    ID              reduce using rule 38 (bloque_codigo -> print bloque_codigo .)
    PRIFINT         reduce using rule 38 (bloque_codigo -> print bloque_codigo .)
    IFINPUFUT       reduce using rule 38 (bloque_codigo -> print bloque_codigo .)
    WHIFILEFE       reduce using rule 38 (bloque_codigo -> print bloque_codigo .)
    IFINT           reduce using rule 38 (bloque_codigo -> print bloque_codigo .)
    STRIFING        reduce using rule 38 (bloque_codigo -> print bloque_codigo .)
    STRUFUCT        reduce using rule 38 (bloque_codigo -> print bloque_codigo .)
    VOFOIFID        reduce using rule 38 (bloque_codigo -> print bloque_codigo .)
    CHAFAR          reduce using rule 38 (bloque_codigo -> print bloque_codigo .)
    BOFOOFOL        reduce using rule 38 (bloque_codigo -> print bloque_codigo .)
    FLOFOAFAT       reduce using rule 38 (bloque_codigo -> print bloque_codigo .)
    PA              reduce using rule 38 (bloque_codigo -> print bloque_codigo .)


state 97

    (39) bloque_codigo -> input bloque_codigo .

    REFETUFURN      reduce using rule 39 (bloque_codigo -> input bloque_codigo .)
    LLAVEC          reduce using rule 39 (bloque_codigo -> input bloque_codigo .)
    VACIO           reduce using rule 39 (bloque_codigo -> input bloque_codigo .)
    IFIF            reduce using rule 39 (bloque_codigo -> input bloque_codigo .)
    AFARRAFAY       reduce using rule 39 (bloque_codigo -> input bloque_codigo .)
    ID              reduce using rule 39 (bloque_codigo -> input bloque_codigo .)
    PRIFINT         reduce using rule 39 (bloque_codigo -> input bloque_codigo .)
    IFINPUFUT       reduce using rule 39 (bloque_codigo -> input bloque_codigo .)
    WHIFILEFE       reduce using rule 39 (bloque_codigo -> input bloque_codigo .)
    IFINT           reduce using rule 39 (bloque_codigo -> input bloque_codigo .)
    STRIFING        reduce using rule 39 (bloque_codigo -> input bloque_codigo .)
    STRUFUCT        reduce using rule 39 (bloque_codigo -> input bloque_codigo .)
    VOFOIFID        reduce using rule 39 (bloque_codigo -> input bloque_codigo .)
    CHAFAR          reduce using rule 39 (bloque_codigo -> input bloque_codigo .)
    BOFOOFOL        reduce using rule 39 (bloque_codigo -> input bloque_codigo .)
    FLOFOAFAT       reduce using rule 39 (bloque_codigo -> input bloque_codigo .)
    PA              reduce using rule 39 (bloque_codigo -> input bloque_codigo .)


state 98

    (40) bloque_codigo -> declaracion_while bloque_codigo .

    REFETUFURN      reduce using rule 40 (bloque_codigo -> declaracion_while bloque_codigo .)
    LLAVEC          reduce using rule 40 (bloque_codigo -> declaracion_while bloque_codigo .)
    VACIO           reduce using rule 40 (bloque_codigo -> declaracion_while bloque_codigo .)
    IFIF            reduce using rule 40 (bloque_codigo -> declaracion_while bloque_codigo .)
    AFARRAFAY       reduce using rule 40 (bloque_codigo -> declaracion_while bloque_codigo .)
    ID              reduce using rule 40 (bloque_codigo -> declaracion_while bloque_codigo .)
    PRIFINT         reduce using rule 40 (bloque_codigo -> declaracion_while bloque_codigo .)
    IFINPUFUT       reduce using rule 40 (bloque_codigo -> declaracion_while bloque_codigo .)
    WHIFILEFE       reduce using rule 40 (bloque_codigo -> declaracion_while bloque_codigo .)
    IFINT           reduce using rule 40 (bloque_codigo -> declaracion_while bloque_codigo .)
    STRIFING        reduce using rule 40 (bloque_codigo -> declaracion_while bloque_codigo .)
    STRUFUCT        reduce using rule 40 (bloque_codigo -> declaracion_while bloque_codigo .)
    VOFOIFID        reduce using rule 40 (bloque_codigo -> declaracion_while bloque_codigo .)
    CHAFAR          reduce using rule 40 (bloque_codigo -> declaracion_while bloque_codigo .)
    BOFOOFOL        reduce using rule 40 (bloque_codigo -> declaracion_while bloque_codigo .)
    FLOFOAFAT       reduce using rule 40 (bloque_codigo -> declaracion_while bloque_codigo .)
    PA              reduce using rule 40 (bloque_codigo -> declaracion_while bloque_codigo .)


state 99

    (42) declarar_if -> IFIF PA . condicion PC LLAVEA bloque_codigo LLAVEC
    (43) declarar_if -> IFIF PA . condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE LLAVEA bloque_codigo LLAVEC
    (45) declarar_if_error_llave -> IFIF PA . condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE LLAVEA bloque_codigo
    (46) declarar_if_error_llave -> IFIF PA . condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE bloque_codigo LLAVEC
    (75) condicion -> . ID operadores ID

    ID              shift and go to state 89

    condicion                      shift and go to state 137

state 100

    (47) declaracion -> tipo_dato ID . ASG ID operacion_matematica ID PYC
    (48) declaracion -> tipo_dato ID . ASG dato PYC

    ASG             shift and go to state 138


state 101

    (54) declaracion_error -> ID ID . PYC
    (55) declaracion_error -> ID ID . ASG ID operacion_matematica ID PYC
    (56) declaracion_error -> ID ID . ASG valores PYC
    (57) declaracion_error -> ID ID . dimensiones PYC
    (59) dimensiones -> . dimension dimensiones
    (60) dimensiones -> . VACIO
    (61) dimension -> . CA INT CC

    PYC             shift and go to state 139
    ASG             shift and go to state 140
    VACIO           shift and go to state 108
    CA              shift and go to state 109

    dimensiones                    shift and go to state 141
    dimension                      shift and go to state 107

state 102

    (63) asignar_estructuras -> ID PUNTO . ID ASG dato PYC

    ID              shift and go to state 142


state 103

    (52) declaracion_error -> ID ASG . ID operacion_matematica ID PYC
    (53) declaracion_error -> ID ASG . valores PYC
    (82) valores -> . INT
    (83) valores -> . CHAR
    (84) valores -> . TRUFUEFE
    (85) valores -> . FAFALSEFE
    (86) valores -> . PCC
    (87) valores -> . ID

    ID              shift and go to state 143
    INT             shift and go to state 145
    CHAR            shift and go to state 146
    TRUFUEFE        shift and go to state 147
    FAFALSEFE       shift and go to state 148
    PCC             shift and go to state 149

    valores                        shift and go to state 144

state 104

    (51) declaracion_error -> ID PYC .

    VACIO           reduce using rule 51 (declaracion_error -> ID PYC .)
    IFIF            reduce using rule 51 (declaracion_error -> ID PYC .)
    AFARRAFAY       reduce using rule 51 (declaracion_error -> ID PYC .)
    ID              reduce using rule 51 (declaracion_error -> ID PYC .)
    PRIFINT         reduce using rule 51 (declaracion_error -> ID PYC .)
    IFINPUFUT       reduce using rule 51 (declaracion_error -> ID PYC .)
    WHIFILEFE       reduce using rule 51 (declaracion_error -> ID PYC .)
    IFINT           reduce using rule 51 (declaracion_error -> ID PYC .)
    STRIFING        reduce using rule 51 (declaracion_error -> ID PYC .)
    STRUFUCT        reduce using rule 51 (declaracion_error -> ID PYC .)
    VOFOIFID        reduce using rule 51 (declaracion_error -> ID PYC .)
    CHAFAR          reduce using rule 51 (declaracion_error -> ID PYC .)
    BOFOOFOL        reduce using rule 51 (declaracion_error -> ID PYC .)
    FLOFOAFAT       reduce using rule 51 (declaracion_error -> ID PYC .)
    PA              reduce using rule 51 (declaracion_error -> ID PYC .)


state 105

    (62) asignar_array -> ID dimensiones . ASG dato PYC
    (58) declaracion_error -> ID dimensiones . PYC

    ASG             shift and go to state 150
    PYC             shift and go to state 151


state 106

    (64) funcion -> ID PA . valores PC PYC
    (65) funcion -> ID PA . PC PYC
    (66) funcion -> ID PA . valores COMA valores PC PYC
    (72) declaracion_while_error -> ID PA . condicion PC LLAVEA bloque_codigo LLAVEC
    (82) valores -> . INT
    (83) valores -> . CHAR
    (84) valores -> . TRUFUEFE
    (85) valores -> . FAFALSEFE
    (86) valores -> . PCC
    (87) valores -> . ID
    (75) condicion -> . ID operadores ID

    PC              shift and go to state 154
    INT             shift and go to state 145
    CHAR            shift and go to state 146
    TRUFUEFE        shift and go to state 147
    FAFALSEFE       shift and go to state 148
    PCC             shift and go to state 149
    ID              shift and go to state 152

    valores                        shift and go to state 153
    condicion                      shift and go to state 155

state 107

    (59) dimensiones -> dimension . dimensiones
    (59) dimensiones -> . dimension dimensiones
    (60) dimensiones -> . VACIO
    (61) dimension -> . CA INT CC

    VACIO           shift and go to state 108
    CA              shift and go to state 109

    dimension                      shift and go to state 107
    dimensiones                    shift and go to state 156

state 108

    (60) dimensiones -> VACIO .

    ASG             reduce using rule 60 (dimensiones -> VACIO .)
    PYC             reduce using rule 60 (dimensiones -> VACIO .)


state 109

    (61) dimension -> CA . INT CC

    INT             shift and go to state 157


state 110

    (49) declaracion -> AFARRAFAY ID . dimensiones PYC
    (59) dimensiones -> . dimension dimensiones
    (60) dimensiones -> . VACIO
    (61) dimension -> . CA INT CC

    VACIO           shift and go to state 108
    CA              shift and go to state 109

    dimensiones                    shift and go to state 158
    dimension                      shift and go to state 107

state 111

    (67) print -> PRIFINT PA . ID PC PYC

    ID              shift and go to state 159


state 112

    (68) input -> IFINPUFUT PA . ID PC PYC

    ID              shift and go to state 160


state 113

    (69) declaracion_while -> WHIFILEFE PA . condicion PC LLAVEA bloque_codigo LLAVEC
    (73) declaracion_while_error -> WHIFILEFE PA . condicion PC bloque_codigo LLAVEC
    (74) declaracion_while_error -> WHIFILEFE PA . condicion PC LLAVEA bloque_codigo
    (75) condicion -> . ID operadores ID

    ID              shift and go to state 89

    condicion                      shift and go to state 161

state 114

    (24) declarar_main_error -> IFINT ID PA PC LLAVEA bloque_codigo . REFETUFURN PYC LLAVEC

    REFETUFURN      shift and go to state 162


state 115

    (20) declarar_main_error -> MAFAIFIN PA PC LLAVEA bloque_codigo REFETUFURN . PYC LLAVEC

    PYC             shift and go to state 163


state 116

    (22) declarar_main_error -> MAFAIFIN PA PC LLAVEA bloque_codigo LLAVEC .

    $end            reduce using rule 22 (declarar_main_error -> MAFAIFIN PA PC LLAVEA bloque_codigo LLAVEC .)


state 117

    (12) declarar_estructuras_error -> STRUFUCT ID LLAVEA ID PYC ID PYC . LLAVEC

    LLAVEC          shift and go to state 164


state 118

    (5) declarar_estructuras -> STRUFUCT ID LLAVEA tipo_dato ID PYC tipo_dato . ID PYC LLAVEC
    (10) declarar_estructuras_error -> STRUFUCT ID LLAVEA tipo_dato ID PYC tipo_dato . PYC LLAVEC
    (13) declarar_estructuras_error -> STRUFUCT ID LLAVEA tipo_dato ID PYC tipo_dato . ID PYC tipo_dato ID PYC LLAVEC

    ID              shift and go to state 165
    PYC             shift and go to state 166


state 119

    (9) declarar_estructuras_error -> STRUFUCT ID LLAVEA tipo_dato PYC tipo_dato ID . PYC LLAVEC

    PYC             shift and go to state 167


state 120

    (11) declarar_estructuras_error -> STRUFUCT ID LLAVEA tipo_dato PYC tipo_dato PYC . LLAVEC

    LLAVEC          shift and go to state 168


state 121

    (8) declarar_estructuras_error -> ID ID LLAVEA tipo_dato ID PYC tipo_dato . ID PYC LLAVEC

    ID              shift and go to state 169


state 122

    (7) declarar_estructuras_error -> ID LLAVEA tipo_dato ID PYC tipo_dato ID . PYC LLAVEC

    PYC             shift and go to state 170


state 123

    (14) declarar_funciones -> FUNCTION tipo_dato ID PA tipo_dato ID PC . LLAVEA bloque_codigo REFETUFURN ID PYC LLAVEC

    LLAVEA          shift and go to state 171


state 124

    (17) declarar_funciones -> FUNCTION tipo_dato ID PA tipo_dato ID COMA . tipo_dato ID PC LLAVEA bloque_codigo REFETUFURN ID PYC LLAVEC
    (25) tipo_dato -> . IFINT
    (26) tipo_dato -> . STRIFING
    (27) tipo_dato -> . AFARRAFAY
    (28) tipo_dato -> . STRUFUCT
    (29) tipo_dato -> . VOFOIFID
    (30) tipo_dato -> . CHAFAR
    (31) tipo_dato -> . BOFOOFOL
    (32) tipo_dato -> . FLOFOAFAT

    IFINT           shift and go to state 19
    STRIFING        shift and go to state 20
    AFARRAFAY       shift and go to state 21
    STRUFUCT        shift and go to state 22
    VOFOIFID        shift and go to state 23
    CHAFAR          shift and go to state 24
    BOFOOFOL        shift and go to state 25
    FLOFOAFAT       shift and go to state 26

    tipo_dato                      shift and go to state 172

state 125

    (15) declarar_funciones -> FUNCTION tipo_dato ID PA PC LLAVEA bloque_codigo . REFETUFURN ID PYC LLAVEC
    (16) declarar_funciones -> FUNCTION tipo_dato ID PA PC LLAVEA bloque_codigo . REFETUFURN PYC LLAVEC

    REFETUFURN      shift and go to state 173


state 126

    (18) declarar_main -> IFINT MAFAIFIN PA PC LLAVEA bloque_codigo REFETUFURN . PYC LLAVEC

    PYC             shift and go to state 174


state 127

    (21) declarar_main_error -> IFINT MAFAIFIN PA PC LLAVEA bloque_codigo LLAVEC .

    $end            reduce using rule 21 (declarar_main_error -> IFINT MAFAIFIN PA PC LLAVEA bloque_codigo LLAVEC .)


state 128

    (71) declaracion_while_error -> PA condicion PC . LLAVEA bloque_codigo LLAVEC

    LLAVEA          shift and go to state 175


state 129

    (75) condicion -> ID operadores . ID

    ID              shift and go to state 176


state 130

    (94) operadores -> MEN .

    ID              reduce using rule 94 (operadores -> MEN .)


state 131

    (95) operadores -> MAY .

    ID              reduce using rule 95 (operadores -> MAY .)


state 132

    (96) operadores -> MENIG .

    ID              reduce using rule 96 (operadores -> MENIG .)


state 133

    (97) operadores -> MAYIG .

    ID              reduce using rule 97 (operadores -> MAYIG .)


state 134

    (98) operadores -> CMP .

    ID              reduce using rule 98 (operadores -> CMP .)


state 135

    (99) operadores -> DIF .

    ID              reduce using rule 99 (operadores -> DIF .)


state 136

    (23) declarar_main_error -> IFINT PA PC LLAVEA bloque_codigo REFETUFURN PYC . LLAVEC

    LLAVEC          shift and go to state 177


state 137

    (42) declarar_if -> IFIF PA condicion . PC LLAVEA bloque_codigo LLAVEC
    (43) declarar_if -> IFIF PA condicion . PC LLAVEA bloque_codigo LLAVEC EFELSEFE LLAVEA bloque_codigo LLAVEC
    (45) declarar_if_error_llave -> IFIF PA condicion . PC LLAVEA bloque_codigo LLAVEC EFELSEFE LLAVEA bloque_codigo
    (46) declarar_if_error_llave -> IFIF PA condicion . PC LLAVEA bloque_codigo LLAVEC EFELSEFE bloque_codigo LLAVEC

    PC              shift and go to state 178


state 138

    (47) declaracion -> tipo_dato ID ASG . ID operacion_matematica ID PYC
    (48) declaracion -> tipo_dato ID ASG . dato PYC
    (88) dato -> . INT
    (89) dato -> . CHAR
    (90) dato -> . TRUFUEFE
    (91) dato -> . FAFALSEFE
    (92) dato -> . PCC
    (93) dato -> . REAL

    ID              shift and go to state 179
    INT             shift and go to state 181
    CHAR            shift and go to state 182
    TRUFUEFE        shift and go to state 183
    FAFALSEFE       shift and go to state 184
    PCC             shift and go to state 185
    REAL            shift and go to state 186

    dato                           shift and go to state 180

state 139

    (54) declaracion_error -> ID ID PYC .

    VACIO           reduce using rule 54 (declaracion_error -> ID ID PYC .)
    IFIF            reduce using rule 54 (declaracion_error -> ID ID PYC .)
    AFARRAFAY       reduce using rule 54 (declaracion_error -> ID ID PYC .)
    ID              reduce using rule 54 (declaracion_error -> ID ID PYC .)
    PRIFINT         reduce using rule 54 (declaracion_error -> ID ID PYC .)
    IFINPUFUT       reduce using rule 54 (declaracion_error -> ID ID PYC .)
    WHIFILEFE       reduce using rule 54 (declaracion_error -> ID ID PYC .)
    IFINT           reduce using rule 54 (declaracion_error -> ID ID PYC .)
    STRIFING        reduce using rule 54 (declaracion_error -> ID ID PYC .)
    STRUFUCT        reduce using rule 54 (declaracion_error -> ID ID PYC .)
    VOFOIFID        reduce using rule 54 (declaracion_error -> ID ID PYC .)
    CHAFAR          reduce using rule 54 (declaracion_error -> ID ID PYC .)
    BOFOOFOL        reduce using rule 54 (declaracion_error -> ID ID PYC .)
    FLOFOAFAT       reduce using rule 54 (declaracion_error -> ID ID PYC .)
    PA              reduce using rule 54 (declaracion_error -> ID ID PYC .)


state 140

    (55) declaracion_error -> ID ID ASG . ID operacion_matematica ID PYC
    (56) declaracion_error -> ID ID ASG . valores PYC
    (82) valores -> . INT
    (83) valores -> . CHAR
    (84) valores -> . TRUFUEFE
    (85) valores -> . FAFALSEFE
    (86) valores -> . PCC
    (87) valores -> . ID

    ID              shift and go to state 187
    INT             shift and go to state 145
    CHAR            shift and go to state 146
    TRUFUEFE        shift and go to state 147
    FAFALSEFE       shift and go to state 148
    PCC             shift and go to state 149

    valores                        shift and go to state 188

state 141

    (57) declaracion_error -> ID ID dimensiones . PYC

    PYC             shift and go to state 189


state 142

    (63) asignar_estructuras -> ID PUNTO ID . ASG dato PYC

    ASG             shift and go to state 190


state 143

    (52) declaracion_error -> ID ASG ID . operacion_matematica ID PYC
    (87) valores -> ID .
    (76) operacion_matematica -> . SUM
    (77) operacion_matematica -> . RES
    (78) operacion_matematica -> . MUL
    (79) operacion_matematica -> . DIV
    (80) operacion_matematica -> . RED
    (81) operacion_matematica -> . POT

    PYC             reduce using rule 87 (valores -> ID .)
    SUM             shift and go to state 192
    RES             shift and go to state 193
    MUL             shift and go to state 194
    DIV             shift and go to state 195
    RED             shift and go to state 196
    POT             shift and go to state 197

    operacion_matematica           shift and go to state 191

state 144

    (53) declaracion_error -> ID ASG valores . PYC

    PYC             shift and go to state 198


state 145

    (82) valores -> INT .

    PYC             reduce using rule 82 (valores -> INT .)
    PC              reduce using rule 82 (valores -> INT .)
    COMA            reduce using rule 82 (valores -> INT .)


state 146

    (83) valores -> CHAR .

    PYC             reduce using rule 83 (valores -> CHAR .)
    PC              reduce using rule 83 (valores -> CHAR .)
    COMA            reduce using rule 83 (valores -> CHAR .)


state 147

    (84) valores -> TRUFUEFE .

    PYC             reduce using rule 84 (valores -> TRUFUEFE .)
    PC              reduce using rule 84 (valores -> TRUFUEFE .)
    COMA            reduce using rule 84 (valores -> TRUFUEFE .)


state 148

    (85) valores -> FAFALSEFE .

    PYC             reduce using rule 85 (valores -> FAFALSEFE .)
    PC              reduce using rule 85 (valores -> FAFALSEFE .)
    COMA            reduce using rule 85 (valores -> FAFALSEFE .)


state 149

    (86) valores -> PCC .

    PYC             reduce using rule 86 (valores -> PCC .)
    PC              reduce using rule 86 (valores -> PCC .)
    COMA            reduce using rule 86 (valores -> PCC .)


state 150

    (62) asignar_array -> ID dimensiones ASG . dato PYC
    (88) dato -> . INT
    (89) dato -> . CHAR
    (90) dato -> . TRUFUEFE
    (91) dato -> . FAFALSEFE
    (92) dato -> . PCC
    (93) dato -> . REAL

    INT             shift and go to state 181
    CHAR            shift and go to state 182
    TRUFUEFE        shift and go to state 183
    FAFALSEFE       shift and go to state 184
    PCC             shift and go to state 185
    REAL            shift and go to state 186

    dato                           shift and go to state 199

state 151

    (58) declaracion_error -> ID dimensiones PYC .

    VACIO           reduce using rule 58 (declaracion_error -> ID dimensiones PYC .)
    IFIF            reduce using rule 58 (declaracion_error -> ID dimensiones PYC .)
    AFARRAFAY       reduce using rule 58 (declaracion_error -> ID dimensiones PYC .)
    ID              reduce using rule 58 (declaracion_error -> ID dimensiones PYC .)
    PRIFINT         reduce using rule 58 (declaracion_error -> ID dimensiones PYC .)
    IFINPUFUT       reduce using rule 58 (declaracion_error -> ID dimensiones PYC .)
    WHIFILEFE       reduce using rule 58 (declaracion_error -> ID dimensiones PYC .)
    IFINT           reduce using rule 58 (declaracion_error -> ID dimensiones PYC .)
    STRIFING        reduce using rule 58 (declaracion_error -> ID dimensiones PYC .)
    STRUFUCT        reduce using rule 58 (declaracion_error -> ID dimensiones PYC .)
    VOFOIFID        reduce using rule 58 (declaracion_error -> ID dimensiones PYC .)
    CHAFAR          reduce using rule 58 (declaracion_error -> ID dimensiones PYC .)
    BOFOOFOL        reduce using rule 58 (declaracion_error -> ID dimensiones PYC .)
    FLOFOAFAT       reduce using rule 58 (declaracion_error -> ID dimensiones PYC .)
    PA              reduce using rule 58 (declaracion_error -> ID dimensiones PYC .)


state 152

    (87) valores -> ID .
    (75) condicion -> ID . operadores ID
    (94) operadores -> . MEN
    (95) operadores -> . MAY
    (96) operadores -> . MENIG
    (97) operadores -> . MAYIG
    (98) operadores -> . CMP
    (99) operadores -> . DIF

    PC              reduce using rule 87 (valores -> ID .)
    COMA            reduce using rule 87 (valores -> ID .)
    MEN             shift and go to state 130
    MAY             shift and go to state 131
    MENIG           shift and go to state 132
    MAYIG           shift and go to state 133
    CMP             shift and go to state 134
    DIF             shift and go to state 135

    operadores                     shift and go to state 129

state 153

    (64) funcion -> ID PA valores . PC PYC
    (66) funcion -> ID PA valores . COMA valores PC PYC

    PC              shift and go to state 200
    COMA            shift and go to state 201


state 154

    (65) funcion -> ID PA PC . PYC

    PYC             shift and go to state 202


state 155

    (72) declaracion_while_error -> ID PA condicion . PC LLAVEA bloque_codigo LLAVEC

    PC              shift and go to state 203


state 156

    (59) dimensiones -> dimension dimensiones .

    ASG             reduce using rule 59 (dimensiones -> dimension dimensiones .)
    PYC             reduce using rule 59 (dimensiones -> dimension dimensiones .)


state 157

    (61) dimension -> CA INT . CC

    CC              shift and go to state 204


state 158

    (49) declaracion -> AFARRAFAY ID dimensiones . PYC

    PYC             shift and go to state 205


state 159

    (67) print -> PRIFINT PA ID . PC PYC

    PC              shift and go to state 206


state 160

    (68) input -> IFINPUFUT PA ID . PC PYC

    PC              shift and go to state 207


state 161

    (69) declaracion_while -> WHIFILEFE PA condicion . PC LLAVEA bloque_codigo LLAVEC
    (73) declaracion_while_error -> WHIFILEFE PA condicion . PC bloque_codigo LLAVEC
    (74) declaracion_while_error -> WHIFILEFE PA condicion . PC LLAVEA bloque_codigo

    PC              shift and go to state 208


state 162

    (24) declarar_main_error -> IFINT ID PA PC LLAVEA bloque_codigo REFETUFURN . PYC LLAVEC

    PYC             shift and go to state 209


state 163

    (20) declarar_main_error -> MAFAIFIN PA PC LLAVEA bloque_codigo REFETUFURN PYC . LLAVEC

    LLAVEC          shift and go to state 210


state 164

    (12) declarar_estructuras_error -> STRUFUCT ID LLAVEA ID PYC ID PYC LLAVEC .

    IFINT           reduce using rule 12 (declarar_estructuras_error -> STRUFUCT ID LLAVEA ID PYC ID PYC LLAVEC .)
    FUNCTION        reduce using rule 12 (declarar_estructuras_error -> STRUFUCT ID LLAVEA ID PYC ID PYC LLAVEC .)
    MAFAIFIN        reduce using rule 12 (declarar_estructuras_error -> STRUFUCT ID LLAVEA ID PYC ID PYC LLAVEC .)


state 165

    (5) declarar_estructuras -> STRUFUCT ID LLAVEA tipo_dato ID PYC tipo_dato ID . PYC LLAVEC
    (13) declarar_estructuras_error -> STRUFUCT ID LLAVEA tipo_dato ID PYC tipo_dato ID . PYC tipo_dato ID PYC LLAVEC

    PYC             shift and go to state 211


state 166

    (10) declarar_estructuras_error -> STRUFUCT ID LLAVEA tipo_dato ID PYC tipo_dato PYC . LLAVEC

    LLAVEC          shift and go to state 212


state 167

    (9) declarar_estructuras_error -> STRUFUCT ID LLAVEA tipo_dato PYC tipo_dato ID PYC . LLAVEC

    LLAVEC          shift and go to state 213


state 168

    (11) declarar_estructuras_error -> STRUFUCT ID LLAVEA tipo_dato PYC tipo_dato PYC LLAVEC .

    IFINT           reduce using rule 11 (declarar_estructuras_error -> STRUFUCT ID LLAVEA tipo_dato PYC tipo_dato PYC LLAVEC .)
    FUNCTION        reduce using rule 11 (declarar_estructuras_error -> STRUFUCT ID LLAVEA tipo_dato PYC tipo_dato PYC LLAVEC .)
    MAFAIFIN        reduce using rule 11 (declarar_estructuras_error -> STRUFUCT ID LLAVEA tipo_dato PYC tipo_dato PYC LLAVEC .)


state 169

    (8) declarar_estructuras_error -> ID ID LLAVEA tipo_dato ID PYC tipo_dato ID . PYC LLAVEC

    PYC             shift and go to state 214


state 170

    (7) declarar_estructuras_error -> ID LLAVEA tipo_dato ID PYC tipo_dato ID PYC . LLAVEC

    LLAVEC          shift and go to state 215


state 171

    (14) declarar_funciones -> FUNCTION tipo_dato ID PA tipo_dato ID PC LLAVEA . bloque_codigo REFETUFURN ID PYC LLAVEC
    (33) bloque_codigo -> . declarar_if bloque_codigo
    (34) bloque_codigo -> . declaracion bloque_codigo
    (35) bloque_codigo -> . asignar_estructuras bloque_codigo
    (36) bloque_codigo -> . asignar_array bloque_codigo
    (37) bloque_codigo -> . funcion bloque_codigo
    (38) bloque_codigo -> . print bloque_codigo
    (39) bloque_codigo -> . input bloque_codigo
    (40) bloque_codigo -> . declaracion_while bloque_codigo
    (41) bloque_codigo -> . VACIO
    (42) declarar_if -> . IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC
    (43) declarar_if -> . IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE LLAVEA bloque_codigo LLAVEC
    (44) declarar_if -> . declarar_if_error_llave
    (47) declaracion -> . tipo_dato ID ASG ID operacion_matematica ID PYC
    (48) declaracion -> . tipo_dato ID ASG dato PYC
    (49) declaracion -> . AFARRAFAY ID dimensiones PYC
    (50) declaracion -> . declaracion_error
    (63) asignar_estructuras -> . ID PUNTO ID ASG dato PYC
    (62) asignar_array -> . ID dimensiones ASG dato PYC
    (64) funcion -> . ID PA valores PC PYC
    (65) funcion -> . ID PA PC PYC
    (66) funcion -> . ID PA valores COMA valores PC PYC
    (67) print -> . PRIFINT PA ID PC PYC
    (68) input -> . IFINPUFUT PA ID PC PYC
    (69) declaracion_while -> . WHIFILEFE PA condicion PC LLAVEA bloque_codigo LLAVEC
    (70) declaracion_while -> . declaracion_while_error
    (45) declarar_if_error_llave -> . IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE LLAVEA bloque_codigo
    (46) declarar_if_error_llave -> . IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE bloque_codigo LLAVEC
    (25) tipo_dato -> . IFINT
    (26) tipo_dato -> . STRIFING
    (27) tipo_dato -> . AFARRAFAY
    (28) tipo_dato -> . STRUFUCT
    (29) tipo_dato -> . VOFOIFID
    (30) tipo_dato -> . CHAFAR
    (31) tipo_dato -> . BOFOOFOL
    (32) tipo_dato -> . FLOFOAFAT
    (51) declaracion_error -> . ID PYC
    (52) declaracion_error -> . ID ASG ID operacion_matematica ID PYC
    (53) declaracion_error -> . ID ASG valores PYC
    (54) declaracion_error -> . ID ID PYC
    (55) declaracion_error -> . ID ID ASG ID operacion_matematica ID PYC
    (56) declaracion_error -> . ID ID ASG valores PYC
    (57) declaracion_error -> . ID ID dimensiones PYC
    (58) declaracion_error -> . ID dimensiones PYC
    (71) declaracion_while_error -> . PA condicion PC LLAVEA bloque_codigo LLAVEC
    (72) declaracion_while_error -> . ID PA condicion PC LLAVEA bloque_codigo LLAVEC
    (73) declaracion_while_error -> . WHIFILEFE PA condicion PC bloque_codigo LLAVEC
    (74) declaracion_while_error -> . WHIFILEFE PA condicion PC LLAVEA bloque_codigo

    VACIO           shift and go to state 67
    IFIF            shift and go to state 68
    AFARRAFAY       shift and go to state 72
    ID              shift and go to state 71
    PRIFINT         shift and go to state 74
    IFINPUFUT       shift and go to state 75
    WHIFILEFE       shift and go to state 76
    IFINT           shift and go to state 19
    STRIFING        shift and go to state 20
    STRUFUCT        shift and go to state 22
    VOFOIFID        shift and go to state 23
    CHAFAR          shift and go to state 24
    BOFOOFOL        shift and go to state 25
    FLOFOAFAT       shift and go to state 26
    PA              shift and go to state 57

    tipo_dato                      shift and go to state 70
    bloque_codigo                  shift and go to state 216
    declarar_if                    shift and go to state 59
    declaracion                    shift and go to state 60
    asignar_estructuras            shift and go to state 61
    asignar_array                  shift and go to state 62
    funcion                        shift and go to state 63
    print                          shift and go to state 64
    input                          shift and go to state 65
    declaracion_while              shift and go to state 66
    declarar_if_error_llave        shift and go to state 69
    declaracion_error              shift and go to state 73
    declaracion_while_error        shift and go to state 77

state 172

    (17) declarar_funciones -> FUNCTION tipo_dato ID PA tipo_dato ID COMA tipo_dato . ID PC LLAVEA bloque_codigo REFETUFURN ID PYC LLAVEC

    ID              shift and go to state 217


state 173

    (15) declarar_funciones -> FUNCTION tipo_dato ID PA PC LLAVEA bloque_codigo REFETUFURN . ID PYC LLAVEC
    (16) declarar_funciones -> FUNCTION tipo_dato ID PA PC LLAVEA bloque_codigo REFETUFURN . PYC LLAVEC

    ID              shift and go to state 218
    PYC             shift and go to state 219


state 174

    (18) declarar_main -> IFINT MAFAIFIN PA PC LLAVEA bloque_codigo REFETUFURN PYC . LLAVEC

    LLAVEC          shift and go to state 220


state 175

    (71) declaracion_while_error -> PA condicion PC LLAVEA . bloque_codigo LLAVEC
    (33) bloque_codigo -> . declarar_if bloque_codigo
    (34) bloque_codigo -> . declaracion bloque_codigo
    (35) bloque_codigo -> . asignar_estructuras bloque_codigo
    (36) bloque_codigo -> . asignar_array bloque_codigo
    (37) bloque_codigo -> . funcion bloque_codigo
    (38) bloque_codigo -> . print bloque_codigo
    (39) bloque_codigo -> . input bloque_codigo
    (40) bloque_codigo -> . declaracion_while bloque_codigo
    (41) bloque_codigo -> . VACIO
    (42) declarar_if -> . IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC
    (43) declarar_if -> . IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE LLAVEA bloque_codigo LLAVEC
    (44) declarar_if -> . declarar_if_error_llave
    (47) declaracion -> . tipo_dato ID ASG ID operacion_matematica ID PYC
    (48) declaracion -> . tipo_dato ID ASG dato PYC
    (49) declaracion -> . AFARRAFAY ID dimensiones PYC
    (50) declaracion -> . declaracion_error
    (63) asignar_estructuras -> . ID PUNTO ID ASG dato PYC
    (62) asignar_array -> . ID dimensiones ASG dato PYC
    (64) funcion -> . ID PA valores PC PYC
    (65) funcion -> . ID PA PC PYC
    (66) funcion -> . ID PA valores COMA valores PC PYC
    (67) print -> . PRIFINT PA ID PC PYC
    (68) input -> . IFINPUFUT PA ID PC PYC
    (69) declaracion_while -> . WHIFILEFE PA condicion PC LLAVEA bloque_codigo LLAVEC
    (70) declaracion_while -> . declaracion_while_error
    (45) declarar_if_error_llave -> . IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE LLAVEA bloque_codigo
    (46) declarar_if_error_llave -> . IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE bloque_codigo LLAVEC
    (25) tipo_dato -> . IFINT
    (26) tipo_dato -> . STRIFING
    (27) tipo_dato -> . AFARRAFAY
    (28) tipo_dato -> . STRUFUCT
    (29) tipo_dato -> . VOFOIFID
    (30) tipo_dato -> . CHAFAR
    (31) tipo_dato -> . BOFOOFOL
    (32) tipo_dato -> . FLOFOAFAT
    (51) declaracion_error -> . ID PYC
    (52) declaracion_error -> . ID ASG ID operacion_matematica ID PYC
    (53) declaracion_error -> . ID ASG valores PYC
    (54) declaracion_error -> . ID ID PYC
    (55) declaracion_error -> . ID ID ASG ID operacion_matematica ID PYC
    (56) declaracion_error -> . ID ID ASG valores PYC
    (57) declaracion_error -> . ID ID dimensiones PYC
    (58) declaracion_error -> . ID dimensiones PYC
    (71) declaracion_while_error -> . PA condicion PC LLAVEA bloque_codigo LLAVEC
    (72) declaracion_while_error -> . ID PA condicion PC LLAVEA bloque_codigo LLAVEC
    (73) declaracion_while_error -> . WHIFILEFE PA condicion PC bloque_codigo LLAVEC
    (74) declaracion_while_error -> . WHIFILEFE PA condicion PC LLAVEA bloque_codigo

    VACIO           shift and go to state 67
    IFIF            shift and go to state 68
    AFARRAFAY       shift and go to state 72
    ID              shift and go to state 71
    PRIFINT         shift and go to state 74
    IFINPUFUT       shift and go to state 75
    WHIFILEFE       shift and go to state 76
    IFINT           shift and go to state 19
    STRIFING        shift and go to state 20
    STRUFUCT        shift and go to state 22
    VOFOIFID        shift and go to state 23
    CHAFAR          shift and go to state 24
    BOFOOFOL        shift and go to state 25
    FLOFOAFAT       shift and go to state 26
    PA              shift and go to state 57

    bloque_codigo                  shift and go to state 221
    declarar_if                    shift and go to state 59
    declaracion                    shift and go to state 60
    asignar_estructuras            shift and go to state 61
    asignar_array                  shift and go to state 62
    funcion                        shift and go to state 63
    print                          shift and go to state 64
    input                          shift and go to state 65
    declaracion_while              shift and go to state 66
    declarar_if_error_llave        shift and go to state 69
    tipo_dato                      shift and go to state 70
    declaracion_error              shift and go to state 73
    declaracion_while_error        shift and go to state 77

state 176

    (75) condicion -> ID operadores ID .

    PC              reduce using rule 75 (condicion -> ID operadores ID .)


state 177

    (23) declarar_main_error -> IFINT PA PC LLAVEA bloque_codigo REFETUFURN PYC LLAVEC .

    $end            reduce using rule 23 (declarar_main_error -> IFINT PA PC LLAVEA bloque_codigo REFETUFURN PYC LLAVEC .)


state 178

    (42) declarar_if -> IFIF PA condicion PC . LLAVEA bloque_codigo LLAVEC
    (43) declarar_if -> IFIF PA condicion PC . LLAVEA bloque_codigo LLAVEC EFELSEFE LLAVEA bloque_codigo LLAVEC
    (45) declarar_if_error_llave -> IFIF PA condicion PC . LLAVEA bloque_codigo LLAVEC EFELSEFE LLAVEA bloque_codigo
    (46) declarar_if_error_llave -> IFIF PA condicion PC . LLAVEA bloque_codigo LLAVEC EFELSEFE bloque_codigo LLAVEC

    LLAVEA          shift and go to state 222


state 179

    (47) declaracion -> tipo_dato ID ASG ID . operacion_matematica ID PYC
    (76) operacion_matematica -> . SUM
    (77) operacion_matematica -> . RES
    (78) operacion_matematica -> . MUL
    (79) operacion_matematica -> . DIV
    (80) operacion_matematica -> . RED
    (81) operacion_matematica -> . POT

    SUM             shift and go to state 192
    RES             shift and go to state 193
    MUL             shift and go to state 194
    DIV             shift and go to state 195
    RED             shift and go to state 196
    POT             shift and go to state 197

    operacion_matematica           shift and go to state 223

state 180

    (48) declaracion -> tipo_dato ID ASG dato . PYC

    PYC             shift and go to state 224


state 181

    (88) dato -> INT .

    PYC             reduce using rule 88 (dato -> INT .)


state 182

    (89) dato -> CHAR .

    PYC             reduce using rule 89 (dato -> CHAR .)


state 183

    (90) dato -> TRUFUEFE .

    PYC             reduce using rule 90 (dato -> TRUFUEFE .)


state 184

    (91) dato -> FAFALSEFE .

    PYC             reduce using rule 91 (dato -> FAFALSEFE .)


state 185

    (92) dato -> PCC .

    PYC             reduce using rule 92 (dato -> PCC .)


state 186

    (93) dato -> REAL .

    PYC             reduce using rule 93 (dato -> REAL .)


state 187

    (55) declaracion_error -> ID ID ASG ID . operacion_matematica ID PYC
    (87) valores -> ID .
    (76) operacion_matematica -> . SUM
    (77) operacion_matematica -> . RES
    (78) operacion_matematica -> . MUL
    (79) operacion_matematica -> . DIV
    (80) operacion_matematica -> . RED
    (81) operacion_matematica -> . POT

    PYC             reduce using rule 87 (valores -> ID .)
    SUM             shift and go to state 192
    RES             shift and go to state 193
    MUL             shift and go to state 194
    DIV             shift and go to state 195
    RED             shift and go to state 196
    POT             shift and go to state 197

    operacion_matematica           shift and go to state 225

state 188

    (56) declaracion_error -> ID ID ASG valores . PYC

    PYC             shift and go to state 226


state 189

    (57) declaracion_error -> ID ID dimensiones PYC .

    VACIO           reduce using rule 57 (declaracion_error -> ID ID dimensiones PYC .)
    IFIF            reduce using rule 57 (declaracion_error -> ID ID dimensiones PYC .)
    AFARRAFAY       reduce using rule 57 (declaracion_error -> ID ID dimensiones PYC .)
    ID              reduce using rule 57 (declaracion_error -> ID ID dimensiones PYC .)
    PRIFINT         reduce using rule 57 (declaracion_error -> ID ID dimensiones PYC .)
    IFINPUFUT       reduce using rule 57 (declaracion_error -> ID ID dimensiones PYC .)
    WHIFILEFE       reduce using rule 57 (declaracion_error -> ID ID dimensiones PYC .)
    IFINT           reduce using rule 57 (declaracion_error -> ID ID dimensiones PYC .)
    STRIFING        reduce using rule 57 (declaracion_error -> ID ID dimensiones PYC .)
    STRUFUCT        reduce using rule 57 (declaracion_error -> ID ID dimensiones PYC .)
    VOFOIFID        reduce using rule 57 (declaracion_error -> ID ID dimensiones PYC .)
    CHAFAR          reduce using rule 57 (declaracion_error -> ID ID dimensiones PYC .)
    BOFOOFOL        reduce using rule 57 (declaracion_error -> ID ID dimensiones PYC .)
    FLOFOAFAT       reduce using rule 57 (declaracion_error -> ID ID dimensiones PYC .)
    PA              reduce using rule 57 (declaracion_error -> ID ID dimensiones PYC .)


state 190

    (63) asignar_estructuras -> ID PUNTO ID ASG . dato PYC
    (88) dato -> . INT
    (89) dato -> . CHAR
    (90) dato -> . TRUFUEFE
    (91) dato -> . FAFALSEFE
    (92) dato -> . PCC
    (93) dato -> . REAL

    INT             shift and go to state 181
    CHAR            shift and go to state 182
    TRUFUEFE        shift and go to state 183
    FAFALSEFE       shift and go to state 184
    PCC             shift and go to state 185
    REAL            shift and go to state 186

    dato                           shift and go to state 227

state 191

    (52) declaracion_error -> ID ASG ID operacion_matematica . ID PYC

    ID              shift and go to state 228


state 192

    (76) operacion_matematica -> SUM .

    ID              reduce using rule 76 (operacion_matematica -> SUM .)


state 193

    (77) operacion_matematica -> RES .

    ID              reduce using rule 77 (operacion_matematica -> RES .)


state 194

    (78) operacion_matematica -> MUL .

    ID              reduce using rule 78 (operacion_matematica -> MUL .)


state 195

    (79) operacion_matematica -> DIV .

    ID              reduce using rule 79 (operacion_matematica -> DIV .)


state 196

    (80) operacion_matematica -> RED .

    ID              reduce using rule 80 (operacion_matematica -> RED .)


state 197

    (81) operacion_matematica -> POT .

    ID              reduce using rule 81 (operacion_matematica -> POT .)


state 198

    (53) declaracion_error -> ID ASG valores PYC .

    VACIO           reduce using rule 53 (declaracion_error -> ID ASG valores PYC .)
    IFIF            reduce using rule 53 (declaracion_error -> ID ASG valores PYC .)
    AFARRAFAY       reduce using rule 53 (declaracion_error -> ID ASG valores PYC .)
    ID              reduce using rule 53 (declaracion_error -> ID ASG valores PYC .)
    PRIFINT         reduce using rule 53 (declaracion_error -> ID ASG valores PYC .)
    IFINPUFUT       reduce using rule 53 (declaracion_error -> ID ASG valores PYC .)
    WHIFILEFE       reduce using rule 53 (declaracion_error -> ID ASG valores PYC .)
    IFINT           reduce using rule 53 (declaracion_error -> ID ASG valores PYC .)
    STRIFING        reduce using rule 53 (declaracion_error -> ID ASG valores PYC .)
    STRUFUCT        reduce using rule 53 (declaracion_error -> ID ASG valores PYC .)
    VOFOIFID        reduce using rule 53 (declaracion_error -> ID ASG valores PYC .)
    CHAFAR          reduce using rule 53 (declaracion_error -> ID ASG valores PYC .)
    BOFOOFOL        reduce using rule 53 (declaracion_error -> ID ASG valores PYC .)
    FLOFOAFAT       reduce using rule 53 (declaracion_error -> ID ASG valores PYC .)
    PA              reduce using rule 53 (declaracion_error -> ID ASG valores PYC .)


state 199

    (62) asignar_array -> ID dimensiones ASG dato . PYC

    PYC             shift and go to state 229


state 200

    (64) funcion -> ID PA valores PC . PYC

    PYC             shift and go to state 230


state 201

    (66) funcion -> ID PA valores COMA . valores PC PYC
    (82) valores -> . INT
    (83) valores -> . CHAR
    (84) valores -> . TRUFUEFE
    (85) valores -> . FAFALSEFE
    (86) valores -> . PCC
    (87) valores -> . ID

    INT             shift and go to state 145
    CHAR            shift and go to state 146
    TRUFUEFE        shift and go to state 147
    FAFALSEFE       shift and go to state 148
    PCC             shift and go to state 149
    ID              shift and go to state 231

    valores                        shift and go to state 232

state 202

    (65) funcion -> ID PA PC PYC .

    VACIO           reduce using rule 65 (funcion -> ID PA PC PYC .)
    IFIF            reduce using rule 65 (funcion -> ID PA PC PYC .)
    AFARRAFAY       reduce using rule 65 (funcion -> ID PA PC PYC .)
    ID              reduce using rule 65 (funcion -> ID PA PC PYC .)
    PRIFINT         reduce using rule 65 (funcion -> ID PA PC PYC .)
    IFINPUFUT       reduce using rule 65 (funcion -> ID PA PC PYC .)
    WHIFILEFE       reduce using rule 65 (funcion -> ID PA PC PYC .)
    IFINT           reduce using rule 65 (funcion -> ID PA PC PYC .)
    STRIFING        reduce using rule 65 (funcion -> ID PA PC PYC .)
    STRUFUCT        reduce using rule 65 (funcion -> ID PA PC PYC .)
    VOFOIFID        reduce using rule 65 (funcion -> ID PA PC PYC .)
    CHAFAR          reduce using rule 65 (funcion -> ID PA PC PYC .)
    BOFOOFOL        reduce using rule 65 (funcion -> ID PA PC PYC .)
    FLOFOAFAT       reduce using rule 65 (funcion -> ID PA PC PYC .)
    PA              reduce using rule 65 (funcion -> ID PA PC PYC .)


state 203

    (72) declaracion_while_error -> ID PA condicion PC . LLAVEA bloque_codigo LLAVEC

    LLAVEA          shift and go to state 233


state 204

    (61) dimension -> CA INT CC .

    VACIO           reduce using rule 61 (dimension -> CA INT CC .)
    CA              reduce using rule 61 (dimension -> CA INT CC .)


state 205

    (49) declaracion -> AFARRAFAY ID dimensiones PYC .

    VACIO           reduce using rule 49 (declaracion -> AFARRAFAY ID dimensiones PYC .)
    IFIF            reduce using rule 49 (declaracion -> AFARRAFAY ID dimensiones PYC .)
    AFARRAFAY       reduce using rule 49 (declaracion -> AFARRAFAY ID dimensiones PYC .)
    ID              reduce using rule 49 (declaracion -> AFARRAFAY ID dimensiones PYC .)
    PRIFINT         reduce using rule 49 (declaracion -> AFARRAFAY ID dimensiones PYC .)
    IFINPUFUT       reduce using rule 49 (declaracion -> AFARRAFAY ID dimensiones PYC .)
    WHIFILEFE       reduce using rule 49 (declaracion -> AFARRAFAY ID dimensiones PYC .)
    IFINT           reduce using rule 49 (declaracion -> AFARRAFAY ID dimensiones PYC .)
    STRIFING        reduce using rule 49 (declaracion -> AFARRAFAY ID dimensiones PYC .)
    STRUFUCT        reduce using rule 49 (declaracion -> AFARRAFAY ID dimensiones PYC .)
    VOFOIFID        reduce using rule 49 (declaracion -> AFARRAFAY ID dimensiones PYC .)
    CHAFAR          reduce using rule 49 (declaracion -> AFARRAFAY ID dimensiones PYC .)
    BOFOOFOL        reduce using rule 49 (declaracion -> AFARRAFAY ID dimensiones PYC .)
    FLOFOAFAT       reduce using rule 49 (declaracion -> AFARRAFAY ID dimensiones PYC .)
    PA              reduce using rule 49 (declaracion -> AFARRAFAY ID dimensiones PYC .)


state 206

    (67) print -> PRIFINT PA ID PC . PYC

    PYC             shift and go to state 234


state 207

    (68) input -> IFINPUFUT PA ID PC . PYC

    PYC             shift and go to state 235


state 208

    (69) declaracion_while -> WHIFILEFE PA condicion PC . LLAVEA bloque_codigo LLAVEC
    (73) declaracion_while_error -> WHIFILEFE PA condicion PC . bloque_codigo LLAVEC
    (74) declaracion_while_error -> WHIFILEFE PA condicion PC . LLAVEA bloque_codigo
    (33) bloque_codigo -> . declarar_if bloque_codigo
    (34) bloque_codigo -> . declaracion bloque_codigo
    (35) bloque_codigo -> . asignar_estructuras bloque_codigo
    (36) bloque_codigo -> . asignar_array bloque_codigo
    (37) bloque_codigo -> . funcion bloque_codigo
    (38) bloque_codigo -> . print bloque_codigo
    (39) bloque_codigo -> . input bloque_codigo
    (40) bloque_codigo -> . declaracion_while bloque_codigo
    (41) bloque_codigo -> . VACIO
    (42) declarar_if -> . IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC
    (43) declarar_if -> . IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE LLAVEA bloque_codigo LLAVEC
    (44) declarar_if -> . declarar_if_error_llave
    (47) declaracion -> . tipo_dato ID ASG ID operacion_matematica ID PYC
    (48) declaracion -> . tipo_dato ID ASG dato PYC
    (49) declaracion -> . AFARRAFAY ID dimensiones PYC
    (50) declaracion -> . declaracion_error
    (63) asignar_estructuras -> . ID PUNTO ID ASG dato PYC
    (62) asignar_array -> . ID dimensiones ASG dato PYC
    (64) funcion -> . ID PA valores PC PYC
    (65) funcion -> . ID PA PC PYC
    (66) funcion -> . ID PA valores COMA valores PC PYC
    (67) print -> . PRIFINT PA ID PC PYC
    (68) input -> . IFINPUFUT PA ID PC PYC
    (69) declaracion_while -> . WHIFILEFE PA condicion PC LLAVEA bloque_codigo LLAVEC
    (70) declaracion_while -> . declaracion_while_error
    (45) declarar_if_error_llave -> . IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE LLAVEA bloque_codigo
    (46) declarar_if_error_llave -> . IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE bloque_codigo LLAVEC
    (25) tipo_dato -> . IFINT
    (26) tipo_dato -> . STRIFING
    (27) tipo_dato -> . AFARRAFAY
    (28) tipo_dato -> . STRUFUCT
    (29) tipo_dato -> . VOFOIFID
    (30) tipo_dato -> . CHAFAR
    (31) tipo_dato -> . BOFOOFOL
    (32) tipo_dato -> . FLOFOAFAT
    (51) declaracion_error -> . ID PYC
    (52) declaracion_error -> . ID ASG ID operacion_matematica ID PYC
    (53) declaracion_error -> . ID ASG valores PYC
    (54) declaracion_error -> . ID ID PYC
    (55) declaracion_error -> . ID ID ASG ID operacion_matematica ID PYC
    (56) declaracion_error -> . ID ID ASG valores PYC
    (57) declaracion_error -> . ID ID dimensiones PYC
    (58) declaracion_error -> . ID dimensiones PYC
    (71) declaracion_while_error -> . PA condicion PC LLAVEA bloque_codigo LLAVEC
    (72) declaracion_while_error -> . ID PA condicion PC LLAVEA bloque_codigo LLAVEC
    (73) declaracion_while_error -> . WHIFILEFE PA condicion PC bloque_codigo LLAVEC
    (74) declaracion_while_error -> . WHIFILEFE PA condicion PC LLAVEA bloque_codigo

    LLAVEA          shift and go to state 236
    VACIO           shift and go to state 67
    IFIF            shift and go to state 68
    AFARRAFAY       shift and go to state 72
    ID              shift and go to state 71
    PRIFINT         shift and go to state 74
    IFINPUFUT       shift and go to state 75
    WHIFILEFE       shift and go to state 76
    IFINT           shift and go to state 19
    STRIFING        shift and go to state 20
    STRUFUCT        shift and go to state 22
    VOFOIFID        shift and go to state 23
    CHAFAR          shift and go to state 24
    BOFOOFOL        shift and go to state 25
    FLOFOAFAT       shift and go to state 26
    PA              shift and go to state 57

    bloque_codigo                  shift and go to state 237
    declarar_if                    shift and go to state 59
    declaracion                    shift and go to state 60
    asignar_estructuras            shift and go to state 61
    asignar_array                  shift and go to state 62
    funcion                        shift and go to state 63
    print                          shift and go to state 64
    input                          shift and go to state 65
    declaracion_while              shift and go to state 66
    declarar_if_error_llave        shift and go to state 69
    tipo_dato                      shift and go to state 70
    declaracion_error              shift and go to state 73
    declaracion_while_error        shift and go to state 77

state 209

    (24) declarar_main_error -> IFINT ID PA PC LLAVEA bloque_codigo REFETUFURN PYC . LLAVEC

    LLAVEC          shift and go to state 238


state 210

    (20) declarar_main_error -> MAFAIFIN PA PC LLAVEA bloque_codigo REFETUFURN PYC LLAVEC .

    $end            reduce using rule 20 (declarar_main_error -> MAFAIFIN PA PC LLAVEA bloque_codigo REFETUFURN PYC LLAVEC .)


state 211

    (5) declarar_estructuras -> STRUFUCT ID LLAVEA tipo_dato ID PYC tipo_dato ID PYC . LLAVEC
    (13) declarar_estructuras_error -> STRUFUCT ID LLAVEA tipo_dato ID PYC tipo_dato ID PYC . tipo_dato ID PYC LLAVEC
    (25) tipo_dato -> . IFINT
    (26) tipo_dato -> . STRIFING
    (27) tipo_dato -> . AFARRAFAY
    (28) tipo_dato -> . STRUFUCT
    (29) tipo_dato -> . VOFOIFID
    (30) tipo_dato -> . CHAFAR
    (31) tipo_dato -> . BOFOOFOL
    (32) tipo_dato -> . FLOFOAFAT

    LLAVEC          shift and go to state 240
    IFINT           shift and go to state 19
    STRIFING        shift and go to state 20
    AFARRAFAY       shift and go to state 21
    STRUFUCT        shift and go to state 22
    VOFOIFID        shift and go to state 23
    CHAFAR          shift and go to state 24
    BOFOOFOL        shift and go to state 25
    FLOFOAFAT       shift and go to state 26

    tipo_dato                      shift and go to state 239

state 212

    (10) declarar_estructuras_error -> STRUFUCT ID LLAVEA tipo_dato ID PYC tipo_dato PYC LLAVEC .

    IFINT           reduce using rule 10 (declarar_estructuras_error -> STRUFUCT ID LLAVEA tipo_dato ID PYC tipo_dato PYC LLAVEC .)
    FUNCTION        reduce using rule 10 (declarar_estructuras_error -> STRUFUCT ID LLAVEA tipo_dato ID PYC tipo_dato PYC LLAVEC .)
    MAFAIFIN        reduce using rule 10 (declarar_estructuras_error -> STRUFUCT ID LLAVEA tipo_dato ID PYC tipo_dato PYC LLAVEC .)


state 213

    (9) declarar_estructuras_error -> STRUFUCT ID LLAVEA tipo_dato PYC tipo_dato ID PYC LLAVEC .

    IFINT           reduce using rule 9 (declarar_estructuras_error -> STRUFUCT ID LLAVEA tipo_dato PYC tipo_dato ID PYC LLAVEC .)
    FUNCTION        reduce using rule 9 (declarar_estructuras_error -> STRUFUCT ID LLAVEA tipo_dato PYC tipo_dato ID PYC LLAVEC .)
    MAFAIFIN        reduce using rule 9 (declarar_estructuras_error -> STRUFUCT ID LLAVEA tipo_dato PYC tipo_dato ID PYC LLAVEC .)


state 214

    (8) declarar_estructuras_error -> ID ID LLAVEA tipo_dato ID PYC tipo_dato ID PYC . LLAVEC

    LLAVEC          shift and go to state 241


state 215

    (7) declarar_estructuras_error -> ID LLAVEA tipo_dato ID PYC tipo_dato ID PYC LLAVEC .

    IFINT           reduce using rule 7 (declarar_estructuras_error -> ID LLAVEA tipo_dato ID PYC tipo_dato ID PYC LLAVEC .)
    FUNCTION        reduce using rule 7 (declarar_estructuras_error -> ID LLAVEA tipo_dato ID PYC tipo_dato ID PYC LLAVEC .)
    MAFAIFIN        reduce using rule 7 (declarar_estructuras_error -> ID LLAVEA tipo_dato ID PYC tipo_dato ID PYC LLAVEC .)


state 216

    (14) declarar_funciones -> FUNCTION tipo_dato ID PA tipo_dato ID PC LLAVEA bloque_codigo . REFETUFURN ID PYC LLAVEC

    REFETUFURN      shift and go to state 242


state 217

    (17) declarar_funciones -> FUNCTION tipo_dato ID PA tipo_dato ID COMA tipo_dato ID . PC LLAVEA bloque_codigo REFETUFURN ID PYC LLAVEC

    PC              shift and go to state 243


state 218

    (15) declarar_funciones -> FUNCTION tipo_dato ID PA PC LLAVEA bloque_codigo REFETUFURN ID . PYC LLAVEC

    PYC             shift and go to state 244


state 219

    (16) declarar_funciones -> FUNCTION tipo_dato ID PA PC LLAVEA bloque_codigo REFETUFURN PYC . LLAVEC

    LLAVEC          shift and go to state 245


state 220

    (18) declarar_main -> IFINT MAFAIFIN PA PC LLAVEA bloque_codigo REFETUFURN PYC LLAVEC .

    $end            reduce using rule 18 (declarar_main -> IFINT MAFAIFIN PA PC LLAVEA bloque_codigo REFETUFURN PYC LLAVEC .)


state 221

    (71) declaracion_while_error -> PA condicion PC LLAVEA bloque_codigo . LLAVEC

    LLAVEC          shift and go to state 246


state 222

    (42) declarar_if -> IFIF PA condicion PC LLAVEA . bloque_codigo LLAVEC
    (43) declarar_if -> IFIF PA condicion PC LLAVEA . bloque_codigo LLAVEC EFELSEFE LLAVEA bloque_codigo LLAVEC
    (45) declarar_if_error_llave -> IFIF PA condicion PC LLAVEA . bloque_codigo LLAVEC EFELSEFE LLAVEA bloque_codigo
    (46) declarar_if_error_llave -> IFIF PA condicion PC LLAVEA . bloque_codigo LLAVEC EFELSEFE bloque_codigo LLAVEC
    (33) bloque_codigo -> . declarar_if bloque_codigo
    (34) bloque_codigo -> . declaracion bloque_codigo
    (35) bloque_codigo -> . asignar_estructuras bloque_codigo
    (36) bloque_codigo -> . asignar_array bloque_codigo
    (37) bloque_codigo -> . funcion bloque_codigo
    (38) bloque_codigo -> . print bloque_codigo
    (39) bloque_codigo -> . input bloque_codigo
    (40) bloque_codigo -> . declaracion_while bloque_codigo
    (41) bloque_codigo -> . VACIO
    (42) declarar_if -> . IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC
    (43) declarar_if -> . IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE LLAVEA bloque_codigo LLAVEC
    (44) declarar_if -> . declarar_if_error_llave
    (47) declaracion -> . tipo_dato ID ASG ID operacion_matematica ID PYC
    (48) declaracion -> . tipo_dato ID ASG dato PYC
    (49) declaracion -> . AFARRAFAY ID dimensiones PYC
    (50) declaracion -> . declaracion_error
    (63) asignar_estructuras -> . ID PUNTO ID ASG dato PYC
    (62) asignar_array -> . ID dimensiones ASG dato PYC
    (64) funcion -> . ID PA valores PC PYC
    (65) funcion -> . ID PA PC PYC
    (66) funcion -> . ID PA valores COMA valores PC PYC
    (67) print -> . PRIFINT PA ID PC PYC
    (68) input -> . IFINPUFUT PA ID PC PYC
    (69) declaracion_while -> . WHIFILEFE PA condicion PC LLAVEA bloque_codigo LLAVEC
    (70) declaracion_while -> . declaracion_while_error
    (45) declarar_if_error_llave -> . IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE LLAVEA bloque_codigo
    (46) declarar_if_error_llave -> . IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE bloque_codigo LLAVEC
    (25) tipo_dato -> . IFINT
    (26) tipo_dato -> . STRIFING
    (27) tipo_dato -> . AFARRAFAY
    (28) tipo_dato -> . STRUFUCT
    (29) tipo_dato -> . VOFOIFID
    (30) tipo_dato -> . CHAFAR
    (31) tipo_dato -> . BOFOOFOL
    (32) tipo_dato -> . FLOFOAFAT
    (51) declaracion_error -> . ID PYC
    (52) declaracion_error -> . ID ASG ID operacion_matematica ID PYC
    (53) declaracion_error -> . ID ASG valores PYC
    (54) declaracion_error -> . ID ID PYC
    (55) declaracion_error -> . ID ID ASG ID operacion_matematica ID PYC
    (56) declaracion_error -> . ID ID ASG valores PYC
    (57) declaracion_error -> . ID ID dimensiones PYC
    (58) declaracion_error -> . ID dimensiones PYC
    (71) declaracion_while_error -> . PA condicion PC LLAVEA bloque_codigo LLAVEC
    (72) declaracion_while_error -> . ID PA condicion PC LLAVEA bloque_codigo LLAVEC
    (73) declaracion_while_error -> . WHIFILEFE PA condicion PC bloque_codigo LLAVEC
    (74) declaracion_while_error -> . WHIFILEFE PA condicion PC LLAVEA bloque_codigo

    VACIO           shift and go to state 67
    IFIF            shift and go to state 68
    AFARRAFAY       shift and go to state 72
    ID              shift and go to state 71
    PRIFINT         shift and go to state 74
    IFINPUFUT       shift and go to state 75
    WHIFILEFE       shift and go to state 76
    IFINT           shift and go to state 19
    STRIFING        shift and go to state 20
    STRUFUCT        shift and go to state 22
    VOFOIFID        shift and go to state 23
    CHAFAR          shift and go to state 24
    BOFOOFOL        shift and go to state 25
    FLOFOAFAT       shift and go to state 26
    PA              shift and go to state 57

    bloque_codigo                  shift and go to state 247
    declarar_if                    shift and go to state 59
    declaracion                    shift and go to state 60
    asignar_estructuras            shift and go to state 61
    asignar_array                  shift and go to state 62
    funcion                        shift and go to state 63
    print                          shift and go to state 64
    input                          shift and go to state 65
    declaracion_while              shift and go to state 66
    declarar_if_error_llave        shift and go to state 69
    tipo_dato                      shift and go to state 70
    declaracion_error              shift and go to state 73
    declaracion_while_error        shift and go to state 77

state 223

    (47) declaracion -> tipo_dato ID ASG ID operacion_matematica . ID PYC

    ID              shift and go to state 248


state 224

    (48) declaracion -> tipo_dato ID ASG dato PYC .

    VACIO           reduce using rule 48 (declaracion -> tipo_dato ID ASG dato PYC .)
    IFIF            reduce using rule 48 (declaracion -> tipo_dato ID ASG dato PYC .)
    AFARRAFAY       reduce using rule 48 (declaracion -> tipo_dato ID ASG dato PYC .)
    ID              reduce using rule 48 (declaracion -> tipo_dato ID ASG dato PYC .)
    PRIFINT         reduce using rule 48 (declaracion -> tipo_dato ID ASG dato PYC .)
    IFINPUFUT       reduce using rule 48 (declaracion -> tipo_dato ID ASG dato PYC .)
    WHIFILEFE       reduce using rule 48 (declaracion -> tipo_dato ID ASG dato PYC .)
    IFINT           reduce using rule 48 (declaracion -> tipo_dato ID ASG dato PYC .)
    STRIFING        reduce using rule 48 (declaracion -> tipo_dato ID ASG dato PYC .)
    STRUFUCT        reduce using rule 48 (declaracion -> tipo_dato ID ASG dato PYC .)
    VOFOIFID        reduce using rule 48 (declaracion -> tipo_dato ID ASG dato PYC .)
    CHAFAR          reduce using rule 48 (declaracion -> tipo_dato ID ASG dato PYC .)
    BOFOOFOL        reduce using rule 48 (declaracion -> tipo_dato ID ASG dato PYC .)
    FLOFOAFAT       reduce using rule 48 (declaracion -> tipo_dato ID ASG dato PYC .)
    PA              reduce using rule 48 (declaracion -> tipo_dato ID ASG dato PYC .)


state 225

    (55) declaracion_error -> ID ID ASG ID operacion_matematica . ID PYC

    ID              shift and go to state 249


state 226

    (56) declaracion_error -> ID ID ASG valores PYC .

    VACIO           reduce using rule 56 (declaracion_error -> ID ID ASG valores PYC .)
    IFIF            reduce using rule 56 (declaracion_error -> ID ID ASG valores PYC .)
    AFARRAFAY       reduce using rule 56 (declaracion_error -> ID ID ASG valores PYC .)
    ID              reduce using rule 56 (declaracion_error -> ID ID ASG valores PYC .)
    PRIFINT         reduce using rule 56 (declaracion_error -> ID ID ASG valores PYC .)
    IFINPUFUT       reduce using rule 56 (declaracion_error -> ID ID ASG valores PYC .)
    WHIFILEFE       reduce using rule 56 (declaracion_error -> ID ID ASG valores PYC .)
    IFINT           reduce using rule 56 (declaracion_error -> ID ID ASG valores PYC .)
    STRIFING        reduce using rule 56 (declaracion_error -> ID ID ASG valores PYC .)
    STRUFUCT        reduce using rule 56 (declaracion_error -> ID ID ASG valores PYC .)
    VOFOIFID        reduce using rule 56 (declaracion_error -> ID ID ASG valores PYC .)
    CHAFAR          reduce using rule 56 (declaracion_error -> ID ID ASG valores PYC .)
    BOFOOFOL        reduce using rule 56 (declaracion_error -> ID ID ASG valores PYC .)
    FLOFOAFAT       reduce using rule 56 (declaracion_error -> ID ID ASG valores PYC .)
    PA              reduce using rule 56 (declaracion_error -> ID ID ASG valores PYC .)


state 227

    (63) asignar_estructuras -> ID PUNTO ID ASG dato . PYC

    PYC             shift and go to state 250


state 228

    (52) declaracion_error -> ID ASG ID operacion_matematica ID . PYC

    PYC             shift and go to state 251


state 229

    (62) asignar_array -> ID dimensiones ASG dato PYC .

    VACIO           reduce using rule 62 (asignar_array -> ID dimensiones ASG dato PYC .)
    IFIF            reduce using rule 62 (asignar_array -> ID dimensiones ASG dato PYC .)
    AFARRAFAY       reduce using rule 62 (asignar_array -> ID dimensiones ASG dato PYC .)
    ID              reduce using rule 62 (asignar_array -> ID dimensiones ASG dato PYC .)
    PRIFINT         reduce using rule 62 (asignar_array -> ID dimensiones ASG dato PYC .)
    IFINPUFUT       reduce using rule 62 (asignar_array -> ID dimensiones ASG dato PYC .)
    WHIFILEFE       reduce using rule 62 (asignar_array -> ID dimensiones ASG dato PYC .)
    IFINT           reduce using rule 62 (asignar_array -> ID dimensiones ASG dato PYC .)
    STRIFING        reduce using rule 62 (asignar_array -> ID dimensiones ASG dato PYC .)
    STRUFUCT        reduce using rule 62 (asignar_array -> ID dimensiones ASG dato PYC .)
    VOFOIFID        reduce using rule 62 (asignar_array -> ID dimensiones ASG dato PYC .)
    CHAFAR          reduce using rule 62 (asignar_array -> ID dimensiones ASG dato PYC .)
    BOFOOFOL        reduce using rule 62 (asignar_array -> ID dimensiones ASG dato PYC .)
    FLOFOAFAT       reduce using rule 62 (asignar_array -> ID dimensiones ASG dato PYC .)
    PA              reduce using rule 62 (asignar_array -> ID dimensiones ASG dato PYC .)


state 230

    (64) funcion -> ID PA valores PC PYC .

    VACIO           reduce using rule 64 (funcion -> ID PA valores PC PYC .)
    IFIF            reduce using rule 64 (funcion -> ID PA valores PC PYC .)
    AFARRAFAY       reduce using rule 64 (funcion -> ID PA valores PC PYC .)
    ID              reduce using rule 64 (funcion -> ID PA valores PC PYC .)
    PRIFINT         reduce using rule 64 (funcion -> ID PA valores PC PYC .)
    IFINPUFUT       reduce using rule 64 (funcion -> ID PA valores PC PYC .)
    WHIFILEFE       reduce using rule 64 (funcion -> ID PA valores PC PYC .)
    IFINT           reduce using rule 64 (funcion -> ID PA valores PC PYC .)
    STRIFING        reduce using rule 64 (funcion -> ID PA valores PC PYC .)
    STRUFUCT        reduce using rule 64 (funcion -> ID PA valores PC PYC .)
    VOFOIFID        reduce using rule 64 (funcion -> ID PA valores PC PYC .)
    CHAFAR          reduce using rule 64 (funcion -> ID PA valores PC PYC .)
    BOFOOFOL        reduce using rule 64 (funcion -> ID PA valores PC PYC .)
    FLOFOAFAT       reduce using rule 64 (funcion -> ID PA valores PC PYC .)
    PA              reduce using rule 64 (funcion -> ID PA valores PC PYC .)


state 231

    (87) valores -> ID .

    PC              reduce using rule 87 (valores -> ID .)


state 232

    (66) funcion -> ID PA valores COMA valores . PC PYC

    PC              shift and go to state 252


state 233

    (72) declaracion_while_error -> ID PA condicion PC LLAVEA . bloque_codigo LLAVEC
    (33) bloque_codigo -> . declarar_if bloque_codigo
    (34) bloque_codigo -> . declaracion bloque_codigo
    (35) bloque_codigo -> . asignar_estructuras bloque_codigo
    (36) bloque_codigo -> . asignar_array bloque_codigo
    (37) bloque_codigo -> . funcion bloque_codigo
    (38) bloque_codigo -> . print bloque_codigo
    (39) bloque_codigo -> . input bloque_codigo
    (40) bloque_codigo -> . declaracion_while bloque_codigo
    (41) bloque_codigo -> . VACIO
    (42) declarar_if -> . IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC
    (43) declarar_if -> . IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE LLAVEA bloque_codigo LLAVEC
    (44) declarar_if -> . declarar_if_error_llave
    (47) declaracion -> . tipo_dato ID ASG ID operacion_matematica ID PYC
    (48) declaracion -> . tipo_dato ID ASG dato PYC
    (49) declaracion -> . AFARRAFAY ID dimensiones PYC
    (50) declaracion -> . declaracion_error
    (63) asignar_estructuras -> . ID PUNTO ID ASG dato PYC
    (62) asignar_array -> . ID dimensiones ASG dato PYC
    (64) funcion -> . ID PA valores PC PYC
    (65) funcion -> . ID PA PC PYC
    (66) funcion -> . ID PA valores COMA valores PC PYC
    (67) print -> . PRIFINT PA ID PC PYC
    (68) input -> . IFINPUFUT PA ID PC PYC
    (69) declaracion_while -> . WHIFILEFE PA condicion PC LLAVEA bloque_codigo LLAVEC
    (70) declaracion_while -> . declaracion_while_error
    (45) declarar_if_error_llave -> . IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE LLAVEA bloque_codigo
    (46) declarar_if_error_llave -> . IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE bloque_codigo LLAVEC
    (25) tipo_dato -> . IFINT
    (26) tipo_dato -> . STRIFING
    (27) tipo_dato -> . AFARRAFAY
    (28) tipo_dato -> . STRUFUCT
    (29) tipo_dato -> . VOFOIFID
    (30) tipo_dato -> . CHAFAR
    (31) tipo_dato -> . BOFOOFOL
    (32) tipo_dato -> . FLOFOAFAT
    (51) declaracion_error -> . ID PYC
    (52) declaracion_error -> . ID ASG ID operacion_matematica ID PYC
    (53) declaracion_error -> . ID ASG valores PYC
    (54) declaracion_error -> . ID ID PYC
    (55) declaracion_error -> . ID ID ASG ID operacion_matematica ID PYC
    (56) declaracion_error -> . ID ID ASG valores PYC
    (57) declaracion_error -> . ID ID dimensiones PYC
    (58) declaracion_error -> . ID dimensiones PYC
    (71) declaracion_while_error -> . PA condicion PC LLAVEA bloque_codigo LLAVEC
    (72) declaracion_while_error -> . ID PA condicion PC LLAVEA bloque_codigo LLAVEC
    (73) declaracion_while_error -> . WHIFILEFE PA condicion PC bloque_codigo LLAVEC
    (74) declaracion_while_error -> . WHIFILEFE PA condicion PC LLAVEA bloque_codigo

    VACIO           shift and go to state 67
    IFIF            shift and go to state 68
    AFARRAFAY       shift and go to state 72
    ID              shift and go to state 71
    PRIFINT         shift and go to state 74
    IFINPUFUT       shift and go to state 75
    WHIFILEFE       shift and go to state 76
    IFINT           shift and go to state 19
    STRIFING        shift and go to state 20
    STRUFUCT        shift and go to state 22
    VOFOIFID        shift and go to state 23
    CHAFAR          shift and go to state 24
    BOFOOFOL        shift and go to state 25
    FLOFOAFAT       shift and go to state 26
    PA              shift and go to state 57

    bloque_codigo                  shift and go to state 253
    declarar_if                    shift and go to state 59
    declaracion                    shift and go to state 60
    asignar_estructuras            shift and go to state 61
    asignar_array                  shift and go to state 62
    funcion                        shift and go to state 63
    print                          shift and go to state 64
    input                          shift and go to state 65
    declaracion_while              shift and go to state 66
    declarar_if_error_llave        shift and go to state 69
    tipo_dato                      shift and go to state 70
    declaracion_error              shift and go to state 73
    declaracion_while_error        shift and go to state 77

state 234

    (67) print -> PRIFINT PA ID PC PYC .

    VACIO           reduce using rule 67 (print -> PRIFINT PA ID PC PYC .)
    IFIF            reduce using rule 67 (print -> PRIFINT PA ID PC PYC .)
    AFARRAFAY       reduce using rule 67 (print -> PRIFINT PA ID PC PYC .)
    ID              reduce using rule 67 (print -> PRIFINT PA ID PC PYC .)
    PRIFINT         reduce using rule 67 (print -> PRIFINT PA ID PC PYC .)
    IFINPUFUT       reduce using rule 67 (print -> PRIFINT PA ID PC PYC .)
    WHIFILEFE       reduce using rule 67 (print -> PRIFINT PA ID PC PYC .)
    IFINT           reduce using rule 67 (print -> PRIFINT PA ID PC PYC .)
    STRIFING        reduce using rule 67 (print -> PRIFINT PA ID PC PYC .)
    STRUFUCT        reduce using rule 67 (print -> PRIFINT PA ID PC PYC .)
    VOFOIFID        reduce using rule 67 (print -> PRIFINT PA ID PC PYC .)
    CHAFAR          reduce using rule 67 (print -> PRIFINT PA ID PC PYC .)
    BOFOOFOL        reduce using rule 67 (print -> PRIFINT PA ID PC PYC .)
    FLOFOAFAT       reduce using rule 67 (print -> PRIFINT PA ID PC PYC .)
    PA              reduce using rule 67 (print -> PRIFINT PA ID PC PYC .)


state 235

    (68) input -> IFINPUFUT PA ID PC PYC .

    VACIO           reduce using rule 68 (input -> IFINPUFUT PA ID PC PYC .)
    IFIF            reduce using rule 68 (input -> IFINPUFUT PA ID PC PYC .)
    AFARRAFAY       reduce using rule 68 (input -> IFINPUFUT PA ID PC PYC .)
    ID              reduce using rule 68 (input -> IFINPUFUT PA ID PC PYC .)
    PRIFINT         reduce using rule 68 (input -> IFINPUFUT PA ID PC PYC .)
    IFINPUFUT       reduce using rule 68 (input -> IFINPUFUT PA ID PC PYC .)
    WHIFILEFE       reduce using rule 68 (input -> IFINPUFUT PA ID PC PYC .)
    IFINT           reduce using rule 68 (input -> IFINPUFUT PA ID PC PYC .)
    STRIFING        reduce using rule 68 (input -> IFINPUFUT PA ID PC PYC .)
    STRUFUCT        reduce using rule 68 (input -> IFINPUFUT PA ID PC PYC .)
    VOFOIFID        reduce using rule 68 (input -> IFINPUFUT PA ID PC PYC .)
    CHAFAR          reduce using rule 68 (input -> IFINPUFUT PA ID PC PYC .)
    BOFOOFOL        reduce using rule 68 (input -> IFINPUFUT PA ID PC PYC .)
    FLOFOAFAT       reduce using rule 68 (input -> IFINPUFUT PA ID PC PYC .)
    PA              reduce using rule 68 (input -> IFINPUFUT PA ID PC PYC .)


state 236

    (69) declaracion_while -> WHIFILEFE PA condicion PC LLAVEA . bloque_codigo LLAVEC
    (74) declaracion_while_error -> WHIFILEFE PA condicion PC LLAVEA . bloque_codigo
    (33) bloque_codigo -> . declarar_if bloque_codigo
    (34) bloque_codigo -> . declaracion bloque_codigo
    (35) bloque_codigo -> . asignar_estructuras bloque_codigo
    (36) bloque_codigo -> . asignar_array bloque_codigo
    (37) bloque_codigo -> . funcion bloque_codigo
    (38) bloque_codigo -> . print bloque_codigo
    (39) bloque_codigo -> . input bloque_codigo
    (40) bloque_codigo -> . declaracion_while bloque_codigo
    (41) bloque_codigo -> . VACIO
    (42) declarar_if -> . IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC
    (43) declarar_if -> . IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE LLAVEA bloque_codigo LLAVEC
    (44) declarar_if -> . declarar_if_error_llave
    (47) declaracion -> . tipo_dato ID ASG ID operacion_matematica ID PYC
    (48) declaracion -> . tipo_dato ID ASG dato PYC
    (49) declaracion -> . AFARRAFAY ID dimensiones PYC
    (50) declaracion -> . declaracion_error
    (63) asignar_estructuras -> . ID PUNTO ID ASG dato PYC
    (62) asignar_array -> . ID dimensiones ASG dato PYC
    (64) funcion -> . ID PA valores PC PYC
    (65) funcion -> . ID PA PC PYC
    (66) funcion -> . ID PA valores COMA valores PC PYC
    (67) print -> . PRIFINT PA ID PC PYC
    (68) input -> . IFINPUFUT PA ID PC PYC
    (69) declaracion_while -> . WHIFILEFE PA condicion PC LLAVEA bloque_codigo LLAVEC
    (70) declaracion_while -> . declaracion_while_error
    (45) declarar_if_error_llave -> . IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE LLAVEA bloque_codigo
    (46) declarar_if_error_llave -> . IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE bloque_codigo LLAVEC
    (25) tipo_dato -> . IFINT
    (26) tipo_dato -> . STRIFING
    (27) tipo_dato -> . AFARRAFAY
    (28) tipo_dato -> . STRUFUCT
    (29) tipo_dato -> . VOFOIFID
    (30) tipo_dato -> . CHAFAR
    (31) tipo_dato -> . BOFOOFOL
    (32) tipo_dato -> . FLOFOAFAT
    (51) declaracion_error -> . ID PYC
    (52) declaracion_error -> . ID ASG ID operacion_matematica ID PYC
    (53) declaracion_error -> . ID ASG valores PYC
    (54) declaracion_error -> . ID ID PYC
    (55) declaracion_error -> . ID ID ASG ID operacion_matematica ID PYC
    (56) declaracion_error -> . ID ID ASG valores PYC
    (57) declaracion_error -> . ID ID dimensiones PYC
    (58) declaracion_error -> . ID dimensiones PYC
    (71) declaracion_while_error -> . PA condicion PC LLAVEA bloque_codigo LLAVEC
    (72) declaracion_while_error -> . ID PA condicion PC LLAVEA bloque_codigo LLAVEC
    (73) declaracion_while_error -> . WHIFILEFE PA condicion PC bloque_codigo LLAVEC
    (74) declaracion_while_error -> . WHIFILEFE PA condicion PC LLAVEA bloque_codigo

    VACIO           shift and go to state 67
    IFIF            shift and go to state 68
    AFARRAFAY       shift and go to state 72
    ID              shift and go to state 71
    PRIFINT         shift and go to state 74
    IFINPUFUT       shift and go to state 75
    WHIFILEFE       shift and go to state 76
    IFINT           shift and go to state 19
    STRIFING        shift and go to state 20
    STRUFUCT        shift and go to state 22
    VOFOIFID        shift and go to state 23
    CHAFAR          shift and go to state 24
    BOFOOFOL        shift and go to state 25
    FLOFOAFAT       shift and go to state 26
    PA              shift and go to state 57

    bloque_codigo                  shift and go to state 254
    declarar_if                    shift and go to state 59
    declaracion                    shift and go to state 60
    asignar_estructuras            shift and go to state 61
    asignar_array                  shift and go to state 62
    funcion                        shift and go to state 63
    print                          shift and go to state 64
    input                          shift and go to state 65
    declaracion_while              shift and go to state 66
    declarar_if_error_llave        shift and go to state 69
    tipo_dato                      shift and go to state 70
    declaracion_error              shift and go to state 73
    declaracion_while_error        shift and go to state 77

state 237

    (73) declaracion_while_error -> WHIFILEFE PA condicion PC bloque_codigo . LLAVEC

    LLAVEC          shift and go to state 255


state 238

    (24) declarar_main_error -> IFINT ID PA PC LLAVEA bloque_codigo REFETUFURN PYC LLAVEC .

    $end            reduce using rule 24 (declarar_main_error -> IFINT ID PA PC LLAVEA bloque_codigo REFETUFURN PYC LLAVEC .)


state 239

    (13) declarar_estructuras_error -> STRUFUCT ID LLAVEA tipo_dato ID PYC tipo_dato ID PYC tipo_dato . ID PYC LLAVEC

    ID              shift and go to state 256


state 240

    (5) declarar_estructuras -> STRUFUCT ID LLAVEA tipo_dato ID PYC tipo_dato ID PYC LLAVEC .

    IFINT           reduce using rule 5 (declarar_estructuras -> STRUFUCT ID LLAVEA tipo_dato ID PYC tipo_dato ID PYC LLAVEC .)
    FUNCTION        reduce using rule 5 (declarar_estructuras -> STRUFUCT ID LLAVEA tipo_dato ID PYC tipo_dato ID PYC LLAVEC .)
    MAFAIFIN        reduce using rule 5 (declarar_estructuras -> STRUFUCT ID LLAVEA tipo_dato ID PYC tipo_dato ID PYC LLAVEC .)


state 241

    (8) declarar_estructuras_error -> ID ID LLAVEA tipo_dato ID PYC tipo_dato ID PYC LLAVEC .

    IFINT           reduce using rule 8 (declarar_estructuras_error -> ID ID LLAVEA tipo_dato ID PYC tipo_dato ID PYC LLAVEC .)
    FUNCTION        reduce using rule 8 (declarar_estructuras_error -> ID ID LLAVEA tipo_dato ID PYC tipo_dato ID PYC LLAVEC .)
    MAFAIFIN        reduce using rule 8 (declarar_estructuras_error -> ID ID LLAVEA tipo_dato ID PYC tipo_dato ID PYC LLAVEC .)


state 242

    (14) declarar_funciones -> FUNCTION tipo_dato ID PA tipo_dato ID PC LLAVEA bloque_codigo REFETUFURN . ID PYC LLAVEC

    ID              shift and go to state 257


state 243

    (17) declarar_funciones -> FUNCTION tipo_dato ID PA tipo_dato ID COMA tipo_dato ID PC . LLAVEA bloque_codigo REFETUFURN ID PYC LLAVEC

    LLAVEA          shift and go to state 258


state 244

    (15) declarar_funciones -> FUNCTION tipo_dato ID PA PC LLAVEA bloque_codigo REFETUFURN ID PYC . LLAVEC

    LLAVEC          shift and go to state 259


state 245

    (16) declarar_funciones -> FUNCTION tipo_dato ID PA PC LLAVEA bloque_codigo REFETUFURN PYC LLAVEC .

    IFINT           reduce using rule 16 (declarar_funciones -> FUNCTION tipo_dato ID PA PC LLAVEA bloque_codigo REFETUFURN PYC LLAVEC .)
    MAFAIFIN        reduce using rule 16 (declarar_funciones -> FUNCTION tipo_dato ID PA PC LLAVEA bloque_codigo REFETUFURN PYC LLAVEC .)


state 246

    (71) declaracion_while_error -> PA condicion PC LLAVEA bloque_codigo LLAVEC .

    VACIO           reduce using rule 71 (declaracion_while_error -> PA condicion PC LLAVEA bloque_codigo LLAVEC .)
    IFIF            reduce using rule 71 (declaracion_while_error -> PA condicion PC LLAVEA bloque_codigo LLAVEC .)
    AFARRAFAY       reduce using rule 71 (declaracion_while_error -> PA condicion PC LLAVEA bloque_codigo LLAVEC .)
    ID              reduce using rule 71 (declaracion_while_error -> PA condicion PC LLAVEA bloque_codigo LLAVEC .)
    PRIFINT         reduce using rule 71 (declaracion_while_error -> PA condicion PC LLAVEA bloque_codigo LLAVEC .)
    IFINPUFUT       reduce using rule 71 (declaracion_while_error -> PA condicion PC LLAVEA bloque_codigo LLAVEC .)
    WHIFILEFE       reduce using rule 71 (declaracion_while_error -> PA condicion PC LLAVEA bloque_codigo LLAVEC .)
    IFINT           reduce using rule 71 (declaracion_while_error -> PA condicion PC LLAVEA bloque_codigo LLAVEC .)
    STRIFING        reduce using rule 71 (declaracion_while_error -> PA condicion PC LLAVEA bloque_codigo LLAVEC .)
    STRUFUCT        reduce using rule 71 (declaracion_while_error -> PA condicion PC LLAVEA bloque_codigo LLAVEC .)
    VOFOIFID        reduce using rule 71 (declaracion_while_error -> PA condicion PC LLAVEA bloque_codigo LLAVEC .)
    CHAFAR          reduce using rule 71 (declaracion_while_error -> PA condicion PC LLAVEA bloque_codigo LLAVEC .)
    BOFOOFOL        reduce using rule 71 (declaracion_while_error -> PA condicion PC LLAVEA bloque_codigo LLAVEC .)
    FLOFOAFAT       reduce using rule 71 (declaracion_while_error -> PA condicion PC LLAVEA bloque_codigo LLAVEC .)
    PA              reduce using rule 71 (declaracion_while_error -> PA condicion PC LLAVEA bloque_codigo LLAVEC .)


state 247

    (42) declarar_if -> IFIF PA condicion PC LLAVEA bloque_codigo . LLAVEC
    (43) declarar_if -> IFIF PA condicion PC LLAVEA bloque_codigo . LLAVEC EFELSEFE LLAVEA bloque_codigo LLAVEC
    (45) declarar_if_error_llave -> IFIF PA condicion PC LLAVEA bloque_codigo . LLAVEC EFELSEFE LLAVEA bloque_codigo
    (46) declarar_if_error_llave -> IFIF PA condicion PC LLAVEA bloque_codigo . LLAVEC EFELSEFE bloque_codigo LLAVEC

    LLAVEC          shift and go to state 260


state 248

    (47) declaracion -> tipo_dato ID ASG ID operacion_matematica ID . PYC

    PYC             shift and go to state 261


state 249

    (55) declaracion_error -> ID ID ASG ID operacion_matematica ID . PYC

    PYC             shift and go to state 262


state 250

    (63) asignar_estructuras -> ID PUNTO ID ASG dato PYC .

    VACIO           reduce using rule 63 (asignar_estructuras -> ID PUNTO ID ASG dato PYC .)
    IFIF            reduce using rule 63 (asignar_estructuras -> ID PUNTO ID ASG dato PYC .)
    AFARRAFAY       reduce using rule 63 (asignar_estructuras -> ID PUNTO ID ASG dato PYC .)
    ID              reduce using rule 63 (asignar_estructuras -> ID PUNTO ID ASG dato PYC .)
    PRIFINT         reduce using rule 63 (asignar_estructuras -> ID PUNTO ID ASG dato PYC .)
    IFINPUFUT       reduce using rule 63 (asignar_estructuras -> ID PUNTO ID ASG dato PYC .)
    WHIFILEFE       reduce using rule 63 (asignar_estructuras -> ID PUNTO ID ASG dato PYC .)
    IFINT           reduce using rule 63 (asignar_estructuras -> ID PUNTO ID ASG dato PYC .)
    STRIFING        reduce using rule 63 (asignar_estructuras -> ID PUNTO ID ASG dato PYC .)
    STRUFUCT        reduce using rule 63 (asignar_estructuras -> ID PUNTO ID ASG dato PYC .)
    VOFOIFID        reduce using rule 63 (asignar_estructuras -> ID PUNTO ID ASG dato PYC .)
    CHAFAR          reduce using rule 63 (asignar_estructuras -> ID PUNTO ID ASG dato PYC .)
    BOFOOFOL        reduce using rule 63 (asignar_estructuras -> ID PUNTO ID ASG dato PYC .)
    FLOFOAFAT       reduce using rule 63 (asignar_estructuras -> ID PUNTO ID ASG dato PYC .)
    PA              reduce using rule 63 (asignar_estructuras -> ID PUNTO ID ASG dato PYC .)


state 251

    (52) declaracion_error -> ID ASG ID operacion_matematica ID PYC .

    VACIO           reduce using rule 52 (declaracion_error -> ID ASG ID operacion_matematica ID PYC .)
    IFIF            reduce using rule 52 (declaracion_error -> ID ASG ID operacion_matematica ID PYC .)
    AFARRAFAY       reduce using rule 52 (declaracion_error -> ID ASG ID operacion_matematica ID PYC .)
    ID              reduce using rule 52 (declaracion_error -> ID ASG ID operacion_matematica ID PYC .)
    PRIFINT         reduce using rule 52 (declaracion_error -> ID ASG ID operacion_matematica ID PYC .)
    IFINPUFUT       reduce using rule 52 (declaracion_error -> ID ASG ID operacion_matematica ID PYC .)
    WHIFILEFE       reduce using rule 52 (declaracion_error -> ID ASG ID operacion_matematica ID PYC .)
    IFINT           reduce using rule 52 (declaracion_error -> ID ASG ID operacion_matematica ID PYC .)
    STRIFING        reduce using rule 52 (declaracion_error -> ID ASG ID operacion_matematica ID PYC .)
    STRUFUCT        reduce using rule 52 (declaracion_error -> ID ASG ID operacion_matematica ID PYC .)
    VOFOIFID        reduce using rule 52 (declaracion_error -> ID ASG ID operacion_matematica ID PYC .)
    CHAFAR          reduce using rule 52 (declaracion_error -> ID ASG ID operacion_matematica ID PYC .)
    BOFOOFOL        reduce using rule 52 (declaracion_error -> ID ASG ID operacion_matematica ID PYC .)
    FLOFOAFAT       reduce using rule 52 (declaracion_error -> ID ASG ID operacion_matematica ID PYC .)
    PA              reduce using rule 52 (declaracion_error -> ID ASG ID operacion_matematica ID PYC .)


state 252

    (66) funcion -> ID PA valores COMA valores PC . PYC

    PYC             shift and go to state 263


state 253

    (72) declaracion_while_error -> ID PA condicion PC LLAVEA bloque_codigo . LLAVEC

    LLAVEC          shift and go to state 264


state 254

    (69) declaracion_while -> WHIFILEFE PA condicion PC LLAVEA bloque_codigo . LLAVEC
    (74) declaracion_while_error -> WHIFILEFE PA condicion PC LLAVEA bloque_codigo .

    LLAVEC          shift and go to state 265
    VACIO           reduce using rule 74 (declaracion_while_error -> WHIFILEFE PA condicion PC LLAVEA bloque_codigo .)
    IFIF            reduce using rule 74 (declaracion_while_error -> WHIFILEFE PA condicion PC LLAVEA bloque_codigo .)
    AFARRAFAY       reduce using rule 74 (declaracion_while_error -> WHIFILEFE PA condicion PC LLAVEA bloque_codigo .)
    ID              reduce using rule 74 (declaracion_while_error -> WHIFILEFE PA condicion PC LLAVEA bloque_codigo .)
    PRIFINT         reduce using rule 74 (declaracion_while_error -> WHIFILEFE PA condicion PC LLAVEA bloque_codigo .)
    IFINPUFUT       reduce using rule 74 (declaracion_while_error -> WHIFILEFE PA condicion PC LLAVEA bloque_codigo .)
    WHIFILEFE       reduce using rule 74 (declaracion_while_error -> WHIFILEFE PA condicion PC LLAVEA bloque_codigo .)
    IFINT           reduce using rule 74 (declaracion_while_error -> WHIFILEFE PA condicion PC LLAVEA bloque_codigo .)
    STRIFING        reduce using rule 74 (declaracion_while_error -> WHIFILEFE PA condicion PC LLAVEA bloque_codigo .)
    STRUFUCT        reduce using rule 74 (declaracion_while_error -> WHIFILEFE PA condicion PC LLAVEA bloque_codigo .)
    VOFOIFID        reduce using rule 74 (declaracion_while_error -> WHIFILEFE PA condicion PC LLAVEA bloque_codigo .)
    CHAFAR          reduce using rule 74 (declaracion_while_error -> WHIFILEFE PA condicion PC LLAVEA bloque_codigo .)
    BOFOOFOL        reduce using rule 74 (declaracion_while_error -> WHIFILEFE PA condicion PC LLAVEA bloque_codigo .)
    FLOFOAFAT       reduce using rule 74 (declaracion_while_error -> WHIFILEFE PA condicion PC LLAVEA bloque_codigo .)
    PA              reduce using rule 74 (declaracion_while_error -> WHIFILEFE PA condicion PC LLAVEA bloque_codigo .)


state 255

    (73) declaracion_while_error -> WHIFILEFE PA condicion PC bloque_codigo LLAVEC .

    VACIO           reduce using rule 73 (declaracion_while_error -> WHIFILEFE PA condicion PC bloque_codigo LLAVEC .)
    IFIF            reduce using rule 73 (declaracion_while_error -> WHIFILEFE PA condicion PC bloque_codigo LLAVEC .)
    AFARRAFAY       reduce using rule 73 (declaracion_while_error -> WHIFILEFE PA condicion PC bloque_codigo LLAVEC .)
    ID              reduce using rule 73 (declaracion_while_error -> WHIFILEFE PA condicion PC bloque_codigo LLAVEC .)
    PRIFINT         reduce using rule 73 (declaracion_while_error -> WHIFILEFE PA condicion PC bloque_codigo LLAVEC .)
    IFINPUFUT       reduce using rule 73 (declaracion_while_error -> WHIFILEFE PA condicion PC bloque_codigo LLAVEC .)
    WHIFILEFE       reduce using rule 73 (declaracion_while_error -> WHIFILEFE PA condicion PC bloque_codigo LLAVEC .)
    IFINT           reduce using rule 73 (declaracion_while_error -> WHIFILEFE PA condicion PC bloque_codigo LLAVEC .)
    STRIFING        reduce using rule 73 (declaracion_while_error -> WHIFILEFE PA condicion PC bloque_codigo LLAVEC .)
    STRUFUCT        reduce using rule 73 (declaracion_while_error -> WHIFILEFE PA condicion PC bloque_codigo LLAVEC .)
    VOFOIFID        reduce using rule 73 (declaracion_while_error -> WHIFILEFE PA condicion PC bloque_codigo LLAVEC .)
    CHAFAR          reduce using rule 73 (declaracion_while_error -> WHIFILEFE PA condicion PC bloque_codigo LLAVEC .)
    BOFOOFOL        reduce using rule 73 (declaracion_while_error -> WHIFILEFE PA condicion PC bloque_codigo LLAVEC .)
    FLOFOAFAT       reduce using rule 73 (declaracion_while_error -> WHIFILEFE PA condicion PC bloque_codigo LLAVEC .)
    PA              reduce using rule 73 (declaracion_while_error -> WHIFILEFE PA condicion PC bloque_codigo LLAVEC .)


state 256

    (13) declarar_estructuras_error -> STRUFUCT ID LLAVEA tipo_dato ID PYC tipo_dato ID PYC tipo_dato ID . PYC LLAVEC

    PYC             shift and go to state 266


state 257

    (14) declarar_funciones -> FUNCTION tipo_dato ID PA tipo_dato ID PC LLAVEA bloque_codigo REFETUFURN ID . PYC LLAVEC

    PYC             shift and go to state 267


state 258

    (17) declarar_funciones -> FUNCTION tipo_dato ID PA tipo_dato ID COMA tipo_dato ID PC LLAVEA . bloque_codigo REFETUFURN ID PYC LLAVEC
    (33) bloque_codigo -> . declarar_if bloque_codigo
    (34) bloque_codigo -> . declaracion bloque_codigo
    (35) bloque_codigo -> . asignar_estructuras bloque_codigo
    (36) bloque_codigo -> . asignar_array bloque_codigo
    (37) bloque_codigo -> . funcion bloque_codigo
    (38) bloque_codigo -> . print bloque_codigo
    (39) bloque_codigo -> . input bloque_codigo
    (40) bloque_codigo -> . declaracion_while bloque_codigo
    (41) bloque_codigo -> . VACIO
    (42) declarar_if -> . IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC
    (43) declarar_if -> . IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE LLAVEA bloque_codigo LLAVEC
    (44) declarar_if -> . declarar_if_error_llave
    (47) declaracion -> . tipo_dato ID ASG ID operacion_matematica ID PYC
    (48) declaracion -> . tipo_dato ID ASG dato PYC
    (49) declaracion -> . AFARRAFAY ID dimensiones PYC
    (50) declaracion -> . declaracion_error
    (63) asignar_estructuras -> . ID PUNTO ID ASG dato PYC
    (62) asignar_array -> . ID dimensiones ASG dato PYC
    (64) funcion -> . ID PA valores PC PYC
    (65) funcion -> . ID PA PC PYC
    (66) funcion -> . ID PA valores COMA valores PC PYC
    (67) print -> . PRIFINT PA ID PC PYC
    (68) input -> . IFINPUFUT PA ID PC PYC
    (69) declaracion_while -> . WHIFILEFE PA condicion PC LLAVEA bloque_codigo LLAVEC
    (70) declaracion_while -> . declaracion_while_error
    (45) declarar_if_error_llave -> . IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE LLAVEA bloque_codigo
    (46) declarar_if_error_llave -> . IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE bloque_codigo LLAVEC
    (25) tipo_dato -> . IFINT
    (26) tipo_dato -> . STRIFING
    (27) tipo_dato -> . AFARRAFAY
    (28) tipo_dato -> . STRUFUCT
    (29) tipo_dato -> . VOFOIFID
    (30) tipo_dato -> . CHAFAR
    (31) tipo_dato -> . BOFOOFOL
    (32) tipo_dato -> . FLOFOAFAT
    (51) declaracion_error -> . ID PYC
    (52) declaracion_error -> . ID ASG ID operacion_matematica ID PYC
    (53) declaracion_error -> . ID ASG valores PYC
    (54) declaracion_error -> . ID ID PYC
    (55) declaracion_error -> . ID ID ASG ID operacion_matematica ID PYC
    (56) declaracion_error -> . ID ID ASG valores PYC
    (57) declaracion_error -> . ID ID dimensiones PYC
    (58) declaracion_error -> . ID dimensiones PYC
    (71) declaracion_while_error -> . PA condicion PC LLAVEA bloque_codigo LLAVEC
    (72) declaracion_while_error -> . ID PA condicion PC LLAVEA bloque_codigo LLAVEC
    (73) declaracion_while_error -> . WHIFILEFE PA condicion PC bloque_codigo LLAVEC
    (74) declaracion_while_error -> . WHIFILEFE PA condicion PC LLAVEA bloque_codigo

    VACIO           shift and go to state 67
    IFIF            shift and go to state 68
    AFARRAFAY       shift and go to state 72
    ID              shift and go to state 71
    PRIFINT         shift and go to state 74
    IFINPUFUT       shift and go to state 75
    WHIFILEFE       shift and go to state 76
    IFINT           shift and go to state 19
    STRIFING        shift and go to state 20
    STRUFUCT        shift and go to state 22
    VOFOIFID        shift and go to state 23
    CHAFAR          shift and go to state 24
    BOFOOFOL        shift and go to state 25
    FLOFOAFAT       shift and go to state 26
    PA              shift and go to state 57

    tipo_dato                      shift and go to state 70
    bloque_codigo                  shift and go to state 268
    declarar_if                    shift and go to state 59
    declaracion                    shift and go to state 60
    asignar_estructuras            shift and go to state 61
    asignar_array                  shift and go to state 62
    funcion                        shift and go to state 63
    print                          shift and go to state 64
    input                          shift and go to state 65
    declaracion_while              shift and go to state 66
    declarar_if_error_llave        shift and go to state 69
    declaracion_error              shift and go to state 73
    declaracion_while_error        shift and go to state 77

state 259

    (15) declarar_funciones -> FUNCTION tipo_dato ID PA PC LLAVEA bloque_codigo REFETUFURN ID PYC LLAVEC .

    IFINT           reduce using rule 15 (declarar_funciones -> FUNCTION tipo_dato ID PA PC LLAVEA bloque_codigo REFETUFURN ID PYC LLAVEC .)
    MAFAIFIN        reduce using rule 15 (declarar_funciones -> FUNCTION tipo_dato ID PA PC LLAVEA bloque_codigo REFETUFURN ID PYC LLAVEC .)


state 260

    (42) declarar_if -> IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC .
    (43) declarar_if -> IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC . EFELSEFE LLAVEA bloque_codigo LLAVEC
    (45) declarar_if_error_llave -> IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC . EFELSEFE LLAVEA bloque_codigo
    (46) declarar_if_error_llave -> IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC . EFELSEFE bloque_codigo LLAVEC

    VACIO           reduce using rule 42 (declarar_if -> IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC .)
    IFIF            reduce using rule 42 (declarar_if -> IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC .)
    AFARRAFAY       reduce using rule 42 (declarar_if -> IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC .)
    ID              reduce using rule 42 (declarar_if -> IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC .)
    PRIFINT         reduce using rule 42 (declarar_if -> IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC .)
    IFINPUFUT       reduce using rule 42 (declarar_if -> IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC .)
    WHIFILEFE       reduce using rule 42 (declarar_if -> IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC .)
    IFINT           reduce using rule 42 (declarar_if -> IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC .)
    STRIFING        reduce using rule 42 (declarar_if -> IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC .)
    STRUFUCT        reduce using rule 42 (declarar_if -> IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC .)
    VOFOIFID        reduce using rule 42 (declarar_if -> IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC .)
    CHAFAR          reduce using rule 42 (declarar_if -> IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC .)
    BOFOOFOL        reduce using rule 42 (declarar_if -> IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC .)
    FLOFOAFAT       reduce using rule 42 (declarar_if -> IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC .)
    PA              reduce using rule 42 (declarar_if -> IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC .)
    EFELSEFE        shift and go to state 269


state 261

    (47) declaracion -> tipo_dato ID ASG ID operacion_matematica ID PYC .

    VACIO           reduce using rule 47 (declaracion -> tipo_dato ID ASG ID operacion_matematica ID PYC .)
    IFIF            reduce using rule 47 (declaracion -> tipo_dato ID ASG ID operacion_matematica ID PYC .)
    AFARRAFAY       reduce using rule 47 (declaracion -> tipo_dato ID ASG ID operacion_matematica ID PYC .)
    ID              reduce using rule 47 (declaracion -> tipo_dato ID ASG ID operacion_matematica ID PYC .)
    PRIFINT         reduce using rule 47 (declaracion -> tipo_dato ID ASG ID operacion_matematica ID PYC .)
    IFINPUFUT       reduce using rule 47 (declaracion -> tipo_dato ID ASG ID operacion_matematica ID PYC .)
    WHIFILEFE       reduce using rule 47 (declaracion -> tipo_dato ID ASG ID operacion_matematica ID PYC .)
    IFINT           reduce using rule 47 (declaracion -> tipo_dato ID ASG ID operacion_matematica ID PYC .)
    STRIFING        reduce using rule 47 (declaracion -> tipo_dato ID ASG ID operacion_matematica ID PYC .)
    STRUFUCT        reduce using rule 47 (declaracion -> tipo_dato ID ASG ID operacion_matematica ID PYC .)
    VOFOIFID        reduce using rule 47 (declaracion -> tipo_dato ID ASG ID operacion_matematica ID PYC .)
    CHAFAR          reduce using rule 47 (declaracion -> tipo_dato ID ASG ID operacion_matematica ID PYC .)
    BOFOOFOL        reduce using rule 47 (declaracion -> tipo_dato ID ASG ID operacion_matematica ID PYC .)
    FLOFOAFAT       reduce using rule 47 (declaracion -> tipo_dato ID ASG ID operacion_matematica ID PYC .)
    PA              reduce using rule 47 (declaracion -> tipo_dato ID ASG ID operacion_matematica ID PYC .)


state 262

    (55) declaracion_error -> ID ID ASG ID operacion_matematica ID PYC .

    VACIO           reduce using rule 55 (declaracion_error -> ID ID ASG ID operacion_matematica ID PYC .)
    IFIF            reduce using rule 55 (declaracion_error -> ID ID ASG ID operacion_matematica ID PYC .)
    AFARRAFAY       reduce using rule 55 (declaracion_error -> ID ID ASG ID operacion_matematica ID PYC .)
    ID              reduce using rule 55 (declaracion_error -> ID ID ASG ID operacion_matematica ID PYC .)
    PRIFINT         reduce using rule 55 (declaracion_error -> ID ID ASG ID operacion_matematica ID PYC .)
    IFINPUFUT       reduce using rule 55 (declaracion_error -> ID ID ASG ID operacion_matematica ID PYC .)
    WHIFILEFE       reduce using rule 55 (declaracion_error -> ID ID ASG ID operacion_matematica ID PYC .)
    IFINT           reduce using rule 55 (declaracion_error -> ID ID ASG ID operacion_matematica ID PYC .)
    STRIFING        reduce using rule 55 (declaracion_error -> ID ID ASG ID operacion_matematica ID PYC .)
    STRUFUCT        reduce using rule 55 (declaracion_error -> ID ID ASG ID operacion_matematica ID PYC .)
    VOFOIFID        reduce using rule 55 (declaracion_error -> ID ID ASG ID operacion_matematica ID PYC .)
    CHAFAR          reduce using rule 55 (declaracion_error -> ID ID ASG ID operacion_matematica ID PYC .)
    BOFOOFOL        reduce using rule 55 (declaracion_error -> ID ID ASG ID operacion_matematica ID PYC .)
    FLOFOAFAT       reduce using rule 55 (declaracion_error -> ID ID ASG ID operacion_matematica ID PYC .)
    PA              reduce using rule 55 (declaracion_error -> ID ID ASG ID operacion_matematica ID PYC .)


state 263

    (66) funcion -> ID PA valores COMA valores PC PYC .

    VACIO           reduce using rule 66 (funcion -> ID PA valores COMA valores PC PYC .)
    IFIF            reduce using rule 66 (funcion -> ID PA valores COMA valores PC PYC .)
    AFARRAFAY       reduce using rule 66 (funcion -> ID PA valores COMA valores PC PYC .)
    ID              reduce using rule 66 (funcion -> ID PA valores COMA valores PC PYC .)
    PRIFINT         reduce using rule 66 (funcion -> ID PA valores COMA valores PC PYC .)
    IFINPUFUT       reduce using rule 66 (funcion -> ID PA valores COMA valores PC PYC .)
    WHIFILEFE       reduce using rule 66 (funcion -> ID PA valores COMA valores PC PYC .)
    IFINT           reduce using rule 66 (funcion -> ID PA valores COMA valores PC PYC .)
    STRIFING        reduce using rule 66 (funcion -> ID PA valores COMA valores PC PYC .)
    STRUFUCT        reduce using rule 66 (funcion -> ID PA valores COMA valores PC PYC .)
    VOFOIFID        reduce using rule 66 (funcion -> ID PA valores COMA valores PC PYC .)
    CHAFAR          reduce using rule 66 (funcion -> ID PA valores COMA valores PC PYC .)
    BOFOOFOL        reduce using rule 66 (funcion -> ID PA valores COMA valores PC PYC .)
    FLOFOAFAT       reduce using rule 66 (funcion -> ID PA valores COMA valores PC PYC .)
    PA              reduce using rule 66 (funcion -> ID PA valores COMA valores PC PYC .)


state 264

    (72) declaracion_while_error -> ID PA condicion PC LLAVEA bloque_codigo LLAVEC .

    VACIO           reduce using rule 72 (declaracion_while_error -> ID PA condicion PC LLAVEA bloque_codigo LLAVEC .)
    IFIF            reduce using rule 72 (declaracion_while_error -> ID PA condicion PC LLAVEA bloque_codigo LLAVEC .)
    AFARRAFAY       reduce using rule 72 (declaracion_while_error -> ID PA condicion PC LLAVEA bloque_codigo LLAVEC .)
    ID              reduce using rule 72 (declaracion_while_error -> ID PA condicion PC LLAVEA bloque_codigo LLAVEC .)
    PRIFINT         reduce using rule 72 (declaracion_while_error -> ID PA condicion PC LLAVEA bloque_codigo LLAVEC .)
    IFINPUFUT       reduce using rule 72 (declaracion_while_error -> ID PA condicion PC LLAVEA bloque_codigo LLAVEC .)
    WHIFILEFE       reduce using rule 72 (declaracion_while_error -> ID PA condicion PC LLAVEA bloque_codigo LLAVEC .)
    IFINT           reduce using rule 72 (declaracion_while_error -> ID PA condicion PC LLAVEA bloque_codigo LLAVEC .)
    STRIFING        reduce using rule 72 (declaracion_while_error -> ID PA condicion PC LLAVEA bloque_codigo LLAVEC .)
    STRUFUCT        reduce using rule 72 (declaracion_while_error -> ID PA condicion PC LLAVEA bloque_codigo LLAVEC .)
    VOFOIFID        reduce using rule 72 (declaracion_while_error -> ID PA condicion PC LLAVEA bloque_codigo LLAVEC .)
    CHAFAR          reduce using rule 72 (declaracion_while_error -> ID PA condicion PC LLAVEA bloque_codigo LLAVEC .)
    BOFOOFOL        reduce using rule 72 (declaracion_while_error -> ID PA condicion PC LLAVEA bloque_codigo LLAVEC .)
    FLOFOAFAT       reduce using rule 72 (declaracion_while_error -> ID PA condicion PC LLAVEA bloque_codigo LLAVEC .)
    PA              reduce using rule 72 (declaracion_while_error -> ID PA condicion PC LLAVEA bloque_codigo LLAVEC .)


state 265

    (69) declaracion_while -> WHIFILEFE PA condicion PC LLAVEA bloque_codigo LLAVEC .

    VACIO           reduce using rule 69 (declaracion_while -> WHIFILEFE PA condicion PC LLAVEA bloque_codigo LLAVEC .)
    IFIF            reduce using rule 69 (declaracion_while -> WHIFILEFE PA condicion PC LLAVEA bloque_codigo LLAVEC .)
    AFARRAFAY       reduce using rule 69 (declaracion_while -> WHIFILEFE PA condicion PC LLAVEA bloque_codigo LLAVEC .)
    ID              reduce using rule 69 (declaracion_while -> WHIFILEFE PA condicion PC LLAVEA bloque_codigo LLAVEC .)
    PRIFINT         reduce using rule 69 (declaracion_while -> WHIFILEFE PA condicion PC LLAVEA bloque_codigo LLAVEC .)
    IFINPUFUT       reduce using rule 69 (declaracion_while -> WHIFILEFE PA condicion PC LLAVEA bloque_codigo LLAVEC .)
    WHIFILEFE       reduce using rule 69 (declaracion_while -> WHIFILEFE PA condicion PC LLAVEA bloque_codigo LLAVEC .)
    IFINT           reduce using rule 69 (declaracion_while -> WHIFILEFE PA condicion PC LLAVEA bloque_codigo LLAVEC .)
    STRIFING        reduce using rule 69 (declaracion_while -> WHIFILEFE PA condicion PC LLAVEA bloque_codigo LLAVEC .)
    STRUFUCT        reduce using rule 69 (declaracion_while -> WHIFILEFE PA condicion PC LLAVEA bloque_codigo LLAVEC .)
    VOFOIFID        reduce using rule 69 (declaracion_while -> WHIFILEFE PA condicion PC LLAVEA bloque_codigo LLAVEC .)
    CHAFAR          reduce using rule 69 (declaracion_while -> WHIFILEFE PA condicion PC LLAVEA bloque_codigo LLAVEC .)
    BOFOOFOL        reduce using rule 69 (declaracion_while -> WHIFILEFE PA condicion PC LLAVEA bloque_codigo LLAVEC .)
    FLOFOAFAT       reduce using rule 69 (declaracion_while -> WHIFILEFE PA condicion PC LLAVEA bloque_codigo LLAVEC .)
    PA              reduce using rule 69 (declaracion_while -> WHIFILEFE PA condicion PC LLAVEA bloque_codigo LLAVEC .)


state 266

    (13) declarar_estructuras_error -> STRUFUCT ID LLAVEA tipo_dato ID PYC tipo_dato ID PYC tipo_dato ID PYC . LLAVEC

    LLAVEC          shift and go to state 270


state 267

    (14) declarar_funciones -> FUNCTION tipo_dato ID PA tipo_dato ID PC LLAVEA bloque_codigo REFETUFURN ID PYC . LLAVEC

    LLAVEC          shift and go to state 271


state 268

    (17) declarar_funciones -> FUNCTION tipo_dato ID PA tipo_dato ID COMA tipo_dato ID PC LLAVEA bloque_codigo . REFETUFURN ID PYC LLAVEC

    REFETUFURN      shift and go to state 272


state 269

    (43) declarar_if -> IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE . LLAVEA bloque_codigo LLAVEC
    (45) declarar_if_error_llave -> IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE . LLAVEA bloque_codigo
    (46) declarar_if_error_llave -> IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE . bloque_codigo LLAVEC
    (33) bloque_codigo -> . declarar_if bloque_codigo
    (34) bloque_codigo -> . declaracion bloque_codigo
    (35) bloque_codigo -> . asignar_estructuras bloque_codigo
    (36) bloque_codigo -> . asignar_array bloque_codigo
    (37) bloque_codigo -> . funcion bloque_codigo
    (38) bloque_codigo -> . print bloque_codigo
    (39) bloque_codigo -> . input bloque_codigo
    (40) bloque_codigo -> . declaracion_while bloque_codigo
    (41) bloque_codigo -> . VACIO
    (42) declarar_if -> . IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC
    (43) declarar_if -> . IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE LLAVEA bloque_codigo LLAVEC
    (44) declarar_if -> . declarar_if_error_llave
    (47) declaracion -> . tipo_dato ID ASG ID operacion_matematica ID PYC
    (48) declaracion -> . tipo_dato ID ASG dato PYC
    (49) declaracion -> . AFARRAFAY ID dimensiones PYC
    (50) declaracion -> . declaracion_error
    (63) asignar_estructuras -> . ID PUNTO ID ASG dato PYC
    (62) asignar_array -> . ID dimensiones ASG dato PYC
    (64) funcion -> . ID PA valores PC PYC
    (65) funcion -> . ID PA PC PYC
    (66) funcion -> . ID PA valores COMA valores PC PYC
    (67) print -> . PRIFINT PA ID PC PYC
    (68) input -> . IFINPUFUT PA ID PC PYC
    (69) declaracion_while -> . WHIFILEFE PA condicion PC LLAVEA bloque_codigo LLAVEC
    (70) declaracion_while -> . declaracion_while_error
    (45) declarar_if_error_llave -> . IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE LLAVEA bloque_codigo
    (46) declarar_if_error_llave -> . IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE bloque_codigo LLAVEC
    (25) tipo_dato -> . IFINT
    (26) tipo_dato -> . STRIFING
    (27) tipo_dato -> . AFARRAFAY
    (28) tipo_dato -> . STRUFUCT
    (29) tipo_dato -> . VOFOIFID
    (30) tipo_dato -> . CHAFAR
    (31) tipo_dato -> . BOFOOFOL
    (32) tipo_dato -> . FLOFOAFAT
    (51) declaracion_error -> . ID PYC
    (52) declaracion_error -> . ID ASG ID operacion_matematica ID PYC
    (53) declaracion_error -> . ID ASG valores PYC
    (54) declaracion_error -> . ID ID PYC
    (55) declaracion_error -> . ID ID ASG ID operacion_matematica ID PYC
    (56) declaracion_error -> . ID ID ASG valores PYC
    (57) declaracion_error -> . ID ID dimensiones PYC
    (58) declaracion_error -> . ID dimensiones PYC
    (71) declaracion_while_error -> . PA condicion PC LLAVEA bloque_codigo LLAVEC
    (72) declaracion_while_error -> . ID PA condicion PC LLAVEA bloque_codigo LLAVEC
    (73) declaracion_while_error -> . WHIFILEFE PA condicion PC bloque_codigo LLAVEC
    (74) declaracion_while_error -> . WHIFILEFE PA condicion PC LLAVEA bloque_codigo

    LLAVEA          shift and go to state 273
    VACIO           shift and go to state 67
    IFIF            shift and go to state 68
    AFARRAFAY       shift and go to state 72
    ID              shift and go to state 71
    PRIFINT         shift and go to state 74
    IFINPUFUT       shift and go to state 75
    WHIFILEFE       shift and go to state 76
    IFINT           shift and go to state 19
    STRIFING        shift and go to state 20
    STRUFUCT        shift and go to state 22
    VOFOIFID        shift and go to state 23
    CHAFAR          shift and go to state 24
    BOFOOFOL        shift and go to state 25
    FLOFOAFAT       shift and go to state 26
    PA              shift and go to state 57

    bloque_codigo                  shift and go to state 274
    declarar_if                    shift and go to state 59
    declaracion                    shift and go to state 60
    asignar_estructuras            shift and go to state 61
    asignar_array                  shift and go to state 62
    funcion                        shift and go to state 63
    print                          shift and go to state 64
    input                          shift and go to state 65
    declaracion_while              shift and go to state 66
    declarar_if_error_llave        shift and go to state 69
    tipo_dato                      shift and go to state 70
    declaracion_error              shift and go to state 73
    declaracion_while_error        shift and go to state 77

state 270

    (13) declarar_estructuras_error -> STRUFUCT ID LLAVEA tipo_dato ID PYC tipo_dato ID PYC tipo_dato ID PYC LLAVEC .

    IFINT           reduce using rule 13 (declarar_estructuras_error -> STRUFUCT ID LLAVEA tipo_dato ID PYC tipo_dato ID PYC tipo_dato ID PYC LLAVEC .)
    FUNCTION        reduce using rule 13 (declarar_estructuras_error -> STRUFUCT ID LLAVEA tipo_dato ID PYC tipo_dato ID PYC tipo_dato ID PYC LLAVEC .)
    MAFAIFIN        reduce using rule 13 (declarar_estructuras_error -> STRUFUCT ID LLAVEA tipo_dato ID PYC tipo_dato ID PYC tipo_dato ID PYC LLAVEC .)


state 271

    (14) declarar_funciones -> FUNCTION tipo_dato ID PA tipo_dato ID PC LLAVEA bloque_codigo REFETUFURN ID PYC LLAVEC .

    IFINT           reduce using rule 14 (declarar_funciones -> FUNCTION tipo_dato ID PA tipo_dato ID PC LLAVEA bloque_codigo REFETUFURN ID PYC LLAVEC .)
    MAFAIFIN        reduce using rule 14 (declarar_funciones -> FUNCTION tipo_dato ID PA tipo_dato ID PC LLAVEA bloque_codigo REFETUFURN ID PYC LLAVEC .)


state 272

    (17) declarar_funciones -> FUNCTION tipo_dato ID PA tipo_dato ID COMA tipo_dato ID PC LLAVEA bloque_codigo REFETUFURN . ID PYC LLAVEC

    ID              shift and go to state 275


state 273

    (43) declarar_if -> IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE LLAVEA . bloque_codigo LLAVEC
    (45) declarar_if_error_llave -> IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE LLAVEA . bloque_codigo
    (33) bloque_codigo -> . declarar_if bloque_codigo
    (34) bloque_codigo -> . declaracion bloque_codigo
    (35) bloque_codigo -> . asignar_estructuras bloque_codigo
    (36) bloque_codigo -> . asignar_array bloque_codigo
    (37) bloque_codigo -> . funcion bloque_codigo
    (38) bloque_codigo -> . print bloque_codigo
    (39) bloque_codigo -> . input bloque_codigo
    (40) bloque_codigo -> . declaracion_while bloque_codigo
    (41) bloque_codigo -> . VACIO
    (42) declarar_if -> . IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC
    (43) declarar_if -> . IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE LLAVEA bloque_codigo LLAVEC
    (44) declarar_if -> . declarar_if_error_llave
    (47) declaracion -> . tipo_dato ID ASG ID operacion_matematica ID PYC
    (48) declaracion -> . tipo_dato ID ASG dato PYC
    (49) declaracion -> . AFARRAFAY ID dimensiones PYC
    (50) declaracion -> . declaracion_error
    (63) asignar_estructuras -> . ID PUNTO ID ASG dato PYC
    (62) asignar_array -> . ID dimensiones ASG dato PYC
    (64) funcion -> . ID PA valores PC PYC
    (65) funcion -> . ID PA PC PYC
    (66) funcion -> . ID PA valores COMA valores PC PYC
    (67) print -> . PRIFINT PA ID PC PYC
    (68) input -> . IFINPUFUT PA ID PC PYC
    (69) declaracion_while -> . WHIFILEFE PA condicion PC LLAVEA bloque_codigo LLAVEC
    (70) declaracion_while -> . declaracion_while_error
    (45) declarar_if_error_llave -> . IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE LLAVEA bloque_codigo
    (46) declarar_if_error_llave -> . IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE bloque_codigo LLAVEC
    (25) tipo_dato -> . IFINT
    (26) tipo_dato -> . STRIFING
    (27) tipo_dato -> . AFARRAFAY
    (28) tipo_dato -> . STRUFUCT
    (29) tipo_dato -> . VOFOIFID
    (30) tipo_dato -> . CHAFAR
    (31) tipo_dato -> . BOFOOFOL
    (32) tipo_dato -> . FLOFOAFAT
    (51) declaracion_error -> . ID PYC
    (52) declaracion_error -> . ID ASG ID operacion_matematica ID PYC
    (53) declaracion_error -> . ID ASG valores PYC
    (54) declaracion_error -> . ID ID PYC
    (55) declaracion_error -> . ID ID ASG ID operacion_matematica ID PYC
    (56) declaracion_error -> . ID ID ASG valores PYC
    (57) declaracion_error -> . ID ID dimensiones PYC
    (58) declaracion_error -> . ID dimensiones PYC
    (71) declaracion_while_error -> . PA condicion PC LLAVEA bloque_codigo LLAVEC
    (72) declaracion_while_error -> . ID PA condicion PC LLAVEA bloque_codigo LLAVEC
    (73) declaracion_while_error -> . WHIFILEFE PA condicion PC bloque_codigo LLAVEC
    (74) declaracion_while_error -> . WHIFILEFE PA condicion PC LLAVEA bloque_codigo

    VACIO           shift and go to state 67
    IFIF            shift and go to state 68
    AFARRAFAY       shift and go to state 72
    ID              shift and go to state 71
    PRIFINT         shift and go to state 74
    IFINPUFUT       shift and go to state 75
    WHIFILEFE       shift and go to state 76
    IFINT           shift and go to state 19
    STRIFING        shift and go to state 20
    STRUFUCT        shift and go to state 22
    VOFOIFID        shift and go to state 23
    CHAFAR          shift and go to state 24
    BOFOOFOL        shift and go to state 25
    FLOFOAFAT       shift and go to state 26
    PA              shift and go to state 57

    bloque_codigo                  shift and go to state 276
    declarar_if                    shift and go to state 59
    declaracion                    shift and go to state 60
    asignar_estructuras            shift and go to state 61
    asignar_array                  shift and go to state 62
    funcion                        shift and go to state 63
    print                          shift and go to state 64
    input                          shift and go to state 65
    declaracion_while              shift and go to state 66
    declarar_if_error_llave        shift and go to state 69
    tipo_dato                      shift and go to state 70
    declaracion_error              shift and go to state 73
    declaracion_while_error        shift and go to state 77

state 274

    (46) declarar_if_error_llave -> IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE bloque_codigo . LLAVEC

    LLAVEC          shift and go to state 277


state 275

    (17) declarar_funciones -> FUNCTION tipo_dato ID PA tipo_dato ID COMA tipo_dato ID PC LLAVEA bloque_codigo REFETUFURN ID . PYC LLAVEC

    PYC             shift and go to state 278


state 276

    (43) declarar_if -> IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE LLAVEA bloque_codigo . LLAVEC
    (45) declarar_if_error_llave -> IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE LLAVEA bloque_codigo .

    LLAVEC          shift and go to state 279
    VACIO           reduce using rule 45 (declarar_if_error_llave -> IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE LLAVEA bloque_codigo .)
    IFIF            reduce using rule 45 (declarar_if_error_llave -> IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE LLAVEA bloque_codigo .)
    AFARRAFAY       reduce using rule 45 (declarar_if_error_llave -> IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE LLAVEA bloque_codigo .)
    ID              reduce using rule 45 (declarar_if_error_llave -> IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE LLAVEA bloque_codigo .)
    PRIFINT         reduce using rule 45 (declarar_if_error_llave -> IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE LLAVEA bloque_codigo .)
    IFINPUFUT       reduce using rule 45 (declarar_if_error_llave -> IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE LLAVEA bloque_codigo .)
    WHIFILEFE       reduce using rule 45 (declarar_if_error_llave -> IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE LLAVEA bloque_codigo .)
    IFINT           reduce using rule 45 (declarar_if_error_llave -> IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE LLAVEA bloque_codigo .)
    STRIFING        reduce using rule 45 (declarar_if_error_llave -> IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE LLAVEA bloque_codigo .)
    STRUFUCT        reduce using rule 45 (declarar_if_error_llave -> IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE LLAVEA bloque_codigo .)
    VOFOIFID        reduce using rule 45 (declarar_if_error_llave -> IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE LLAVEA bloque_codigo .)
    CHAFAR          reduce using rule 45 (declarar_if_error_llave -> IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE LLAVEA bloque_codigo .)
    BOFOOFOL        reduce using rule 45 (declarar_if_error_llave -> IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE LLAVEA bloque_codigo .)
    FLOFOAFAT       reduce using rule 45 (declarar_if_error_llave -> IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE LLAVEA bloque_codigo .)
    PA              reduce using rule 45 (declarar_if_error_llave -> IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE LLAVEA bloque_codigo .)


state 277

    (46) declarar_if_error_llave -> IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE bloque_codigo LLAVEC .

    VACIO           reduce using rule 46 (declarar_if_error_llave -> IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE bloque_codigo LLAVEC .)
    IFIF            reduce using rule 46 (declarar_if_error_llave -> IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE bloque_codigo LLAVEC .)
    AFARRAFAY       reduce using rule 46 (declarar_if_error_llave -> IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE bloque_codigo LLAVEC .)
    ID              reduce using rule 46 (declarar_if_error_llave -> IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE bloque_codigo LLAVEC .)
    PRIFINT         reduce using rule 46 (declarar_if_error_llave -> IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE bloque_codigo LLAVEC .)
    IFINPUFUT       reduce using rule 46 (declarar_if_error_llave -> IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE bloque_codigo LLAVEC .)
    WHIFILEFE       reduce using rule 46 (declarar_if_error_llave -> IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE bloque_codigo LLAVEC .)
    IFINT           reduce using rule 46 (declarar_if_error_llave -> IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE bloque_codigo LLAVEC .)
    STRIFING        reduce using rule 46 (declarar_if_error_llave -> IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE bloque_codigo LLAVEC .)
    STRUFUCT        reduce using rule 46 (declarar_if_error_llave -> IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE bloque_codigo LLAVEC .)
    VOFOIFID        reduce using rule 46 (declarar_if_error_llave -> IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE bloque_codigo LLAVEC .)
    CHAFAR          reduce using rule 46 (declarar_if_error_llave -> IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE bloque_codigo LLAVEC .)
    BOFOOFOL        reduce using rule 46 (declarar_if_error_llave -> IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE bloque_codigo LLAVEC .)
    FLOFOAFAT       reduce using rule 46 (declarar_if_error_llave -> IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE bloque_codigo LLAVEC .)
    PA              reduce using rule 46 (declarar_if_error_llave -> IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE bloque_codigo LLAVEC .)


state 278

    (17) declarar_funciones -> FUNCTION tipo_dato ID PA tipo_dato ID COMA tipo_dato ID PC LLAVEA bloque_codigo REFETUFURN ID PYC . LLAVEC

    LLAVEC          shift and go to state 280


state 279

    (43) declarar_if -> IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE LLAVEA bloque_codigo LLAVEC .

    VACIO           reduce using rule 43 (declarar_if -> IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE LLAVEA bloque_codigo LLAVEC .)
    IFIF            reduce using rule 43 (declarar_if -> IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE LLAVEA bloque_codigo LLAVEC .)
    AFARRAFAY       reduce using rule 43 (declarar_if -> IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE LLAVEA bloque_codigo LLAVEC .)
    ID              reduce using rule 43 (declarar_if -> IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE LLAVEA bloque_codigo LLAVEC .)
    PRIFINT         reduce using rule 43 (declarar_if -> IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE LLAVEA bloque_codigo LLAVEC .)
    IFINPUFUT       reduce using rule 43 (declarar_if -> IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE LLAVEA bloque_codigo LLAVEC .)
    WHIFILEFE       reduce using rule 43 (declarar_if -> IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE LLAVEA bloque_codigo LLAVEC .)
    IFINT           reduce using rule 43 (declarar_if -> IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE LLAVEA bloque_codigo LLAVEC .)
    STRIFING        reduce using rule 43 (declarar_if -> IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE LLAVEA bloque_codigo LLAVEC .)
    STRUFUCT        reduce using rule 43 (declarar_if -> IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE LLAVEA bloque_codigo LLAVEC .)
    VOFOIFID        reduce using rule 43 (declarar_if -> IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE LLAVEA bloque_codigo LLAVEC .)
    CHAFAR          reduce using rule 43 (declarar_if -> IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE LLAVEA bloque_codigo LLAVEC .)
    BOFOOFOL        reduce using rule 43 (declarar_if -> IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE LLAVEA bloque_codigo LLAVEC .)
    FLOFOAFAT       reduce using rule 43 (declarar_if -> IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE LLAVEA bloque_codigo LLAVEC .)
    PA              reduce using rule 43 (declarar_if -> IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE LLAVEA bloque_codigo LLAVEC .)


state 280

    (17) declarar_funciones -> FUNCTION tipo_dato ID PA tipo_dato ID COMA tipo_dato ID PC LLAVEA bloque_codigo REFETUFURN ID PYC LLAVEC .

    IFINT           reduce using rule 17 (declarar_funciones -> FUNCTION tipo_dato ID PA tipo_dato ID COMA tipo_dato ID PC LLAVEA bloque_codigo REFETUFURN ID PYC LLAVEC .)
    MAFAIFIN        reduce using rule 17 (declarar_funciones -> FUNCTION tipo_dato ID PA tipo_dato ID COMA tipo_dato ID PC LLAVEA bloque_codigo REFETUFURN ID PYC LLAVEC .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for ID in state 72 resolved as shift
