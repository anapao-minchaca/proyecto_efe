Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> start
Rule 1     start -> declarar_estructuras declarar_main
Rule 2     start -> declarar_funciones declarar_main
Rule 3     start -> declarar_estructuras declarar_funciones declarar_main
Rule 4     start -> declarar_main
Rule 5     declarar_estructuras -> STRUFUCT ID LLAVEA tipo_dato ID PYC tipo_dato ID PYC LLAVEC
Rule 6     declarar_estructuras -> declarar_estructuras_error
Rule 7     declarar_estructuras_error -> ID LLAVEA tipo_dato ID PYC tipo_dato ID PYC LLAVEC
Rule 8     declarar_estructuras_error -> STRUFUCT ID LLAVEA tipo_dato PYC tipo_dato ID PYC LLAVEC
Rule 9     declarar_estructuras_error -> STRUFUCT ID LLAVEA tipo_dato ID PYC tipo_dato PYC LLAVEC
Rule 10    declarar_estructuras_error -> STRUFUCT ID LLAVEA tipo_dato PYC tipo_dato PYC LLAVEC
Rule 11    declarar_estructuras_error -> STRUFUCT ID LLAVEA ID PYC ID PYC LLAVEC
Rule 12    declarar_funciones -> FUNCTION tipo_dato ID PA tipo_dato ID PC LLAVEA bloque_codigo REFETUFURN ID PYC LLAVEC
Rule 13    declarar_funciones -> FUNCTION tipo_dato ID PA PC LLAVEA bloque_codigo REFETUFURN ID PYC LLAVEC
Rule 14    declarar_funciones -> FUNCTION tipo_dato ID PA PC LLAVEA bloque_codigo REFETUFURN PYC LLAVEC
Rule 15    declarar_funciones -> FUNCTION tipo_dato ID PA tipo_dato ID COMA tipo_dato ID PC LLAVEA bloque_codigo REFETUFURN ID PYC LLAVEC
Rule 16    declarar_main -> IFINT MAFAIFIN PA PC LLAVEA bloque_codigo REFETUFURN PYC LLAVEC
Rule 17    declarar_main -> declarar_main_error
Rule 18    declarar_main_error -> MAFAIFIN PA PC LLAVEA bloque_codigo REFETUFURN PYC LLAVEC
Rule 19    declarar_main_error -> IFINT MAFAIFIN PA PC LLAVEA bloque_codigo LLAVEC
Rule 20    declarar_main_error -> MAFAIFIN PA PC LLAVEA bloque_codigo LLAVEC
Rule 21    tipo_dato -> IFINT
Rule 22    tipo_dato -> STRIFING
Rule 23    tipo_dato -> AFARRAFAY
Rule 24    tipo_dato -> STRUFUCT
Rule 25    tipo_dato -> VOFOIFID
Rule 26    tipo_dato -> CHAFAR
Rule 27    tipo_dato -> BOFOOFOL
Rule 28    tipo_dato -> FLOFOAFAT
Rule 29    bloque_codigo -> declarar_if bloque_codigo
Rule 30    bloque_codigo -> declaracion bloque_codigo
Rule 31    bloque_codigo -> asignar_estructuras bloque_codigo
Rule 32    bloque_codigo -> asignar_array bloque_codigo
Rule 33    bloque_codigo -> funcion bloque_codigo
Rule 34    bloque_codigo -> print bloque_codigo
Rule 35    bloque_codigo -> input bloque_codigo
Rule 36    bloque_codigo -> declaracion_while bloque_codigo
Rule 37    bloque_codigo -> VACIO
Rule 38    declarar_if -> IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC
Rule 39    declarar_if -> IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE LLAVEA bloque_codigo LLAVEC
Rule 40    declarar_if -> declarar_if_error_llave
Rule 41    declarar_if_error_llave -> IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE LLAVEA bloque_codigo
Rule 42    declarar_if_error_llave -> IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE bloque_codigo LLAVEC
Rule 43    declaracion -> tipo_dato ID PYC
Rule 44    declaracion -> tipo_dato ID ASG ID operacion_matematica ID PYC
Rule 45    declaracion -> tipo_dato ID ASG dato PYC
Rule 46    declaracion -> AFARRAFAY ID dimensiones PYC
Rule 47    declaracion -> declaracion_error
Rule 48    declaracion_error -> ID PYC
Rule 49    declaracion_error -> ID ASG ID operacion_matematica ID PYC
Rule 50    declaracion_error -> ID ASG valores PYC
Rule 51    dimensiones -> dimension dimensiones
Rule 52    dimensiones -> VACIO
Rule 53    dimension -> CA INT CC
Rule 54    asignar_array -> ID dimensiones ASG dato PYC
Rule 55    asignar_estructuras -> ID PUNTO ID ASG dato
Rule 56    funcion -> ID PA valores PC PYC
Rule 57    funcion -> ID PA PC PYC
Rule 58    funcion -> ID PA valores COMA valores PC PYC
Rule 59    print -> PRIFINT PA ID PC PYC
Rule 60    input -> IFINPUFUT PA ID PC PYC
Rule 61    declaracion_while -> WHIFILEFE PA condicion PC LLAVEA bloque_codigo LLAVEC
Rule 62    declaracion_while -> declaracion_while_error
Rule 63    declaracion_while_error -> PA condicion PC LLAVEA bloque_codigo LLAVEC
Rule 64    declaracion_while_error -> WHIFILEFE PA condicion PC bloque_codigo LLAVEC
Rule 65    declaracion_while_error -> WHIFILEFE PA condicion PC LLAVEA bloque_codigo
Rule 66    condicion -> valores operadores valores
Rule 67    condicion -> valores
Rule 68    condicion -> valores operadores_logicos condicion
Rule 69    condicion -> valores NOT valores
Rule 70    operacion_matematica -> SUM
Rule 71    operacion_matematica -> RES
Rule 72    operacion_matematica -> MUL
Rule 73    operacion_matematica -> DIV
Rule 74    operacion_matematica -> RED
Rule 75    operacion_matematica -> POT
Rule 76    valores -> INT
Rule 77    valores -> CHAR
Rule 78    valores -> TRUFUEFE
Rule 79    valores -> FAFALSEFE
Rule 80    valores -> PCC
Rule 81    valores -> ID
Rule 82    dato -> INT
Rule 83    dato -> CHAR
Rule 84    dato -> TRUFUEFE
Rule 85    dato -> FAFALSEFE
Rule 86    dato -> PCC
Rule 87    dato -> REAL
Rule 88    operadores -> MEN
Rule 89    operadores -> MAY
Rule 90    operadores -> MENIG
Rule 91    operadores -> MAYIG
Rule 92    operadores -> CMP
Rule 93    operadores -> DIF
Rule 94    operadores_logicos -> AND
Rule 95    operadores_logicos -> OR
Rule 96    vacio -> VACIO

Terminals, with rules where they appear

AFARRAFAY            : 23 46
AND                  : 94
ASG                  : 44 45 49 50 54 55
BOFOOFOL             : 27
CA                   : 53
CC                   : 53
CHAFAR               : 26
CHAR                 : 77 83
CMP                  : 92
COMA                 : 15 58
DIF                  : 93
DIV                  : 73
EFELSEFE             : 39 41 42
FAFALSEFE            : 79 85
FLOFOAFAT            : 28
FUNCTION             : 12 13 14 15
ID                   : 5 5 5 7 7 7 8 8 9 9 10 11 11 11 12 12 12 13 13 14 15 15 15 15 43 44 44 44 45 46 48 49 49 49 50 54 55 55 56 57 58 59 60 81
IFIF                 : 38 39 41 42
IFINPUFUT            : 60
IFINT                : 16 19 21
INT                  : 53 76 82
LLAVEA               : 5 7 8 9 10 11 12 13 14 15 16 18 19 20 38 39 39 41 41 42 61 63 65
LLAVEC               : 5 7 8 9 10 11 12 13 14 15 16 18 19 20 38 39 39 41 42 42 61 63 64
MAFAIFIN             : 16 18 19 20
MAY                  : 89
MAYIG                : 91
MEN                  : 88
MENIG                : 90
MUL                  : 72
NOT                  : 69
OR                   : 95
PA                   : 12 13 14 15 16 18 19 20 38 39 41 42 56 57 58 59 60 61 63 64 65
PC                   : 12 13 14 15 16 18 19 20 38 39 41 42 56 57 58 59 60 61 63 64 65
PCC                  : 80 86
POT                  : 75
PRIFINT              : 59
PUNTO                : 55
PYC                  : 5 5 7 7 8 8 9 9 10 10 11 11 12 13 14 15 16 18 43 44 45 46 48 49 50 54 56 57 58 59 60
REAL                 : 87
RED                  : 74
REFETUFURN           : 12 13 14 15 16 18
RES                  : 71
STRIFING             : 22
STRUFUCT             : 5 8 9 10 11 24
SUM                  : 70
TRUFUEFE             : 78 84
VACIO                : 37 52 96
VOFOIFID             : 25
WHIFILEFE            : 61 64 65
error                : 

Nonterminals, with rules where they appear

asignar_array        : 32
asignar_estructuras  : 31
bloque_codigo        : 12 13 14 15 16 18 19 20 29 30 31 32 33 34 35 36 38 39 39 41 41 42 42 61 63 64 65
condicion            : 38 39 41 42 61 63 64 65 68
dato                 : 45 54 55
declaracion          : 30
declaracion_error    : 47
declaracion_while    : 36
declaracion_while_error : 62
declarar_estructuras : 1 3
declarar_estructuras_error : 6
declarar_funciones   : 2 3
declarar_if          : 29
declarar_if_error_llave : 40
declarar_main        : 1 2 3 4
declarar_main_error  : 17
dimension            : 51
dimensiones          : 46 51 54
funcion              : 33
input                : 35
operacion_matematica : 44 49
operadores           : 66
operadores_logicos   : 68
print                : 34
start                : 0
tipo_dato            : 5 5 7 7 8 8 9 9 10 10 12 12 13 14 15 15 15 43 44 45
vacio                : 
valores              : 50 56 58 58 66 66 67 68 69 69

Parsing method: LALR

state 0

    (0) S' -> . start
    (1) start -> . declarar_estructuras declarar_main
    (2) start -> . declarar_funciones declarar_main
    (3) start -> . declarar_estructuras declarar_funciones declarar_main
    (4) start -> . declarar_main
    (5) declarar_estructuras -> . STRUFUCT ID LLAVEA tipo_dato ID PYC tipo_dato ID PYC LLAVEC
    (6) declarar_estructuras -> . declarar_estructuras_error
    (12) declarar_funciones -> . FUNCTION tipo_dato ID PA tipo_dato ID PC LLAVEA bloque_codigo REFETUFURN ID PYC LLAVEC
    (13) declarar_funciones -> . FUNCTION tipo_dato ID PA PC LLAVEA bloque_codigo REFETUFURN ID PYC LLAVEC
    (14) declarar_funciones -> . FUNCTION tipo_dato ID PA PC LLAVEA bloque_codigo REFETUFURN PYC LLAVEC
    (15) declarar_funciones -> . FUNCTION tipo_dato ID PA tipo_dato ID COMA tipo_dato ID PC LLAVEA bloque_codigo REFETUFURN ID PYC LLAVEC
    (16) declarar_main -> . IFINT MAFAIFIN PA PC LLAVEA bloque_codigo REFETUFURN PYC LLAVEC
    (17) declarar_main -> . declarar_main_error
    (7) declarar_estructuras_error -> . ID LLAVEA tipo_dato ID PYC tipo_dato ID PYC LLAVEC
    (8) declarar_estructuras_error -> . STRUFUCT ID LLAVEA tipo_dato PYC tipo_dato ID PYC LLAVEC
    (9) declarar_estructuras_error -> . STRUFUCT ID LLAVEA tipo_dato ID PYC tipo_dato PYC LLAVEC
    (10) declarar_estructuras_error -> . STRUFUCT ID LLAVEA tipo_dato PYC tipo_dato PYC LLAVEC
    (11) declarar_estructuras_error -> . STRUFUCT ID LLAVEA ID PYC ID PYC LLAVEC
    (18) declarar_main_error -> . MAFAIFIN PA PC LLAVEA bloque_codigo REFETUFURN PYC LLAVEC
    (19) declarar_main_error -> . IFINT MAFAIFIN PA PC LLAVEA bloque_codigo LLAVEC
    (20) declarar_main_error -> . MAFAIFIN PA PC LLAVEA bloque_codigo LLAVEC

    STRUFUCT        shift and go to state 5
    FUNCTION        shift and go to state 8
    IFINT           shift and go to state 9
    ID              shift and go to state 6
    MAFAIFIN        shift and go to state 10

    start                          shift and go to state 1
    declarar_estructuras           shift and go to state 2
    declarar_main                  shift and go to state 3
    declarar_funciones             shift and go to state 4
    declarar_estructuras_error     shift and go to state 7
    declarar_main_error            shift and go to state 11

state 1

    (0) S' -> start .



state 2

    (1) start -> declarar_estructuras . declarar_main
    (3) start -> declarar_estructuras . declarar_funciones declarar_main
    (16) declarar_main -> . IFINT MAFAIFIN PA PC LLAVEA bloque_codigo REFETUFURN PYC LLAVEC
    (17) declarar_main -> . declarar_main_error
    (12) declarar_funciones -> . FUNCTION tipo_dato ID PA tipo_dato ID PC LLAVEA bloque_codigo REFETUFURN ID PYC LLAVEC
    (13) declarar_funciones -> . FUNCTION tipo_dato ID PA PC LLAVEA bloque_codigo REFETUFURN ID PYC LLAVEC
    (14) declarar_funciones -> . FUNCTION tipo_dato ID PA PC LLAVEA bloque_codigo REFETUFURN PYC LLAVEC
    (15) declarar_funciones -> . FUNCTION tipo_dato ID PA tipo_dato ID COMA tipo_dato ID PC LLAVEA bloque_codigo REFETUFURN ID PYC LLAVEC
    (18) declarar_main_error -> . MAFAIFIN PA PC LLAVEA bloque_codigo REFETUFURN PYC LLAVEC
    (19) declarar_main_error -> . IFINT MAFAIFIN PA PC LLAVEA bloque_codigo LLAVEC
    (20) declarar_main_error -> . MAFAIFIN PA PC LLAVEA bloque_codigo LLAVEC

    IFINT           shift and go to state 9
    FUNCTION        shift and go to state 8
    MAFAIFIN        shift and go to state 10

    declarar_main                  shift and go to state 12
    declarar_funciones             shift and go to state 13
    declarar_main_error            shift and go to state 11

state 3

    (4) start -> declarar_main .

    $end            reduce using rule 4 (start -> declarar_main .)


state 4

    (2) start -> declarar_funciones . declarar_main
    (16) declarar_main -> . IFINT MAFAIFIN PA PC LLAVEA bloque_codigo REFETUFURN PYC LLAVEC
    (17) declarar_main -> . declarar_main_error
    (18) declarar_main_error -> . MAFAIFIN PA PC LLAVEA bloque_codigo REFETUFURN PYC LLAVEC
    (19) declarar_main_error -> . IFINT MAFAIFIN PA PC LLAVEA bloque_codigo LLAVEC
    (20) declarar_main_error -> . MAFAIFIN PA PC LLAVEA bloque_codigo LLAVEC

    IFINT           shift and go to state 9
    MAFAIFIN        shift and go to state 10

    declarar_main                  shift and go to state 14
    declarar_main_error            shift and go to state 11

state 5

    (5) declarar_estructuras -> STRUFUCT . ID LLAVEA tipo_dato ID PYC tipo_dato ID PYC LLAVEC
    (8) declarar_estructuras_error -> STRUFUCT . ID LLAVEA tipo_dato PYC tipo_dato ID PYC LLAVEC
    (9) declarar_estructuras_error -> STRUFUCT . ID LLAVEA tipo_dato ID PYC tipo_dato PYC LLAVEC
    (10) declarar_estructuras_error -> STRUFUCT . ID LLAVEA tipo_dato PYC tipo_dato PYC LLAVEC
    (11) declarar_estructuras_error -> STRUFUCT . ID LLAVEA ID PYC ID PYC LLAVEC

    ID              shift and go to state 15


state 6

    (7) declarar_estructuras_error -> ID . LLAVEA tipo_dato ID PYC tipo_dato ID PYC LLAVEC

    LLAVEA          shift and go to state 16


state 7

    (6) declarar_estructuras -> declarar_estructuras_error .

    IFINT           reduce using rule 6 (declarar_estructuras -> declarar_estructuras_error .)
    FUNCTION        reduce using rule 6 (declarar_estructuras -> declarar_estructuras_error .)
    MAFAIFIN        reduce using rule 6 (declarar_estructuras -> declarar_estructuras_error .)


state 8

    (12) declarar_funciones -> FUNCTION . tipo_dato ID PA tipo_dato ID PC LLAVEA bloque_codigo REFETUFURN ID PYC LLAVEC
    (13) declarar_funciones -> FUNCTION . tipo_dato ID PA PC LLAVEA bloque_codigo REFETUFURN ID PYC LLAVEC
    (14) declarar_funciones -> FUNCTION . tipo_dato ID PA PC LLAVEA bloque_codigo REFETUFURN PYC LLAVEC
    (15) declarar_funciones -> FUNCTION . tipo_dato ID PA tipo_dato ID COMA tipo_dato ID PC LLAVEA bloque_codigo REFETUFURN ID PYC LLAVEC
    (21) tipo_dato -> . IFINT
    (22) tipo_dato -> . STRIFING
    (23) tipo_dato -> . AFARRAFAY
    (24) tipo_dato -> . STRUFUCT
    (25) tipo_dato -> . VOFOIFID
    (26) tipo_dato -> . CHAFAR
    (27) tipo_dato -> . BOFOOFOL
    (28) tipo_dato -> . FLOFOAFAT

    IFINT           shift and go to state 18
    STRIFING        shift and go to state 19
    AFARRAFAY       shift and go to state 20
    STRUFUCT        shift and go to state 21
    VOFOIFID        shift and go to state 22
    CHAFAR          shift and go to state 23
    BOFOOFOL        shift and go to state 24
    FLOFOAFAT       shift and go to state 25

    tipo_dato                      shift and go to state 17

state 9

    (16) declarar_main -> IFINT . MAFAIFIN PA PC LLAVEA bloque_codigo REFETUFURN PYC LLAVEC
    (19) declarar_main_error -> IFINT . MAFAIFIN PA PC LLAVEA bloque_codigo LLAVEC

    MAFAIFIN        shift and go to state 26


state 10

    (18) declarar_main_error -> MAFAIFIN . PA PC LLAVEA bloque_codigo REFETUFURN PYC LLAVEC
    (20) declarar_main_error -> MAFAIFIN . PA PC LLAVEA bloque_codigo LLAVEC

    PA              shift and go to state 27


state 11

    (17) declarar_main -> declarar_main_error .

    $end            reduce using rule 17 (declarar_main -> declarar_main_error .)


state 12

    (1) start -> declarar_estructuras declarar_main .

    $end            reduce using rule 1 (start -> declarar_estructuras declarar_main .)


state 13

    (3) start -> declarar_estructuras declarar_funciones . declarar_main
    (16) declarar_main -> . IFINT MAFAIFIN PA PC LLAVEA bloque_codigo REFETUFURN PYC LLAVEC
    (17) declarar_main -> . declarar_main_error
    (18) declarar_main_error -> . MAFAIFIN PA PC LLAVEA bloque_codigo REFETUFURN PYC LLAVEC
    (19) declarar_main_error -> . IFINT MAFAIFIN PA PC LLAVEA bloque_codigo LLAVEC
    (20) declarar_main_error -> . MAFAIFIN PA PC LLAVEA bloque_codigo LLAVEC

    IFINT           shift and go to state 9
    MAFAIFIN        shift and go to state 10

    declarar_main                  shift and go to state 28
    declarar_main_error            shift and go to state 11

state 14

    (2) start -> declarar_funciones declarar_main .

    $end            reduce using rule 2 (start -> declarar_funciones declarar_main .)


state 15

    (5) declarar_estructuras -> STRUFUCT ID . LLAVEA tipo_dato ID PYC tipo_dato ID PYC LLAVEC
    (8) declarar_estructuras_error -> STRUFUCT ID . LLAVEA tipo_dato PYC tipo_dato ID PYC LLAVEC
    (9) declarar_estructuras_error -> STRUFUCT ID . LLAVEA tipo_dato ID PYC tipo_dato PYC LLAVEC
    (10) declarar_estructuras_error -> STRUFUCT ID . LLAVEA tipo_dato PYC tipo_dato PYC LLAVEC
    (11) declarar_estructuras_error -> STRUFUCT ID . LLAVEA ID PYC ID PYC LLAVEC

    LLAVEA          shift and go to state 29


state 16

    (7) declarar_estructuras_error -> ID LLAVEA . tipo_dato ID PYC tipo_dato ID PYC LLAVEC
    (21) tipo_dato -> . IFINT
    (22) tipo_dato -> . STRIFING
    (23) tipo_dato -> . AFARRAFAY
    (24) tipo_dato -> . STRUFUCT
    (25) tipo_dato -> . VOFOIFID
    (26) tipo_dato -> . CHAFAR
    (27) tipo_dato -> . BOFOOFOL
    (28) tipo_dato -> . FLOFOAFAT

    IFINT           shift and go to state 18
    STRIFING        shift and go to state 19
    AFARRAFAY       shift and go to state 20
    STRUFUCT        shift and go to state 21
    VOFOIFID        shift and go to state 22
    CHAFAR          shift and go to state 23
    BOFOOFOL        shift and go to state 24
    FLOFOAFAT       shift and go to state 25

    tipo_dato                      shift and go to state 30

state 17

    (12) declarar_funciones -> FUNCTION tipo_dato . ID PA tipo_dato ID PC LLAVEA bloque_codigo REFETUFURN ID PYC LLAVEC
    (13) declarar_funciones -> FUNCTION tipo_dato . ID PA PC LLAVEA bloque_codigo REFETUFURN ID PYC LLAVEC
    (14) declarar_funciones -> FUNCTION tipo_dato . ID PA PC LLAVEA bloque_codigo REFETUFURN PYC LLAVEC
    (15) declarar_funciones -> FUNCTION tipo_dato . ID PA tipo_dato ID COMA tipo_dato ID PC LLAVEA bloque_codigo REFETUFURN ID PYC LLAVEC

    ID              shift and go to state 31


state 18

    (21) tipo_dato -> IFINT .

    ID              reduce using rule 21 (tipo_dato -> IFINT .)
    PYC             reduce using rule 21 (tipo_dato -> IFINT .)


state 19

    (22) tipo_dato -> STRIFING .

    ID              reduce using rule 22 (tipo_dato -> STRIFING .)
    PYC             reduce using rule 22 (tipo_dato -> STRIFING .)


state 20

    (23) tipo_dato -> AFARRAFAY .

    ID              reduce using rule 23 (tipo_dato -> AFARRAFAY .)
    PYC             reduce using rule 23 (tipo_dato -> AFARRAFAY .)


state 21

    (24) tipo_dato -> STRUFUCT .

    ID              reduce using rule 24 (tipo_dato -> STRUFUCT .)
    PYC             reduce using rule 24 (tipo_dato -> STRUFUCT .)


state 22

    (25) tipo_dato -> VOFOIFID .

    ID              reduce using rule 25 (tipo_dato -> VOFOIFID .)
    PYC             reduce using rule 25 (tipo_dato -> VOFOIFID .)


state 23

    (26) tipo_dato -> CHAFAR .

    ID              reduce using rule 26 (tipo_dato -> CHAFAR .)
    PYC             reduce using rule 26 (tipo_dato -> CHAFAR .)


state 24

    (27) tipo_dato -> BOFOOFOL .

    ID              reduce using rule 27 (tipo_dato -> BOFOOFOL .)
    PYC             reduce using rule 27 (tipo_dato -> BOFOOFOL .)


state 25

    (28) tipo_dato -> FLOFOAFAT .

    ID              reduce using rule 28 (tipo_dato -> FLOFOAFAT .)
    PYC             reduce using rule 28 (tipo_dato -> FLOFOAFAT .)


state 26

    (16) declarar_main -> IFINT MAFAIFIN . PA PC LLAVEA bloque_codigo REFETUFURN PYC LLAVEC
    (19) declarar_main_error -> IFINT MAFAIFIN . PA PC LLAVEA bloque_codigo LLAVEC

    PA              shift and go to state 32


state 27

    (18) declarar_main_error -> MAFAIFIN PA . PC LLAVEA bloque_codigo REFETUFURN PYC LLAVEC
    (20) declarar_main_error -> MAFAIFIN PA . PC LLAVEA bloque_codigo LLAVEC

    PC              shift and go to state 33


state 28

    (3) start -> declarar_estructuras declarar_funciones declarar_main .

    $end            reduce using rule 3 (start -> declarar_estructuras declarar_funciones declarar_main .)


state 29

    (5) declarar_estructuras -> STRUFUCT ID LLAVEA . tipo_dato ID PYC tipo_dato ID PYC LLAVEC
    (8) declarar_estructuras_error -> STRUFUCT ID LLAVEA . tipo_dato PYC tipo_dato ID PYC LLAVEC
    (9) declarar_estructuras_error -> STRUFUCT ID LLAVEA . tipo_dato ID PYC tipo_dato PYC LLAVEC
    (10) declarar_estructuras_error -> STRUFUCT ID LLAVEA . tipo_dato PYC tipo_dato PYC LLAVEC
    (11) declarar_estructuras_error -> STRUFUCT ID LLAVEA . ID PYC ID PYC LLAVEC
    (21) tipo_dato -> . IFINT
    (22) tipo_dato -> . STRIFING
    (23) tipo_dato -> . AFARRAFAY
    (24) tipo_dato -> . STRUFUCT
    (25) tipo_dato -> . VOFOIFID
    (26) tipo_dato -> . CHAFAR
    (27) tipo_dato -> . BOFOOFOL
    (28) tipo_dato -> . FLOFOAFAT

    ID              shift and go to state 34
    IFINT           shift and go to state 18
    STRIFING        shift and go to state 19
    AFARRAFAY       shift and go to state 20
    STRUFUCT        shift and go to state 21
    VOFOIFID        shift and go to state 22
    CHAFAR          shift and go to state 23
    BOFOOFOL        shift and go to state 24
    FLOFOAFAT       shift and go to state 25

    tipo_dato                      shift and go to state 35

state 30

    (7) declarar_estructuras_error -> ID LLAVEA tipo_dato . ID PYC tipo_dato ID PYC LLAVEC

    ID              shift and go to state 36


state 31

    (12) declarar_funciones -> FUNCTION tipo_dato ID . PA tipo_dato ID PC LLAVEA bloque_codigo REFETUFURN ID PYC LLAVEC
    (13) declarar_funciones -> FUNCTION tipo_dato ID . PA PC LLAVEA bloque_codigo REFETUFURN ID PYC LLAVEC
    (14) declarar_funciones -> FUNCTION tipo_dato ID . PA PC LLAVEA bloque_codigo REFETUFURN PYC LLAVEC
    (15) declarar_funciones -> FUNCTION tipo_dato ID . PA tipo_dato ID COMA tipo_dato ID PC LLAVEA bloque_codigo REFETUFURN ID PYC LLAVEC

    PA              shift and go to state 37


state 32

    (16) declarar_main -> IFINT MAFAIFIN PA . PC LLAVEA bloque_codigo REFETUFURN PYC LLAVEC
    (19) declarar_main_error -> IFINT MAFAIFIN PA . PC LLAVEA bloque_codigo LLAVEC

    PC              shift and go to state 38


state 33

    (18) declarar_main_error -> MAFAIFIN PA PC . LLAVEA bloque_codigo REFETUFURN PYC LLAVEC
    (20) declarar_main_error -> MAFAIFIN PA PC . LLAVEA bloque_codigo LLAVEC

    LLAVEA          shift and go to state 39


state 34

    (11) declarar_estructuras_error -> STRUFUCT ID LLAVEA ID . PYC ID PYC LLAVEC

    PYC             shift and go to state 40


state 35

    (5) declarar_estructuras -> STRUFUCT ID LLAVEA tipo_dato . ID PYC tipo_dato ID PYC LLAVEC
    (8) declarar_estructuras_error -> STRUFUCT ID LLAVEA tipo_dato . PYC tipo_dato ID PYC LLAVEC
    (9) declarar_estructuras_error -> STRUFUCT ID LLAVEA tipo_dato . ID PYC tipo_dato PYC LLAVEC
    (10) declarar_estructuras_error -> STRUFUCT ID LLAVEA tipo_dato . PYC tipo_dato PYC LLAVEC

    ID              shift and go to state 41
    PYC             shift and go to state 42


state 36

    (7) declarar_estructuras_error -> ID LLAVEA tipo_dato ID . PYC tipo_dato ID PYC LLAVEC

    PYC             shift and go to state 43


state 37

    (12) declarar_funciones -> FUNCTION tipo_dato ID PA . tipo_dato ID PC LLAVEA bloque_codigo REFETUFURN ID PYC LLAVEC
    (13) declarar_funciones -> FUNCTION tipo_dato ID PA . PC LLAVEA bloque_codigo REFETUFURN ID PYC LLAVEC
    (14) declarar_funciones -> FUNCTION tipo_dato ID PA . PC LLAVEA bloque_codigo REFETUFURN PYC LLAVEC
    (15) declarar_funciones -> FUNCTION tipo_dato ID PA . tipo_dato ID COMA tipo_dato ID PC LLAVEA bloque_codigo REFETUFURN ID PYC LLAVEC
    (21) tipo_dato -> . IFINT
    (22) tipo_dato -> . STRIFING
    (23) tipo_dato -> . AFARRAFAY
    (24) tipo_dato -> . STRUFUCT
    (25) tipo_dato -> . VOFOIFID
    (26) tipo_dato -> . CHAFAR
    (27) tipo_dato -> . BOFOOFOL
    (28) tipo_dato -> . FLOFOAFAT

    PC              shift and go to state 45
    IFINT           shift and go to state 18
    STRIFING        shift and go to state 19
    AFARRAFAY       shift and go to state 20
    STRUFUCT        shift and go to state 21
    VOFOIFID        shift and go to state 22
    CHAFAR          shift and go to state 23
    BOFOOFOL        shift and go to state 24
    FLOFOAFAT       shift and go to state 25

    tipo_dato                      shift and go to state 44

state 38

    (16) declarar_main -> IFINT MAFAIFIN PA PC . LLAVEA bloque_codigo REFETUFURN PYC LLAVEC
    (19) declarar_main_error -> IFINT MAFAIFIN PA PC . LLAVEA bloque_codigo LLAVEC

    LLAVEA          shift and go to state 46


state 39

    (18) declarar_main_error -> MAFAIFIN PA PC LLAVEA . bloque_codigo REFETUFURN PYC LLAVEC
    (20) declarar_main_error -> MAFAIFIN PA PC LLAVEA . bloque_codigo LLAVEC
    (29) bloque_codigo -> . declarar_if bloque_codigo
    (30) bloque_codigo -> . declaracion bloque_codigo
    (31) bloque_codigo -> . asignar_estructuras bloque_codigo
    (32) bloque_codigo -> . asignar_array bloque_codigo
    (33) bloque_codigo -> . funcion bloque_codigo
    (34) bloque_codigo -> . print bloque_codigo
    (35) bloque_codigo -> . input bloque_codigo
    (36) bloque_codigo -> . declaracion_while bloque_codigo
    (37) bloque_codigo -> . VACIO
    (38) declarar_if -> . IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC
    (39) declarar_if -> . IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE LLAVEA bloque_codigo LLAVEC
    (40) declarar_if -> . declarar_if_error_llave
    (43) declaracion -> . tipo_dato ID PYC
    (44) declaracion -> . tipo_dato ID ASG ID operacion_matematica ID PYC
    (45) declaracion -> . tipo_dato ID ASG dato PYC
    (46) declaracion -> . AFARRAFAY ID dimensiones PYC
    (47) declaracion -> . declaracion_error
    (55) asignar_estructuras -> . ID PUNTO ID ASG dato
    (54) asignar_array -> . ID dimensiones ASG dato PYC
    (56) funcion -> . ID PA valores PC PYC
    (57) funcion -> . ID PA PC PYC
    (58) funcion -> . ID PA valores COMA valores PC PYC
    (59) print -> . PRIFINT PA ID PC PYC
    (60) input -> . IFINPUFUT PA ID PC PYC
    (61) declaracion_while -> . WHIFILEFE PA condicion PC LLAVEA bloque_codigo LLAVEC
    (62) declaracion_while -> . declaracion_while_error
    (41) declarar_if_error_llave -> . IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE LLAVEA bloque_codigo
    (42) declarar_if_error_llave -> . IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE bloque_codigo LLAVEC
    (21) tipo_dato -> . IFINT
    (22) tipo_dato -> . STRIFING
    (23) tipo_dato -> . AFARRAFAY
    (24) tipo_dato -> . STRUFUCT
    (25) tipo_dato -> . VOFOIFID
    (26) tipo_dato -> . CHAFAR
    (27) tipo_dato -> . BOFOOFOL
    (28) tipo_dato -> . FLOFOAFAT
    (48) declaracion_error -> . ID PYC
    (49) declaracion_error -> . ID ASG ID operacion_matematica ID PYC
    (50) declaracion_error -> . ID ASG valores PYC
    (63) declaracion_while_error -> . PA condicion PC LLAVEA bloque_codigo LLAVEC
    (64) declaracion_while_error -> . WHIFILEFE PA condicion PC bloque_codigo LLAVEC
    (65) declaracion_while_error -> . WHIFILEFE PA condicion PC LLAVEA bloque_codigo

    VACIO           shift and go to state 57
    IFIF            shift and go to state 58
    AFARRAFAY       shift and go to state 62
    ID              shift and go to state 61
    PRIFINT         shift and go to state 64
    IFINPUFUT       shift and go to state 65
    WHIFILEFE       shift and go to state 66
    IFINT           shift and go to state 18
    STRIFING        shift and go to state 19
    STRUFUCT        shift and go to state 21
    VOFOIFID        shift and go to state 22
    CHAFAR          shift and go to state 23
    BOFOOFOL        shift and go to state 24
    FLOFOAFAT       shift and go to state 25
    PA              shift and go to state 47

    bloque_codigo                  shift and go to state 48
    declarar_if                    shift and go to state 49
    declaracion                    shift and go to state 50
    asignar_estructuras            shift and go to state 51
    asignar_array                  shift and go to state 52
    funcion                        shift and go to state 53
    print                          shift and go to state 54
    input                          shift and go to state 55
    declaracion_while              shift and go to state 56
    declarar_if_error_llave        shift and go to state 59
    tipo_dato                      shift and go to state 60
    declaracion_error              shift and go to state 63
    declaracion_while_error        shift and go to state 67

state 40

    (11) declarar_estructuras_error -> STRUFUCT ID LLAVEA ID PYC . ID PYC LLAVEC

    ID              shift and go to state 68


state 41

    (5) declarar_estructuras -> STRUFUCT ID LLAVEA tipo_dato ID . PYC tipo_dato ID PYC LLAVEC
    (9) declarar_estructuras_error -> STRUFUCT ID LLAVEA tipo_dato ID . PYC tipo_dato PYC LLAVEC

    PYC             shift and go to state 69


state 42

    (8) declarar_estructuras_error -> STRUFUCT ID LLAVEA tipo_dato PYC . tipo_dato ID PYC LLAVEC
    (10) declarar_estructuras_error -> STRUFUCT ID LLAVEA tipo_dato PYC . tipo_dato PYC LLAVEC
    (21) tipo_dato -> . IFINT
    (22) tipo_dato -> . STRIFING
    (23) tipo_dato -> . AFARRAFAY
    (24) tipo_dato -> . STRUFUCT
    (25) tipo_dato -> . VOFOIFID
    (26) tipo_dato -> . CHAFAR
    (27) tipo_dato -> . BOFOOFOL
    (28) tipo_dato -> . FLOFOAFAT

    IFINT           shift and go to state 18
    STRIFING        shift and go to state 19
    AFARRAFAY       shift and go to state 20
    STRUFUCT        shift and go to state 21
    VOFOIFID        shift and go to state 22
    CHAFAR          shift and go to state 23
    BOFOOFOL        shift and go to state 24
    FLOFOAFAT       shift and go to state 25

    tipo_dato                      shift and go to state 70

state 43

    (7) declarar_estructuras_error -> ID LLAVEA tipo_dato ID PYC . tipo_dato ID PYC LLAVEC
    (21) tipo_dato -> . IFINT
    (22) tipo_dato -> . STRIFING
    (23) tipo_dato -> . AFARRAFAY
    (24) tipo_dato -> . STRUFUCT
    (25) tipo_dato -> . VOFOIFID
    (26) tipo_dato -> . CHAFAR
    (27) tipo_dato -> . BOFOOFOL
    (28) tipo_dato -> . FLOFOAFAT

    IFINT           shift and go to state 18
    STRIFING        shift and go to state 19
    AFARRAFAY       shift and go to state 20
    STRUFUCT        shift and go to state 21
    VOFOIFID        shift and go to state 22
    CHAFAR          shift and go to state 23
    BOFOOFOL        shift and go to state 24
    FLOFOAFAT       shift and go to state 25

    tipo_dato                      shift and go to state 71

state 44

    (12) declarar_funciones -> FUNCTION tipo_dato ID PA tipo_dato . ID PC LLAVEA bloque_codigo REFETUFURN ID PYC LLAVEC
    (15) declarar_funciones -> FUNCTION tipo_dato ID PA tipo_dato . ID COMA tipo_dato ID PC LLAVEA bloque_codigo REFETUFURN ID PYC LLAVEC

    ID              shift and go to state 72


state 45

    (13) declarar_funciones -> FUNCTION tipo_dato ID PA PC . LLAVEA bloque_codigo REFETUFURN ID PYC LLAVEC
    (14) declarar_funciones -> FUNCTION tipo_dato ID PA PC . LLAVEA bloque_codigo REFETUFURN PYC LLAVEC

    LLAVEA          shift and go to state 73


state 46

    (16) declarar_main -> IFINT MAFAIFIN PA PC LLAVEA . bloque_codigo REFETUFURN PYC LLAVEC
    (19) declarar_main_error -> IFINT MAFAIFIN PA PC LLAVEA . bloque_codigo LLAVEC
    (29) bloque_codigo -> . declarar_if bloque_codigo
    (30) bloque_codigo -> . declaracion bloque_codigo
    (31) bloque_codigo -> . asignar_estructuras bloque_codigo
    (32) bloque_codigo -> . asignar_array bloque_codigo
    (33) bloque_codigo -> . funcion bloque_codigo
    (34) bloque_codigo -> . print bloque_codigo
    (35) bloque_codigo -> . input bloque_codigo
    (36) bloque_codigo -> . declaracion_while bloque_codigo
    (37) bloque_codigo -> . VACIO
    (38) declarar_if -> . IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC
    (39) declarar_if -> . IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE LLAVEA bloque_codigo LLAVEC
    (40) declarar_if -> . declarar_if_error_llave
    (43) declaracion -> . tipo_dato ID PYC
    (44) declaracion -> . tipo_dato ID ASG ID operacion_matematica ID PYC
    (45) declaracion -> . tipo_dato ID ASG dato PYC
    (46) declaracion -> . AFARRAFAY ID dimensiones PYC
    (47) declaracion -> . declaracion_error
    (55) asignar_estructuras -> . ID PUNTO ID ASG dato
    (54) asignar_array -> . ID dimensiones ASG dato PYC
    (56) funcion -> . ID PA valores PC PYC
    (57) funcion -> . ID PA PC PYC
    (58) funcion -> . ID PA valores COMA valores PC PYC
    (59) print -> . PRIFINT PA ID PC PYC
    (60) input -> . IFINPUFUT PA ID PC PYC
    (61) declaracion_while -> . WHIFILEFE PA condicion PC LLAVEA bloque_codigo LLAVEC
    (62) declaracion_while -> . declaracion_while_error
    (41) declarar_if_error_llave -> . IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE LLAVEA bloque_codigo
    (42) declarar_if_error_llave -> . IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE bloque_codigo LLAVEC
    (21) tipo_dato -> . IFINT
    (22) tipo_dato -> . STRIFING
    (23) tipo_dato -> . AFARRAFAY
    (24) tipo_dato -> . STRUFUCT
    (25) tipo_dato -> . VOFOIFID
    (26) tipo_dato -> . CHAFAR
    (27) tipo_dato -> . BOFOOFOL
    (28) tipo_dato -> . FLOFOAFAT
    (48) declaracion_error -> . ID PYC
    (49) declaracion_error -> . ID ASG ID operacion_matematica ID PYC
    (50) declaracion_error -> . ID ASG valores PYC
    (63) declaracion_while_error -> . PA condicion PC LLAVEA bloque_codigo LLAVEC
    (64) declaracion_while_error -> . WHIFILEFE PA condicion PC bloque_codigo LLAVEC
    (65) declaracion_while_error -> . WHIFILEFE PA condicion PC LLAVEA bloque_codigo

    VACIO           shift and go to state 57
    IFIF            shift and go to state 58
    AFARRAFAY       shift and go to state 62
    ID              shift and go to state 61
    PRIFINT         shift and go to state 64
    IFINPUFUT       shift and go to state 65
    WHIFILEFE       shift and go to state 66
    IFINT           shift and go to state 18
    STRIFING        shift and go to state 19
    STRUFUCT        shift and go to state 21
    VOFOIFID        shift and go to state 22
    CHAFAR          shift and go to state 23
    BOFOOFOL        shift and go to state 24
    FLOFOAFAT       shift and go to state 25
    PA              shift and go to state 47

    bloque_codigo                  shift and go to state 74
    declarar_if                    shift and go to state 49
    declaracion                    shift and go to state 50
    asignar_estructuras            shift and go to state 51
    asignar_array                  shift and go to state 52
    funcion                        shift and go to state 53
    print                          shift and go to state 54
    input                          shift and go to state 55
    declaracion_while              shift and go to state 56
    declarar_if_error_llave        shift and go to state 59
    tipo_dato                      shift and go to state 60
    declaracion_error              shift and go to state 63
    declaracion_while_error        shift and go to state 67

state 47

    (63) declaracion_while_error -> PA . condicion PC LLAVEA bloque_codigo LLAVEC
    (66) condicion -> . valores operadores valores
    (67) condicion -> . valores
    (68) condicion -> . valores operadores_logicos condicion
    (69) condicion -> . valores NOT valores
    (76) valores -> . INT
    (77) valores -> . CHAR
    (78) valores -> . TRUFUEFE
    (79) valores -> . FAFALSEFE
    (80) valores -> . PCC
    (81) valores -> . ID

    INT             shift and go to state 77
    CHAR            shift and go to state 78
    TRUFUEFE        shift and go to state 79
    FAFALSEFE       shift and go to state 80
    PCC             shift and go to state 81
    ID              shift and go to state 82

    condicion                      shift and go to state 75
    valores                        shift and go to state 76

state 48

    (18) declarar_main_error -> MAFAIFIN PA PC LLAVEA bloque_codigo . REFETUFURN PYC LLAVEC
    (20) declarar_main_error -> MAFAIFIN PA PC LLAVEA bloque_codigo . LLAVEC

    REFETUFURN      shift and go to state 83
    LLAVEC          shift and go to state 84


state 49

    (29) bloque_codigo -> declarar_if . bloque_codigo
    (29) bloque_codigo -> . declarar_if bloque_codigo
    (30) bloque_codigo -> . declaracion bloque_codigo
    (31) bloque_codigo -> . asignar_estructuras bloque_codigo
    (32) bloque_codigo -> . asignar_array bloque_codigo
    (33) bloque_codigo -> . funcion bloque_codigo
    (34) bloque_codigo -> . print bloque_codigo
    (35) bloque_codigo -> . input bloque_codigo
    (36) bloque_codigo -> . declaracion_while bloque_codigo
    (37) bloque_codigo -> . VACIO
    (38) declarar_if -> . IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC
    (39) declarar_if -> . IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE LLAVEA bloque_codigo LLAVEC
    (40) declarar_if -> . declarar_if_error_llave
    (43) declaracion -> . tipo_dato ID PYC
    (44) declaracion -> . tipo_dato ID ASG ID operacion_matematica ID PYC
    (45) declaracion -> . tipo_dato ID ASG dato PYC
    (46) declaracion -> . AFARRAFAY ID dimensiones PYC
    (47) declaracion -> . declaracion_error
    (55) asignar_estructuras -> . ID PUNTO ID ASG dato
    (54) asignar_array -> . ID dimensiones ASG dato PYC
    (56) funcion -> . ID PA valores PC PYC
    (57) funcion -> . ID PA PC PYC
    (58) funcion -> . ID PA valores COMA valores PC PYC
    (59) print -> . PRIFINT PA ID PC PYC
    (60) input -> . IFINPUFUT PA ID PC PYC
    (61) declaracion_while -> . WHIFILEFE PA condicion PC LLAVEA bloque_codigo LLAVEC
    (62) declaracion_while -> . declaracion_while_error
    (41) declarar_if_error_llave -> . IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE LLAVEA bloque_codigo
    (42) declarar_if_error_llave -> . IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE bloque_codigo LLAVEC
    (21) tipo_dato -> . IFINT
    (22) tipo_dato -> . STRIFING
    (23) tipo_dato -> . AFARRAFAY
    (24) tipo_dato -> . STRUFUCT
    (25) tipo_dato -> . VOFOIFID
    (26) tipo_dato -> . CHAFAR
    (27) tipo_dato -> . BOFOOFOL
    (28) tipo_dato -> . FLOFOAFAT
    (48) declaracion_error -> . ID PYC
    (49) declaracion_error -> . ID ASG ID operacion_matematica ID PYC
    (50) declaracion_error -> . ID ASG valores PYC
    (63) declaracion_while_error -> . PA condicion PC LLAVEA bloque_codigo LLAVEC
    (64) declaracion_while_error -> . WHIFILEFE PA condicion PC bloque_codigo LLAVEC
    (65) declaracion_while_error -> . WHIFILEFE PA condicion PC LLAVEA bloque_codigo

    VACIO           shift and go to state 57
    IFIF            shift and go to state 58
    AFARRAFAY       shift and go to state 62
    ID              shift and go to state 61
    PRIFINT         shift and go to state 64
    IFINPUFUT       shift and go to state 65
    WHIFILEFE       shift and go to state 66
    IFINT           shift and go to state 18
    STRIFING        shift and go to state 19
    STRUFUCT        shift and go to state 21
    VOFOIFID        shift and go to state 22
    CHAFAR          shift and go to state 23
    BOFOOFOL        shift and go to state 24
    FLOFOAFAT       shift and go to state 25
    PA              shift and go to state 47

    declarar_if                    shift and go to state 49
    bloque_codigo                  shift and go to state 85
    declaracion                    shift and go to state 50
    asignar_estructuras            shift and go to state 51
    asignar_array                  shift and go to state 52
    funcion                        shift and go to state 53
    print                          shift and go to state 54
    input                          shift and go to state 55
    declaracion_while              shift and go to state 56
    declarar_if_error_llave        shift and go to state 59
    tipo_dato                      shift and go to state 60
    declaracion_error              shift and go to state 63
    declaracion_while_error        shift and go to state 67

state 50

    (30) bloque_codigo -> declaracion . bloque_codigo
    (29) bloque_codigo -> . declarar_if bloque_codigo
    (30) bloque_codigo -> . declaracion bloque_codigo
    (31) bloque_codigo -> . asignar_estructuras bloque_codigo
    (32) bloque_codigo -> . asignar_array bloque_codigo
    (33) bloque_codigo -> . funcion bloque_codigo
    (34) bloque_codigo -> . print bloque_codigo
    (35) bloque_codigo -> . input bloque_codigo
    (36) bloque_codigo -> . declaracion_while bloque_codigo
    (37) bloque_codigo -> . VACIO
    (38) declarar_if -> . IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC
    (39) declarar_if -> . IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE LLAVEA bloque_codigo LLAVEC
    (40) declarar_if -> . declarar_if_error_llave
    (43) declaracion -> . tipo_dato ID PYC
    (44) declaracion -> . tipo_dato ID ASG ID operacion_matematica ID PYC
    (45) declaracion -> . tipo_dato ID ASG dato PYC
    (46) declaracion -> . AFARRAFAY ID dimensiones PYC
    (47) declaracion -> . declaracion_error
    (55) asignar_estructuras -> . ID PUNTO ID ASG dato
    (54) asignar_array -> . ID dimensiones ASG dato PYC
    (56) funcion -> . ID PA valores PC PYC
    (57) funcion -> . ID PA PC PYC
    (58) funcion -> . ID PA valores COMA valores PC PYC
    (59) print -> . PRIFINT PA ID PC PYC
    (60) input -> . IFINPUFUT PA ID PC PYC
    (61) declaracion_while -> . WHIFILEFE PA condicion PC LLAVEA bloque_codigo LLAVEC
    (62) declaracion_while -> . declaracion_while_error
    (41) declarar_if_error_llave -> . IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE LLAVEA bloque_codigo
    (42) declarar_if_error_llave -> . IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE bloque_codigo LLAVEC
    (21) tipo_dato -> . IFINT
    (22) tipo_dato -> . STRIFING
    (23) tipo_dato -> . AFARRAFAY
    (24) tipo_dato -> . STRUFUCT
    (25) tipo_dato -> . VOFOIFID
    (26) tipo_dato -> . CHAFAR
    (27) tipo_dato -> . BOFOOFOL
    (28) tipo_dato -> . FLOFOAFAT
    (48) declaracion_error -> . ID PYC
    (49) declaracion_error -> . ID ASG ID operacion_matematica ID PYC
    (50) declaracion_error -> . ID ASG valores PYC
    (63) declaracion_while_error -> . PA condicion PC LLAVEA bloque_codigo LLAVEC
    (64) declaracion_while_error -> . WHIFILEFE PA condicion PC bloque_codigo LLAVEC
    (65) declaracion_while_error -> . WHIFILEFE PA condicion PC LLAVEA bloque_codigo

    VACIO           shift and go to state 57
    IFIF            shift and go to state 58
    AFARRAFAY       shift and go to state 62
    ID              shift and go to state 61
    PRIFINT         shift and go to state 64
    IFINPUFUT       shift and go to state 65
    WHIFILEFE       shift and go to state 66
    IFINT           shift and go to state 18
    STRIFING        shift and go to state 19
    STRUFUCT        shift and go to state 21
    VOFOIFID        shift and go to state 22
    CHAFAR          shift and go to state 23
    BOFOOFOL        shift and go to state 24
    FLOFOAFAT       shift and go to state 25
    PA              shift and go to state 47

    declaracion                    shift and go to state 50
    bloque_codigo                  shift and go to state 86
    declarar_if                    shift and go to state 49
    asignar_estructuras            shift and go to state 51
    asignar_array                  shift and go to state 52
    funcion                        shift and go to state 53
    print                          shift and go to state 54
    input                          shift and go to state 55
    declaracion_while              shift and go to state 56
    declarar_if_error_llave        shift and go to state 59
    tipo_dato                      shift and go to state 60
    declaracion_error              shift and go to state 63
    declaracion_while_error        shift and go to state 67

state 51

    (31) bloque_codigo -> asignar_estructuras . bloque_codigo
    (29) bloque_codigo -> . declarar_if bloque_codigo
    (30) bloque_codigo -> . declaracion bloque_codigo
    (31) bloque_codigo -> . asignar_estructuras bloque_codigo
    (32) bloque_codigo -> . asignar_array bloque_codigo
    (33) bloque_codigo -> . funcion bloque_codigo
    (34) bloque_codigo -> . print bloque_codigo
    (35) bloque_codigo -> . input bloque_codigo
    (36) bloque_codigo -> . declaracion_while bloque_codigo
    (37) bloque_codigo -> . VACIO
    (38) declarar_if -> . IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC
    (39) declarar_if -> . IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE LLAVEA bloque_codigo LLAVEC
    (40) declarar_if -> . declarar_if_error_llave
    (43) declaracion -> . tipo_dato ID PYC
    (44) declaracion -> . tipo_dato ID ASG ID operacion_matematica ID PYC
    (45) declaracion -> . tipo_dato ID ASG dato PYC
    (46) declaracion -> . AFARRAFAY ID dimensiones PYC
    (47) declaracion -> . declaracion_error
    (55) asignar_estructuras -> . ID PUNTO ID ASG dato
    (54) asignar_array -> . ID dimensiones ASG dato PYC
    (56) funcion -> . ID PA valores PC PYC
    (57) funcion -> . ID PA PC PYC
    (58) funcion -> . ID PA valores COMA valores PC PYC
    (59) print -> . PRIFINT PA ID PC PYC
    (60) input -> . IFINPUFUT PA ID PC PYC
    (61) declaracion_while -> . WHIFILEFE PA condicion PC LLAVEA bloque_codigo LLAVEC
    (62) declaracion_while -> . declaracion_while_error
    (41) declarar_if_error_llave -> . IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE LLAVEA bloque_codigo
    (42) declarar_if_error_llave -> . IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE bloque_codigo LLAVEC
    (21) tipo_dato -> . IFINT
    (22) tipo_dato -> . STRIFING
    (23) tipo_dato -> . AFARRAFAY
    (24) tipo_dato -> . STRUFUCT
    (25) tipo_dato -> . VOFOIFID
    (26) tipo_dato -> . CHAFAR
    (27) tipo_dato -> . BOFOOFOL
    (28) tipo_dato -> . FLOFOAFAT
    (48) declaracion_error -> . ID PYC
    (49) declaracion_error -> . ID ASG ID operacion_matematica ID PYC
    (50) declaracion_error -> . ID ASG valores PYC
    (63) declaracion_while_error -> . PA condicion PC LLAVEA bloque_codigo LLAVEC
    (64) declaracion_while_error -> . WHIFILEFE PA condicion PC bloque_codigo LLAVEC
    (65) declaracion_while_error -> . WHIFILEFE PA condicion PC LLAVEA bloque_codigo

    VACIO           shift and go to state 57
    IFIF            shift and go to state 58
    AFARRAFAY       shift and go to state 62
    ID              shift and go to state 61
    PRIFINT         shift and go to state 64
    IFINPUFUT       shift and go to state 65
    WHIFILEFE       shift and go to state 66
    IFINT           shift and go to state 18
    STRIFING        shift and go to state 19
    STRUFUCT        shift and go to state 21
    VOFOIFID        shift and go to state 22
    CHAFAR          shift and go to state 23
    BOFOOFOL        shift and go to state 24
    FLOFOAFAT       shift and go to state 25
    PA              shift and go to state 47

    asignar_estructuras            shift and go to state 51
    bloque_codigo                  shift and go to state 87
    declarar_if                    shift and go to state 49
    declaracion                    shift and go to state 50
    asignar_array                  shift and go to state 52
    funcion                        shift and go to state 53
    print                          shift and go to state 54
    input                          shift and go to state 55
    declaracion_while              shift and go to state 56
    declarar_if_error_llave        shift and go to state 59
    tipo_dato                      shift and go to state 60
    declaracion_error              shift and go to state 63
    declaracion_while_error        shift and go to state 67

state 52

    (32) bloque_codigo -> asignar_array . bloque_codigo
    (29) bloque_codigo -> . declarar_if bloque_codigo
    (30) bloque_codigo -> . declaracion bloque_codigo
    (31) bloque_codigo -> . asignar_estructuras bloque_codigo
    (32) bloque_codigo -> . asignar_array bloque_codigo
    (33) bloque_codigo -> . funcion bloque_codigo
    (34) bloque_codigo -> . print bloque_codigo
    (35) bloque_codigo -> . input bloque_codigo
    (36) bloque_codigo -> . declaracion_while bloque_codigo
    (37) bloque_codigo -> . VACIO
    (38) declarar_if -> . IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC
    (39) declarar_if -> . IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE LLAVEA bloque_codigo LLAVEC
    (40) declarar_if -> . declarar_if_error_llave
    (43) declaracion -> . tipo_dato ID PYC
    (44) declaracion -> . tipo_dato ID ASG ID operacion_matematica ID PYC
    (45) declaracion -> . tipo_dato ID ASG dato PYC
    (46) declaracion -> . AFARRAFAY ID dimensiones PYC
    (47) declaracion -> . declaracion_error
    (55) asignar_estructuras -> . ID PUNTO ID ASG dato
    (54) asignar_array -> . ID dimensiones ASG dato PYC
    (56) funcion -> . ID PA valores PC PYC
    (57) funcion -> . ID PA PC PYC
    (58) funcion -> . ID PA valores COMA valores PC PYC
    (59) print -> . PRIFINT PA ID PC PYC
    (60) input -> . IFINPUFUT PA ID PC PYC
    (61) declaracion_while -> . WHIFILEFE PA condicion PC LLAVEA bloque_codigo LLAVEC
    (62) declaracion_while -> . declaracion_while_error
    (41) declarar_if_error_llave -> . IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE LLAVEA bloque_codigo
    (42) declarar_if_error_llave -> . IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE bloque_codigo LLAVEC
    (21) tipo_dato -> . IFINT
    (22) tipo_dato -> . STRIFING
    (23) tipo_dato -> . AFARRAFAY
    (24) tipo_dato -> . STRUFUCT
    (25) tipo_dato -> . VOFOIFID
    (26) tipo_dato -> . CHAFAR
    (27) tipo_dato -> . BOFOOFOL
    (28) tipo_dato -> . FLOFOAFAT
    (48) declaracion_error -> . ID PYC
    (49) declaracion_error -> . ID ASG ID operacion_matematica ID PYC
    (50) declaracion_error -> . ID ASG valores PYC
    (63) declaracion_while_error -> . PA condicion PC LLAVEA bloque_codigo LLAVEC
    (64) declaracion_while_error -> . WHIFILEFE PA condicion PC bloque_codigo LLAVEC
    (65) declaracion_while_error -> . WHIFILEFE PA condicion PC LLAVEA bloque_codigo

    VACIO           shift and go to state 57
    IFIF            shift and go to state 58
    AFARRAFAY       shift and go to state 62
    ID              shift and go to state 61
    PRIFINT         shift and go to state 64
    IFINPUFUT       shift and go to state 65
    WHIFILEFE       shift and go to state 66
    IFINT           shift and go to state 18
    STRIFING        shift and go to state 19
    STRUFUCT        shift and go to state 21
    VOFOIFID        shift and go to state 22
    CHAFAR          shift and go to state 23
    BOFOOFOL        shift and go to state 24
    FLOFOAFAT       shift and go to state 25
    PA              shift and go to state 47

    asignar_array                  shift and go to state 52
    bloque_codigo                  shift and go to state 88
    declarar_if                    shift and go to state 49
    declaracion                    shift and go to state 50
    asignar_estructuras            shift and go to state 51
    funcion                        shift and go to state 53
    print                          shift and go to state 54
    input                          shift and go to state 55
    declaracion_while              shift and go to state 56
    declarar_if_error_llave        shift and go to state 59
    tipo_dato                      shift and go to state 60
    declaracion_error              shift and go to state 63
    declaracion_while_error        shift and go to state 67

state 53

    (33) bloque_codigo -> funcion . bloque_codigo
    (29) bloque_codigo -> . declarar_if bloque_codigo
    (30) bloque_codigo -> . declaracion bloque_codigo
    (31) bloque_codigo -> . asignar_estructuras bloque_codigo
    (32) bloque_codigo -> . asignar_array bloque_codigo
    (33) bloque_codigo -> . funcion bloque_codigo
    (34) bloque_codigo -> . print bloque_codigo
    (35) bloque_codigo -> . input bloque_codigo
    (36) bloque_codigo -> . declaracion_while bloque_codigo
    (37) bloque_codigo -> . VACIO
    (38) declarar_if -> . IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC
    (39) declarar_if -> . IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE LLAVEA bloque_codigo LLAVEC
    (40) declarar_if -> . declarar_if_error_llave
    (43) declaracion -> . tipo_dato ID PYC
    (44) declaracion -> . tipo_dato ID ASG ID operacion_matematica ID PYC
    (45) declaracion -> . tipo_dato ID ASG dato PYC
    (46) declaracion -> . AFARRAFAY ID dimensiones PYC
    (47) declaracion -> . declaracion_error
    (55) asignar_estructuras -> . ID PUNTO ID ASG dato
    (54) asignar_array -> . ID dimensiones ASG dato PYC
    (56) funcion -> . ID PA valores PC PYC
    (57) funcion -> . ID PA PC PYC
    (58) funcion -> . ID PA valores COMA valores PC PYC
    (59) print -> . PRIFINT PA ID PC PYC
    (60) input -> . IFINPUFUT PA ID PC PYC
    (61) declaracion_while -> . WHIFILEFE PA condicion PC LLAVEA bloque_codigo LLAVEC
    (62) declaracion_while -> . declaracion_while_error
    (41) declarar_if_error_llave -> . IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE LLAVEA bloque_codigo
    (42) declarar_if_error_llave -> . IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE bloque_codigo LLAVEC
    (21) tipo_dato -> . IFINT
    (22) tipo_dato -> . STRIFING
    (23) tipo_dato -> . AFARRAFAY
    (24) tipo_dato -> . STRUFUCT
    (25) tipo_dato -> . VOFOIFID
    (26) tipo_dato -> . CHAFAR
    (27) tipo_dato -> . BOFOOFOL
    (28) tipo_dato -> . FLOFOAFAT
    (48) declaracion_error -> . ID PYC
    (49) declaracion_error -> . ID ASG ID operacion_matematica ID PYC
    (50) declaracion_error -> . ID ASG valores PYC
    (63) declaracion_while_error -> . PA condicion PC LLAVEA bloque_codigo LLAVEC
    (64) declaracion_while_error -> . WHIFILEFE PA condicion PC bloque_codigo LLAVEC
    (65) declaracion_while_error -> . WHIFILEFE PA condicion PC LLAVEA bloque_codigo

    VACIO           shift and go to state 57
    IFIF            shift and go to state 58
    AFARRAFAY       shift and go to state 62
    ID              shift and go to state 61
    PRIFINT         shift and go to state 64
    IFINPUFUT       shift and go to state 65
    WHIFILEFE       shift and go to state 66
    IFINT           shift and go to state 18
    STRIFING        shift and go to state 19
    STRUFUCT        shift and go to state 21
    VOFOIFID        shift and go to state 22
    CHAFAR          shift and go to state 23
    BOFOOFOL        shift and go to state 24
    FLOFOAFAT       shift and go to state 25
    PA              shift and go to state 47

    funcion                        shift and go to state 53
    bloque_codigo                  shift and go to state 89
    declarar_if                    shift and go to state 49
    declaracion                    shift and go to state 50
    asignar_estructuras            shift and go to state 51
    asignar_array                  shift and go to state 52
    print                          shift and go to state 54
    input                          shift and go to state 55
    declaracion_while              shift and go to state 56
    declarar_if_error_llave        shift and go to state 59
    tipo_dato                      shift and go to state 60
    declaracion_error              shift and go to state 63
    declaracion_while_error        shift and go to state 67

state 54

    (34) bloque_codigo -> print . bloque_codigo
    (29) bloque_codigo -> . declarar_if bloque_codigo
    (30) bloque_codigo -> . declaracion bloque_codigo
    (31) bloque_codigo -> . asignar_estructuras bloque_codigo
    (32) bloque_codigo -> . asignar_array bloque_codigo
    (33) bloque_codigo -> . funcion bloque_codigo
    (34) bloque_codigo -> . print bloque_codigo
    (35) bloque_codigo -> . input bloque_codigo
    (36) bloque_codigo -> . declaracion_while bloque_codigo
    (37) bloque_codigo -> . VACIO
    (38) declarar_if -> . IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC
    (39) declarar_if -> . IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE LLAVEA bloque_codigo LLAVEC
    (40) declarar_if -> . declarar_if_error_llave
    (43) declaracion -> . tipo_dato ID PYC
    (44) declaracion -> . tipo_dato ID ASG ID operacion_matematica ID PYC
    (45) declaracion -> . tipo_dato ID ASG dato PYC
    (46) declaracion -> . AFARRAFAY ID dimensiones PYC
    (47) declaracion -> . declaracion_error
    (55) asignar_estructuras -> . ID PUNTO ID ASG dato
    (54) asignar_array -> . ID dimensiones ASG dato PYC
    (56) funcion -> . ID PA valores PC PYC
    (57) funcion -> . ID PA PC PYC
    (58) funcion -> . ID PA valores COMA valores PC PYC
    (59) print -> . PRIFINT PA ID PC PYC
    (60) input -> . IFINPUFUT PA ID PC PYC
    (61) declaracion_while -> . WHIFILEFE PA condicion PC LLAVEA bloque_codigo LLAVEC
    (62) declaracion_while -> . declaracion_while_error
    (41) declarar_if_error_llave -> . IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE LLAVEA bloque_codigo
    (42) declarar_if_error_llave -> . IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE bloque_codigo LLAVEC
    (21) tipo_dato -> . IFINT
    (22) tipo_dato -> . STRIFING
    (23) tipo_dato -> . AFARRAFAY
    (24) tipo_dato -> . STRUFUCT
    (25) tipo_dato -> . VOFOIFID
    (26) tipo_dato -> . CHAFAR
    (27) tipo_dato -> . BOFOOFOL
    (28) tipo_dato -> . FLOFOAFAT
    (48) declaracion_error -> . ID PYC
    (49) declaracion_error -> . ID ASG ID operacion_matematica ID PYC
    (50) declaracion_error -> . ID ASG valores PYC
    (63) declaracion_while_error -> . PA condicion PC LLAVEA bloque_codigo LLAVEC
    (64) declaracion_while_error -> . WHIFILEFE PA condicion PC bloque_codigo LLAVEC
    (65) declaracion_while_error -> . WHIFILEFE PA condicion PC LLAVEA bloque_codigo

    VACIO           shift and go to state 57
    IFIF            shift and go to state 58
    AFARRAFAY       shift and go to state 62
    ID              shift and go to state 61
    PRIFINT         shift and go to state 64
    IFINPUFUT       shift and go to state 65
    WHIFILEFE       shift and go to state 66
    IFINT           shift and go to state 18
    STRIFING        shift and go to state 19
    STRUFUCT        shift and go to state 21
    VOFOIFID        shift and go to state 22
    CHAFAR          shift and go to state 23
    BOFOOFOL        shift and go to state 24
    FLOFOAFAT       shift and go to state 25
    PA              shift and go to state 47

    print                          shift and go to state 54
    bloque_codigo                  shift and go to state 90
    declarar_if                    shift and go to state 49
    declaracion                    shift and go to state 50
    asignar_estructuras            shift and go to state 51
    asignar_array                  shift and go to state 52
    funcion                        shift and go to state 53
    input                          shift and go to state 55
    declaracion_while              shift and go to state 56
    declarar_if_error_llave        shift and go to state 59
    tipo_dato                      shift and go to state 60
    declaracion_error              shift and go to state 63
    declaracion_while_error        shift and go to state 67

state 55

    (35) bloque_codigo -> input . bloque_codigo
    (29) bloque_codigo -> . declarar_if bloque_codigo
    (30) bloque_codigo -> . declaracion bloque_codigo
    (31) bloque_codigo -> . asignar_estructuras bloque_codigo
    (32) bloque_codigo -> . asignar_array bloque_codigo
    (33) bloque_codigo -> . funcion bloque_codigo
    (34) bloque_codigo -> . print bloque_codigo
    (35) bloque_codigo -> . input bloque_codigo
    (36) bloque_codigo -> . declaracion_while bloque_codigo
    (37) bloque_codigo -> . VACIO
    (38) declarar_if -> . IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC
    (39) declarar_if -> . IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE LLAVEA bloque_codigo LLAVEC
    (40) declarar_if -> . declarar_if_error_llave
    (43) declaracion -> . tipo_dato ID PYC
    (44) declaracion -> . tipo_dato ID ASG ID operacion_matematica ID PYC
    (45) declaracion -> . tipo_dato ID ASG dato PYC
    (46) declaracion -> . AFARRAFAY ID dimensiones PYC
    (47) declaracion -> . declaracion_error
    (55) asignar_estructuras -> . ID PUNTO ID ASG dato
    (54) asignar_array -> . ID dimensiones ASG dato PYC
    (56) funcion -> . ID PA valores PC PYC
    (57) funcion -> . ID PA PC PYC
    (58) funcion -> . ID PA valores COMA valores PC PYC
    (59) print -> . PRIFINT PA ID PC PYC
    (60) input -> . IFINPUFUT PA ID PC PYC
    (61) declaracion_while -> . WHIFILEFE PA condicion PC LLAVEA bloque_codigo LLAVEC
    (62) declaracion_while -> . declaracion_while_error
    (41) declarar_if_error_llave -> . IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE LLAVEA bloque_codigo
    (42) declarar_if_error_llave -> . IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE bloque_codigo LLAVEC
    (21) tipo_dato -> . IFINT
    (22) tipo_dato -> . STRIFING
    (23) tipo_dato -> . AFARRAFAY
    (24) tipo_dato -> . STRUFUCT
    (25) tipo_dato -> . VOFOIFID
    (26) tipo_dato -> . CHAFAR
    (27) tipo_dato -> . BOFOOFOL
    (28) tipo_dato -> . FLOFOAFAT
    (48) declaracion_error -> . ID PYC
    (49) declaracion_error -> . ID ASG ID operacion_matematica ID PYC
    (50) declaracion_error -> . ID ASG valores PYC
    (63) declaracion_while_error -> . PA condicion PC LLAVEA bloque_codigo LLAVEC
    (64) declaracion_while_error -> . WHIFILEFE PA condicion PC bloque_codigo LLAVEC
    (65) declaracion_while_error -> . WHIFILEFE PA condicion PC LLAVEA bloque_codigo

    VACIO           shift and go to state 57
    IFIF            shift and go to state 58
    AFARRAFAY       shift and go to state 62
    ID              shift and go to state 61
    PRIFINT         shift and go to state 64
    IFINPUFUT       shift and go to state 65
    WHIFILEFE       shift and go to state 66
    IFINT           shift and go to state 18
    STRIFING        shift and go to state 19
    STRUFUCT        shift and go to state 21
    VOFOIFID        shift and go to state 22
    CHAFAR          shift and go to state 23
    BOFOOFOL        shift and go to state 24
    FLOFOAFAT       shift and go to state 25
    PA              shift and go to state 47

    input                          shift and go to state 55
    bloque_codigo                  shift and go to state 91
    declarar_if                    shift and go to state 49
    declaracion                    shift and go to state 50
    asignar_estructuras            shift and go to state 51
    asignar_array                  shift and go to state 52
    funcion                        shift and go to state 53
    print                          shift and go to state 54
    declaracion_while              shift and go to state 56
    declarar_if_error_llave        shift and go to state 59
    tipo_dato                      shift and go to state 60
    declaracion_error              shift and go to state 63
    declaracion_while_error        shift and go to state 67

state 56

    (36) bloque_codigo -> declaracion_while . bloque_codigo
    (29) bloque_codigo -> . declarar_if bloque_codigo
    (30) bloque_codigo -> . declaracion bloque_codigo
    (31) bloque_codigo -> . asignar_estructuras bloque_codigo
    (32) bloque_codigo -> . asignar_array bloque_codigo
    (33) bloque_codigo -> . funcion bloque_codigo
    (34) bloque_codigo -> . print bloque_codigo
    (35) bloque_codigo -> . input bloque_codigo
    (36) bloque_codigo -> . declaracion_while bloque_codigo
    (37) bloque_codigo -> . VACIO
    (38) declarar_if -> . IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC
    (39) declarar_if -> . IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE LLAVEA bloque_codigo LLAVEC
    (40) declarar_if -> . declarar_if_error_llave
    (43) declaracion -> . tipo_dato ID PYC
    (44) declaracion -> . tipo_dato ID ASG ID operacion_matematica ID PYC
    (45) declaracion -> . tipo_dato ID ASG dato PYC
    (46) declaracion -> . AFARRAFAY ID dimensiones PYC
    (47) declaracion -> . declaracion_error
    (55) asignar_estructuras -> . ID PUNTO ID ASG dato
    (54) asignar_array -> . ID dimensiones ASG dato PYC
    (56) funcion -> . ID PA valores PC PYC
    (57) funcion -> . ID PA PC PYC
    (58) funcion -> . ID PA valores COMA valores PC PYC
    (59) print -> . PRIFINT PA ID PC PYC
    (60) input -> . IFINPUFUT PA ID PC PYC
    (61) declaracion_while -> . WHIFILEFE PA condicion PC LLAVEA bloque_codigo LLAVEC
    (62) declaracion_while -> . declaracion_while_error
    (41) declarar_if_error_llave -> . IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE LLAVEA bloque_codigo
    (42) declarar_if_error_llave -> . IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE bloque_codigo LLAVEC
    (21) tipo_dato -> . IFINT
    (22) tipo_dato -> . STRIFING
    (23) tipo_dato -> . AFARRAFAY
    (24) tipo_dato -> . STRUFUCT
    (25) tipo_dato -> . VOFOIFID
    (26) tipo_dato -> . CHAFAR
    (27) tipo_dato -> . BOFOOFOL
    (28) tipo_dato -> . FLOFOAFAT
    (48) declaracion_error -> . ID PYC
    (49) declaracion_error -> . ID ASG ID operacion_matematica ID PYC
    (50) declaracion_error -> . ID ASG valores PYC
    (63) declaracion_while_error -> . PA condicion PC LLAVEA bloque_codigo LLAVEC
    (64) declaracion_while_error -> . WHIFILEFE PA condicion PC bloque_codigo LLAVEC
    (65) declaracion_while_error -> . WHIFILEFE PA condicion PC LLAVEA bloque_codigo

    VACIO           shift and go to state 57
    IFIF            shift and go to state 58
    AFARRAFAY       shift and go to state 62
    ID              shift and go to state 61
    PRIFINT         shift and go to state 64
    IFINPUFUT       shift and go to state 65
    WHIFILEFE       shift and go to state 66
    IFINT           shift and go to state 18
    STRIFING        shift and go to state 19
    STRUFUCT        shift and go to state 21
    VOFOIFID        shift and go to state 22
    CHAFAR          shift and go to state 23
    BOFOOFOL        shift and go to state 24
    FLOFOAFAT       shift and go to state 25
    PA              shift and go to state 47

    declaracion_while              shift and go to state 56
    bloque_codigo                  shift and go to state 92
    declarar_if                    shift and go to state 49
    declaracion                    shift and go to state 50
    asignar_estructuras            shift and go to state 51
    asignar_array                  shift and go to state 52
    funcion                        shift and go to state 53
    print                          shift and go to state 54
    input                          shift and go to state 55
    declarar_if_error_llave        shift and go to state 59
    tipo_dato                      shift and go to state 60
    declaracion_error              shift and go to state 63
    declaracion_while_error        shift and go to state 67

state 57

    (37) bloque_codigo -> VACIO .

    REFETUFURN      reduce using rule 37 (bloque_codigo -> VACIO .)
    LLAVEC          reduce using rule 37 (bloque_codigo -> VACIO .)
    VACIO           reduce using rule 37 (bloque_codigo -> VACIO .)
    IFIF            reduce using rule 37 (bloque_codigo -> VACIO .)
    AFARRAFAY       reduce using rule 37 (bloque_codigo -> VACIO .)
    ID              reduce using rule 37 (bloque_codigo -> VACIO .)
    PRIFINT         reduce using rule 37 (bloque_codigo -> VACIO .)
    IFINPUFUT       reduce using rule 37 (bloque_codigo -> VACIO .)
    WHIFILEFE       reduce using rule 37 (bloque_codigo -> VACIO .)
    IFINT           reduce using rule 37 (bloque_codigo -> VACIO .)
    STRIFING        reduce using rule 37 (bloque_codigo -> VACIO .)
    STRUFUCT        reduce using rule 37 (bloque_codigo -> VACIO .)
    VOFOIFID        reduce using rule 37 (bloque_codigo -> VACIO .)
    CHAFAR          reduce using rule 37 (bloque_codigo -> VACIO .)
    BOFOOFOL        reduce using rule 37 (bloque_codigo -> VACIO .)
    FLOFOAFAT       reduce using rule 37 (bloque_codigo -> VACIO .)
    PA              reduce using rule 37 (bloque_codigo -> VACIO .)


state 58

    (38) declarar_if -> IFIF . PA condicion PC LLAVEA bloque_codigo LLAVEC
    (39) declarar_if -> IFIF . PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE LLAVEA bloque_codigo LLAVEC
    (41) declarar_if_error_llave -> IFIF . PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE LLAVEA bloque_codigo
    (42) declarar_if_error_llave -> IFIF . PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE bloque_codigo LLAVEC

    PA              shift and go to state 93


state 59

    (40) declarar_if -> declarar_if_error_llave .

    VACIO           reduce using rule 40 (declarar_if -> declarar_if_error_llave .)
    IFIF            reduce using rule 40 (declarar_if -> declarar_if_error_llave .)
    AFARRAFAY       reduce using rule 40 (declarar_if -> declarar_if_error_llave .)
    ID              reduce using rule 40 (declarar_if -> declarar_if_error_llave .)
    PRIFINT         reduce using rule 40 (declarar_if -> declarar_if_error_llave .)
    IFINPUFUT       reduce using rule 40 (declarar_if -> declarar_if_error_llave .)
    WHIFILEFE       reduce using rule 40 (declarar_if -> declarar_if_error_llave .)
    IFINT           reduce using rule 40 (declarar_if -> declarar_if_error_llave .)
    STRIFING        reduce using rule 40 (declarar_if -> declarar_if_error_llave .)
    STRUFUCT        reduce using rule 40 (declarar_if -> declarar_if_error_llave .)
    VOFOIFID        reduce using rule 40 (declarar_if -> declarar_if_error_llave .)
    CHAFAR          reduce using rule 40 (declarar_if -> declarar_if_error_llave .)
    BOFOOFOL        reduce using rule 40 (declarar_if -> declarar_if_error_llave .)
    FLOFOAFAT       reduce using rule 40 (declarar_if -> declarar_if_error_llave .)
    PA              reduce using rule 40 (declarar_if -> declarar_if_error_llave .)


state 60

    (43) declaracion -> tipo_dato . ID PYC
    (44) declaracion -> tipo_dato . ID ASG ID operacion_matematica ID PYC
    (45) declaracion -> tipo_dato . ID ASG dato PYC

    ID              shift and go to state 94


state 61

    (55) asignar_estructuras -> ID . PUNTO ID ASG dato
    (54) asignar_array -> ID . dimensiones ASG dato PYC
    (56) funcion -> ID . PA valores PC PYC
    (57) funcion -> ID . PA PC PYC
    (58) funcion -> ID . PA valores COMA valores PC PYC
    (48) declaracion_error -> ID . PYC
    (49) declaracion_error -> ID . ASG ID operacion_matematica ID PYC
    (50) declaracion_error -> ID . ASG valores PYC
    (51) dimensiones -> . dimension dimensiones
    (52) dimensiones -> . VACIO
    (53) dimension -> . CA INT CC

    PUNTO           shift and go to state 95
    PA              shift and go to state 99
    PYC             shift and go to state 98
    ASG             shift and go to state 96
    VACIO           shift and go to state 101
    CA              shift and go to state 102

    dimensiones                    shift and go to state 97
    dimension                      shift and go to state 100

state 62

    (46) declaracion -> AFARRAFAY . ID dimensiones PYC
    (23) tipo_dato -> AFARRAFAY .

  ! shift/reduce conflict for ID resolved as shift
    ID              shift and go to state 103

  ! ID              [ reduce using rule 23 (tipo_dato -> AFARRAFAY .) ]


state 63

    (47) declaracion -> declaracion_error .

    VACIO           reduce using rule 47 (declaracion -> declaracion_error .)
    IFIF            reduce using rule 47 (declaracion -> declaracion_error .)
    AFARRAFAY       reduce using rule 47 (declaracion -> declaracion_error .)
    ID              reduce using rule 47 (declaracion -> declaracion_error .)
    PRIFINT         reduce using rule 47 (declaracion -> declaracion_error .)
    IFINPUFUT       reduce using rule 47 (declaracion -> declaracion_error .)
    WHIFILEFE       reduce using rule 47 (declaracion -> declaracion_error .)
    IFINT           reduce using rule 47 (declaracion -> declaracion_error .)
    STRIFING        reduce using rule 47 (declaracion -> declaracion_error .)
    STRUFUCT        reduce using rule 47 (declaracion -> declaracion_error .)
    VOFOIFID        reduce using rule 47 (declaracion -> declaracion_error .)
    CHAFAR          reduce using rule 47 (declaracion -> declaracion_error .)
    BOFOOFOL        reduce using rule 47 (declaracion -> declaracion_error .)
    FLOFOAFAT       reduce using rule 47 (declaracion -> declaracion_error .)
    PA              reduce using rule 47 (declaracion -> declaracion_error .)


state 64

    (59) print -> PRIFINT . PA ID PC PYC

    PA              shift and go to state 104


state 65

    (60) input -> IFINPUFUT . PA ID PC PYC

    PA              shift and go to state 105


state 66

    (61) declaracion_while -> WHIFILEFE . PA condicion PC LLAVEA bloque_codigo LLAVEC
    (64) declaracion_while_error -> WHIFILEFE . PA condicion PC bloque_codigo LLAVEC
    (65) declaracion_while_error -> WHIFILEFE . PA condicion PC LLAVEA bloque_codigo

    PA              shift and go to state 106


state 67

    (62) declaracion_while -> declaracion_while_error .

    VACIO           reduce using rule 62 (declaracion_while -> declaracion_while_error .)
    IFIF            reduce using rule 62 (declaracion_while -> declaracion_while_error .)
    AFARRAFAY       reduce using rule 62 (declaracion_while -> declaracion_while_error .)
    ID              reduce using rule 62 (declaracion_while -> declaracion_while_error .)
    PRIFINT         reduce using rule 62 (declaracion_while -> declaracion_while_error .)
    IFINPUFUT       reduce using rule 62 (declaracion_while -> declaracion_while_error .)
    WHIFILEFE       reduce using rule 62 (declaracion_while -> declaracion_while_error .)
    IFINT           reduce using rule 62 (declaracion_while -> declaracion_while_error .)
    STRIFING        reduce using rule 62 (declaracion_while -> declaracion_while_error .)
    STRUFUCT        reduce using rule 62 (declaracion_while -> declaracion_while_error .)
    VOFOIFID        reduce using rule 62 (declaracion_while -> declaracion_while_error .)
    CHAFAR          reduce using rule 62 (declaracion_while -> declaracion_while_error .)
    BOFOOFOL        reduce using rule 62 (declaracion_while -> declaracion_while_error .)
    FLOFOAFAT       reduce using rule 62 (declaracion_while -> declaracion_while_error .)
    PA              reduce using rule 62 (declaracion_while -> declaracion_while_error .)


state 68

    (11) declarar_estructuras_error -> STRUFUCT ID LLAVEA ID PYC ID . PYC LLAVEC

    PYC             shift and go to state 107


state 69

    (5) declarar_estructuras -> STRUFUCT ID LLAVEA tipo_dato ID PYC . tipo_dato ID PYC LLAVEC
    (9) declarar_estructuras_error -> STRUFUCT ID LLAVEA tipo_dato ID PYC . tipo_dato PYC LLAVEC
    (21) tipo_dato -> . IFINT
    (22) tipo_dato -> . STRIFING
    (23) tipo_dato -> . AFARRAFAY
    (24) tipo_dato -> . STRUFUCT
    (25) tipo_dato -> . VOFOIFID
    (26) tipo_dato -> . CHAFAR
    (27) tipo_dato -> . BOFOOFOL
    (28) tipo_dato -> . FLOFOAFAT

    IFINT           shift and go to state 18
    STRIFING        shift and go to state 19
    AFARRAFAY       shift and go to state 20
    STRUFUCT        shift and go to state 21
    VOFOIFID        shift and go to state 22
    CHAFAR          shift and go to state 23
    BOFOOFOL        shift and go to state 24
    FLOFOAFAT       shift and go to state 25

    tipo_dato                      shift and go to state 108

state 70

    (8) declarar_estructuras_error -> STRUFUCT ID LLAVEA tipo_dato PYC tipo_dato . ID PYC LLAVEC
    (10) declarar_estructuras_error -> STRUFUCT ID LLAVEA tipo_dato PYC tipo_dato . PYC LLAVEC

    ID              shift and go to state 109
    PYC             shift and go to state 110


state 71

    (7) declarar_estructuras_error -> ID LLAVEA tipo_dato ID PYC tipo_dato . ID PYC LLAVEC

    ID              shift and go to state 111


state 72

    (12) declarar_funciones -> FUNCTION tipo_dato ID PA tipo_dato ID . PC LLAVEA bloque_codigo REFETUFURN ID PYC LLAVEC
    (15) declarar_funciones -> FUNCTION tipo_dato ID PA tipo_dato ID . COMA tipo_dato ID PC LLAVEA bloque_codigo REFETUFURN ID PYC LLAVEC

    PC              shift and go to state 112
    COMA            shift and go to state 113


state 73

    (13) declarar_funciones -> FUNCTION tipo_dato ID PA PC LLAVEA . bloque_codigo REFETUFURN ID PYC LLAVEC
    (14) declarar_funciones -> FUNCTION tipo_dato ID PA PC LLAVEA . bloque_codigo REFETUFURN PYC LLAVEC
    (29) bloque_codigo -> . declarar_if bloque_codigo
    (30) bloque_codigo -> . declaracion bloque_codigo
    (31) bloque_codigo -> . asignar_estructuras bloque_codigo
    (32) bloque_codigo -> . asignar_array bloque_codigo
    (33) bloque_codigo -> . funcion bloque_codigo
    (34) bloque_codigo -> . print bloque_codigo
    (35) bloque_codigo -> . input bloque_codigo
    (36) bloque_codigo -> . declaracion_while bloque_codigo
    (37) bloque_codigo -> . VACIO
    (38) declarar_if -> . IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC
    (39) declarar_if -> . IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE LLAVEA bloque_codigo LLAVEC
    (40) declarar_if -> . declarar_if_error_llave
    (43) declaracion -> . tipo_dato ID PYC
    (44) declaracion -> . tipo_dato ID ASG ID operacion_matematica ID PYC
    (45) declaracion -> . tipo_dato ID ASG dato PYC
    (46) declaracion -> . AFARRAFAY ID dimensiones PYC
    (47) declaracion -> . declaracion_error
    (55) asignar_estructuras -> . ID PUNTO ID ASG dato
    (54) asignar_array -> . ID dimensiones ASG dato PYC
    (56) funcion -> . ID PA valores PC PYC
    (57) funcion -> . ID PA PC PYC
    (58) funcion -> . ID PA valores COMA valores PC PYC
    (59) print -> . PRIFINT PA ID PC PYC
    (60) input -> . IFINPUFUT PA ID PC PYC
    (61) declaracion_while -> . WHIFILEFE PA condicion PC LLAVEA bloque_codigo LLAVEC
    (62) declaracion_while -> . declaracion_while_error
    (41) declarar_if_error_llave -> . IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE LLAVEA bloque_codigo
    (42) declarar_if_error_llave -> . IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE bloque_codigo LLAVEC
    (21) tipo_dato -> . IFINT
    (22) tipo_dato -> . STRIFING
    (23) tipo_dato -> . AFARRAFAY
    (24) tipo_dato -> . STRUFUCT
    (25) tipo_dato -> . VOFOIFID
    (26) tipo_dato -> . CHAFAR
    (27) tipo_dato -> . BOFOOFOL
    (28) tipo_dato -> . FLOFOAFAT
    (48) declaracion_error -> . ID PYC
    (49) declaracion_error -> . ID ASG ID operacion_matematica ID PYC
    (50) declaracion_error -> . ID ASG valores PYC
    (63) declaracion_while_error -> . PA condicion PC LLAVEA bloque_codigo LLAVEC
    (64) declaracion_while_error -> . WHIFILEFE PA condicion PC bloque_codigo LLAVEC
    (65) declaracion_while_error -> . WHIFILEFE PA condicion PC LLAVEA bloque_codigo

    VACIO           shift and go to state 57
    IFIF            shift and go to state 58
    AFARRAFAY       shift and go to state 62
    ID              shift and go to state 61
    PRIFINT         shift and go to state 64
    IFINPUFUT       shift and go to state 65
    WHIFILEFE       shift and go to state 66
    IFINT           shift and go to state 18
    STRIFING        shift and go to state 19
    STRUFUCT        shift and go to state 21
    VOFOIFID        shift and go to state 22
    CHAFAR          shift and go to state 23
    BOFOOFOL        shift and go to state 24
    FLOFOAFAT       shift and go to state 25
    PA              shift and go to state 47

    tipo_dato                      shift and go to state 60
    bloque_codigo                  shift and go to state 114
    declarar_if                    shift and go to state 49
    declaracion                    shift and go to state 50
    asignar_estructuras            shift and go to state 51
    asignar_array                  shift and go to state 52
    funcion                        shift and go to state 53
    print                          shift and go to state 54
    input                          shift and go to state 55
    declaracion_while              shift and go to state 56
    declarar_if_error_llave        shift and go to state 59
    declaracion_error              shift and go to state 63
    declaracion_while_error        shift and go to state 67

state 74

    (16) declarar_main -> IFINT MAFAIFIN PA PC LLAVEA bloque_codigo . REFETUFURN PYC LLAVEC
    (19) declarar_main_error -> IFINT MAFAIFIN PA PC LLAVEA bloque_codigo . LLAVEC

    REFETUFURN      shift and go to state 115
    LLAVEC          shift and go to state 116


state 75

    (63) declaracion_while_error -> PA condicion . PC LLAVEA bloque_codigo LLAVEC

    PC              shift and go to state 117


state 76

    (66) condicion -> valores . operadores valores
    (67) condicion -> valores .
    (68) condicion -> valores . operadores_logicos condicion
    (69) condicion -> valores . NOT valores
    (88) operadores -> . MEN
    (89) operadores -> . MAY
    (90) operadores -> . MENIG
    (91) operadores -> . MAYIG
    (92) operadores -> . CMP
    (93) operadores -> . DIF
    (94) operadores_logicos -> . AND
    (95) operadores_logicos -> . OR

    PC              reduce using rule 67 (condicion -> valores .)
    NOT             shift and go to state 120
    MEN             shift and go to state 121
    MAY             shift and go to state 122
    MENIG           shift and go to state 123
    MAYIG           shift and go to state 124
    CMP             shift and go to state 125
    DIF             shift and go to state 126
    AND             shift and go to state 127
    OR              shift and go to state 128

    operadores                     shift and go to state 118
    operadores_logicos             shift and go to state 119

state 77

    (76) valores -> INT .

    NOT             reduce using rule 76 (valores -> INT .)
    MEN             reduce using rule 76 (valores -> INT .)
    MAY             reduce using rule 76 (valores -> INT .)
    MENIG           reduce using rule 76 (valores -> INT .)
    MAYIG           reduce using rule 76 (valores -> INT .)
    CMP             reduce using rule 76 (valores -> INT .)
    DIF             reduce using rule 76 (valores -> INT .)
    AND             reduce using rule 76 (valores -> INT .)
    OR              reduce using rule 76 (valores -> INT .)
    PC              reduce using rule 76 (valores -> INT .)
    PYC             reduce using rule 76 (valores -> INT .)
    COMA            reduce using rule 76 (valores -> INT .)


state 78

    (77) valores -> CHAR .

    NOT             reduce using rule 77 (valores -> CHAR .)
    MEN             reduce using rule 77 (valores -> CHAR .)
    MAY             reduce using rule 77 (valores -> CHAR .)
    MENIG           reduce using rule 77 (valores -> CHAR .)
    MAYIG           reduce using rule 77 (valores -> CHAR .)
    CMP             reduce using rule 77 (valores -> CHAR .)
    DIF             reduce using rule 77 (valores -> CHAR .)
    AND             reduce using rule 77 (valores -> CHAR .)
    OR              reduce using rule 77 (valores -> CHAR .)
    PC              reduce using rule 77 (valores -> CHAR .)
    PYC             reduce using rule 77 (valores -> CHAR .)
    COMA            reduce using rule 77 (valores -> CHAR .)


state 79

    (78) valores -> TRUFUEFE .

    NOT             reduce using rule 78 (valores -> TRUFUEFE .)
    MEN             reduce using rule 78 (valores -> TRUFUEFE .)
    MAY             reduce using rule 78 (valores -> TRUFUEFE .)
    MENIG           reduce using rule 78 (valores -> TRUFUEFE .)
    MAYIG           reduce using rule 78 (valores -> TRUFUEFE .)
    CMP             reduce using rule 78 (valores -> TRUFUEFE .)
    DIF             reduce using rule 78 (valores -> TRUFUEFE .)
    AND             reduce using rule 78 (valores -> TRUFUEFE .)
    OR              reduce using rule 78 (valores -> TRUFUEFE .)
    PC              reduce using rule 78 (valores -> TRUFUEFE .)
    PYC             reduce using rule 78 (valores -> TRUFUEFE .)
    COMA            reduce using rule 78 (valores -> TRUFUEFE .)


state 80

    (79) valores -> FAFALSEFE .

    NOT             reduce using rule 79 (valores -> FAFALSEFE .)
    MEN             reduce using rule 79 (valores -> FAFALSEFE .)
    MAY             reduce using rule 79 (valores -> FAFALSEFE .)
    MENIG           reduce using rule 79 (valores -> FAFALSEFE .)
    MAYIG           reduce using rule 79 (valores -> FAFALSEFE .)
    CMP             reduce using rule 79 (valores -> FAFALSEFE .)
    DIF             reduce using rule 79 (valores -> FAFALSEFE .)
    AND             reduce using rule 79 (valores -> FAFALSEFE .)
    OR              reduce using rule 79 (valores -> FAFALSEFE .)
    PC              reduce using rule 79 (valores -> FAFALSEFE .)
    PYC             reduce using rule 79 (valores -> FAFALSEFE .)
    COMA            reduce using rule 79 (valores -> FAFALSEFE .)


state 81

    (80) valores -> PCC .

    NOT             reduce using rule 80 (valores -> PCC .)
    MEN             reduce using rule 80 (valores -> PCC .)
    MAY             reduce using rule 80 (valores -> PCC .)
    MENIG           reduce using rule 80 (valores -> PCC .)
    MAYIG           reduce using rule 80 (valores -> PCC .)
    CMP             reduce using rule 80 (valores -> PCC .)
    DIF             reduce using rule 80 (valores -> PCC .)
    AND             reduce using rule 80 (valores -> PCC .)
    OR              reduce using rule 80 (valores -> PCC .)
    PC              reduce using rule 80 (valores -> PCC .)
    PYC             reduce using rule 80 (valores -> PCC .)
    COMA            reduce using rule 80 (valores -> PCC .)


state 82

    (81) valores -> ID .

    NOT             reduce using rule 81 (valores -> ID .)
    MEN             reduce using rule 81 (valores -> ID .)
    MAY             reduce using rule 81 (valores -> ID .)
    MENIG           reduce using rule 81 (valores -> ID .)
    MAYIG           reduce using rule 81 (valores -> ID .)
    CMP             reduce using rule 81 (valores -> ID .)
    DIF             reduce using rule 81 (valores -> ID .)
    AND             reduce using rule 81 (valores -> ID .)
    OR              reduce using rule 81 (valores -> ID .)
    PC              reduce using rule 81 (valores -> ID .)
    COMA            reduce using rule 81 (valores -> ID .)


state 83

    (18) declarar_main_error -> MAFAIFIN PA PC LLAVEA bloque_codigo REFETUFURN . PYC LLAVEC

    PYC             shift and go to state 129


state 84

    (20) declarar_main_error -> MAFAIFIN PA PC LLAVEA bloque_codigo LLAVEC .

    $end            reduce using rule 20 (declarar_main_error -> MAFAIFIN PA PC LLAVEA bloque_codigo LLAVEC .)


state 85

    (29) bloque_codigo -> declarar_if bloque_codigo .

    REFETUFURN      reduce using rule 29 (bloque_codigo -> declarar_if bloque_codigo .)
    LLAVEC          reduce using rule 29 (bloque_codigo -> declarar_if bloque_codigo .)
    VACIO           reduce using rule 29 (bloque_codigo -> declarar_if bloque_codigo .)
    IFIF            reduce using rule 29 (bloque_codigo -> declarar_if bloque_codigo .)
    AFARRAFAY       reduce using rule 29 (bloque_codigo -> declarar_if bloque_codigo .)
    ID              reduce using rule 29 (bloque_codigo -> declarar_if bloque_codigo .)
    PRIFINT         reduce using rule 29 (bloque_codigo -> declarar_if bloque_codigo .)
    IFINPUFUT       reduce using rule 29 (bloque_codigo -> declarar_if bloque_codigo .)
    WHIFILEFE       reduce using rule 29 (bloque_codigo -> declarar_if bloque_codigo .)
    IFINT           reduce using rule 29 (bloque_codigo -> declarar_if bloque_codigo .)
    STRIFING        reduce using rule 29 (bloque_codigo -> declarar_if bloque_codigo .)
    STRUFUCT        reduce using rule 29 (bloque_codigo -> declarar_if bloque_codigo .)
    VOFOIFID        reduce using rule 29 (bloque_codigo -> declarar_if bloque_codigo .)
    CHAFAR          reduce using rule 29 (bloque_codigo -> declarar_if bloque_codigo .)
    BOFOOFOL        reduce using rule 29 (bloque_codigo -> declarar_if bloque_codigo .)
    FLOFOAFAT       reduce using rule 29 (bloque_codigo -> declarar_if bloque_codigo .)
    PA              reduce using rule 29 (bloque_codigo -> declarar_if bloque_codigo .)


state 86

    (30) bloque_codigo -> declaracion bloque_codigo .

    REFETUFURN      reduce using rule 30 (bloque_codigo -> declaracion bloque_codigo .)
    LLAVEC          reduce using rule 30 (bloque_codigo -> declaracion bloque_codigo .)
    VACIO           reduce using rule 30 (bloque_codigo -> declaracion bloque_codigo .)
    IFIF            reduce using rule 30 (bloque_codigo -> declaracion bloque_codigo .)
    AFARRAFAY       reduce using rule 30 (bloque_codigo -> declaracion bloque_codigo .)
    ID              reduce using rule 30 (bloque_codigo -> declaracion bloque_codigo .)
    PRIFINT         reduce using rule 30 (bloque_codigo -> declaracion bloque_codigo .)
    IFINPUFUT       reduce using rule 30 (bloque_codigo -> declaracion bloque_codigo .)
    WHIFILEFE       reduce using rule 30 (bloque_codigo -> declaracion bloque_codigo .)
    IFINT           reduce using rule 30 (bloque_codigo -> declaracion bloque_codigo .)
    STRIFING        reduce using rule 30 (bloque_codigo -> declaracion bloque_codigo .)
    STRUFUCT        reduce using rule 30 (bloque_codigo -> declaracion bloque_codigo .)
    VOFOIFID        reduce using rule 30 (bloque_codigo -> declaracion bloque_codigo .)
    CHAFAR          reduce using rule 30 (bloque_codigo -> declaracion bloque_codigo .)
    BOFOOFOL        reduce using rule 30 (bloque_codigo -> declaracion bloque_codigo .)
    FLOFOAFAT       reduce using rule 30 (bloque_codigo -> declaracion bloque_codigo .)
    PA              reduce using rule 30 (bloque_codigo -> declaracion bloque_codigo .)


state 87

    (31) bloque_codigo -> asignar_estructuras bloque_codigo .

    REFETUFURN      reduce using rule 31 (bloque_codigo -> asignar_estructuras bloque_codigo .)
    LLAVEC          reduce using rule 31 (bloque_codigo -> asignar_estructuras bloque_codigo .)
    VACIO           reduce using rule 31 (bloque_codigo -> asignar_estructuras bloque_codigo .)
    IFIF            reduce using rule 31 (bloque_codigo -> asignar_estructuras bloque_codigo .)
    AFARRAFAY       reduce using rule 31 (bloque_codigo -> asignar_estructuras bloque_codigo .)
    ID              reduce using rule 31 (bloque_codigo -> asignar_estructuras bloque_codigo .)
    PRIFINT         reduce using rule 31 (bloque_codigo -> asignar_estructuras bloque_codigo .)
    IFINPUFUT       reduce using rule 31 (bloque_codigo -> asignar_estructuras bloque_codigo .)
    WHIFILEFE       reduce using rule 31 (bloque_codigo -> asignar_estructuras bloque_codigo .)
    IFINT           reduce using rule 31 (bloque_codigo -> asignar_estructuras bloque_codigo .)
    STRIFING        reduce using rule 31 (bloque_codigo -> asignar_estructuras bloque_codigo .)
    STRUFUCT        reduce using rule 31 (bloque_codigo -> asignar_estructuras bloque_codigo .)
    VOFOIFID        reduce using rule 31 (bloque_codigo -> asignar_estructuras bloque_codigo .)
    CHAFAR          reduce using rule 31 (bloque_codigo -> asignar_estructuras bloque_codigo .)
    BOFOOFOL        reduce using rule 31 (bloque_codigo -> asignar_estructuras bloque_codigo .)
    FLOFOAFAT       reduce using rule 31 (bloque_codigo -> asignar_estructuras bloque_codigo .)
    PA              reduce using rule 31 (bloque_codigo -> asignar_estructuras bloque_codigo .)


state 88

    (32) bloque_codigo -> asignar_array bloque_codigo .

    REFETUFURN      reduce using rule 32 (bloque_codigo -> asignar_array bloque_codigo .)
    LLAVEC          reduce using rule 32 (bloque_codigo -> asignar_array bloque_codigo .)
    VACIO           reduce using rule 32 (bloque_codigo -> asignar_array bloque_codigo .)
    IFIF            reduce using rule 32 (bloque_codigo -> asignar_array bloque_codigo .)
    AFARRAFAY       reduce using rule 32 (bloque_codigo -> asignar_array bloque_codigo .)
    ID              reduce using rule 32 (bloque_codigo -> asignar_array bloque_codigo .)
    PRIFINT         reduce using rule 32 (bloque_codigo -> asignar_array bloque_codigo .)
    IFINPUFUT       reduce using rule 32 (bloque_codigo -> asignar_array bloque_codigo .)
    WHIFILEFE       reduce using rule 32 (bloque_codigo -> asignar_array bloque_codigo .)
    IFINT           reduce using rule 32 (bloque_codigo -> asignar_array bloque_codigo .)
    STRIFING        reduce using rule 32 (bloque_codigo -> asignar_array bloque_codigo .)
    STRUFUCT        reduce using rule 32 (bloque_codigo -> asignar_array bloque_codigo .)
    VOFOIFID        reduce using rule 32 (bloque_codigo -> asignar_array bloque_codigo .)
    CHAFAR          reduce using rule 32 (bloque_codigo -> asignar_array bloque_codigo .)
    BOFOOFOL        reduce using rule 32 (bloque_codigo -> asignar_array bloque_codigo .)
    FLOFOAFAT       reduce using rule 32 (bloque_codigo -> asignar_array bloque_codigo .)
    PA              reduce using rule 32 (bloque_codigo -> asignar_array bloque_codigo .)


state 89

    (33) bloque_codigo -> funcion bloque_codigo .

    REFETUFURN      reduce using rule 33 (bloque_codigo -> funcion bloque_codigo .)
    LLAVEC          reduce using rule 33 (bloque_codigo -> funcion bloque_codigo .)
    VACIO           reduce using rule 33 (bloque_codigo -> funcion bloque_codigo .)
    IFIF            reduce using rule 33 (bloque_codigo -> funcion bloque_codigo .)
    AFARRAFAY       reduce using rule 33 (bloque_codigo -> funcion bloque_codigo .)
    ID              reduce using rule 33 (bloque_codigo -> funcion bloque_codigo .)
    PRIFINT         reduce using rule 33 (bloque_codigo -> funcion bloque_codigo .)
    IFINPUFUT       reduce using rule 33 (bloque_codigo -> funcion bloque_codigo .)
    WHIFILEFE       reduce using rule 33 (bloque_codigo -> funcion bloque_codigo .)
    IFINT           reduce using rule 33 (bloque_codigo -> funcion bloque_codigo .)
    STRIFING        reduce using rule 33 (bloque_codigo -> funcion bloque_codigo .)
    STRUFUCT        reduce using rule 33 (bloque_codigo -> funcion bloque_codigo .)
    VOFOIFID        reduce using rule 33 (bloque_codigo -> funcion bloque_codigo .)
    CHAFAR          reduce using rule 33 (bloque_codigo -> funcion bloque_codigo .)
    BOFOOFOL        reduce using rule 33 (bloque_codigo -> funcion bloque_codigo .)
    FLOFOAFAT       reduce using rule 33 (bloque_codigo -> funcion bloque_codigo .)
    PA              reduce using rule 33 (bloque_codigo -> funcion bloque_codigo .)


state 90

    (34) bloque_codigo -> print bloque_codigo .

    REFETUFURN      reduce using rule 34 (bloque_codigo -> print bloque_codigo .)
    LLAVEC          reduce using rule 34 (bloque_codigo -> print bloque_codigo .)
    VACIO           reduce using rule 34 (bloque_codigo -> print bloque_codigo .)
    IFIF            reduce using rule 34 (bloque_codigo -> print bloque_codigo .)
    AFARRAFAY       reduce using rule 34 (bloque_codigo -> print bloque_codigo .)
    ID              reduce using rule 34 (bloque_codigo -> print bloque_codigo .)
    PRIFINT         reduce using rule 34 (bloque_codigo -> print bloque_codigo .)
    IFINPUFUT       reduce using rule 34 (bloque_codigo -> print bloque_codigo .)
    WHIFILEFE       reduce using rule 34 (bloque_codigo -> print bloque_codigo .)
    IFINT           reduce using rule 34 (bloque_codigo -> print bloque_codigo .)
    STRIFING        reduce using rule 34 (bloque_codigo -> print bloque_codigo .)
    STRUFUCT        reduce using rule 34 (bloque_codigo -> print bloque_codigo .)
    VOFOIFID        reduce using rule 34 (bloque_codigo -> print bloque_codigo .)
    CHAFAR          reduce using rule 34 (bloque_codigo -> print bloque_codigo .)
    BOFOOFOL        reduce using rule 34 (bloque_codigo -> print bloque_codigo .)
    FLOFOAFAT       reduce using rule 34 (bloque_codigo -> print bloque_codigo .)
    PA              reduce using rule 34 (bloque_codigo -> print bloque_codigo .)


state 91

    (35) bloque_codigo -> input bloque_codigo .

    REFETUFURN      reduce using rule 35 (bloque_codigo -> input bloque_codigo .)
    LLAVEC          reduce using rule 35 (bloque_codigo -> input bloque_codigo .)
    VACIO           reduce using rule 35 (bloque_codigo -> input bloque_codigo .)
    IFIF            reduce using rule 35 (bloque_codigo -> input bloque_codigo .)
    AFARRAFAY       reduce using rule 35 (bloque_codigo -> input bloque_codigo .)
    ID              reduce using rule 35 (bloque_codigo -> input bloque_codigo .)
    PRIFINT         reduce using rule 35 (bloque_codigo -> input bloque_codigo .)
    IFINPUFUT       reduce using rule 35 (bloque_codigo -> input bloque_codigo .)
    WHIFILEFE       reduce using rule 35 (bloque_codigo -> input bloque_codigo .)
    IFINT           reduce using rule 35 (bloque_codigo -> input bloque_codigo .)
    STRIFING        reduce using rule 35 (bloque_codigo -> input bloque_codigo .)
    STRUFUCT        reduce using rule 35 (bloque_codigo -> input bloque_codigo .)
    VOFOIFID        reduce using rule 35 (bloque_codigo -> input bloque_codigo .)
    CHAFAR          reduce using rule 35 (bloque_codigo -> input bloque_codigo .)
    BOFOOFOL        reduce using rule 35 (bloque_codigo -> input bloque_codigo .)
    FLOFOAFAT       reduce using rule 35 (bloque_codigo -> input bloque_codigo .)
    PA              reduce using rule 35 (bloque_codigo -> input bloque_codigo .)


state 92

    (36) bloque_codigo -> declaracion_while bloque_codigo .

    REFETUFURN      reduce using rule 36 (bloque_codigo -> declaracion_while bloque_codigo .)
    LLAVEC          reduce using rule 36 (bloque_codigo -> declaracion_while bloque_codigo .)
    VACIO           reduce using rule 36 (bloque_codigo -> declaracion_while bloque_codigo .)
    IFIF            reduce using rule 36 (bloque_codigo -> declaracion_while bloque_codigo .)
    AFARRAFAY       reduce using rule 36 (bloque_codigo -> declaracion_while bloque_codigo .)
    ID              reduce using rule 36 (bloque_codigo -> declaracion_while bloque_codigo .)
    PRIFINT         reduce using rule 36 (bloque_codigo -> declaracion_while bloque_codigo .)
    IFINPUFUT       reduce using rule 36 (bloque_codigo -> declaracion_while bloque_codigo .)
    WHIFILEFE       reduce using rule 36 (bloque_codigo -> declaracion_while bloque_codigo .)
    IFINT           reduce using rule 36 (bloque_codigo -> declaracion_while bloque_codigo .)
    STRIFING        reduce using rule 36 (bloque_codigo -> declaracion_while bloque_codigo .)
    STRUFUCT        reduce using rule 36 (bloque_codigo -> declaracion_while bloque_codigo .)
    VOFOIFID        reduce using rule 36 (bloque_codigo -> declaracion_while bloque_codigo .)
    CHAFAR          reduce using rule 36 (bloque_codigo -> declaracion_while bloque_codigo .)
    BOFOOFOL        reduce using rule 36 (bloque_codigo -> declaracion_while bloque_codigo .)
    FLOFOAFAT       reduce using rule 36 (bloque_codigo -> declaracion_while bloque_codigo .)
    PA              reduce using rule 36 (bloque_codigo -> declaracion_while bloque_codigo .)


state 93

    (38) declarar_if -> IFIF PA . condicion PC LLAVEA bloque_codigo LLAVEC
    (39) declarar_if -> IFIF PA . condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE LLAVEA bloque_codigo LLAVEC
    (41) declarar_if_error_llave -> IFIF PA . condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE LLAVEA bloque_codigo
    (42) declarar_if_error_llave -> IFIF PA . condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE bloque_codigo LLAVEC
    (66) condicion -> . valores operadores valores
    (67) condicion -> . valores
    (68) condicion -> . valores operadores_logicos condicion
    (69) condicion -> . valores NOT valores
    (76) valores -> . INT
    (77) valores -> . CHAR
    (78) valores -> . TRUFUEFE
    (79) valores -> . FAFALSEFE
    (80) valores -> . PCC
    (81) valores -> . ID

    INT             shift and go to state 77
    CHAR            shift and go to state 78
    TRUFUEFE        shift and go to state 79
    FAFALSEFE       shift and go to state 80
    PCC             shift and go to state 81
    ID              shift and go to state 82

    condicion                      shift and go to state 130
    valores                        shift and go to state 76

state 94

    (43) declaracion -> tipo_dato ID . PYC
    (44) declaracion -> tipo_dato ID . ASG ID operacion_matematica ID PYC
    (45) declaracion -> tipo_dato ID . ASG dato PYC

    PYC             shift and go to state 131
    ASG             shift and go to state 132


state 95

    (55) asignar_estructuras -> ID PUNTO . ID ASG dato

    ID              shift and go to state 133


state 96

    (49) declaracion_error -> ID ASG . ID operacion_matematica ID PYC
    (50) declaracion_error -> ID ASG . valores PYC
    (76) valores -> . INT
    (77) valores -> . CHAR
    (78) valores -> . TRUFUEFE
    (79) valores -> . FAFALSEFE
    (80) valores -> . PCC
    (81) valores -> . ID

    ID              shift and go to state 134
    INT             shift and go to state 77
    CHAR            shift and go to state 78
    TRUFUEFE        shift and go to state 79
    FAFALSEFE       shift and go to state 80
    PCC             shift and go to state 81

    valores                        shift and go to state 135

state 97

    (54) asignar_array -> ID dimensiones . ASG dato PYC

    ASG             shift and go to state 136


state 98

    (48) declaracion_error -> ID PYC .

    VACIO           reduce using rule 48 (declaracion_error -> ID PYC .)
    IFIF            reduce using rule 48 (declaracion_error -> ID PYC .)
    AFARRAFAY       reduce using rule 48 (declaracion_error -> ID PYC .)
    ID              reduce using rule 48 (declaracion_error -> ID PYC .)
    PRIFINT         reduce using rule 48 (declaracion_error -> ID PYC .)
    IFINPUFUT       reduce using rule 48 (declaracion_error -> ID PYC .)
    WHIFILEFE       reduce using rule 48 (declaracion_error -> ID PYC .)
    IFINT           reduce using rule 48 (declaracion_error -> ID PYC .)
    STRIFING        reduce using rule 48 (declaracion_error -> ID PYC .)
    STRUFUCT        reduce using rule 48 (declaracion_error -> ID PYC .)
    VOFOIFID        reduce using rule 48 (declaracion_error -> ID PYC .)
    CHAFAR          reduce using rule 48 (declaracion_error -> ID PYC .)
    BOFOOFOL        reduce using rule 48 (declaracion_error -> ID PYC .)
    FLOFOAFAT       reduce using rule 48 (declaracion_error -> ID PYC .)
    PA              reduce using rule 48 (declaracion_error -> ID PYC .)


state 99

    (56) funcion -> ID PA . valores PC PYC
    (57) funcion -> ID PA . PC PYC
    (58) funcion -> ID PA . valores COMA valores PC PYC
    (76) valores -> . INT
    (77) valores -> . CHAR
    (78) valores -> . TRUFUEFE
    (79) valores -> . FAFALSEFE
    (80) valores -> . PCC
    (81) valores -> . ID

    PC              shift and go to state 138
    INT             shift and go to state 77
    CHAR            shift and go to state 78
    TRUFUEFE        shift and go to state 79
    FAFALSEFE       shift and go to state 80
    PCC             shift and go to state 81
    ID              shift and go to state 82

    valores                        shift and go to state 137

state 100

    (51) dimensiones -> dimension . dimensiones
    (51) dimensiones -> . dimension dimensiones
    (52) dimensiones -> . VACIO
    (53) dimension -> . CA INT CC

    VACIO           shift and go to state 101
    CA              shift and go to state 102

    dimension                      shift and go to state 100
    dimensiones                    shift and go to state 139

state 101

    (52) dimensiones -> VACIO .

    ASG             reduce using rule 52 (dimensiones -> VACIO .)
    PYC             reduce using rule 52 (dimensiones -> VACIO .)


state 102

    (53) dimension -> CA . INT CC

    INT             shift and go to state 140


state 103

    (46) declaracion -> AFARRAFAY ID . dimensiones PYC
    (51) dimensiones -> . dimension dimensiones
    (52) dimensiones -> . VACIO
    (53) dimension -> . CA INT CC

    VACIO           shift and go to state 101
    CA              shift and go to state 102

    dimensiones                    shift and go to state 141
    dimension                      shift and go to state 100

state 104

    (59) print -> PRIFINT PA . ID PC PYC

    ID              shift and go to state 142


state 105

    (60) input -> IFINPUFUT PA . ID PC PYC

    ID              shift and go to state 143


state 106

    (61) declaracion_while -> WHIFILEFE PA . condicion PC LLAVEA bloque_codigo LLAVEC
    (64) declaracion_while_error -> WHIFILEFE PA . condicion PC bloque_codigo LLAVEC
    (65) declaracion_while_error -> WHIFILEFE PA . condicion PC LLAVEA bloque_codigo
    (66) condicion -> . valores operadores valores
    (67) condicion -> . valores
    (68) condicion -> . valores operadores_logicos condicion
    (69) condicion -> . valores NOT valores
    (76) valores -> . INT
    (77) valores -> . CHAR
    (78) valores -> . TRUFUEFE
    (79) valores -> . FAFALSEFE
    (80) valores -> . PCC
    (81) valores -> . ID

    INT             shift and go to state 77
    CHAR            shift and go to state 78
    TRUFUEFE        shift and go to state 79
    FAFALSEFE       shift and go to state 80
    PCC             shift and go to state 81
    ID              shift and go to state 82

    condicion                      shift and go to state 144
    valores                        shift and go to state 76

state 107

    (11) declarar_estructuras_error -> STRUFUCT ID LLAVEA ID PYC ID PYC . LLAVEC

    LLAVEC          shift and go to state 145


state 108

    (5) declarar_estructuras -> STRUFUCT ID LLAVEA tipo_dato ID PYC tipo_dato . ID PYC LLAVEC
    (9) declarar_estructuras_error -> STRUFUCT ID LLAVEA tipo_dato ID PYC tipo_dato . PYC LLAVEC

    ID              shift and go to state 146
    PYC             shift and go to state 147


state 109

    (8) declarar_estructuras_error -> STRUFUCT ID LLAVEA tipo_dato PYC tipo_dato ID . PYC LLAVEC

    PYC             shift and go to state 148


state 110

    (10) declarar_estructuras_error -> STRUFUCT ID LLAVEA tipo_dato PYC tipo_dato PYC . LLAVEC

    LLAVEC          shift and go to state 149


state 111

    (7) declarar_estructuras_error -> ID LLAVEA tipo_dato ID PYC tipo_dato ID . PYC LLAVEC

    PYC             shift and go to state 150


state 112

    (12) declarar_funciones -> FUNCTION tipo_dato ID PA tipo_dato ID PC . LLAVEA bloque_codigo REFETUFURN ID PYC LLAVEC

    LLAVEA          shift and go to state 151


state 113

    (15) declarar_funciones -> FUNCTION tipo_dato ID PA tipo_dato ID COMA . tipo_dato ID PC LLAVEA bloque_codigo REFETUFURN ID PYC LLAVEC
    (21) tipo_dato -> . IFINT
    (22) tipo_dato -> . STRIFING
    (23) tipo_dato -> . AFARRAFAY
    (24) tipo_dato -> . STRUFUCT
    (25) tipo_dato -> . VOFOIFID
    (26) tipo_dato -> . CHAFAR
    (27) tipo_dato -> . BOFOOFOL
    (28) tipo_dato -> . FLOFOAFAT

    IFINT           shift and go to state 18
    STRIFING        shift and go to state 19
    AFARRAFAY       shift and go to state 20
    STRUFUCT        shift and go to state 21
    VOFOIFID        shift and go to state 22
    CHAFAR          shift and go to state 23
    BOFOOFOL        shift and go to state 24
    FLOFOAFAT       shift and go to state 25

    tipo_dato                      shift and go to state 152

state 114

    (13) declarar_funciones -> FUNCTION tipo_dato ID PA PC LLAVEA bloque_codigo . REFETUFURN ID PYC LLAVEC
    (14) declarar_funciones -> FUNCTION tipo_dato ID PA PC LLAVEA bloque_codigo . REFETUFURN PYC LLAVEC

    REFETUFURN      shift and go to state 153


state 115

    (16) declarar_main -> IFINT MAFAIFIN PA PC LLAVEA bloque_codigo REFETUFURN . PYC LLAVEC

    PYC             shift and go to state 154


state 116

    (19) declarar_main_error -> IFINT MAFAIFIN PA PC LLAVEA bloque_codigo LLAVEC .

    $end            reduce using rule 19 (declarar_main_error -> IFINT MAFAIFIN PA PC LLAVEA bloque_codigo LLAVEC .)


state 117

    (63) declaracion_while_error -> PA condicion PC . LLAVEA bloque_codigo LLAVEC

    LLAVEA          shift and go to state 155


state 118

    (66) condicion -> valores operadores . valores
    (76) valores -> . INT
    (77) valores -> . CHAR
    (78) valores -> . TRUFUEFE
    (79) valores -> . FAFALSEFE
    (80) valores -> . PCC
    (81) valores -> . ID

    INT             shift and go to state 77
    CHAR            shift and go to state 78
    TRUFUEFE        shift and go to state 79
    FAFALSEFE       shift and go to state 80
    PCC             shift and go to state 81
    ID              shift and go to state 82

    valores                        shift and go to state 156

state 119

    (68) condicion -> valores operadores_logicos . condicion
    (66) condicion -> . valores operadores valores
    (67) condicion -> . valores
    (68) condicion -> . valores operadores_logicos condicion
    (69) condicion -> . valores NOT valores
    (76) valores -> . INT
    (77) valores -> . CHAR
    (78) valores -> . TRUFUEFE
    (79) valores -> . FAFALSEFE
    (80) valores -> . PCC
    (81) valores -> . ID

    INT             shift and go to state 77
    CHAR            shift and go to state 78
    TRUFUEFE        shift and go to state 79
    FAFALSEFE       shift and go to state 80
    PCC             shift and go to state 81
    ID              shift and go to state 82

    valores                        shift and go to state 76
    condicion                      shift and go to state 157

state 120

    (69) condicion -> valores NOT . valores
    (76) valores -> . INT
    (77) valores -> . CHAR
    (78) valores -> . TRUFUEFE
    (79) valores -> . FAFALSEFE
    (80) valores -> . PCC
    (81) valores -> . ID

    INT             shift and go to state 77
    CHAR            shift and go to state 78
    TRUFUEFE        shift and go to state 79
    FAFALSEFE       shift and go to state 80
    PCC             shift and go to state 81
    ID              shift and go to state 82

    valores                        shift and go to state 158

state 121

    (88) operadores -> MEN .

    INT             reduce using rule 88 (operadores -> MEN .)
    CHAR            reduce using rule 88 (operadores -> MEN .)
    TRUFUEFE        reduce using rule 88 (operadores -> MEN .)
    FAFALSEFE       reduce using rule 88 (operadores -> MEN .)
    PCC             reduce using rule 88 (operadores -> MEN .)
    ID              reduce using rule 88 (operadores -> MEN .)


state 122

    (89) operadores -> MAY .

    INT             reduce using rule 89 (operadores -> MAY .)
    CHAR            reduce using rule 89 (operadores -> MAY .)
    TRUFUEFE        reduce using rule 89 (operadores -> MAY .)
    FAFALSEFE       reduce using rule 89 (operadores -> MAY .)
    PCC             reduce using rule 89 (operadores -> MAY .)
    ID              reduce using rule 89 (operadores -> MAY .)


state 123

    (90) operadores -> MENIG .

    INT             reduce using rule 90 (operadores -> MENIG .)
    CHAR            reduce using rule 90 (operadores -> MENIG .)
    TRUFUEFE        reduce using rule 90 (operadores -> MENIG .)
    FAFALSEFE       reduce using rule 90 (operadores -> MENIG .)
    PCC             reduce using rule 90 (operadores -> MENIG .)
    ID              reduce using rule 90 (operadores -> MENIG .)


state 124

    (91) operadores -> MAYIG .

    INT             reduce using rule 91 (operadores -> MAYIG .)
    CHAR            reduce using rule 91 (operadores -> MAYIG .)
    TRUFUEFE        reduce using rule 91 (operadores -> MAYIG .)
    FAFALSEFE       reduce using rule 91 (operadores -> MAYIG .)
    PCC             reduce using rule 91 (operadores -> MAYIG .)
    ID              reduce using rule 91 (operadores -> MAYIG .)


state 125

    (92) operadores -> CMP .

    INT             reduce using rule 92 (operadores -> CMP .)
    CHAR            reduce using rule 92 (operadores -> CMP .)
    TRUFUEFE        reduce using rule 92 (operadores -> CMP .)
    FAFALSEFE       reduce using rule 92 (operadores -> CMP .)
    PCC             reduce using rule 92 (operadores -> CMP .)
    ID              reduce using rule 92 (operadores -> CMP .)


state 126

    (93) operadores -> DIF .

    INT             reduce using rule 93 (operadores -> DIF .)
    CHAR            reduce using rule 93 (operadores -> DIF .)
    TRUFUEFE        reduce using rule 93 (operadores -> DIF .)
    FAFALSEFE       reduce using rule 93 (operadores -> DIF .)
    PCC             reduce using rule 93 (operadores -> DIF .)
    ID              reduce using rule 93 (operadores -> DIF .)


state 127

    (94) operadores_logicos -> AND .

    INT             reduce using rule 94 (operadores_logicos -> AND .)
    CHAR            reduce using rule 94 (operadores_logicos -> AND .)
    TRUFUEFE        reduce using rule 94 (operadores_logicos -> AND .)
    FAFALSEFE       reduce using rule 94 (operadores_logicos -> AND .)
    PCC             reduce using rule 94 (operadores_logicos -> AND .)
    ID              reduce using rule 94 (operadores_logicos -> AND .)


state 128

    (95) operadores_logicos -> OR .

    INT             reduce using rule 95 (operadores_logicos -> OR .)
    CHAR            reduce using rule 95 (operadores_logicos -> OR .)
    TRUFUEFE        reduce using rule 95 (operadores_logicos -> OR .)
    FAFALSEFE       reduce using rule 95 (operadores_logicos -> OR .)
    PCC             reduce using rule 95 (operadores_logicos -> OR .)
    ID              reduce using rule 95 (operadores_logicos -> OR .)


state 129

    (18) declarar_main_error -> MAFAIFIN PA PC LLAVEA bloque_codigo REFETUFURN PYC . LLAVEC

    LLAVEC          shift and go to state 159


state 130

    (38) declarar_if -> IFIF PA condicion . PC LLAVEA bloque_codigo LLAVEC
    (39) declarar_if -> IFIF PA condicion . PC LLAVEA bloque_codigo LLAVEC EFELSEFE LLAVEA bloque_codigo LLAVEC
    (41) declarar_if_error_llave -> IFIF PA condicion . PC LLAVEA bloque_codigo LLAVEC EFELSEFE LLAVEA bloque_codigo
    (42) declarar_if_error_llave -> IFIF PA condicion . PC LLAVEA bloque_codigo LLAVEC EFELSEFE bloque_codigo LLAVEC

    PC              shift and go to state 160


state 131

    (43) declaracion -> tipo_dato ID PYC .

    VACIO           reduce using rule 43 (declaracion -> tipo_dato ID PYC .)
    IFIF            reduce using rule 43 (declaracion -> tipo_dato ID PYC .)
    AFARRAFAY       reduce using rule 43 (declaracion -> tipo_dato ID PYC .)
    ID              reduce using rule 43 (declaracion -> tipo_dato ID PYC .)
    PRIFINT         reduce using rule 43 (declaracion -> tipo_dato ID PYC .)
    IFINPUFUT       reduce using rule 43 (declaracion -> tipo_dato ID PYC .)
    WHIFILEFE       reduce using rule 43 (declaracion -> tipo_dato ID PYC .)
    IFINT           reduce using rule 43 (declaracion -> tipo_dato ID PYC .)
    STRIFING        reduce using rule 43 (declaracion -> tipo_dato ID PYC .)
    STRUFUCT        reduce using rule 43 (declaracion -> tipo_dato ID PYC .)
    VOFOIFID        reduce using rule 43 (declaracion -> tipo_dato ID PYC .)
    CHAFAR          reduce using rule 43 (declaracion -> tipo_dato ID PYC .)
    BOFOOFOL        reduce using rule 43 (declaracion -> tipo_dato ID PYC .)
    FLOFOAFAT       reduce using rule 43 (declaracion -> tipo_dato ID PYC .)
    PA              reduce using rule 43 (declaracion -> tipo_dato ID PYC .)


state 132

    (44) declaracion -> tipo_dato ID ASG . ID operacion_matematica ID PYC
    (45) declaracion -> tipo_dato ID ASG . dato PYC
    (82) dato -> . INT
    (83) dato -> . CHAR
    (84) dato -> . TRUFUEFE
    (85) dato -> . FAFALSEFE
    (86) dato -> . PCC
    (87) dato -> . REAL

    ID              shift and go to state 161
    INT             shift and go to state 163
    CHAR            shift and go to state 164
    TRUFUEFE        shift and go to state 165
    FAFALSEFE       shift and go to state 166
    PCC             shift and go to state 167
    REAL            shift and go to state 168

    dato                           shift and go to state 162

state 133

    (55) asignar_estructuras -> ID PUNTO ID . ASG dato

    ASG             shift and go to state 169


state 134

    (49) declaracion_error -> ID ASG ID . operacion_matematica ID PYC
    (81) valores -> ID .
    (70) operacion_matematica -> . SUM
    (71) operacion_matematica -> . RES
    (72) operacion_matematica -> . MUL
    (73) operacion_matematica -> . DIV
    (74) operacion_matematica -> . RED
    (75) operacion_matematica -> . POT

    PYC             reduce using rule 81 (valores -> ID .)
    SUM             shift and go to state 171
    RES             shift and go to state 172
    MUL             shift and go to state 173
    DIV             shift and go to state 174
    RED             shift and go to state 175
    POT             shift and go to state 176

    operacion_matematica           shift and go to state 170

state 135

    (50) declaracion_error -> ID ASG valores . PYC

    PYC             shift and go to state 177


state 136

    (54) asignar_array -> ID dimensiones ASG . dato PYC
    (82) dato -> . INT
    (83) dato -> . CHAR
    (84) dato -> . TRUFUEFE
    (85) dato -> . FAFALSEFE
    (86) dato -> . PCC
    (87) dato -> . REAL

    INT             shift and go to state 163
    CHAR            shift and go to state 164
    TRUFUEFE        shift and go to state 165
    FAFALSEFE       shift and go to state 166
    PCC             shift and go to state 167
    REAL            shift and go to state 168

    dato                           shift and go to state 178

state 137

    (56) funcion -> ID PA valores . PC PYC
    (58) funcion -> ID PA valores . COMA valores PC PYC

    PC              shift and go to state 179
    COMA            shift and go to state 180


state 138

    (57) funcion -> ID PA PC . PYC

    PYC             shift and go to state 181


state 139

    (51) dimensiones -> dimension dimensiones .

    ASG             reduce using rule 51 (dimensiones -> dimension dimensiones .)
    PYC             reduce using rule 51 (dimensiones -> dimension dimensiones .)


state 140

    (53) dimension -> CA INT . CC

    CC              shift and go to state 182


state 141

    (46) declaracion -> AFARRAFAY ID dimensiones . PYC

    PYC             shift and go to state 183


state 142

    (59) print -> PRIFINT PA ID . PC PYC

    PC              shift and go to state 184


state 143

    (60) input -> IFINPUFUT PA ID . PC PYC

    PC              shift and go to state 185


state 144

    (61) declaracion_while -> WHIFILEFE PA condicion . PC LLAVEA bloque_codigo LLAVEC
    (64) declaracion_while_error -> WHIFILEFE PA condicion . PC bloque_codigo LLAVEC
    (65) declaracion_while_error -> WHIFILEFE PA condicion . PC LLAVEA bloque_codigo

    PC              shift and go to state 186


state 145

    (11) declarar_estructuras_error -> STRUFUCT ID LLAVEA ID PYC ID PYC LLAVEC .

    IFINT           reduce using rule 11 (declarar_estructuras_error -> STRUFUCT ID LLAVEA ID PYC ID PYC LLAVEC .)
    FUNCTION        reduce using rule 11 (declarar_estructuras_error -> STRUFUCT ID LLAVEA ID PYC ID PYC LLAVEC .)
    MAFAIFIN        reduce using rule 11 (declarar_estructuras_error -> STRUFUCT ID LLAVEA ID PYC ID PYC LLAVEC .)


state 146

    (5) declarar_estructuras -> STRUFUCT ID LLAVEA tipo_dato ID PYC tipo_dato ID . PYC LLAVEC

    PYC             shift and go to state 187


state 147

    (9) declarar_estructuras_error -> STRUFUCT ID LLAVEA tipo_dato ID PYC tipo_dato PYC . LLAVEC

    LLAVEC          shift and go to state 188


state 148

    (8) declarar_estructuras_error -> STRUFUCT ID LLAVEA tipo_dato PYC tipo_dato ID PYC . LLAVEC

    LLAVEC          shift and go to state 189


state 149

    (10) declarar_estructuras_error -> STRUFUCT ID LLAVEA tipo_dato PYC tipo_dato PYC LLAVEC .

    IFINT           reduce using rule 10 (declarar_estructuras_error -> STRUFUCT ID LLAVEA tipo_dato PYC tipo_dato PYC LLAVEC .)
    FUNCTION        reduce using rule 10 (declarar_estructuras_error -> STRUFUCT ID LLAVEA tipo_dato PYC tipo_dato PYC LLAVEC .)
    MAFAIFIN        reduce using rule 10 (declarar_estructuras_error -> STRUFUCT ID LLAVEA tipo_dato PYC tipo_dato PYC LLAVEC .)


state 150

    (7) declarar_estructuras_error -> ID LLAVEA tipo_dato ID PYC tipo_dato ID PYC . LLAVEC

    LLAVEC          shift and go to state 190


state 151

    (12) declarar_funciones -> FUNCTION tipo_dato ID PA tipo_dato ID PC LLAVEA . bloque_codigo REFETUFURN ID PYC LLAVEC
    (29) bloque_codigo -> . declarar_if bloque_codigo
    (30) bloque_codigo -> . declaracion bloque_codigo
    (31) bloque_codigo -> . asignar_estructuras bloque_codigo
    (32) bloque_codigo -> . asignar_array bloque_codigo
    (33) bloque_codigo -> . funcion bloque_codigo
    (34) bloque_codigo -> . print bloque_codigo
    (35) bloque_codigo -> . input bloque_codigo
    (36) bloque_codigo -> . declaracion_while bloque_codigo
    (37) bloque_codigo -> . VACIO
    (38) declarar_if -> . IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC
    (39) declarar_if -> . IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE LLAVEA bloque_codigo LLAVEC
    (40) declarar_if -> . declarar_if_error_llave
    (43) declaracion -> . tipo_dato ID PYC
    (44) declaracion -> . tipo_dato ID ASG ID operacion_matematica ID PYC
    (45) declaracion -> . tipo_dato ID ASG dato PYC
    (46) declaracion -> . AFARRAFAY ID dimensiones PYC
    (47) declaracion -> . declaracion_error
    (55) asignar_estructuras -> . ID PUNTO ID ASG dato
    (54) asignar_array -> . ID dimensiones ASG dato PYC
    (56) funcion -> . ID PA valores PC PYC
    (57) funcion -> . ID PA PC PYC
    (58) funcion -> . ID PA valores COMA valores PC PYC
    (59) print -> . PRIFINT PA ID PC PYC
    (60) input -> . IFINPUFUT PA ID PC PYC
    (61) declaracion_while -> . WHIFILEFE PA condicion PC LLAVEA bloque_codigo LLAVEC
    (62) declaracion_while -> . declaracion_while_error
    (41) declarar_if_error_llave -> . IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE LLAVEA bloque_codigo
    (42) declarar_if_error_llave -> . IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE bloque_codigo LLAVEC
    (21) tipo_dato -> . IFINT
    (22) tipo_dato -> . STRIFING
    (23) tipo_dato -> . AFARRAFAY
    (24) tipo_dato -> . STRUFUCT
    (25) tipo_dato -> . VOFOIFID
    (26) tipo_dato -> . CHAFAR
    (27) tipo_dato -> . BOFOOFOL
    (28) tipo_dato -> . FLOFOAFAT
    (48) declaracion_error -> . ID PYC
    (49) declaracion_error -> . ID ASG ID operacion_matematica ID PYC
    (50) declaracion_error -> . ID ASG valores PYC
    (63) declaracion_while_error -> . PA condicion PC LLAVEA bloque_codigo LLAVEC
    (64) declaracion_while_error -> . WHIFILEFE PA condicion PC bloque_codigo LLAVEC
    (65) declaracion_while_error -> . WHIFILEFE PA condicion PC LLAVEA bloque_codigo

    VACIO           shift and go to state 57
    IFIF            shift and go to state 58
    AFARRAFAY       shift and go to state 62
    ID              shift and go to state 61
    PRIFINT         shift and go to state 64
    IFINPUFUT       shift and go to state 65
    WHIFILEFE       shift and go to state 66
    IFINT           shift and go to state 18
    STRIFING        shift and go to state 19
    STRUFUCT        shift and go to state 21
    VOFOIFID        shift and go to state 22
    CHAFAR          shift and go to state 23
    BOFOOFOL        shift and go to state 24
    FLOFOAFAT       shift and go to state 25
    PA              shift and go to state 47

    tipo_dato                      shift and go to state 60
    bloque_codigo                  shift and go to state 191
    declarar_if                    shift and go to state 49
    declaracion                    shift and go to state 50
    asignar_estructuras            shift and go to state 51
    asignar_array                  shift and go to state 52
    funcion                        shift and go to state 53
    print                          shift and go to state 54
    input                          shift and go to state 55
    declaracion_while              shift and go to state 56
    declarar_if_error_llave        shift and go to state 59
    declaracion_error              shift and go to state 63
    declaracion_while_error        shift and go to state 67

state 152

    (15) declarar_funciones -> FUNCTION tipo_dato ID PA tipo_dato ID COMA tipo_dato . ID PC LLAVEA bloque_codigo REFETUFURN ID PYC LLAVEC

    ID              shift and go to state 192


state 153

    (13) declarar_funciones -> FUNCTION tipo_dato ID PA PC LLAVEA bloque_codigo REFETUFURN . ID PYC LLAVEC
    (14) declarar_funciones -> FUNCTION tipo_dato ID PA PC LLAVEA bloque_codigo REFETUFURN . PYC LLAVEC

    ID              shift and go to state 193
    PYC             shift and go to state 194


state 154

    (16) declarar_main -> IFINT MAFAIFIN PA PC LLAVEA bloque_codigo REFETUFURN PYC . LLAVEC

    LLAVEC          shift and go to state 195


state 155

    (63) declaracion_while_error -> PA condicion PC LLAVEA . bloque_codigo LLAVEC
    (29) bloque_codigo -> . declarar_if bloque_codigo
    (30) bloque_codigo -> . declaracion bloque_codigo
    (31) bloque_codigo -> . asignar_estructuras bloque_codigo
    (32) bloque_codigo -> . asignar_array bloque_codigo
    (33) bloque_codigo -> . funcion bloque_codigo
    (34) bloque_codigo -> . print bloque_codigo
    (35) bloque_codigo -> . input bloque_codigo
    (36) bloque_codigo -> . declaracion_while bloque_codigo
    (37) bloque_codigo -> . VACIO
    (38) declarar_if -> . IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC
    (39) declarar_if -> . IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE LLAVEA bloque_codigo LLAVEC
    (40) declarar_if -> . declarar_if_error_llave
    (43) declaracion -> . tipo_dato ID PYC
    (44) declaracion -> . tipo_dato ID ASG ID operacion_matematica ID PYC
    (45) declaracion -> . tipo_dato ID ASG dato PYC
    (46) declaracion -> . AFARRAFAY ID dimensiones PYC
    (47) declaracion -> . declaracion_error
    (55) asignar_estructuras -> . ID PUNTO ID ASG dato
    (54) asignar_array -> . ID dimensiones ASG dato PYC
    (56) funcion -> . ID PA valores PC PYC
    (57) funcion -> . ID PA PC PYC
    (58) funcion -> . ID PA valores COMA valores PC PYC
    (59) print -> . PRIFINT PA ID PC PYC
    (60) input -> . IFINPUFUT PA ID PC PYC
    (61) declaracion_while -> . WHIFILEFE PA condicion PC LLAVEA bloque_codigo LLAVEC
    (62) declaracion_while -> . declaracion_while_error
    (41) declarar_if_error_llave -> . IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE LLAVEA bloque_codigo
    (42) declarar_if_error_llave -> . IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE bloque_codigo LLAVEC
    (21) tipo_dato -> . IFINT
    (22) tipo_dato -> . STRIFING
    (23) tipo_dato -> . AFARRAFAY
    (24) tipo_dato -> . STRUFUCT
    (25) tipo_dato -> . VOFOIFID
    (26) tipo_dato -> . CHAFAR
    (27) tipo_dato -> . BOFOOFOL
    (28) tipo_dato -> . FLOFOAFAT
    (48) declaracion_error -> . ID PYC
    (49) declaracion_error -> . ID ASG ID operacion_matematica ID PYC
    (50) declaracion_error -> . ID ASG valores PYC
    (63) declaracion_while_error -> . PA condicion PC LLAVEA bloque_codigo LLAVEC
    (64) declaracion_while_error -> . WHIFILEFE PA condicion PC bloque_codigo LLAVEC
    (65) declaracion_while_error -> . WHIFILEFE PA condicion PC LLAVEA bloque_codigo

    VACIO           shift and go to state 57
    IFIF            shift and go to state 58
    AFARRAFAY       shift and go to state 62
    ID              shift and go to state 61
    PRIFINT         shift and go to state 64
    IFINPUFUT       shift and go to state 65
    WHIFILEFE       shift and go to state 66
    IFINT           shift and go to state 18
    STRIFING        shift and go to state 19
    STRUFUCT        shift and go to state 21
    VOFOIFID        shift and go to state 22
    CHAFAR          shift and go to state 23
    BOFOOFOL        shift and go to state 24
    FLOFOAFAT       shift and go to state 25
    PA              shift and go to state 47

    bloque_codigo                  shift and go to state 196
    declarar_if                    shift and go to state 49
    declaracion                    shift and go to state 50
    asignar_estructuras            shift and go to state 51
    asignar_array                  shift and go to state 52
    funcion                        shift and go to state 53
    print                          shift and go to state 54
    input                          shift and go to state 55
    declaracion_while              shift and go to state 56
    declarar_if_error_llave        shift and go to state 59
    tipo_dato                      shift and go to state 60
    declaracion_error              shift and go to state 63
    declaracion_while_error        shift and go to state 67

state 156

    (66) condicion -> valores operadores valores .

    PC              reduce using rule 66 (condicion -> valores operadores valores .)


state 157

    (68) condicion -> valores operadores_logicos condicion .

    PC              reduce using rule 68 (condicion -> valores operadores_logicos condicion .)


state 158

    (69) condicion -> valores NOT valores .

    PC              reduce using rule 69 (condicion -> valores NOT valores .)


state 159

    (18) declarar_main_error -> MAFAIFIN PA PC LLAVEA bloque_codigo REFETUFURN PYC LLAVEC .

    $end            reduce using rule 18 (declarar_main_error -> MAFAIFIN PA PC LLAVEA bloque_codigo REFETUFURN PYC LLAVEC .)


state 160

    (38) declarar_if -> IFIF PA condicion PC . LLAVEA bloque_codigo LLAVEC
    (39) declarar_if -> IFIF PA condicion PC . LLAVEA bloque_codigo LLAVEC EFELSEFE LLAVEA bloque_codigo LLAVEC
    (41) declarar_if_error_llave -> IFIF PA condicion PC . LLAVEA bloque_codigo LLAVEC EFELSEFE LLAVEA bloque_codigo
    (42) declarar_if_error_llave -> IFIF PA condicion PC . LLAVEA bloque_codigo LLAVEC EFELSEFE bloque_codigo LLAVEC

    LLAVEA          shift and go to state 197


state 161

    (44) declaracion -> tipo_dato ID ASG ID . operacion_matematica ID PYC
    (70) operacion_matematica -> . SUM
    (71) operacion_matematica -> . RES
    (72) operacion_matematica -> . MUL
    (73) operacion_matematica -> . DIV
    (74) operacion_matematica -> . RED
    (75) operacion_matematica -> . POT

    SUM             shift and go to state 171
    RES             shift and go to state 172
    MUL             shift and go to state 173
    DIV             shift and go to state 174
    RED             shift and go to state 175
    POT             shift and go to state 176

    operacion_matematica           shift and go to state 198

state 162

    (45) declaracion -> tipo_dato ID ASG dato . PYC

    PYC             shift and go to state 199


state 163

    (82) dato -> INT .

    PYC             reduce using rule 82 (dato -> INT .)
    VACIO           reduce using rule 82 (dato -> INT .)
    IFIF            reduce using rule 82 (dato -> INT .)
    AFARRAFAY       reduce using rule 82 (dato -> INT .)
    ID              reduce using rule 82 (dato -> INT .)
    PRIFINT         reduce using rule 82 (dato -> INT .)
    IFINPUFUT       reduce using rule 82 (dato -> INT .)
    WHIFILEFE       reduce using rule 82 (dato -> INT .)
    IFINT           reduce using rule 82 (dato -> INT .)
    STRIFING        reduce using rule 82 (dato -> INT .)
    STRUFUCT        reduce using rule 82 (dato -> INT .)
    VOFOIFID        reduce using rule 82 (dato -> INT .)
    CHAFAR          reduce using rule 82 (dato -> INT .)
    BOFOOFOL        reduce using rule 82 (dato -> INT .)
    FLOFOAFAT       reduce using rule 82 (dato -> INT .)
    PA              reduce using rule 82 (dato -> INT .)


state 164

    (83) dato -> CHAR .

    PYC             reduce using rule 83 (dato -> CHAR .)
    VACIO           reduce using rule 83 (dato -> CHAR .)
    IFIF            reduce using rule 83 (dato -> CHAR .)
    AFARRAFAY       reduce using rule 83 (dato -> CHAR .)
    ID              reduce using rule 83 (dato -> CHAR .)
    PRIFINT         reduce using rule 83 (dato -> CHAR .)
    IFINPUFUT       reduce using rule 83 (dato -> CHAR .)
    WHIFILEFE       reduce using rule 83 (dato -> CHAR .)
    IFINT           reduce using rule 83 (dato -> CHAR .)
    STRIFING        reduce using rule 83 (dato -> CHAR .)
    STRUFUCT        reduce using rule 83 (dato -> CHAR .)
    VOFOIFID        reduce using rule 83 (dato -> CHAR .)
    CHAFAR          reduce using rule 83 (dato -> CHAR .)
    BOFOOFOL        reduce using rule 83 (dato -> CHAR .)
    FLOFOAFAT       reduce using rule 83 (dato -> CHAR .)
    PA              reduce using rule 83 (dato -> CHAR .)


state 165

    (84) dato -> TRUFUEFE .

    PYC             reduce using rule 84 (dato -> TRUFUEFE .)
    VACIO           reduce using rule 84 (dato -> TRUFUEFE .)
    IFIF            reduce using rule 84 (dato -> TRUFUEFE .)
    AFARRAFAY       reduce using rule 84 (dato -> TRUFUEFE .)
    ID              reduce using rule 84 (dato -> TRUFUEFE .)
    PRIFINT         reduce using rule 84 (dato -> TRUFUEFE .)
    IFINPUFUT       reduce using rule 84 (dato -> TRUFUEFE .)
    WHIFILEFE       reduce using rule 84 (dato -> TRUFUEFE .)
    IFINT           reduce using rule 84 (dato -> TRUFUEFE .)
    STRIFING        reduce using rule 84 (dato -> TRUFUEFE .)
    STRUFUCT        reduce using rule 84 (dato -> TRUFUEFE .)
    VOFOIFID        reduce using rule 84 (dato -> TRUFUEFE .)
    CHAFAR          reduce using rule 84 (dato -> TRUFUEFE .)
    BOFOOFOL        reduce using rule 84 (dato -> TRUFUEFE .)
    FLOFOAFAT       reduce using rule 84 (dato -> TRUFUEFE .)
    PA              reduce using rule 84 (dato -> TRUFUEFE .)


state 166

    (85) dato -> FAFALSEFE .

    PYC             reduce using rule 85 (dato -> FAFALSEFE .)
    VACIO           reduce using rule 85 (dato -> FAFALSEFE .)
    IFIF            reduce using rule 85 (dato -> FAFALSEFE .)
    AFARRAFAY       reduce using rule 85 (dato -> FAFALSEFE .)
    ID              reduce using rule 85 (dato -> FAFALSEFE .)
    PRIFINT         reduce using rule 85 (dato -> FAFALSEFE .)
    IFINPUFUT       reduce using rule 85 (dato -> FAFALSEFE .)
    WHIFILEFE       reduce using rule 85 (dato -> FAFALSEFE .)
    IFINT           reduce using rule 85 (dato -> FAFALSEFE .)
    STRIFING        reduce using rule 85 (dato -> FAFALSEFE .)
    STRUFUCT        reduce using rule 85 (dato -> FAFALSEFE .)
    VOFOIFID        reduce using rule 85 (dato -> FAFALSEFE .)
    CHAFAR          reduce using rule 85 (dato -> FAFALSEFE .)
    BOFOOFOL        reduce using rule 85 (dato -> FAFALSEFE .)
    FLOFOAFAT       reduce using rule 85 (dato -> FAFALSEFE .)
    PA              reduce using rule 85 (dato -> FAFALSEFE .)


state 167

    (86) dato -> PCC .

    PYC             reduce using rule 86 (dato -> PCC .)
    VACIO           reduce using rule 86 (dato -> PCC .)
    IFIF            reduce using rule 86 (dato -> PCC .)
    AFARRAFAY       reduce using rule 86 (dato -> PCC .)
    ID              reduce using rule 86 (dato -> PCC .)
    PRIFINT         reduce using rule 86 (dato -> PCC .)
    IFINPUFUT       reduce using rule 86 (dato -> PCC .)
    WHIFILEFE       reduce using rule 86 (dato -> PCC .)
    IFINT           reduce using rule 86 (dato -> PCC .)
    STRIFING        reduce using rule 86 (dato -> PCC .)
    STRUFUCT        reduce using rule 86 (dato -> PCC .)
    VOFOIFID        reduce using rule 86 (dato -> PCC .)
    CHAFAR          reduce using rule 86 (dato -> PCC .)
    BOFOOFOL        reduce using rule 86 (dato -> PCC .)
    FLOFOAFAT       reduce using rule 86 (dato -> PCC .)
    PA              reduce using rule 86 (dato -> PCC .)


state 168

    (87) dato -> REAL .

    PYC             reduce using rule 87 (dato -> REAL .)
    VACIO           reduce using rule 87 (dato -> REAL .)
    IFIF            reduce using rule 87 (dato -> REAL .)
    AFARRAFAY       reduce using rule 87 (dato -> REAL .)
    ID              reduce using rule 87 (dato -> REAL .)
    PRIFINT         reduce using rule 87 (dato -> REAL .)
    IFINPUFUT       reduce using rule 87 (dato -> REAL .)
    WHIFILEFE       reduce using rule 87 (dato -> REAL .)
    IFINT           reduce using rule 87 (dato -> REAL .)
    STRIFING        reduce using rule 87 (dato -> REAL .)
    STRUFUCT        reduce using rule 87 (dato -> REAL .)
    VOFOIFID        reduce using rule 87 (dato -> REAL .)
    CHAFAR          reduce using rule 87 (dato -> REAL .)
    BOFOOFOL        reduce using rule 87 (dato -> REAL .)
    FLOFOAFAT       reduce using rule 87 (dato -> REAL .)
    PA              reduce using rule 87 (dato -> REAL .)


state 169

    (55) asignar_estructuras -> ID PUNTO ID ASG . dato
    (82) dato -> . INT
    (83) dato -> . CHAR
    (84) dato -> . TRUFUEFE
    (85) dato -> . FAFALSEFE
    (86) dato -> . PCC
    (87) dato -> . REAL

    INT             shift and go to state 163
    CHAR            shift and go to state 164
    TRUFUEFE        shift and go to state 165
    FAFALSEFE       shift and go to state 166
    PCC             shift and go to state 167
    REAL            shift and go to state 168

    dato                           shift and go to state 200

state 170

    (49) declaracion_error -> ID ASG ID operacion_matematica . ID PYC

    ID              shift and go to state 201


state 171

    (70) operacion_matematica -> SUM .

    ID              reduce using rule 70 (operacion_matematica -> SUM .)


state 172

    (71) operacion_matematica -> RES .

    ID              reduce using rule 71 (operacion_matematica -> RES .)


state 173

    (72) operacion_matematica -> MUL .

    ID              reduce using rule 72 (operacion_matematica -> MUL .)


state 174

    (73) operacion_matematica -> DIV .

    ID              reduce using rule 73 (operacion_matematica -> DIV .)


state 175

    (74) operacion_matematica -> RED .

    ID              reduce using rule 74 (operacion_matematica -> RED .)


state 176

    (75) operacion_matematica -> POT .

    ID              reduce using rule 75 (operacion_matematica -> POT .)


state 177

    (50) declaracion_error -> ID ASG valores PYC .

    VACIO           reduce using rule 50 (declaracion_error -> ID ASG valores PYC .)
    IFIF            reduce using rule 50 (declaracion_error -> ID ASG valores PYC .)
    AFARRAFAY       reduce using rule 50 (declaracion_error -> ID ASG valores PYC .)
    ID              reduce using rule 50 (declaracion_error -> ID ASG valores PYC .)
    PRIFINT         reduce using rule 50 (declaracion_error -> ID ASG valores PYC .)
    IFINPUFUT       reduce using rule 50 (declaracion_error -> ID ASG valores PYC .)
    WHIFILEFE       reduce using rule 50 (declaracion_error -> ID ASG valores PYC .)
    IFINT           reduce using rule 50 (declaracion_error -> ID ASG valores PYC .)
    STRIFING        reduce using rule 50 (declaracion_error -> ID ASG valores PYC .)
    STRUFUCT        reduce using rule 50 (declaracion_error -> ID ASG valores PYC .)
    VOFOIFID        reduce using rule 50 (declaracion_error -> ID ASG valores PYC .)
    CHAFAR          reduce using rule 50 (declaracion_error -> ID ASG valores PYC .)
    BOFOOFOL        reduce using rule 50 (declaracion_error -> ID ASG valores PYC .)
    FLOFOAFAT       reduce using rule 50 (declaracion_error -> ID ASG valores PYC .)
    PA              reduce using rule 50 (declaracion_error -> ID ASG valores PYC .)


state 178

    (54) asignar_array -> ID dimensiones ASG dato . PYC

    PYC             shift and go to state 202


state 179

    (56) funcion -> ID PA valores PC . PYC

    PYC             shift and go to state 203


state 180

    (58) funcion -> ID PA valores COMA . valores PC PYC
    (76) valores -> . INT
    (77) valores -> . CHAR
    (78) valores -> . TRUFUEFE
    (79) valores -> . FAFALSEFE
    (80) valores -> . PCC
    (81) valores -> . ID

    INT             shift and go to state 77
    CHAR            shift and go to state 78
    TRUFUEFE        shift and go to state 79
    FAFALSEFE       shift and go to state 80
    PCC             shift and go to state 81
    ID              shift and go to state 82

    valores                        shift and go to state 204

state 181

    (57) funcion -> ID PA PC PYC .

    VACIO           reduce using rule 57 (funcion -> ID PA PC PYC .)
    IFIF            reduce using rule 57 (funcion -> ID PA PC PYC .)
    AFARRAFAY       reduce using rule 57 (funcion -> ID PA PC PYC .)
    ID              reduce using rule 57 (funcion -> ID PA PC PYC .)
    PRIFINT         reduce using rule 57 (funcion -> ID PA PC PYC .)
    IFINPUFUT       reduce using rule 57 (funcion -> ID PA PC PYC .)
    WHIFILEFE       reduce using rule 57 (funcion -> ID PA PC PYC .)
    IFINT           reduce using rule 57 (funcion -> ID PA PC PYC .)
    STRIFING        reduce using rule 57 (funcion -> ID PA PC PYC .)
    STRUFUCT        reduce using rule 57 (funcion -> ID PA PC PYC .)
    VOFOIFID        reduce using rule 57 (funcion -> ID PA PC PYC .)
    CHAFAR          reduce using rule 57 (funcion -> ID PA PC PYC .)
    BOFOOFOL        reduce using rule 57 (funcion -> ID PA PC PYC .)
    FLOFOAFAT       reduce using rule 57 (funcion -> ID PA PC PYC .)
    PA              reduce using rule 57 (funcion -> ID PA PC PYC .)


state 182

    (53) dimension -> CA INT CC .

    VACIO           reduce using rule 53 (dimension -> CA INT CC .)
    CA              reduce using rule 53 (dimension -> CA INT CC .)


state 183

    (46) declaracion -> AFARRAFAY ID dimensiones PYC .

    VACIO           reduce using rule 46 (declaracion -> AFARRAFAY ID dimensiones PYC .)
    IFIF            reduce using rule 46 (declaracion -> AFARRAFAY ID dimensiones PYC .)
    AFARRAFAY       reduce using rule 46 (declaracion -> AFARRAFAY ID dimensiones PYC .)
    ID              reduce using rule 46 (declaracion -> AFARRAFAY ID dimensiones PYC .)
    PRIFINT         reduce using rule 46 (declaracion -> AFARRAFAY ID dimensiones PYC .)
    IFINPUFUT       reduce using rule 46 (declaracion -> AFARRAFAY ID dimensiones PYC .)
    WHIFILEFE       reduce using rule 46 (declaracion -> AFARRAFAY ID dimensiones PYC .)
    IFINT           reduce using rule 46 (declaracion -> AFARRAFAY ID dimensiones PYC .)
    STRIFING        reduce using rule 46 (declaracion -> AFARRAFAY ID dimensiones PYC .)
    STRUFUCT        reduce using rule 46 (declaracion -> AFARRAFAY ID dimensiones PYC .)
    VOFOIFID        reduce using rule 46 (declaracion -> AFARRAFAY ID dimensiones PYC .)
    CHAFAR          reduce using rule 46 (declaracion -> AFARRAFAY ID dimensiones PYC .)
    BOFOOFOL        reduce using rule 46 (declaracion -> AFARRAFAY ID dimensiones PYC .)
    FLOFOAFAT       reduce using rule 46 (declaracion -> AFARRAFAY ID dimensiones PYC .)
    PA              reduce using rule 46 (declaracion -> AFARRAFAY ID dimensiones PYC .)


state 184

    (59) print -> PRIFINT PA ID PC . PYC

    PYC             shift and go to state 205


state 185

    (60) input -> IFINPUFUT PA ID PC . PYC

    PYC             shift and go to state 206


state 186

    (61) declaracion_while -> WHIFILEFE PA condicion PC . LLAVEA bloque_codigo LLAVEC
    (64) declaracion_while_error -> WHIFILEFE PA condicion PC . bloque_codigo LLAVEC
    (65) declaracion_while_error -> WHIFILEFE PA condicion PC . LLAVEA bloque_codigo
    (29) bloque_codigo -> . declarar_if bloque_codigo
    (30) bloque_codigo -> . declaracion bloque_codigo
    (31) bloque_codigo -> . asignar_estructuras bloque_codigo
    (32) bloque_codigo -> . asignar_array bloque_codigo
    (33) bloque_codigo -> . funcion bloque_codigo
    (34) bloque_codigo -> . print bloque_codigo
    (35) bloque_codigo -> . input bloque_codigo
    (36) bloque_codigo -> . declaracion_while bloque_codigo
    (37) bloque_codigo -> . VACIO
    (38) declarar_if -> . IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC
    (39) declarar_if -> . IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE LLAVEA bloque_codigo LLAVEC
    (40) declarar_if -> . declarar_if_error_llave
    (43) declaracion -> . tipo_dato ID PYC
    (44) declaracion -> . tipo_dato ID ASG ID operacion_matematica ID PYC
    (45) declaracion -> . tipo_dato ID ASG dato PYC
    (46) declaracion -> . AFARRAFAY ID dimensiones PYC
    (47) declaracion -> . declaracion_error
    (55) asignar_estructuras -> . ID PUNTO ID ASG dato
    (54) asignar_array -> . ID dimensiones ASG dato PYC
    (56) funcion -> . ID PA valores PC PYC
    (57) funcion -> . ID PA PC PYC
    (58) funcion -> . ID PA valores COMA valores PC PYC
    (59) print -> . PRIFINT PA ID PC PYC
    (60) input -> . IFINPUFUT PA ID PC PYC
    (61) declaracion_while -> . WHIFILEFE PA condicion PC LLAVEA bloque_codigo LLAVEC
    (62) declaracion_while -> . declaracion_while_error
    (41) declarar_if_error_llave -> . IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE LLAVEA bloque_codigo
    (42) declarar_if_error_llave -> . IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE bloque_codigo LLAVEC
    (21) tipo_dato -> . IFINT
    (22) tipo_dato -> . STRIFING
    (23) tipo_dato -> . AFARRAFAY
    (24) tipo_dato -> . STRUFUCT
    (25) tipo_dato -> . VOFOIFID
    (26) tipo_dato -> . CHAFAR
    (27) tipo_dato -> . BOFOOFOL
    (28) tipo_dato -> . FLOFOAFAT
    (48) declaracion_error -> . ID PYC
    (49) declaracion_error -> . ID ASG ID operacion_matematica ID PYC
    (50) declaracion_error -> . ID ASG valores PYC
    (63) declaracion_while_error -> . PA condicion PC LLAVEA bloque_codigo LLAVEC
    (64) declaracion_while_error -> . WHIFILEFE PA condicion PC bloque_codigo LLAVEC
    (65) declaracion_while_error -> . WHIFILEFE PA condicion PC LLAVEA bloque_codigo

    LLAVEA          shift and go to state 207
    VACIO           shift and go to state 57
    IFIF            shift and go to state 58
    AFARRAFAY       shift and go to state 62
    ID              shift and go to state 61
    PRIFINT         shift and go to state 64
    IFINPUFUT       shift and go to state 65
    WHIFILEFE       shift and go to state 66
    IFINT           shift and go to state 18
    STRIFING        shift and go to state 19
    STRUFUCT        shift and go to state 21
    VOFOIFID        shift and go to state 22
    CHAFAR          shift and go to state 23
    BOFOOFOL        shift and go to state 24
    FLOFOAFAT       shift and go to state 25
    PA              shift and go to state 47

    bloque_codigo                  shift and go to state 208
    declarar_if                    shift and go to state 49
    declaracion                    shift and go to state 50
    asignar_estructuras            shift and go to state 51
    asignar_array                  shift and go to state 52
    funcion                        shift and go to state 53
    print                          shift and go to state 54
    input                          shift and go to state 55
    declaracion_while              shift and go to state 56
    declarar_if_error_llave        shift and go to state 59
    tipo_dato                      shift and go to state 60
    declaracion_error              shift and go to state 63
    declaracion_while_error        shift and go to state 67

state 187

    (5) declarar_estructuras -> STRUFUCT ID LLAVEA tipo_dato ID PYC tipo_dato ID PYC . LLAVEC

    LLAVEC          shift and go to state 209


state 188

    (9) declarar_estructuras_error -> STRUFUCT ID LLAVEA tipo_dato ID PYC tipo_dato PYC LLAVEC .

    IFINT           reduce using rule 9 (declarar_estructuras_error -> STRUFUCT ID LLAVEA tipo_dato ID PYC tipo_dato PYC LLAVEC .)
    FUNCTION        reduce using rule 9 (declarar_estructuras_error -> STRUFUCT ID LLAVEA tipo_dato ID PYC tipo_dato PYC LLAVEC .)
    MAFAIFIN        reduce using rule 9 (declarar_estructuras_error -> STRUFUCT ID LLAVEA tipo_dato ID PYC tipo_dato PYC LLAVEC .)


state 189

    (8) declarar_estructuras_error -> STRUFUCT ID LLAVEA tipo_dato PYC tipo_dato ID PYC LLAVEC .

    IFINT           reduce using rule 8 (declarar_estructuras_error -> STRUFUCT ID LLAVEA tipo_dato PYC tipo_dato ID PYC LLAVEC .)
    FUNCTION        reduce using rule 8 (declarar_estructuras_error -> STRUFUCT ID LLAVEA tipo_dato PYC tipo_dato ID PYC LLAVEC .)
    MAFAIFIN        reduce using rule 8 (declarar_estructuras_error -> STRUFUCT ID LLAVEA tipo_dato PYC tipo_dato ID PYC LLAVEC .)


state 190

    (7) declarar_estructuras_error -> ID LLAVEA tipo_dato ID PYC tipo_dato ID PYC LLAVEC .

    IFINT           reduce using rule 7 (declarar_estructuras_error -> ID LLAVEA tipo_dato ID PYC tipo_dato ID PYC LLAVEC .)
    FUNCTION        reduce using rule 7 (declarar_estructuras_error -> ID LLAVEA tipo_dato ID PYC tipo_dato ID PYC LLAVEC .)
    MAFAIFIN        reduce using rule 7 (declarar_estructuras_error -> ID LLAVEA tipo_dato ID PYC tipo_dato ID PYC LLAVEC .)


state 191

    (12) declarar_funciones -> FUNCTION tipo_dato ID PA tipo_dato ID PC LLAVEA bloque_codigo . REFETUFURN ID PYC LLAVEC

    REFETUFURN      shift and go to state 210


state 192

    (15) declarar_funciones -> FUNCTION tipo_dato ID PA tipo_dato ID COMA tipo_dato ID . PC LLAVEA bloque_codigo REFETUFURN ID PYC LLAVEC

    PC              shift and go to state 211


state 193

    (13) declarar_funciones -> FUNCTION tipo_dato ID PA PC LLAVEA bloque_codigo REFETUFURN ID . PYC LLAVEC

    PYC             shift and go to state 212


state 194

    (14) declarar_funciones -> FUNCTION tipo_dato ID PA PC LLAVEA bloque_codigo REFETUFURN PYC . LLAVEC

    LLAVEC          shift and go to state 213


state 195

    (16) declarar_main -> IFINT MAFAIFIN PA PC LLAVEA bloque_codigo REFETUFURN PYC LLAVEC .

    $end            reduce using rule 16 (declarar_main -> IFINT MAFAIFIN PA PC LLAVEA bloque_codigo REFETUFURN PYC LLAVEC .)


state 196

    (63) declaracion_while_error -> PA condicion PC LLAVEA bloque_codigo . LLAVEC

    LLAVEC          shift and go to state 214


state 197

    (38) declarar_if -> IFIF PA condicion PC LLAVEA . bloque_codigo LLAVEC
    (39) declarar_if -> IFIF PA condicion PC LLAVEA . bloque_codigo LLAVEC EFELSEFE LLAVEA bloque_codigo LLAVEC
    (41) declarar_if_error_llave -> IFIF PA condicion PC LLAVEA . bloque_codigo LLAVEC EFELSEFE LLAVEA bloque_codigo
    (42) declarar_if_error_llave -> IFIF PA condicion PC LLAVEA . bloque_codigo LLAVEC EFELSEFE bloque_codigo LLAVEC
    (29) bloque_codigo -> . declarar_if bloque_codigo
    (30) bloque_codigo -> . declaracion bloque_codigo
    (31) bloque_codigo -> . asignar_estructuras bloque_codigo
    (32) bloque_codigo -> . asignar_array bloque_codigo
    (33) bloque_codigo -> . funcion bloque_codigo
    (34) bloque_codigo -> . print bloque_codigo
    (35) bloque_codigo -> . input bloque_codigo
    (36) bloque_codigo -> . declaracion_while bloque_codigo
    (37) bloque_codigo -> . VACIO
    (38) declarar_if -> . IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC
    (39) declarar_if -> . IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE LLAVEA bloque_codigo LLAVEC
    (40) declarar_if -> . declarar_if_error_llave
    (43) declaracion -> . tipo_dato ID PYC
    (44) declaracion -> . tipo_dato ID ASG ID operacion_matematica ID PYC
    (45) declaracion -> . tipo_dato ID ASG dato PYC
    (46) declaracion -> . AFARRAFAY ID dimensiones PYC
    (47) declaracion -> . declaracion_error
    (55) asignar_estructuras -> . ID PUNTO ID ASG dato
    (54) asignar_array -> . ID dimensiones ASG dato PYC
    (56) funcion -> . ID PA valores PC PYC
    (57) funcion -> . ID PA PC PYC
    (58) funcion -> . ID PA valores COMA valores PC PYC
    (59) print -> . PRIFINT PA ID PC PYC
    (60) input -> . IFINPUFUT PA ID PC PYC
    (61) declaracion_while -> . WHIFILEFE PA condicion PC LLAVEA bloque_codigo LLAVEC
    (62) declaracion_while -> . declaracion_while_error
    (41) declarar_if_error_llave -> . IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE LLAVEA bloque_codigo
    (42) declarar_if_error_llave -> . IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE bloque_codigo LLAVEC
    (21) tipo_dato -> . IFINT
    (22) tipo_dato -> . STRIFING
    (23) tipo_dato -> . AFARRAFAY
    (24) tipo_dato -> . STRUFUCT
    (25) tipo_dato -> . VOFOIFID
    (26) tipo_dato -> . CHAFAR
    (27) tipo_dato -> . BOFOOFOL
    (28) tipo_dato -> . FLOFOAFAT
    (48) declaracion_error -> . ID PYC
    (49) declaracion_error -> . ID ASG ID operacion_matematica ID PYC
    (50) declaracion_error -> . ID ASG valores PYC
    (63) declaracion_while_error -> . PA condicion PC LLAVEA bloque_codigo LLAVEC
    (64) declaracion_while_error -> . WHIFILEFE PA condicion PC bloque_codigo LLAVEC
    (65) declaracion_while_error -> . WHIFILEFE PA condicion PC LLAVEA bloque_codigo

    VACIO           shift and go to state 57
    IFIF            shift and go to state 58
    AFARRAFAY       shift and go to state 62
    ID              shift and go to state 61
    PRIFINT         shift and go to state 64
    IFINPUFUT       shift and go to state 65
    WHIFILEFE       shift and go to state 66
    IFINT           shift and go to state 18
    STRIFING        shift and go to state 19
    STRUFUCT        shift and go to state 21
    VOFOIFID        shift and go to state 22
    CHAFAR          shift and go to state 23
    BOFOOFOL        shift and go to state 24
    FLOFOAFAT       shift and go to state 25
    PA              shift and go to state 47

    bloque_codigo                  shift and go to state 215
    declarar_if                    shift and go to state 49
    declaracion                    shift and go to state 50
    asignar_estructuras            shift and go to state 51
    asignar_array                  shift and go to state 52
    funcion                        shift and go to state 53
    print                          shift and go to state 54
    input                          shift and go to state 55
    declaracion_while              shift and go to state 56
    declarar_if_error_llave        shift and go to state 59
    tipo_dato                      shift and go to state 60
    declaracion_error              shift and go to state 63
    declaracion_while_error        shift and go to state 67

state 198

    (44) declaracion -> tipo_dato ID ASG ID operacion_matematica . ID PYC

    ID              shift and go to state 216


state 199

    (45) declaracion -> tipo_dato ID ASG dato PYC .

    VACIO           reduce using rule 45 (declaracion -> tipo_dato ID ASG dato PYC .)
    IFIF            reduce using rule 45 (declaracion -> tipo_dato ID ASG dato PYC .)
    AFARRAFAY       reduce using rule 45 (declaracion -> tipo_dato ID ASG dato PYC .)
    ID              reduce using rule 45 (declaracion -> tipo_dato ID ASG dato PYC .)
    PRIFINT         reduce using rule 45 (declaracion -> tipo_dato ID ASG dato PYC .)
    IFINPUFUT       reduce using rule 45 (declaracion -> tipo_dato ID ASG dato PYC .)
    WHIFILEFE       reduce using rule 45 (declaracion -> tipo_dato ID ASG dato PYC .)
    IFINT           reduce using rule 45 (declaracion -> tipo_dato ID ASG dato PYC .)
    STRIFING        reduce using rule 45 (declaracion -> tipo_dato ID ASG dato PYC .)
    STRUFUCT        reduce using rule 45 (declaracion -> tipo_dato ID ASG dato PYC .)
    VOFOIFID        reduce using rule 45 (declaracion -> tipo_dato ID ASG dato PYC .)
    CHAFAR          reduce using rule 45 (declaracion -> tipo_dato ID ASG dato PYC .)
    BOFOOFOL        reduce using rule 45 (declaracion -> tipo_dato ID ASG dato PYC .)
    FLOFOAFAT       reduce using rule 45 (declaracion -> tipo_dato ID ASG dato PYC .)
    PA              reduce using rule 45 (declaracion -> tipo_dato ID ASG dato PYC .)


state 200

    (55) asignar_estructuras -> ID PUNTO ID ASG dato .

    VACIO           reduce using rule 55 (asignar_estructuras -> ID PUNTO ID ASG dato .)
    IFIF            reduce using rule 55 (asignar_estructuras -> ID PUNTO ID ASG dato .)
    AFARRAFAY       reduce using rule 55 (asignar_estructuras -> ID PUNTO ID ASG dato .)
    ID              reduce using rule 55 (asignar_estructuras -> ID PUNTO ID ASG dato .)
    PRIFINT         reduce using rule 55 (asignar_estructuras -> ID PUNTO ID ASG dato .)
    IFINPUFUT       reduce using rule 55 (asignar_estructuras -> ID PUNTO ID ASG dato .)
    WHIFILEFE       reduce using rule 55 (asignar_estructuras -> ID PUNTO ID ASG dato .)
    IFINT           reduce using rule 55 (asignar_estructuras -> ID PUNTO ID ASG dato .)
    STRIFING        reduce using rule 55 (asignar_estructuras -> ID PUNTO ID ASG dato .)
    STRUFUCT        reduce using rule 55 (asignar_estructuras -> ID PUNTO ID ASG dato .)
    VOFOIFID        reduce using rule 55 (asignar_estructuras -> ID PUNTO ID ASG dato .)
    CHAFAR          reduce using rule 55 (asignar_estructuras -> ID PUNTO ID ASG dato .)
    BOFOOFOL        reduce using rule 55 (asignar_estructuras -> ID PUNTO ID ASG dato .)
    FLOFOAFAT       reduce using rule 55 (asignar_estructuras -> ID PUNTO ID ASG dato .)
    PA              reduce using rule 55 (asignar_estructuras -> ID PUNTO ID ASG dato .)


state 201

    (49) declaracion_error -> ID ASG ID operacion_matematica ID . PYC

    PYC             shift and go to state 217


state 202

    (54) asignar_array -> ID dimensiones ASG dato PYC .

    VACIO           reduce using rule 54 (asignar_array -> ID dimensiones ASG dato PYC .)
    IFIF            reduce using rule 54 (asignar_array -> ID dimensiones ASG dato PYC .)
    AFARRAFAY       reduce using rule 54 (asignar_array -> ID dimensiones ASG dato PYC .)
    ID              reduce using rule 54 (asignar_array -> ID dimensiones ASG dato PYC .)
    PRIFINT         reduce using rule 54 (asignar_array -> ID dimensiones ASG dato PYC .)
    IFINPUFUT       reduce using rule 54 (asignar_array -> ID dimensiones ASG dato PYC .)
    WHIFILEFE       reduce using rule 54 (asignar_array -> ID dimensiones ASG dato PYC .)
    IFINT           reduce using rule 54 (asignar_array -> ID dimensiones ASG dato PYC .)
    STRIFING        reduce using rule 54 (asignar_array -> ID dimensiones ASG dato PYC .)
    STRUFUCT        reduce using rule 54 (asignar_array -> ID dimensiones ASG dato PYC .)
    VOFOIFID        reduce using rule 54 (asignar_array -> ID dimensiones ASG dato PYC .)
    CHAFAR          reduce using rule 54 (asignar_array -> ID dimensiones ASG dato PYC .)
    BOFOOFOL        reduce using rule 54 (asignar_array -> ID dimensiones ASG dato PYC .)
    FLOFOAFAT       reduce using rule 54 (asignar_array -> ID dimensiones ASG dato PYC .)
    PA              reduce using rule 54 (asignar_array -> ID dimensiones ASG dato PYC .)


state 203

    (56) funcion -> ID PA valores PC PYC .

    VACIO           reduce using rule 56 (funcion -> ID PA valores PC PYC .)
    IFIF            reduce using rule 56 (funcion -> ID PA valores PC PYC .)
    AFARRAFAY       reduce using rule 56 (funcion -> ID PA valores PC PYC .)
    ID              reduce using rule 56 (funcion -> ID PA valores PC PYC .)
    PRIFINT         reduce using rule 56 (funcion -> ID PA valores PC PYC .)
    IFINPUFUT       reduce using rule 56 (funcion -> ID PA valores PC PYC .)
    WHIFILEFE       reduce using rule 56 (funcion -> ID PA valores PC PYC .)
    IFINT           reduce using rule 56 (funcion -> ID PA valores PC PYC .)
    STRIFING        reduce using rule 56 (funcion -> ID PA valores PC PYC .)
    STRUFUCT        reduce using rule 56 (funcion -> ID PA valores PC PYC .)
    VOFOIFID        reduce using rule 56 (funcion -> ID PA valores PC PYC .)
    CHAFAR          reduce using rule 56 (funcion -> ID PA valores PC PYC .)
    BOFOOFOL        reduce using rule 56 (funcion -> ID PA valores PC PYC .)
    FLOFOAFAT       reduce using rule 56 (funcion -> ID PA valores PC PYC .)
    PA              reduce using rule 56 (funcion -> ID PA valores PC PYC .)


state 204

    (58) funcion -> ID PA valores COMA valores . PC PYC

    PC              shift and go to state 218


state 205

    (59) print -> PRIFINT PA ID PC PYC .

    VACIO           reduce using rule 59 (print -> PRIFINT PA ID PC PYC .)
    IFIF            reduce using rule 59 (print -> PRIFINT PA ID PC PYC .)
    AFARRAFAY       reduce using rule 59 (print -> PRIFINT PA ID PC PYC .)
    ID              reduce using rule 59 (print -> PRIFINT PA ID PC PYC .)
    PRIFINT         reduce using rule 59 (print -> PRIFINT PA ID PC PYC .)
    IFINPUFUT       reduce using rule 59 (print -> PRIFINT PA ID PC PYC .)
    WHIFILEFE       reduce using rule 59 (print -> PRIFINT PA ID PC PYC .)
    IFINT           reduce using rule 59 (print -> PRIFINT PA ID PC PYC .)
    STRIFING        reduce using rule 59 (print -> PRIFINT PA ID PC PYC .)
    STRUFUCT        reduce using rule 59 (print -> PRIFINT PA ID PC PYC .)
    VOFOIFID        reduce using rule 59 (print -> PRIFINT PA ID PC PYC .)
    CHAFAR          reduce using rule 59 (print -> PRIFINT PA ID PC PYC .)
    BOFOOFOL        reduce using rule 59 (print -> PRIFINT PA ID PC PYC .)
    FLOFOAFAT       reduce using rule 59 (print -> PRIFINT PA ID PC PYC .)
    PA              reduce using rule 59 (print -> PRIFINT PA ID PC PYC .)


state 206

    (60) input -> IFINPUFUT PA ID PC PYC .

    VACIO           reduce using rule 60 (input -> IFINPUFUT PA ID PC PYC .)
    IFIF            reduce using rule 60 (input -> IFINPUFUT PA ID PC PYC .)
    AFARRAFAY       reduce using rule 60 (input -> IFINPUFUT PA ID PC PYC .)
    ID              reduce using rule 60 (input -> IFINPUFUT PA ID PC PYC .)
    PRIFINT         reduce using rule 60 (input -> IFINPUFUT PA ID PC PYC .)
    IFINPUFUT       reduce using rule 60 (input -> IFINPUFUT PA ID PC PYC .)
    WHIFILEFE       reduce using rule 60 (input -> IFINPUFUT PA ID PC PYC .)
    IFINT           reduce using rule 60 (input -> IFINPUFUT PA ID PC PYC .)
    STRIFING        reduce using rule 60 (input -> IFINPUFUT PA ID PC PYC .)
    STRUFUCT        reduce using rule 60 (input -> IFINPUFUT PA ID PC PYC .)
    VOFOIFID        reduce using rule 60 (input -> IFINPUFUT PA ID PC PYC .)
    CHAFAR          reduce using rule 60 (input -> IFINPUFUT PA ID PC PYC .)
    BOFOOFOL        reduce using rule 60 (input -> IFINPUFUT PA ID PC PYC .)
    FLOFOAFAT       reduce using rule 60 (input -> IFINPUFUT PA ID PC PYC .)
    PA              reduce using rule 60 (input -> IFINPUFUT PA ID PC PYC .)


state 207

    (61) declaracion_while -> WHIFILEFE PA condicion PC LLAVEA . bloque_codigo LLAVEC
    (65) declaracion_while_error -> WHIFILEFE PA condicion PC LLAVEA . bloque_codigo
    (29) bloque_codigo -> . declarar_if bloque_codigo
    (30) bloque_codigo -> . declaracion bloque_codigo
    (31) bloque_codigo -> . asignar_estructuras bloque_codigo
    (32) bloque_codigo -> . asignar_array bloque_codigo
    (33) bloque_codigo -> . funcion bloque_codigo
    (34) bloque_codigo -> . print bloque_codigo
    (35) bloque_codigo -> . input bloque_codigo
    (36) bloque_codigo -> . declaracion_while bloque_codigo
    (37) bloque_codigo -> . VACIO
    (38) declarar_if -> . IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC
    (39) declarar_if -> . IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE LLAVEA bloque_codigo LLAVEC
    (40) declarar_if -> . declarar_if_error_llave
    (43) declaracion -> . tipo_dato ID PYC
    (44) declaracion -> . tipo_dato ID ASG ID operacion_matematica ID PYC
    (45) declaracion -> . tipo_dato ID ASG dato PYC
    (46) declaracion -> . AFARRAFAY ID dimensiones PYC
    (47) declaracion -> . declaracion_error
    (55) asignar_estructuras -> . ID PUNTO ID ASG dato
    (54) asignar_array -> . ID dimensiones ASG dato PYC
    (56) funcion -> . ID PA valores PC PYC
    (57) funcion -> . ID PA PC PYC
    (58) funcion -> . ID PA valores COMA valores PC PYC
    (59) print -> . PRIFINT PA ID PC PYC
    (60) input -> . IFINPUFUT PA ID PC PYC
    (61) declaracion_while -> . WHIFILEFE PA condicion PC LLAVEA bloque_codigo LLAVEC
    (62) declaracion_while -> . declaracion_while_error
    (41) declarar_if_error_llave -> . IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE LLAVEA bloque_codigo
    (42) declarar_if_error_llave -> . IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE bloque_codigo LLAVEC
    (21) tipo_dato -> . IFINT
    (22) tipo_dato -> . STRIFING
    (23) tipo_dato -> . AFARRAFAY
    (24) tipo_dato -> . STRUFUCT
    (25) tipo_dato -> . VOFOIFID
    (26) tipo_dato -> . CHAFAR
    (27) tipo_dato -> . BOFOOFOL
    (28) tipo_dato -> . FLOFOAFAT
    (48) declaracion_error -> . ID PYC
    (49) declaracion_error -> . ID ASG ID operacion_matematica ID PYC
    (50) declaracion_error -> . ID ASG valores PYC
    (63) declaracion_while_error -> . PA condicion PC LLAVEA bloque_codigo LLAVEC
    (64) declaracion_while_error -> . WHIFILEFE PA condicion PC bloque_codigo LLAVEC
    (65) declaracion_while_error -> . WHIFILEFE PA condicion PC LLAVEA bloque_codigo

    VACIO           shift and go to state 57
    IFIF            shift and go to state 58
    AFARRAFAY       shift and go to state 62
    ID              shift and go to state 61
    PRIFINT         shift and go to state 64
    IFINPUFUT       shift and go to state 65
    WHIFILEFE       shift and go to state 66
    IFINT           shift and go to state 18
    STRIFING        shift and go to state 19
    STRUFUCT        shift and go to state 21
    VOFOIFID        shift and go to state 22
    CHAFAR          shift and go to state 23
    BOFOOFOL        shift and go to state 24
    FLOFOAFAT       shift and go to state 25
    PA              shift and go to state 47

    bloque_codigo                  shift and go to state 219
    declarar_if                    shift and go to state 49
    declaracion                    shift and go to state 50
    asignar_estructuras            shift and go to state 51
    asignar_array                  shift and go to state 52
    funcion                        shift and go to state 53
    print                          shift and go to state 54
    input                          shift and go to state 55
    declaracion_while              shift and go to state 56
    declarar_if_error_llave        shift and go to state 59
    tipo_dato                      shift and go to state 60
    declaracion_error              shift and go to state 63
    declaracion_while_error        shift and go to state 67

state 208

    (64) declaracion_while_error -> WHIFILEFE PA condicion PC bloque_codigo . LLAVEC

    LLAVEC          shift and go to state 220


state 209

    (5) declarar_estructuras -> STRUFUCT ID LLAVEA tipo_dato ID PYC tipo_dato ID PYC LLAVEC .

    IFINT           reduce using rule 5 (declarar_estructuras -> STRUFUCT ID LLAVEA tipo_dato ID PYC tipo_dato ID PYC LLAVEC .)
    FUNCTION        reduce using rule 5 (declarar_estructuras -> STRUFUCT ID LLAVEA tipo_dato ID PYC tipo_dato ID PYC LLAVEC .)
    MAFAIFIN        reduce using rule 5 (declarar_estructuras -> STRUFUCT ID LLAVEA tipo_dato ID PYC tipo_dato ID PYC LLAVEC .)


state 210

    (12) declarar_funciones -> FUNCTION tipo_dato ID PA tipo_dato ID PC LLAVEA bloque_codigo REFETUFURN . ID PYC LLAVEC

    ID              shift and go to state 221


state 211

    (15) declarar_funciones -> FUNCTION tipo_dato ID PA tipo_dato ID COMA tipo_dato ID PC . LLAVEA bloque_codigo REFETUFURN ID PYC LLAVEC

    LLAVEA          shift and go to state 222


state 212

    (13) declarar_funciones -> FUNCTION tipo_dato ID PA PC LLAVEA bloque_codigo REFETUFURN ID PYC . LLAVEC

    LLAVEC          shift and go to state 223


state 213

    (14) declarar_funciones -> FUNCTION tipo_dato ID PA PC LLAVEA bloque_codigo REFETUFURN PYC LLAVEC .

    IFINT           reduce using rule 14 (declarar_funciones -> FUNCTION tipo_dato ID PA PC LLAVEA bloque_codigo REFETUFURN PYC LLAVEC .)
    MAFAIFIN        reduce using rule 14 (declarar_funciones -> FUNCTION tipo_dato ID PA PC LLAVEA bloque_codigo REFETUFURN PYC LLAVEC .)


state 214

    (63) declaracion_while_error -> PA condicion PC LLAVEA bloque_codigo LLAVEC .

    VACIO           reduce using rule 63 (declaracion_while_error -> PA condicion PC LLAVEA bloque_codigo LLAVEC .)
    IFIF            reduce using rule 63 (declaracion_while_error -> PA condicion PC LLAVEA bloque_codigo LLAVEC .)
    AFARRAFAY       reduce using rule 63 (declaracion_while_error -> PA condicion PC LLAVEA bloque_codigo LLAVEC .)
    ID              reduce using rule 63 (declaracion_while_error -> PA condicion PC LLAVEA bloque_codigo LLAVEC .)
    PRIFINT         reduce using rule 63 (declaracion_while_error -> PA condicion PC LLAVEA bloque_codigo LLAVEC .)
    IFINPUFUT       reduce using rule 63 (declaracion_while_error -> PA condicion PC LLAVEA bloque_codigo LLAVEC .)
    WHIFILEFE       reduce using rule 63 (declaracion_while_error -> PA condicion PC LLAVEA bloque_codigo LLAVEC .)
    IFINT           reduce using rule 63 (declaracion_while_error -> PA condicion PC LLAVEA bloque_codigo LLAVEC .)
    STRIFING        reduce using rule 63 (declaracion_while_error -> PA condicion PC LLAVEA bloque_codigo LLAVEC .)
    STRUFUCT        reduce using rule 63 (declaracion_while_error -> PA condicion PC LLAVEA bloque_codigo LLAVEC .)
    VOFOIFID        reduce using rule 63 (declaracion_while_error -> PA condicion PC LLAVEA bloque_codigo LLAVEC .)
    CHAFAR          reduce using rule 63 (declaracion_while_error -> PA condicion PC LLAVEA bloque_codigo LLAVEC .)
    BOFOOFOL        reduce using rule 63 (declaracion_while_error -> PA condicion PC LLAVEA bloque_codigo LLAVEC .)
    FLOFOAFAT       reduce using rule 63 (declaracion_while_error -> PA condicion PC LLAVEA bloque_codigo LLAVEC .)
    PA              reduce using rule 63 (declaracion_while_error -> PA condicion PC LLAVEA bloque_codigo LLAVEC .)


state 215

    (38) declarar_if -> IFIF PA condicion PC LLAVEA bloque_codigo . LLAVEC
    (39) declarar_if -> IFIF PA condicion PC LLAVEA bloque_codigo . LLAVEC EFELSEFE LLAVEA bloque_codigo LLAVEC
    (41) declarar_if_error_llave -> IFIF PA condicion PC LLAVEA bloque_codigo . LLAVEC EFELSEFE LLAVEA bloque_codigo
    (42) declarar_if_error_llave -> IFIF PA condicion PC LLAVEA bloque_codigo . LLAVEC EFELSEFE bloque_codigo LLAVEC

    LLAVEC          shift and go to state 224


state 216

    (44) declaracion -> tipo_dato ID ASG ID operacion_matematica ID . PYC

    PYC             shift and go to state 225


state 217

    (49) declaracion_error -> ID ASG ID operacion_matematica ID PYC .

    VACIO           reduce using rule 49 (declaracion_error -> ID ASG ID operacion_matematica ID PYC .)
    IFIF            reduce using rule 49 (declaracion_error -> ID ASG ID operacion_matematica ID PYC .)
    AFARRAFAY       reduce using rule 49 (declaracion_error -> ID ASG ID operacion_matematica ID PYC .)
    ID              reduce using rule 49 (declaracion_error -> ID ASG ID operacion_matematica ID PYC .)
    PRIFINT         reduce using rule 49 (declaracion_error -> ID ASG ID operacion_matematica ID PYC .)
    IFINPUFUT       reduce using rule 49 (declaracion_error -> ID ASG ID operacion_matematica ID PYC .)
    WHIFILEFE       reduce using rule 49 (declaracion_error -> ID ASG ID operacion_matematica ID PYC .)
    IFINT           reduce using rule 49 (declaracion_error -> ID ASG ID operacion_matematica ID PYC .)
    STRIFING        reduce using rule 49 (declaracion_error -> ID ASG ID operacion_matematica ID PYC .)
    STRUFUCT        reduce using rule 49 (declaracion_error -> ID ASG ID operacion_matematica ID PYC .)
    VOFOIFID        reduce using rule 49 (declaracion_error -> ID ASG ID operacion_matematica ID PYC .)
    CHAFAR          reduce using rule 49 (declaracion_error -> ID ASG ID operacion_matematica ID PYC .)
    BOFOOFOL        reduce using rule 49 (declaracion_error -> ID ASG ID operacion_matematica ID PYC .)
    FLOFOAFAT       reduce using rule 49 (declaracion_error -> ID ASG ID operacion_matematica ID PYC .)
    PA              reduce using rule 49 (declaracion_error -> ID ASG ID operacion_matematica ID PYC .)


state 218

    (58) funcion -> ID PA valores COMA valores PC . PYC

    PYC             shift and go to state 226


state 219

    (61) declaracion_while -> WHIFILEFE PA condicion PC LLAVEA bloque_codigo . LLAVEC
    (65) declaracion_while_error -> WHIFILEFE PA condicion PC LLAVEA bloque_codigo .

    LLAVEC          shift and go to state 227
    VACIO           reduce using rule 65 (declaracion_while_error -> WHIFILEFE PA condicion PC LLAVEA bloque_codigo .)
    IFIF            reduce using rule 65 (declaracion_while_error -> WHIFILEFE PA condicion PC LLAVEA bloque_codigo .)
    AFARRAFAY       reduce using rule 65 (declaracion_while_error -> WHIFILEFE PA condicion PC LLAVEA bloque_codigo .)
    ID              reduce using rule 65 (declaracion_while_error -> WHIFILEFE PA condicion PC LLAVEA bloque_codigo .)
    PRIFINT         reduce using rule 65 (declaracion_while_error -> WHIFILEFE PA condicion PC LLAVEA bloque_codigo .)
    IFINPUFUT       reduce using rule 65 (declaracion_while_error -> WHIFILEFE PA condicion PC LLAVEA bloque_codigo .)
    WHIFILEFE       reduce using rule 65 (declaracion_while_error -> WHIFILEFE PA condicion PC LLAVEA bloque_codigo .)
    IFINT           reduce using rule 65 (declaracion_while_error -> WHIFILEFE PA condicion PC LLAVEA bloque_codigo .)
    STRIFING        reduce using rule 65 (declaracion_while_error -> WHIFILEFE PA condicion PC LLAVEA bloque_codigo .)
    STRUFUCT        reduce using rule 65 (declaracion_while_error -> WHIFILEFE PA condicion PC LLAVEA bloque_codigo .)
    VOFOIFID        reduce using rule 65 (declaracion_while_error -> WHIFILEFE PA condicion PC LLAVEA bloque_codigo .)
    CHAFAR          reduce using rule 65 (declaracion_while_error -> WHIFILEFE PA condicion PC LLAVEA bloque_codigo .)
    BOFOOFOL        reduce using rule 65 (declaracion_while_error -> WHIFILEFE PA condicion PC LLAVEA bloque_codigo .)
    FLOFOAFAT       reduce using rule 65 (declaracion_while_error -> WHIFILEFE PA condicion PC LLAVEA bloque_codigo .)
    PA              reduce using rule 65 (declaracion_while_error -> WHIFILEFE PA condicion PC LLAVEA bloque_codigo .)


state 220

    (64) declaracion_while_error -> WHIFILEFE PA condicion PC bloque_codigo LLAVEC .

    VACIO           reduce using rule 64 (declaracion_while_error -> WHIFILEFE PA condicion PC bloque_codigo LLAVEC .)
    IFIF            reduce using rule 64 (declaracion_while_error -> WHIFILEFE PA condicion PC bloque_codigo LLAVEC .)
    AFARRAFAY       reduce using rule 64 (declaracion_while_error -> WHIFILEFE PA condicion PC bloque_codigo LLAVEC .)
    ID              reduce using rule 64 (declaracion_while_error -> WHIFILEFE PA condicion PC bloque_codigo LLAVEC .)
    PRIFINT         reduce using rule 64 (declaracion_while_error -> WHIFILEFE PA condicion PC bloque_codigo LLAVEC .)
    IFINPUFUT       reduce using rule 64 (declaracion_while_error -> WHIFILEFE PA condicion PC bloque_codigo LLAVEC .)
    WHIFILEFE       reduce using rule 64 (declaracion_while_error -> WHIFILEFE PA condicion PC bloque_codigo LLAVEC .)
    IFINT           reduce using rule 64 (declaracion_while_error -> WHIFILEFE PA condicion PC bloque_codigo LLAVEC .)
    STRIFING        reduce using rule 64 (declaracion_while_error -> WHIFILEFE PA condicion PC bloque_codigo LLAVEC .)
    STRUFUCT        reduce using rule 64 (declaracion_while_error -> WHIFILEFE PA condicion PC bloque_codigo LLAVEC .)
    VOFOIFID        reduce using rule 64 (declaracion_while_error -> WHIFILEFE PA condicion PC bloque_codigo LLAVEC .)
    CHAFAR          reduce using rule 64 (declaracion_while_error -> WHIFILEFE PA condicion PC bloque_codigo LLAVEC .)
    BOFOOFOL        reduce using rule 64 (declaracion_while_error -> WHIFILEFE PA condicion PC bloque_codigo LLAVEC .)
    FLOFOAFAT       reduce using rule 64 (declaracion_while_error -> WHIFILEFE PA condicion PC bloque_codigo LLAVEC .)
    PA              reduce using rule 64 (declaracion_while_error -> WHIFILEFE PA condicion PC bloque_codigo LLAVEC .)


state 221

    (12) declarar_funciones -> FUNCTION tipo_dato ID PA tipo_dato ID PC LLAVEA bloque_codigo REFETUFURN ID . PYC LLAVEC

    PYC             shift and go to state 228


state 222

    (15) declarar_funciones -> FUNCTION tipo_dato ID PA tipo_dato ID COMA tipo_dato ID PC LLAVEA . bloque_codigo REFETUFURN ID PYC LLAVEC
    (29) bloque_codigo -> . declarar_if bloque_codigo
    (30) bloque_codigo -> . declaracion bloque_codigo
    (31) bloque_codigo -> . asignar_estructuras bloque_codigo
    (32) bloque_codigo -> . asignar_array bloque_codigo
    (33) bloque_codigo -> . funcion bloque_codigo
    (34) bloque_codigo -> . print bloque_codigo
    (35) bloque_codigo -> . input bloque_codigo
    (36) bloque_codigo -> . declaracion_while bloque_codigo
    (37) bloque_codigo -> . VACIO
    (38) declarar_if -> . IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC
    (39) declarar_if -> . IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE LLAVEA bloque_codigo LLAVEC
    (40) declarar_if -> . declarar_if_error_llave
    (43) declaracion -> . tipo_dato ID PYC
    (44) declaracion -> . tipo_dato ID ASG ID operacion_matematica ID PYC
    (45) declaracion -> . tipo_dato ID ASG dato PYC
    (46) declaracion -> . AFARRAFAY ID dimensiones PYC
    (47) declaracion -> . declaracion_error
    (55) asignar_estructuras -> . ID PUNTO ID ASG dato
    (54) asignar_array -> . ID dimensiones ASG dato PYC
    (56) funcion -> . ID PA valores PC PYC
    (57) funcion -> . ID PA PC PYC
    (58) funcion -> . ID PA valores COMA valores PC PYC
    (59) print -> . PRIFINT PA ID PC PYC
    (60) input -> . IFINPUFUT PA ID PC PYC
    (61) declaracion_while -> . WHIFILEFE PA condicion PC LLAVEA bloque_codigo LLAVEC
    (62) declaracion_while -> . declaracion_while_error
    (41) declarar_if_error_llave -> . IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE LLAVEA bloque_codigo
    (42) declarar_if_error_llave -> . IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE bloque_codigo LLAVEC
    (21) tipo_dato -> . IFINT
    (22) tipo_dato -> . STRIFING
    (23) tipo_dato -> . AFARRAFAY
    (24) tipo_dato -> . STRUFUCT
    (25) tipo_dato -> . VOFOIFID
    (26) tipo_dato -> . CHAFAR
    (27) tipo_dato -> . BOFOOFOL
    (28) tipo_dato -> . FLOFOAFAT
    (48) declaracion_error -> . ID PYC
    (49) declaracion_error -> . ID ASG ID operacion_matematica ID PYC
    (50) declaracion_error -> . ID ASG valores PYC
    (63) declaracion_while_error -> . PA condicion PC LLAVEA bloque_codigo LLAVEC
    (64) declaracion_while_error -> . WHIFILEFE PA condicion PC bloque_codigo LLAVEC
    (65) declaracion_while_error -> . WHIFILEFE PA condicion PC LLAVEA bloque_codigo

    VACIO           shift and go to state 57
    IFIF            shift and go to state 58
    AFARRAFAY       shift and go to state 62
    ID              shift and go to state 61
    PRIFINT         shift and go to state 64
    IFINPUFUT       shift and go to state 65
    WHIFILEFE       shift and go to state 66
    IFINT           shift and go to state 18
    STRIFING        shift and go to state 19
    STRUFUCT        shift and go to state 21
    VOFOIFID        shift and go to state 22
    CHAFAR          shift and go to state 23
    BOFOOFOL        shift and go to state 24
    FLOFOAFAT       shift and go to state 25
    PA              shift and go to state 47

    tipo_dato                      shift and go to state 60
    bloque_codigo                  shift and go to state 229
    declarar_if                    shift and go to state 49
    declaracion                    shift and go to state 50
    asignar_estructuras            shift and go to state 51
    asignar_array                  shift and go to state 52
    funcion                        shift and go to state 53
    print                          shift and go to state 54
    input                          shift and go to state 55
    declaracion_while              shift and go to state 56
    declarar_if_error_llave        shift and go to state 59
    declaracion_error              shift and go to state 63
    declaracion_while_error        shift and go to state 67

state 223

    (13) declarar_funciones -> FUNCTION tipo_dato ID PA PC LLAVEA bloque_codigo REFETUFURN ID PYC LLAVEC .

    IFINT           reduce using rule 13 (declarar_funciones -> FUNCTION tipo_dato ID PA PC LLAVEA bloque_codigo REFETUFURN ID PYC LLAVEC .)
    MAFAIFIN        reduce using rule 13 (declarar_funciones -> FUNCTION tipo_dato ID PA PC LLAVEA bloque_codigo REFETUFURN ID PYC LLAVEC .)


state 224

    (38) declarar_if -> IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC .
    (39) declarar_if -> IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC . EFELSEFE LLAVEA bloque_codigo LLAVEC
    (41) declarar_if_error_llave -> IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC . EFELSEFE LLAVEA bloque_codigo
    (42) declarar_if_error_llave -> IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC . EFELSEFE bloque_codigo LLAVEC

    VACIO           reduce using rule 38 (declarar_if -> IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC .)
    IFIF            reduce using rule 38 (declarar_if -> IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC .)
    AFARRAFAY       reduce using rule 38 (declarar_if -> IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC .)
    ID              reduce using rule 38 (declarar_if -> IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC .)
    PRIFINT         reduce using rule 38 (declarar_if -> IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC .)
    IFINPUFUT       reduce using rule 38 (declarar_if -> IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC .)
    WHIFILEFE       reduce using rule 38 (declarar_if -> IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC .)
    IFINT           reduce using rule 38 (declarar_if -> IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC .)
    STRIFING        reduce using rule 38 (declarar_if -> IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC .)
    STRUFUCT        reduce using rule 38 (declarar_if -> IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC .)
    VOFOIFID        reduce using rule 38 (declarar_if -> IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC .)
    CHAFAR          reduce using rule 38 (declarar_if -> IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC .)
    BOFOOFOL        reduce using rule 38 (declarar_if -> IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC .)
    FLOFOAFAT       reduce using rule 38 (declarar_if -> IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC .)
    PA              reduce using rule 38 (declarar_if -> IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC .)
    EFELSEFE        shift and go to state 230


state 225

    (44) declaracion -> tipo_dato ID ASG ID operacion_matematica ID PYC .

    VACIO           reduce using rule 44 (declaracion -> tipo_dato ID ASG ID operacion_matematica ID PYC .)
    IFIF            reduce using rule 44 (declaracion -> tipo_dato ID ASG ID operacion_matematica ID PYC .)
    AFARRAFAY       reduce using rule 44 (declaracion -> tipo_dato ID ASG ID operacion_matematica ID PYC .)
    ID              reduce using rule 44 (declaracion -> tipo_dato ID ASG ID operacion_matematica ID PYC .)
    PRIFINT         reduce using rule 44 (declaracion -> tipo_dato ID ASG ID operacion_matematica ID PYC .)
    IFINPUFUT       reduce using rule 44 (declaracion -> tipo_dato ID ASG ID operacion_matematica ID PYC .)
    WHIFILEFE       reduce using rule 44 (declaracion -> tipo_dato ID ASG ID operacion_matematica ID PYC .)
    IFINT           reduce using rule 44 (declaracion -> tipo_dato ID ASG ID operacion_matematica ID PYC .)
    STRIFING        reduce using rule 44 (declaracion -> tipo_dato ID ASG ID operacion_matematica ID PYC .)
    STRUFUCT        reduce using rule 44 (declaracion -> tipo_dato ID ASG ID operacion_matematica ID PYC .)
    VOFOIFID        reduce using rule 44 (declaracion -> tipo_dato ID ASG ID operacion_matematica ID PYC .)
    CHAFAR          reduce using rule 44 (declaracion -> tipo_dato ID ASG ID operacion_matematica ID PYC .)
    BOFOOFOL        reduce using rule 44 (declaracion -> tipo_dato ID ASG ID operacion_matematica ID PYC .)
    FLOFOAFAT       reduce using rule 44 (declaracion -> tipo_dato ID ASG ID operacion_matematica ID PYC .)
    PA              reduce using rule 44 (declaracion -> tipo_dato ID ASG ID operacion_matematica ID PYC .)


state 226

    (58) funcion -> ID PA valores COMA valores PC PYC .

    VACIO           reduce using rule 58 (funcion -> ID PA valores COMA valores PC PYC .)
    IFIF            reduce using rule 58 (funcion -> ID PA valores COMA valores PC PYC .)
    AFARRAFAY       reduce using rule 58 (funcion -> ID PA valores COMA valores PC PYC .)
    ID              reduce using rule 58 (funcion -> ID PA valores COMA valores PC PYC .)
    PRIFINT         reduce using rule 58 (funcion -> ID PA valores COMA valores PC PYC .)
    IFINPUFUT       reduce using rule 58 (funcion -> ID PA valores COMA valores PC PYC .)
    WHIFILEFE       reduce using rule 58 (funcion -> ID PA valores COMA valores PC PYC .)
    IFINT           reduce using rule 58 (funcion -> ID PA valores COMA valores PC PYC .)
    STRIFING        reduce using rule 58 (funcion -> ID PA valores COMA valores PC PYC .)
    STRUFUCT        reduce using rule 58 (funcion -> ID PA valores COMA valores PC PYC .)
    VOFOIFID        reduce using rule 58 (funcion -> ID PA valores COMA valores PC PYC .)
    CHAFAR          reduce using rule 58 (funcion -> ID PA valores COMA valores PC PYC .)
    BOFOOFOL        reduce using rule 58 (funcion -> ID PA valores COMA valores PC PYC .)
    FLOFOAFAT       reduce using rule 58 (funcion -> ID PA valores COMA valores PC PYC .)
    PA              reduce using rule 58 (funcion -> ID PA valores COMA valores PC PYC .)


state 227

    (61) declaracion_while -> WHIFILEFE PA condicion PC LLAVEA bloque_codigo LLAVEC .

    VACIO           reduce using rule 61 (declaracion_while -> WHIFILEFE PA condicion PC LLAVEA bloque_codigo LLAVEC .)
    IFIF            reduce using rule 61 (declaracion_while -> WHIFILEFE PA condicion PC LLAVEA bloque_codigo LLAVEC .)
    AFARRAFAY       reduce using rule 61 (declaracion_while -> WHIFILEFE PA condicion PC LLAVEA bloque_codigo LLAVEC .)
    ID              reduce using rule 61 (declaracion_while -> WHIFILEFE PA condicion PC LLAVEA bloque_codigo LLAVEC .)
    PRIFINT         reduce using rule 61 (declaracion_while -> WHIFILEFE PA condicion PC LLAVEA bloque_codigo LLAVEC .)
    IFINPUFUT       reduce using rule 61 (declaracion_while -> WHIFILEFE PA condicion PC LLAVEA bloque_codigo LLAVEC .)
    WHIFILEFE       reduce using rule 61 (declaracion_while -> WHIFILEFE PA condicion PC LLAVEA bloque_codigo LLAVEC .)
    IFINT           reduce using rule 61 (declaracion_while -> WHIFILEFE PA condicion PC LLAVEA bloque_codigo LLAVEC .)
    STRIFING        reduce using rule 61 (declaracion_while -> WHIFILEFE PA condicion PC LLAVEA bloque_codigo LLAVEC .)
    STRUFUCT        reduce using rule 61 (declaracion_while -> WHIFILEFE PA condicion PC LLAVEA bloque_codigo LLAVEC .)
    VOFOIFID        reduce using rule 61 (declaracion_while -> WHIFILEFE PA condicion PC LLAVEA bloque_codigo LLAVEC .)
    CHAFAR          reduce using rule 61 (declaracion_while -> WHIFILEFE PA condicion PC LLAVEA bloque_codigo LLAVEC .)
    BOFOOFOL        reduce using rule 61 (declaracion_while -> WHIFILEFE PA condicion PC LLAVEA bloque_codigo LLAVEC .)
    FLOFOAFAT       reduce using rule 61 (declaracion_while -> WHIFILEFE PA condicion PC LLAVEA bloque_codigo LLAVEC .)
    PA              reduce using rule 61 (declaracion_while -> WHIFILEFE PA condicion PC LLAVEA bloque_codigo LLAVEC .)


state 228

    (12) declarar_funciones -> FUNCTION tipo_dato ID PA tipo_dato ID PC LLAVEA bloque_codigo REFETUFURN ID PYC . LLAVEC

    LLAVEC          shift and go to state 231


state 229

    (15) declarar_funciones -> FUNCTION tipo_dato ID PA tipo_dato ID COMA tipo_dato ID PC LLAVEA bloque_codigo . REFETUFURN ID PYC LLAVEC

    REFETUFURN      shift and go to state 232


state 230

    (39) declarar_if -> IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE . LLAVEA bloque_codigo LLAVEC
    (41) declarar_if_error_llave -> IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE . LLAVEA bloque_codigo
    (42) declarar_if_error_llave -> IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE . bloque_codigo LLAVEC
    (29) bloque_codigo -> . declarar_if bloque_codigo
    (30) bloque_codigo -> . declaracion bloque_codigo
    (31) bloque_codigo -> . asignar_estructuras bloque_codigo
    (32) bloque_codigo -> . asignar_array bloque_codigo
    (33) bloque_codigo -> . funcion bloque_codigo
    (34) bloque_codigo -> . print bloque_codigo
    (35) bloque_codigo -> . input bloque_codigo
    (36) bloque_codigo -> . declaracion_while bloque_codigo
    (37) bloque_codigo -> . VACIO
    (38) declarar_if -> . IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC
    (39) declarar_if -> . IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE LLAVEA bloque_codigo LLAVEC
    (40) declarar_if -> . declarar_if_error_llave
    (43) declaracion -> . tipo_dato ID PYC
    (44) declaracion -> . tipo_dato ID ASG ID operacion_matematica ID PYC
    (45) declaracion -> . tipo_dato ID ASG dato PYC
    (46) declaracion -> . AFARRAFAY ID dimensiones PYC
    (47) declaracion -> . declaracion_error
    (55) asignar_estructuras -> . ID PUNTO ID ASG dato
    (54) asignar_array -> . ID dimensiones ASG dato PYC
    (56) funcion -> . ID PA valores PC PYC
    (57) funcion -> . ID PA PC PYC
    (58) funcion -> . ID PA valores COMA valores PC PYC
    (59) print -> . PRIFINT PA ID PC PYC
    (60) input -> . IFINPUFUT PA ID PC PYC
    (61) declaracion_while -> . WHIFILEFE PA condicion PC LLAVEA bloque_codigo LLAVEC
    (62) declaracion_while -> . declaracion_while_error
    (41) declarar_if_error_llave -> . IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE LLAVEA bloque_codigo
    (42) declarar_if_error_llave -> . IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE bloque_codigo LLAVEC
    (21) tipo_dato -> . IFINT
    (22) tipo_dato -> . STRIFING
    (23) tipo_dato -> . AFARRAFAY
    (24) tipo_dato -> . STRUFUCT
    (25) tipo_dato -> . VOFOIFID
    (26) tipo_dato -> . CHAFAR
    (27) tipo_dato -> . BOFOOFOL
    (28) tipo_dato -> . FLOFOAFAT
    (48) declaracion_error -> . ID PYC
    (49) declaracion_error -> . ID ASG ID operacion_matematica ID PYC
    (50) declaracion_error -> . ID ASG valores PYC
    (63) declaracion_while_error -> . PA condicion PC LLAVEA bloque_codigo LLAVEC
    (64) declaracion_while_error -> . WHIFILEFE PA condicion PC bloque_codigo LLAVEC
    (65) declaracion_while_error -> . WHIFILEFE PA condicion PC LLAVEA bloque_codigo

    LLAVEA          shift and go to state 233
    VACIO           shift and go to state 57
    IFIF            shift and go to state 58
    AFARRAFAY       shift and go to state 62
    ID              shift and go to state 61
    PRIFINT         shift and go to state 64
    IFINPUFUT       shift and go to state 65
    WHIFILEFE       shift and go to state 66
    IFINT           shift and go to state 18
    STRIFING        shift and go to state 19
    STRUFUCT        shift and go to state 21
    VOFOIFID        shift and go to state 22
    CHAFAR          shift and go to state 23
    BOFOOFOL        shift and go to state 24
    FLOFOAFAT       shift and go to state 25
    PA              shift and go to state 47

    bloque_codigo                  shift and go to state 234
    declarar_if                    shift and go to state 49
    declaracion                    shift and go to state 50
    asignar_estructuras            shift and go to state 51
    asignar_array                  shift and go to state 52
    funcion                        shift and go to state 53
    print                          shift and go to state 54
    input                          shift and go to state 55
    declaracion_while              shift and go to state 56
    declarar_if_error_llave        shift and go to state 59
    tipo_dato                      shift and go to state 60
    declaracion_error              shift and go to state 63
    declaracion_while_error        shift and go to state 67

state 231

    (12) declarar_funciones -> FUNCTION tipo_dato ID PA tipo_dato ID PC LLAVEA bloque_codigo REFETUFURN ID PYC LLAVEC .

    IFINT           reduce using rule 12 (declarar_funciones -> FUNCTION tipo_dato ID PA tipo_dato ID PC LLAVEA bloque_codigo REFETUFURN ID PYC LLAVEC .)
    MAFAIFIN        reduce using rule 12 (declarar_funciones -> FUNCTION tipo_dato ID PA tipo_dato ID PC LLAVEA bloque_codigo REFETUFURN ID PYC LLAVEC .)


state 232

    (15) declarar_funciones -> FUNCTION tipo_dato ID PA tipo_dato ID COMA tipo_dato ID PC LLAVEA bloque_codigo REFETUFURN . ID PYC LLAVEC

    ID              shift and go to state 235


state 233

    (39) declarar_if -> IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE LLAVEA . bloque_codigo LLAVEC
    (41) declarar_if_error_llave -> IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE LLAVEA . bloque_codigo
    (29) bloque_codigo -> . declarar_if bloque_codigo
    (30) bloque_codigo -> . declaracion bloque_codigo
    (31) bloque_codigo -> . asignar_estructuras bloque_codigo
    (32) bloque_codigo -> . asignar_array bloque_codigo
    (33) bloque_codigo -> . funcion bloque_codigo
    (34) bloque_codigo -> . print bloque_codigo
    (35) bloque_codigo -> . input bloque_codigo
    (36) bloque_codigo -> . declaracion_while bloque_codigo
    (37) bloque_codigo -> . VACIO
    (38) declarar_if -> . IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC
    (39) declarar_if -> . IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE LLAVEA bloque_codigo LLAVEC
    (40) declarar_if -> . declarar_if_error_llave
    (43) declaracion -> . tipo_dato ID PYC
    (44) declaracion -> . tipo_dato ID ASG ID operacion_matematica ID PYC
    (45) declaracion -> . tipo_dato ID ASG dato PYC
    (46) declaracion -> . AFARRAFAY ID dimensiones PYC
    (47) declaracion -> . declaracion_error
    (55) asignar_estructuras -> . ID PUNTO ID ASG dato
    (54) asignar_array -> . ID dimensiones ASG dato PYC
    (56) funcion -> . ID PA valores PC PYC
    (57) funcion -> . ID PA PC PYC
    (58) funcion -> . ID PA valores COMA valores PC PYC
    (59) print -> . PRIFINT PA ID PC PYC
    (60) input -> . IFINPUFUT PA ID PC PYC
    (61) declaracion_while -> . WHIFILEFE PA condicion PC LLAVEA bloque_codigo LLAVEC
    (62) declaracion_while -> . declaracion_while_error
    (41) declarar_if_error_llave -> . IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE LLAVEA bloque_codigo
    (42) declarar_if_error_llave -> . IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE bloque_codigo LLAVEC
    (21) tipo_dato -> . IFINT
    (22) tipo_dato -> . STRIFING
    (23) tipo_dato -> . AFARRAFAY
    (24) tipo_dato -> . STRUFUCT
    (25) tipo_dato -> . VOFOIFID
    (26) tipo_dato -> . CHAFAR
    (27) tipo_dato -> . BOFOOFOL
    (28) tipo_dato -> . FLOFOAFAT
    (48) declaracion_error -> . ID PYC
    (49) declaracion_error -> . ID ASG ID operacion_matematica ID PYC
    (50) declaracion_error -> . ID ASG valores PYC
    (63) declaracion_while_error -> . PA condicion PC LLAVEA bloque_codigo LLAVEC
    (64) declaracion_while_error -> . WHIFILEFE PA condicion PC bloque_codigo LLAVEC
    (65) declaracion_while_error -> . WHIFILEFE PA condicion PC LLAVEA bloque_codigo

    VACIO           shift and go to state 57
    IFIF            shift and go to state 58
    AFARRAFAY       shift and go to state 62
    ID              shift and go to state 61
    PRIFINT         shift and go to state 64
    IFINPUFUT       shift and go to state 65
    WHIFILEFE       shift and go to state 66
    IFINT           shift and go to state 18
    STRIFING        shift and go to state 19
    STRUFUCT        shift and go to state 21
    VOFOIFID        shift and go to state 22
    CHAFAR          shift and go to state 23
    BOFOOFOL        shift and go to state 24
    FLOFOAFAT       shift and go to state 25
    PA              shift and go to state 47

    bloque_codigo                  shift and go to state 236
    declarar_if                    shift and go to state 49
    declaracion                    shift and go to state 50
    asignar_estructuras            shift and go to state 51
    asignar_array                  shift and go to state 52
    funcion                        shift and go to state 53
    print                          shift and go to state 54
    input                          shift and go to state 55
    declaracion_while              shift and go to state 56
    declarar_if_error_llave        shift and go to state 59
    tipo_dato                      shift and go to state 60
    declaracion_error              shift and go to state 63
    declaracion_while_error        shift and go to state 67

state 234

    (42) declarar_if_error_llave -> IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE bloque_codigo . LLAVEC

    LLAVEC          shift and go to state 237


state 235

    (15) declarar_funciones -> FUNCTION tipo_dato ID PA tipo_dato ID COMA tipo_dato ID PC LLAVEA bloque_codigo REFETUFURN ID . PYC LLAVEC

    PYC             shift and go to state 238


state 236

    (39) declarar_if -> IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE LLAVEA bloque_codigo . LLAVEC
    (41) declarar_if_error_llave -> IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE LLAVEA bloque_codigo .

    LLAVEC          shift and go to state 239
    VACIO           reduce using rule 41 (declarar_if_error_llave -> IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE LLAVEA bloque_codigo .)
    IFIF            reduce using rule 41 (declarar_if_error_llave -> IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE LLAVEA bloque_codigo .)
    AFARRAFAY       reduce using rule 41 (declarar_if_error_llave -> IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE LLAVEA bloque_codigo .)
    ID              reduce using rule 41 (declarar_if_error_llave -> IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE LLAVEA bloque_codigo .)
    PRIFINT         reduce using rule 41 (declarar_if_error_llave -> IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE LLAVEA bloque_codigo .)
    IFINPUFUT       reduce using rule 41 (declarar_if_error_llave -> IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE LLAVEA bloque_codigo .)
    WHIFILEFE       reduce using rule 41 (declarar_if_error_llave -> IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE LLAVEA bloque_codigo .)
    IFINT           reduce using rule 41 (declarar_if_error_llave -> IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE LLAVEA bloque_codigo .)
    STRIFING        reduce using rule 41 (declarar_if_error_llave -> IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE LLAVEA bloque_codigo .)
    STRUFUCT        reduce using rule 41 (declarar_if_error_llave -> IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE LLAVEA bloque_codigo .)
    VOFOIFID        reduce using rule 41 (declarar_if_error_llave -> IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE LLAVEA bloque_codigo .)
    CHAFAR          reduce using rule 41 (declarar_if_error_llave -> IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE LLAVEA bloque_codigo .)
    BOFOOFOL        reduce using rule 41 (declarar_if_error_llave -> IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE LLAVEA bloque_codigo .)
    FLOFOAFAT       reduce using rule 41 (declarar_if_error_llave -> IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE LLAVEA bloque_codigo .)
    PA              reduce using rule 41 (declarar_if_error_llave -> IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE LLAVEA bloque_codigo .)


state 237

    (42) declarar_if_error_llave -> IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE bloque_codigo LLAVEC .

    VACIO           reduce using rule 42 (declarar_if_error_llave -> IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE bloque_codigo LLAVEC .)
    IFIF            reduce using rule 42 (declarar_if_error_llave -> IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE bloque_codigo LLAVEC .)
    AFARRAFAY       reduce using rule 42 (declarar_if_error_llave -> IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE bloque_codigo LLAVEC .)
    ID              reduce using rule 42 (declarar_if_error_llave -> IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE bloque_codigo LLAVEC .)
    PRIFINT         reduce using rule 42 (declarar_if_error_llave -> IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE bloque_codigo LLAVEC .)
    IFINPUFUT       reduce using rule 42 (declarar_if_error_llave -> IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE bloque_codigo LLAVEC .)
    WHIFILEFE       reduce using rule 42 (declarar_if_error_llave -> IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE bloque_codigo LLAVEC .)
    IFINT           reduce using rule 42 (declarar_if_error_llave -> IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE bloque_codigo LLAVEC .)
    STRIFING        reduce using rule 42 (declarar_if_error_llave -> IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE bloque_codigo LLAVEC .)
    STRUFUCT        reduce using rule 42 (declarar_if_error_llave -> IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE bloque_codigo LLAVEC .)
    VOFOIFID        reduce using rule 42 (declarar_if_error_llave -> IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE bloque_codigo LLAVEC .)
    CHAFAR          reduce using rule 42 (declarar_if_error_llave -> IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE bloque_codigo LLAVEC .)
    BOFOOFOL        reduce using rule 42 (declarar_if_error_llave -> IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE bloque_codigo LLAVEC .)
    FLOFOAFAT       reduce using rule 42 (declarar_if_error_llave -> IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE bloque_codigo LLAVEC .)
    PA              reduce using rule 42 (declarar_if_error_llave -> IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE bloque_codigo LLAVEC .)


state 238

    (15) declarar_funciones -> FUNCTION tipo_dato ID PA tipo_dato ID COMA tipo_dato ID PC LLAVEA bloque_codigo REFETUFURN ID PYC . LLAVEC

    LLAVEC          shift and go to state 240


state 239

    (39) declarar_if -> IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE LLAVEA bloque_codigo LLAVEC .

    VACIO           reduce using rule 39 (declarar_if -> IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE LLAVEA bloque_codigo LLAVEC .)
    IFIF            reduce using rule 39 (declarar_if -> IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE LLAVEA bloque_codigo LLAVEC .)
    AFARRAFAY       reduce using rule 39 (declarar_if -> IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE LLAVEA bloque_codigo LLAVEC .)
    ID              reduce using rule 39 (declarar_if -> IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE LLAVEA bloque_codigo LLAVEC .)
    PRIFINT         reduce using rule 39 (declarar_if -> IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE LLAVEA bloque_codigo LLAVEC .)
    IFINPUFUT       reduce using rule 39 (declarar_if -> IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE LLAVEA bloque_codigo LLAVEC .)
    WHIFILEFE       reduce using rule 39 (declarar_if -> IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE LLAVEA bloque_codigo LLAVEC .)
    IFINT           reduce using rule 39 (declarar_if -> IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE LLAVEA bloque_codigo LLAVEC .)
    STRIFING        reduce using rule 39 (declarar_if -> IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE LLAVEA bloque_codigo LLAVEC .)
    STRUFUCT        reduce using rule 39 (declarar_if -> IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE LLAVEA bloque_codigo LLAVEC .)
    VOFOIFID        reduce using rule 39 (declarar_if -> IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE LLAVEA bloque_codigo LLAVEC .)
    CHAFAR          reduce using rule 39 (declarar_if -> IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE LLAVEA bloque_codigo LLAVEC .)
    BOFOOFOL        reduce using rule 39 (declarar_if -> IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE LLAVEA bloque_codigo LLAVEC .)
    FLOFOAFAT       reduce using rule 39 (declarar_if -> IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE LLAVEA bloque_codigo LLAVEC .)
    PA              reduce using rule 39 (declarar_if -> IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE LLAVEA bloque_codigo LLAVEC .)


state 240

    (15) declarar_funciones -> FUNCTION tipo_dato ID PA tipo_dato ID COMA tipo_dato ID PC LLAVEA bloque_codigo REFETUFURN ID PYC LLAVEC .

    IFINT           reduce using rule 15 (declarar_funciones -> FUNCTION tipo_dato ID PA tipo_dato ID COMA tipo_dato ID PC LLAVEA bloque_codigo REFETUFURN ID PYC LLAVEC .)
    MAFAIFIN        reduce using rule 15 (declarar_funciones -> FUNCTION tipo_dato ID PA tipo_dato ID COMA tipo_dato ID PC LLAVEA bloque_codigo REFETUFURN ID PYC LLAVEC .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for ID in state 62 resolved as shift
