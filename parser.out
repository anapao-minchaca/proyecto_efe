Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> start
Rule 1     start -> declarar_estructuras declarar_main
Rule 2     start -> declarar_funciones declarar_main
Rule 3     start -> declarar_estructuras declarar_funciones declarar_main
Rule 4     start -> declarar_main
Rule 5     declarar_estructuras -> STRUFUCT ID LLAVEA tipo_dato ID PYC tipo_dato ID PYC LLAVEC
Rule 6     declarar_estructuras -> declarar_estructuras_error
Rule 7     declarar_estructuras_error -> ID LLAVEA tipo_dato ID PYC tipo_dato ID PYC LLAVEC
Rule 8     declarar_estructuras_error -> ID ID LLAVEA tipo_dato ID PYC tipo_dato ID PYC LLAVEC
Rule 9     declarar_estructuras_error -> STRUFUCT ID LLAVEA tipo_dato PYC tipo_dato ID PYC LLAVEC
Rule 10    declarar_estructuras_error -> STRUFUCT ID LLAVEA tipo_dato ID PYC tipo_dato PYC LLAVEC
Rule 11    declarar_estructuras_error -> STRUFUCT ID LLAVEA tipo_dato PYC tipo_dato PYC LLAVEC
Rule 12    declarar_estructuras_error -> STRUFUCT ID LLAVEA ID PYC ID PYC LLAVEC
Rule 13    declarar_estructuras_error -> STRUFUCT ID LLAVEA tipo_dato ID PYC tipo_dato ID PYC tipo_dato ID PYC LLAVEC
Rule 14    declarar_funciones -> FUNCTION tipo_dato ID PA tipo_dato ID PC LLAVEA bloque_codigo REFETUFURN ID PYC LLAVEC
Rule 15    declarar_funciones -> FUNCTION tipo_dato ID PA PC LLAVEA bloque_codigo REFETUFURN ID PYC LLAVEC
Rule 16    declarar_funciones -> FUNCTION tipo_dato ID PA PC LLAVEA bloque_codigo REFETUFURN PYC LLAVEC
Rule 17    declarar_funciones -> FUNCTION tipo_dato ID PA tipo_dato ID COMA tipo_dato ID PC LLAVEA bloque_codigo REFETUFURN ID PYC LLAVEC
Rule 18    declarar_main -> IFINT MAFAIFIN PA PC LLAVEA bloque_codigo REFETUFURN PYC LLAVEC
Rule 19    declarar_main -> declarar_main_error
Rule 20    declarar_main_error -> MAFAIFIN PA PC LLAVEA bloque_codigo REFETUFURN PYC LLAVEC
Rule 21    declarar_main_error -> IFINT MAFAIFIN PA PC LLAVEA bloque_codigo LLAVEC
Rule 22    declarar_main_error -> MAFAIFIN PA PC LLAVEA bloque_codigo LLAVEC
Rule 23    declarar_main_error -> IFINT PA PC LLAVEA bloque_codigo REFETUFURN PYC LLAVEC
Rule 24    declarar_main_error -> IFINT ID PA PC LLAVEA bloque_codigo REFETUFURN PYC LLAVEC
Rule 25    tipo_dato -> IFINT
Rule 26    tipo_dato -> STRIFING
Rule 27    tipo_dato -> AFARRAFAY
Rule 28    tipo_dato -> STRUFUCT
Rule 29    tipo_dato -> VOFOIFID
Rule 30    tipo_dato -> CHAFAR
Rule 31    tipo_dato -> BOFOOFOL
Rule 32    tipo_dato -> FLOFOAFAT
Rule 33    bloque_codigo -> declarar_if bloque_codigo
Rule 34    bloque_codigo -> declaracion bloque_codigo
Rule 35    bloque_codigo -> asignar_estructuras bloque_codigo
Rule 36    bloque_codigo -> asignar_array bloque_codigo
Rule 37    bloque_codigo -> funcion bloque_codigo
Rule 38    bloque_codigo -> print bloque_codigo
Rule 39    bloque_codigo -> input bloque_codigo
Rule 40    bloque_codigo -> declaracion_while bloque_codigo
Rule 41    bloque_codigo -> VACIO
Rule 42    declarar_if -> IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC
Rule 43    declarar_if -> IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE LLAVEA bloque_codigo LLAVEC
Rule 44    declarar_if -> declarar_if_error_llave
Rule 45    declarar_if_error_llave -> IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE LLAVEA bloque_codigo
Rule 46    declarar_if_error_llave -> IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE bloque_codigo LLAVEC
Rule 47    declaracion -> tipo_dato ID PYC
Rule 48    declaracion -> tipo_dato ID ASG ID operacion_matematica ID PYC
Rule 49    declaracion -> tipo_dato ID ASG dato PYC
Rule 50    declaracion -> AFARRAFAY ID dimensiones PYC
Rule 51    declaracion -> declaracion_error
Rule 52    declaracion_error -> ID PYC
Rule 53    declaracion_error -> ID ASG ID operacion_matematica ID PYC
Rule 54    declaracion_error -> ID ASG valores PYC
Rule 55    declaracion_error -> ID ID PYC
Rule 56    declaracion_error -> ID ID ASG ID operacion_matematica ID PYC
Rule 57    declaracion_error -> ID ID ASG valores PYC
Rule 58    declaracion_error -> ID ID dimensiones PYC
Rule 59    declaracion_error -> ID dimensiones PYC
Rule 60    dimensiones -> dimension dimensiones
Rule 61    dimensiones -> VACIO
Rule 62    dimension -> CA INT CC
Rule 63    asignar_array -> ID dimensiones ASG dato PYC
Rule 64    asignar_estructuras -> ID PUNTO ID ASG dato PYC
Rule 65    funcion -> ID PA valores PC PYC
Rule 66    funcion -> ID PA PC PYC
Rule 67    funcion -> ID PA valores COMA valores PC PYC
Rule 68    print -> PRIFINT PA ID PC PYC
Rule 69    input -> IFINPUFUT PA ID PC PYC
Rule 70    declaracion_while -> WHIFILEFE PA condicion PC LLAVEA bloque_codigo LLAVEC
Rule 71    declaracion_while -> declaracion_while_error
Rule 72    declaracion_while_error -> PA condicion PC LLAVEA bloque_codigo LLAVEC
Rule 73    declaracion_while_error -> ID PA condicion PC LLAVEA bloque_codigo LLAVEC
Rule 74    declaracion_while_error -> WHIFILEFE PA condicion PC bloque_codigo LLAVEC
Rule 75    declaracion_while_error -> WHIFILEFE PA condicion PC LLAVEA bloque_codigo
Rule 76    condicion -> valores operadores valores
Rule 77    condicion -> valores
Rule 78    condicion -> valores operadores_logicos condicion
Rule 79    condicion -> valores NOT valores
Rule 80    operacion_matematica -> SUM
Rule 81    operacion_matematica -> RES
Rule 82    operacion_matematica -> MUL
Rule 83    operacion_matematica -> DIV
Rule 84    operacion_matematica -> RED
Rule 85    operacion_matematica -> POT
Rule 86    valores -> INT
Rule 87    valores -> CHAR
Rule 88    valores -> TRUFUEFE
Rule 89    valores -> FAFALSEFE
Rule 90    valores -> PCC
Rule 91    valores -> ID
Rule 92    dato -> INT
Rule 93    dato -> CHAR
Rule 94    dato -> TRUFUEFE
Rule 95    dato -> FAFALSEFE
Rule 96    dato -> PCC
Rule 97    dato -> REAL
Rule 98    operadores -> MEN
Rule 99    operadores -> MAY
Rule 100   operadores -> MENIG
Rule 101   operadores -> MAYIG
Rule 102   operadores -> CMP
Rule 103   operadores -> DIF
Rule 104   operadores_logicos -> AND
Rule 105   operadores_logicos -> OR
Rule 106   vacio -> VACIO

Terminals, with rules where they appear

AFARRAFAY            : 27 50
AND                  : 104
ASG                  : 48 49 53 54 56 57 63 64
BOFOOFOL             : 31
CA                   : 62
CC                   : 62
CHAFAR               : 30
CHAR                 : 87 93
CMP                  : 102
COMA                 : 17 67
DIF                  : 103
DIV                  : 83
EFELSEFE             : 43 45 46
FAFALSEFE            : 89 95
FLOFOAFAT            : 32
FUNCTION             : 14 15 16 17
ID                   : 5 5 5 7 7 7 8 8 8 8 9 9 10 10 11 12 12 12 13 13 13 13 14 14 14 15 15 16 17 17 17 17 24 47 48 48 48 49 50 52 53 53 53 54 55 55 56 56 56 56 57 57 58 58 59 63 64 64 65 66 67 68 69 73 91
IFIF                 : 42 43 45 46
IFINPUFUT            : 69
IFINT                : 18 21 23 24 25
INT                  : 62 86 92
LLAVEA               : 5 7 8 9 10 11 12 13 14 15 16 17 18 20 21 22 23 24 42 43 43 45 45 46 70 72 73 75
LLAVEC               : 5 7 8 9 10 11 12 13 14 15 16 17 18 20 21 22 23 24 42 43 43 45 46 46 70 72 73 74
MAFAIFIN             : 18 20 21 22
MAY                  : 99
MAYIG                : 101
MEN                  : 98
MENIG                : 100
MUL                  : 82
NOT                  : 79
OR                   : 105
PA                   : 14 15 16 17 18 20 21 22 23 24 42 43 45 46 65 66 67 68 69 70 72 73 74 75
PC                   : 14 15 16 17 18 20 21 22 23 24 42 43 45 46 65 66 67 68 69 70 72 73 74 75
PCC                  : 90 96
POT                  : 85
PRIFINT              : 68
PUNTO                : 64
PYC                  : 5 5 7 7 8 8 9 9 10 10 11 11 12 12 13 13 13 14 15 16 17 18 20 23 24 47 48 49 50 52 53 54 55 56 57 58 59 63 64 65 66 67 68 69
REAL                 : 97
RED                  : 84
REFETUFURN           : 14 15 16 17 18 20 23 24
RES                  : 81
STRIFING             : 26
STRUFUCT             : 5 9 10 11 12 13 28
SUM                  : 80
TRUFUEFE             : 88 94
VACIO                : 41 61 106
VOFOIFID             : 29
WHIFILEFE            : 70 74 75
error                : 

Nonterminals, with rules where they appear

asignar_array        : 36
asignar_estructuras  : 35
bloque_codigo        : 14 15 16 17 18 20 21 22 23 24 33 34 35 36 37 38 39 40 42 43 43 45 45 46 46 70 72 73 74 75
condicion            : 42 43 45 46 70 72 73 74 75 78
dato                 : 49 63 64
declaracion          : 34
declaracion_error    : 51
declaracion_while    : 40
declaracion_while_error : 71
declarar_estructuras : 1 3
declarar_estructuras_error : 6
declarar_funciones   : 2 3
declarar_if          : 33
declarar_if_error_llave : 44
declarar_main        : 1 2 3 4
declarar_main_error  : 19
dimension            : 60
dimensiones          : 50 58 59 60 63
funcion              : 37
input                : 39
operacion_matematica : 48 53 56
operadores           : 76
operadores_logicos   : 78
print                : 38
start                : 0
tipo_dato            : 5 5 7 7 8 8 9 9 10 10 11 11 13 13 13 14 14 15 16 17 17 17 47 48 49
vacio                : 
valores              : 54 57 65 67 67 76 76 77 78 79 79

Parsing method: LALR

state 0

    (0) S' -> . start
    (1) start -> . declarar_estructuras declarar_main
    (2) start -> . declarar_funciones declarar_main
    (3) start -> . declarar_estructuras declarar_funciones declarar_main
    (4) start -> . declarar_main
    (5) declarar_estructuras -> . STRUFUCT ID LLAVEA tipo_dato ID PYC tipo_dato ID PYC LLAVEC
    (6) declarar_estructuras -> . declarar_estructuras_error
    (14) declarar_funciones -> . FUNCTION tipo_dato ID PA tipo_dato ID PC LLAVEA bloque_codigo REFETUFURN ID PYC LLAVEC
    (15) declarar_funciones -> . FUNCTION tipo_dato ID PA PC LLAVEA bloque_codigo REFETUFURN ID PYC LLAVEC
    (16) declarar_funciones -> . FUNCTION tipo_dato ID PA PC LLAVEA bloque_codigo REFETUFURN PYC LLAVEC
    (17) declarar_funciones -> . FUNCTION tipo_dato ID PA tipo_dato ID COMA tipo_dato ID PC LLAVEA bloque_codigo REFETUFURN ID PYC LLAVEC
    (18) declarar_main -> . IFINT MAFAIFIN PA PC LLAVEA bloque_codigo REFETUFURN PYC LLAVEC
    (19) declarar_main -> . declarar_main_error
    (7) declarar_estructuras_error -> . ID LLAVEA tipo_dato ID PYC tipo_dato ID PYC LLAVEC
    (8) declarar_estructuras_error -> . ID ID LLAVEA tipo_dato ID PYC tipo_dato ID PYC LLAVEC
    (9) declarar_estructuras_error -> . STRUFUCT ID LLAVEA tipo_dato PYC tipo_dato ID PYC LLAVEC
    (10) declarar_estructuras_error -> . STRUFUCT ID LLAVEA tipo_dato ID PYC tipo_dato PYC LLAVEC
    (11) declarar_estructuras_error -> . STRUFUCT ID LLAVEA tipo_dato PYC tipo_dato PYC LLAVEC
    (12) declarar_estructuras_error -> . STRUFUCT ID LLAVEA ID PYC ID PYC LLAVEC
    (13) declarar_estructuras_error -> . STRUFUCT ID LLAVEA tipo_dato ID PYC tipo_dato ID PYC tipo_dato ID PYC LLAVEC
    (20) declarar_main_error -> . MAFAIFIN PA PC LLAVEA bloque_codigo REFETUFURN PYC LLAVEC
    (21) declarar_main_error -> . IFINT MAFAIFIN PA PC LLAVEA bloque_codigo LLAVEC
    (22) declarar_main_error -> . MAFAIFIN PA PC LLAVEA bloque_codigo LLAVEC
    (23) declarar_main_error -> . IFINT PA PC LLAVEA bloque_codigo REFETUFURN PYC LLAVEC
    (24) declarar_main_error -> . IFINT ID PA PC LLAVEA bloque_codigo REFETUFURN PYC LLAVEC

    STRUFUCT        shift and go to state 5
    FUNCTION        shift and go to state 8
    IFINT           shift and go to state 9
    ID              shift and go to state 6
    MAFAIFIN        shift and go to state 10

    start                          shift and go to state 1
    declarar_estructuras           shift and go to state 2
    declarar_main                  shift and go to state 3
    declarar_funciones             shift and go to state 4
    declarar_estructuras_error     shift and go to state 7
    declarar_main_error            shift and go to state 11

state 1

    (0) S' -> start .



state 2

    (1) start -> declarar_estructuras . declarar_main
    (3) start -> declarar_estructuras . declarar_funciones declarar_main
    (18) declarar_main -> . IFINT MAFAIFIN PA PC LLAVEA bloque_codigo REFETUFURN PYC LLAVEC
    (19) declarar_main -> . declarar_main_error
    (14) declarar_funciones -> . FUNCTION tipo_dato ID PA tipo_dato ID PC LLAVEA bloque_codigo REFETUFURN ID PYC LLAVEC
    (15) declarar_funciones -> . FUNCTION tipo_dato ID PA PC LLAVEA bloque_codigo REFETUFURN ID PYC LLAVEC
    (16) declarar_funciones -> . FUNCTION tipo_dato ID PA PC LLAVEA bloque_codigo REFETUFURN PYC LLAVEC
    (17) declarar_funciones -> . FUNCTION tipo_dato ID PA tipo_dato ID COMA tipo_dato ID PC LLAVEA bloque_codigo REFETUFURN ID PYC LLAVEC
    (20) declarar_main_error -> . MAFAIFIN PA PC LLAVEA bloque_codigo REFETUFURN PYC LLAVEC
    (21) declarar_main_error -> . IFINT MAFAIFIN PA PC LLAVEA bloque_codigo LLAVEC
    (22) declarar_main_error -> . MAFAIFIN PA PC LLAVEA bloque_codigo LLAVEC
    (23) declarar_main_error -> . IFINT PA PC LLAVEA bloque_codigo REFETUFURN PYC LLAVEC
    (24) declarar_main_error -> . IFINT ID PA PC LLAVEA bloque_codigo REFETUFURN PYC LLAVEC

    IFINT           shift and go to state 9
    FUNCTION        shift and go to state 8
    MAFAIFIN        shift and go to state 10

    declarar_main                  shift and go to state 12
    declarar_funciones             shift and go to state 13
    declarar_main_error            shift and go to state 11

state 3

    (4) start -> declarar_main .

    $end            reduce using rule 4 (start -> declarar_main .)


state 4

    (2) start -> declarar_funciones . declarar_main
    (18) declarar_main -> . IFINT MAFAIFIN PA PC LLAVEA bloque_codigo REFETUFURN PYC LLAVEC
    (19) declarar_main -> . declarar_main_error
    (20) declarar_main_error -> . MAFAIFIN PA PC LLAVEA bloque_codigo REFETUFURN PYC LLAVEC
    (21) declarar_main_error -> . IFINT MAFAIFIN PA PC LLAVEA bloque_codigo LLAVEC
    (22) declarar_main_error -> . MAFAIFIN PA PC LLAVEA bloque_codigo LLAVEC
    (23) declarar_main_error -> . IFINT PA PC LLAVEA bloque_codigo REFETUFURN PYC LLAVEC
    (24) declarar_main_error -> . IFINT ID PA PC LLAVEA bloque_codigo REFETUFURN PYC LLAVEC

    IFINT           shift and go to state 9
    MAFAIFIN        shift and go to state 10

    declarar_main                  shift and go to state 14
    declarar_main_error            shift and go to state 11

state 5

    (5) declarar_estructuras -> STRUFUCT . ID LLAVEA tipo_dato ID PYC tipo_dato ID PYC LLAVEC
    (9) declarar_estructuras_error -> STRUFUCT . ID LLAVEA tipo_dato PYC tipo_dato ID PYC LLAVEC
    (10) declarar_estructuras_error -> STRUFUCT . ID LLAVEA tipo_dato ID PYC tipo_dato PYC LLAVEC
    (11) declarar_estructuras_error -> STRUFUCT . ID LLAVEA tipo_dato PYC tipo_dato PYC LLAVEC
    (12) declarar_estructuras_error -> STRUFUCT . ID LLAVEA ID PYC ID PYC LLAVEC
    (13) declarar_estructuras_error -> STRUFUCT . ID LLAVEA tipo_dato ID PYC tipo_dato ID PYC tipo_dato ID PYC LLAVEC

    ID              shift and go to state 15


state 6

    (7) declarar_estructuras_error -> ID . LLAVEA tipo_dato ID PYC tipo_dato ID PYC LLAVEC
    (8) declarar_estructuras_error -> ID . ID LLAVEA tipo_dato ID PYC tipo_dato ID PYC LLAVEC

    LLAVEA          shift and go to state 17
    ID              shift and go to state 16


state 7

    (6) declarar_estructuras -> declarar_estructuras_error .

    IFINT           reduce using rule 6 (declarar_estructuras -> declarar_estructuras_error .)
    FUNCTION        reduce using rule 6 (declarar_estructuras -> declarar_estructuras_error .)
    MAFAIFIN        reduce using rule 6 (declarar_estructuras -> declarar_estructuras_error .)


state 8

    (14) declarar_funciones -> FUNCTION . tipo_dato ID PA tipo_dato ID PC LLAVEA bloque_codigo REFETUFURN ID PYC LLAVEC
    (15) declarar_funciones -> FUNCTION . tipo_dato ID PA PC LLAVEA bloque_codigo REFETUFURN ID PYC LLAVEC
    (16) declarar_funciones -> FUNCTION . tipo_dato ID PA PC LLAVEA bloque_codigo REFETUFURN PYC LLAVEC
    (17) declarar_funciones -> FUNCTION . tipo_dato ID PA tipo_dato ID COMA tipo_dato ID PC LLAVEA bloque_codigo REFETUFURN ID PYC LLAVEC
    (25) tipo_dato -> . IFINT
    (26) tipo_dato -> . STRIFING
    (27) tipo_dato -> . AFARRAFAY
    (28) tipo_dato -> . STRUFUCT
    (29) tipo_dato -> . VOFOIFID
    (30) tipo_dato -> . CHAFAR
    (31) tipo_dato -> . BOFOOFOL
    (32) tipo_dato -> . FLOFOAFAT

    IFINT           shift and go to state 19
    STRIFING        shift and go to state 20
    AFARRAFAY       shift and go to state 21
    STRUFUCT        shift and go to state 22
    VOFOIFID        shift and go to state 23
    CHAFAR          shift and go to state 24
    BOFOOFOL        shift and go to state 25
    FLOFOAFAT       shift and go to state 26

    tipo_dato                      shift and go to state 18

state 9

    (18) declarar_main -> IFINT . MAFAIFIN PA PC LLAVEA bloque_codigo REFETUFURN PYC LLAVEC
    (21) declarar_main_error -> IFINT . MAFAIFIN PA PC LLAVEA bloque_codigo LLAVEC
    (23) declarar_main_error -> IFINT . PA PC LLAVEA bloque_codigo REFETUFURN PYC LLAVEC
    (24) declarar_main_error -> IFINT . ID PA PC LLAVEA bloque_codigo REFETUFURN PYC LLAVEC

    MAFAIFIN        shift and go to state 27
    PA              shift and go to state 28
    ID              shift and go to state 29


state 10

    (20) declarar_main_error -> MAFAIFIN . PA PC LLAVEA bloque_codigo REFETUFURN PYC LLAVEC
    (22) declarar_main_error -> MAFAIFIN . PA PC LLAVEA bloque_codigo LLAVEC

    PA              shift and go to state 30


state 11

    (19) declarar_main -> declarar_main_error .

    $end            reduce using rule 19 (declarar_main -> declarar_main_error .)


state 12

    (1) start -> declarar_estructuras declarar_main .

    $end            reduce using rule 1 (start -> declarar_estructuras declarar_main .)


state 13

    (3) start -> declarar_estructuras declarar_funciones . declarar_main
    (18) declarar_main -> . IFINT MAFAIFIN PA PC LLAVEA bloque_codigo REFETUFURN PYC LLAVEC
    (19) declarar_main -> . declarar_main_error
    (20) declarar_main_error -> . MAFAIFIN PA PC LLAVEA bloque_codigo REFETUFURN PYC LLAVEC
    (21) declarar_main_error -> . IFINT MAFAIFIN PA PC LLAVEA bloque_codigo LLAVEC
    (22) declarar_main_error -> . MAFAIFIN PA PC LLAVEA bloque_codigo LLAVEC
    (23) declarar_main_error -> . IFINT PA PC LLAVEA bloque_codigo REFETUFURN PYC LLAVEC
    (24) declarar_main_error -> . IFINT ID PA PC LLAVEA bloque_codigo REFETUFURN PYC LLAVEC

    IFINT           shift and go to state 9
    MAFAIFIN        shift and go to state 10

    declarar_main                  shift and go to state 31
    declarar_main_error            shift and go to state 11

state 14

    (2) start -> declarar_funciones declarar_main .

    $end            reduce using rule 2 (start -> declarar_funciones declarar_main .)


state 15

    (5) declarar_estructuras -> STRUFUCT ID . LLAVEA tipo_dato ID PYC tipo_dato ID PYC LLAVEC
    (9) declarar_estructuras_error -> STRUFUCT ID . LLAVEA tipo_dato PYC tipo_dato ID PYC LLAVEC
    (10) declarar_estructuras_error -> STRUFUCT ID . LLAVEA tipo_dato ID PYC tipo_dato PYC LLAVEC
    (11) declarar_estructuras_error -> STRUFUCT ID . LLAVEA tipo_dato PYC tipo_dato PYC LLAVEC
    (12) declarar_estructuras_error -> STRUFUCT ID . LLAVEA ID PYC ID PYC LLAVEC
    (13) declarar_estructuras_error -> STRUFUCT ID . LLAVEA tipo_dato ID PYC tipo_dato ID PYC tipo_dato ID PYC LLAVEC

    LLAVEA          shift and go to state 32


state 16

    (8) declarar_estructuras_error -> ID ID . LLAVEA tipo_dato ID PYC tipo_dato ID PYC LLAVEC

    LLAVEA          shift and go to state 33


state 17

    (7) declarar_estructuras_error -> ID LLAVEA . tipo_dato ID PYC tipo_dato ID PYC LLAVEC
    (25) tipo_dato -> . IFINT
    (26) tipo_dato -> . STRIFING
    (27) tipo_dato -> . AFARRAFAY
    (28) tipo_dato -> . STRUFUCT
    (29) tipo_dato -> . VOFOIFID
    (30) tipo_dato -> . CHAFAR
    (31) tipo_dato -> . BOFOOFOL
    (32) tipo_dato -> . FLOFOAFAT

    IFINT           shift and go to state 19
    STRIFING        shift and go to state 20
    AFARRAFAY       shift and go to state 21
    STRUFUCT        shift and go to state 22
    VOFOIFID        shift and go to state 23
    CHAFAR          shift and go to state 24
    BOFOOFOL        shift and go to state 25
    FLOFOAFAT       shift and go to state 26

    tipo_dato                      shift and go to state 34

state 18

    (14) declarar_funciones -> FUNCTION tipo_dato . ID PA tipo_dato ID PC LLAVEA bloque_codigo REFETUFURN ID PYC LLAVEC
    (15) declarar_funciones -> FUNCTION tipo_dato . ID PA PC LLAVEA bloque_codigo REFETUFURN ID PYC LLAVEC
    (16) declarar_funciones -> FUNCTION tipo_dato . ID PA PC LLAVEA bloque_codigo REFETUFURN PYC LLAVEC
    (17) declarar_funciones -> FUNCTION tipo_dato . ID PA tipo_dato ID COMA tipo_dato ID PC LLAVEA bloque_codigo REFETUFURN ID PYC LLAVEC

    ID              shift and go to state 35


state 19

    (25) tipo_dato -> IFINT .

    ID              reduce using rule 25 (tipo_dato -> IFINT .)
    PYC             reduce using rule 25 (tipo_dato -> IFINT .)


state 20

    (26) tipo_dato -> STRIFING .

    ID              reduce using rule 26 (tipo_dato -> STRIFING .)
    PYC             reduce using rule 26 (tipo_dato -> STRIFING .)


state 21

    (27) tipo_dato -> AFARRAFAY .

    ID              reduce using rule 27 (tipo_dato -> AFARRAFAY .)
    PYC             reduce using rule 27 (tipo_dato -> AFARRAFAY .)


state 22

    (28) tipo_dato -> STRUFUCT .

    ID              reduce using rule 28 (tipo_dato -> STRUFUCT .)
    PYC             reduce using rule 28 (tipo_dato -> STRUFUCT .)


state 23

    (29) tipo_dato -> VOFOIFID .

    ID              reduce using rule 29 (tipo_dato -> VOFOIFID .)
    PYC             reduce using rule 29 (tipo_dato -> VOFOIFID .)


state 24

    (30) tipo_dato -> CHAFAR .

    ID              reduce using rule 30 (tipo_dato -> CHAFAR .)
    PYC             reduce using rule 30 (tipo_dato -> CHAFAR .)


state 25

    (31) tipo_dato -> BOFOOFOL .

    ID              reduce using rule 31 (tipo_dato -> BOFOOFOL .)
    PYC             reduce using rule 31 (tipo_dato -> BOFOOFOL .)


state 26

    (32) tipo_dato -> FLOFOAFAT .

    ID              reduce using rule 32 (tipo_dato -> FLOFOAFAT .)
    PYC             reduce using rule 32 (tipo_dato -> FLOFOAFAT .)


state 27

    (18) declarar_main -> IFINT MAFAIFIN . PA PC LLAVEA bloque_codigo REFETUFURN PYC LLAVEC
    (21) declarar_main_error -> IFINT MAFAIFIN . PA PC LLAVEA bloque_codigo LLAVEC

    PA              shift and go to state 36


state 28

    (23) declarar_main_error -> IFINT PA . PC LLAVEA bloque_codigo REFETUFURN PYC LLAVEC

    PC              shift and go to state 37


state 29

    (24) declarar_main_error -> IFINT ID . PA PC LLAVEA bloque_codigo REFETUFURN PYC LLAVEC

    PA              shift and go to state 38


state 30

    (20) declarar_main_error -> MAFAIFIN PA . PC LLAVEA bloque_codigo REFETUFURN PYC LLAVEC
    (22) declarar_main_error -> MAFAIFIN PA . PC LLAVEA bloque_codigo LLAVEC

    PC              shift and go to state 39


state 31

    (3) start -> declarar_estructuras declarar_funciones declarar_main .

    $end            reduce using rule 3 (start -> declarar_estructuras declarar_funciones declarar_main .)


state 32

    (5) declarar_estructuras -> STRUFUCT ID LLAVEA . tipo_dato ID PYC tipo_dato ID PYC LLAVEC
    (9) declarar_estructuras_error -> STRUFUCT ID LLAVEA . tipo_dato PYC tipo_dato ID PYC LLAVEC
    (10) declarar_estructuras_error -> STRUFUCT ID LLAVEA . tipo_dato ID PYC tipo_dato PYC LLAVEC
    (11) declarar_estructuras_error -> STRUFUCT ID LLAVEA . tipo_dato PYC tipo_dato PYC LLAVEC
    (12) declarar_estructuras_error -> STRUFUCT ID LLAVEA . ID PYC ID PYC LLAVEC
    (13) declarar_estructuras_error -> STRUFUCT ID LLAVEA . tipo_dato ID PYC tipo_dato ID PYC tipo_dato ID PYC LLAVEC
    (25) tipo_dato -> . IFINT
    (26) tipo_dato -> . STRIFING
    (27) tipo_dato -> . AFARRAFAY
    (28) tipo_dato -> . STRUFUCT
    (29) tipo_dato -> . VOFOIFID
    (30) tipo_dato -> . CHAFAR
    (31) tipo_dato -> . BOFOOFOL
    (32) tipo_dato -> . FLOFOAFAT

    ID              shift and go to state 40
    IFINT           shift and go to state 19
    STRIFING        shift and go to state 20
    AFARRAFAY       shift and go to state 21
    STRUFUCT        shift and go to state 22
    VOFOIFID        shift and go to state 23
    CHAFAR          shift and go to state 24
    BOFOOFOL        shift and go to state 25
    FLOFOAFAT       shift and go to state 26

    tipo_dato                      shift and go to state 41

state 33

    (8) declarar_estructuras_error -> ID ID LLAVEA . tipo_dato ID PYC tipo_dato ID PYC LLAVEC
    (25) tipo_dato -> . IFINT
    (26) tipo_dato -> . STRIFING
    (27) tipo_dato -> . AFARRAFAY
    (28) tipo_dato -> . STRUFUCT
    (29) tipo_dato -> . VOFOIFID
    (30) tipo_dato -> . CHAFAR
    (31) tipo_dato -> . BOFOOFOL
    (32) tipo_dato -> . FLOFOAFAT

    IFINT           shift and go to state 19
    STRIFING        shift and go to state 20
    AFARRAFAY       shift and go to state 21
    STRUFUCT        shift and go to state 22
    VOFOIFID        shift and go to state 23
    CHAFAR          shift and go to state 24
    BOFOOFOL        shift and go to state 25
    FLOFOAFAT       shift and go to state 26

    tipo_dato                      shift and go to state 42

state 34

    (7) declarar_estructuras_error -> ID LLAVEA tipo_dato . ID PYC tipo_dato ID PYC LLAVEC

    ID              shift and go to state 43


state 35

    (14) declarar_funciones -> FUNCTION tipo_dato ID . PA tipo_dato ID PC LLAVEA bloque_codigo REFETUFURN ID PYC LLAVEC
    (15) declarar_funciones -> FUNCTION tipo_dato ID . PA PC LLAVEA bloque_codigo REFETUFURN ID PYC LLAVEC
    (16) declarar_funciones -> FUNCTION tipo_dato ID . PA PC LLAVEA bloque_codigo REFETUFURN PYC LLAVEC
    (17) declarar_funciones -> FUNCTION tipo_dato ID . PA tipo_dato ID COMA tipo_dato ID PC LLAVEA bloque_codigo REFETUFURN ID PYC LLAVEC

    PA              shift and go to state 44


state 36

    (18) declarar_main -> IFINT MAFAIFIN PA . PC LLAVEA bloque_codigo REFETUFURN PYC LLAVEC
    (21) declarar_main_error -> IFINT MAFAIFIN PA . PC LLAVEA bloque_codigo LLAVEC

    PC              shift and go to state 45


state 37

    (23) declarar_main_error -> IFINT PA PC . LLAVEA bloque_codigo REFETUFURN PYC LLAVEC

    LLAVEA          shift and go to state 46


state 38

    (24) declarar_main_error -> IFINT ID PA . PC LLAVEA bloque_codigo REFETUFURN PYC LLAVEC

    PC              shift and go to state 47


state 39

    (20) declarar_main_error -> MAFAIFIN PA PC . LLAVEA bloque_codigo REFETUFURN PYC LLAVEC
    (22) declarar_main_error -> MAFAIFIN PA PC . LLAVEA bloque_codigo LLAVEC

    LLAVEA          shift and go to state 48


state 40

    (12) declarar_estructuras_error -> STRUFUCT ID LLAVEA ID . PYC ID PYC LLAVEC

    PYC             shift and go to state 49


state 41

    (5) declarar_estructuras -> STRUFUCT ID LLAVEA tipo_dato . ID PYC tipo_dato ID PYC LLAVEC
    (9) declarar_estructuras_error -> STRUFUCT ID LLAVEA tipo_dato . PYC tipo_dato ID PYC LLAVEC
    (10) declarar_estructuras_error -> STRUFUCT ID LLAVEA tipo_dato . ID PYC tipo_dato PYC LLAVEC
    (11) declarar_estructuras_error -> STRUFUCT ID LLAVEA tipo_dato . PYC tipo_dato PYC LLAVEC
    (13) declarar_estructuras_error -> STRUFUCT ID LLAVEA tipo_dato . ID PYC tipo_dato ID PYC tipo_dato ID PYC LLAVEC

    ID              shift and go to state 50
    PYC             shift and go to state 51


state 42

    (8) declarar_estructuras_error -> ID ID LLAVEA tipo_dato . ID PYC tipo_dato ID PYC LLAVEC

    ID              shift and go to state 52


state 43

    (7) declarar_estructuras_error -> ID LLAVEA tipo_dato ID . PYC tipo_dato ID PYC LLAVEC

    PYC             shift and go to state 53


state 44

    (14) declarar_funciones -> FUNCTION tipo_dato ID PA . tipo_dato ID PC LLAVEA bloque_codigo REFETUFURN ID PYC LLAVEC
    (15) declarar_funciones -> FUNCTION tipo_dato ID PA . PC LLAVEA bloque_codigo REFETUFURN ID PYC LLAVEC
    (16) declarar_funciones -> FUNCTION tipo_dato ID PA . PC LLAVEA bloque_codigo REFETUFURN PYC LLAVEC
    (17) declarar_funciones -> FUNCTION tipo_dato ID PA . tipo_dato ID COMA tipo_dato ID PC LLAVEA bloque_codigo REFETUFURN ID PYC LLAVEC
    (25) tipo_dato -> . IFINT
    (26) tipo_dato -> . STRIFING
    (27) tipo_dato -> . AFARRAFAY
    (28) tipo_dato -> . STRUFUCT
    (29) tipo_dato -> . VOFOIFID
    (30) tipo_dato -> . CHAFAR
    (31) tipo_dato -> . BOFOOFOL
    (32) tipo_dato -> . FLOFOAFAT

    PC              shift and go to state 55
    IFINT           shift and go to state 19
    STRIFING        shift and go to state 20
    AFARRAFAY       shift and go to state 21
    STRUFUCT        shift and go to state 22
    VOFOIFID        shift and go to state 23
    CHAFAR          shift and go to state 24
    BOFOOFOL        shift and go to state 25
    FLOFOAFAT       shift and go to state 26

    tipo_dato                      shift and go to state 54

state 45

    (18) declarar_main -> IFINT MAFAIFIN PA PC . LLAVEA bloque_codigo REFETUFURN PYC LLAVEC
    (21) declarar_main_error -> IFINT MAFAIFIN PA PC . LLAVEA bloque_codigo LLAVEC

    LLAVEA          shift and go to state 56


state 46

    (23) declarar_main_error -> IFINT PA PC LLAVEA . bloque_codigo REFETUFURN PYC LLAVEC
    (33) bloque_codigo -> . declarar_if bloque_codigo
    (34) bloque_codigo -> . declaracion bloque_codigo
    (35) bloque_codigo -> . asignar_estructuras bloque_codigo
    (36) bloque_codigo -> . asignar_array bloque_codigo
    (37) bloque_codigo -> . funcion bloque_codigo
    (38) bloque_codigo -> . print bloque_codigo
    (39) bloque_codigo -> . input bloque_codigo
    (40) bloque_codigo -> . declaracion_while bloque_codigo
    (41) bloque_codigo -> . VACIO
    (42) declarar_if -> . IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC
    (43) declarar_if -> . IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE LLAVEA bloque_codigo LLAVEC
    (44) declarar_if -> . declarar_if_error_llave
    (47) declaracion -> . tipo_dato ID PYC
    (48) declaracion -> . tipo_dato ID ASG ID operacion_matematica ID PYC
    (49) declaracion -> . tipo_dato ID ASG dato PYC
    (50) declaracion -> . AFARRAFAY ID dimensiones PYC
    (51) declaracion -> . declaracion_error
    (64) asignar_estructuras -> . ID PUNTO ID ASG dato PYC
    (63) asignar_array -> . ID dimensiones ASG dato PYC
    (65) funcion -> . ID PA valores PC PYC
    (66) funcion -> . ID PA PC PYC
    (67) funcion -> . ID PA valores COMA valores PC PYC
    (68) print -> . PRIFINT PA ID PC PYC
    (69) input -> . IFINPUFUT PA ID PC PYC
    (70) declaracion_while -> . WHIFILEFE PA condicion PC LLAVEA bloque_codigo LLAVEC
    (71) declaracion_while -> . declaracion_while_error
    (45) declarar_if_error_llave -> . IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE LLAVEA bloque_codigo
    (46) declarar_if_error_llave -> . IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE bloque_codigo LLAVEC
    (25) tipo_dato -> . IFINT
    (26) tipo_dato -> . STRIFING
    (27) tipo_dato -> . AFARRAFAY
    (28) tipo_dato -> . STRUFUCT
    (29) tipo_dato -> . VOFOIFID
    (30) tipo_dato -> . CHAFAR
    (31) tipo_dato -> . BOFOOFOL
    (32) tipo_dato -> . FLOFOAFAT
    (52) declaracion_error -> . ID PYC
    (53) declaracion_error -> . ID ASG ID operacion_matematica ID PYC
    (54) declaracion_error -> . ID ASG valores PYC
    (55) declaracion_error -> . ID ID PYC
    (56) declaracion_error -> . ID ID ASG ID operacion_matematica ID PYC
    (57) declaracion_error -> . ID ID ASG valores PYC
    (58) declaracion_error -> . ID ID dimensiones PYC
    (59) declaracion_error -> . ID dimensiones PYC
    (72) declaracion_while_error -> . PA condicion PC LLAVEA bloque_codigo LLAVEC
    (73) declaracion_while_error -> . ID PA condicion PC LLAVEA bloque_codigo LLAVEC
    (74) declaracion_while_error -> . WHIFILEFE PA condicion PC bloque_codigo LLAVEC
    (75) declaracion_while_error -> . WHIFILEFE PA condicion PC LLAVEA bloque_codigo

    VACIO           shift and go to state 67
    IFIF            shift and go to state 68
    AFARRAFAY       shift and go to state 72
    ID              shift and go to state 71
    PRIFINT         shift and go to state 74
    IFINPUFUT       shift and go to state 75
    WHIFILEFE       shift and go to state 76
    IFINT           shift and go to state 19
    STRIFING        shift and go to state 20
    STRUFUCT        shift and go to state 22
    VOFOIFID        shift and go to state 23
    CHAFAR          shift and go to state 24
    BOFOOFOL        shift and go to state 25
    FLOFOAFAT       shift and go to state 26
    PA              shift and go to state 57

    bloque_codigo                  shift and go to state 58
    declarar_if                    shift and go to state 59
    declaracion                    shift and go to state 60
    asignar_estructuras            shift and go to state 61
    asignar_array                  shift and go to state 62
    funcion                        shift and go to state 63
    print                          shift and go to state 64
    input                          shift and go to state 65
    declaracion_while              shift and go to state 66
    declarar_if_error_llave        shift and go to state 69
    tipo_dato                      shift and go to state 70
    declaracion_error              shift and go to state 73
    declaracion_while_error        shift and go to state 77

state 47

    (24) declarar_main_error -> IFINT ID PA PC . LLAVEA bloque_codigo REFETUFURN PYC LLAVEC

    LLAVEA          shift and go to state 78


state 48

    (20) declarar_main_error -> MAFAIFIN PA PC LLAVEA . bloque_codigo REFETUFURN PYC LLAVEC
    (22) declarar_main_error -> MAFAIFIN PA PC LLAVEA . bloque_codigo LLAVEC
    (33) bloque_codigo -> . declarar_if bloque_codigo
    (34) bloque_codigo -> . declaracion bloque_codigo
    (35) bloque_codigo -> . asignar_estructuras bloque_codigo
    (36) bloque_codigo -> . asignar_array bloque_codigo
    (37) bloque_codigo -> . funcion bloque_codigo
    (38) bloque_codigo -> . print bloque_codigo
    (39) bloque_codigo -> . input bloque_codigo
    (40) bloque_codigo -> . declaracion_while bloque_codigo
    (41) bloque_codigo -> . VACIO
    (42) declarar_if -> . IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC
    (43) declarar_if -> . IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE LLAVEA bloque_codigo LLAVEC
    (44) declarar_if -> . declarar_if_error_llave
    (47) declaracion -> . tipo_dato ID PYC
    (48) declaracion -> . tipo_dato ID ASG ID operacion_matematica ID PYC
    (49) declaracion -> . tipo_dato ID ASG dato PYC
    (50) declaracion -> . AFARRAFAY ID dimensiones PYC
    (51) declaracion -> . declaracion_error
    (64) asignar_estructuras -> . ID PUNTO ID ASG dato PYC
    (63) asignar_array -> . ID dimensiones ASG dato PYC
    (65) funcion -> . ID PA valores PC PYC
    (66) funcion -> . ID PA PC PYC
    (67) funcion -> . ID PA valores COMA valores PC PYC
    (68) print -> . PRIFINT PA ID PC PYC
    (69) input -> . IFINPUFUT PA ID PC PYC
    (70) declaracion_while -> . WHIFILEFE PA condicion PC LLAVEA bloque_codigo LLAVEC
    (71) declaracion_while -> . declaracion_while_error
    (45) declarar_if_error_llave -> . IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE LLAVEA bloque_codigo
    (46) declarar_if_error_llave -> . IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE bloque_codigo LLAVEC
    (25) tipo_dato -> . IFINT
    (26) tipo_dato -> . STRIFING
    (27) tipo_dato -> . AFARRAFAY
    (28) tipo_dato -> . STRUFUCT
    (29) tipo_dato -> . VOFOIFID
    (30) tipo_dato -> . CHAFAR
    (31) tipo_dato -> . BOFOOFOL
    (32) tipo_dato -> . FLOFOAFAT
    (52) declaracion_error -> . ID PYC
    (53) declaracion_error -> . ID ASG ID operacion_matematica ID PYC
    (54) declaracion_error -> . ID ASG valores PYC
    (55) declaracion_error -> . ID ID PYC
    (56) declaracion_error -> . ID ID ASG ID operacion_matematica ID PYC
    (57) declaracion_error -> . ID ID ASG valores PYC
    (58) declaracion_error -> . ID ID dimensiones PYC
    (59) declaracion_error -> . ID dimensiones PYC
    (72) declaracion_while_error -> . PA condicion PC LLAVEA bloque_codigo LLAVEC
    (73) declaracion_while_error -> . ID PA condicion PC LLAVEA bloque_codigo LLAVEC
    (74) declaracion_while_error -> . WHIFILEFE PA condicion PC bloque_codigo LLAVEC
    (75) declaracion_while_error -> . WHIFILEFE PA condicion PC LLAVEA bloque_codigo

    VACIO           shift and go to state 67
    IFIF            shift and go to state 68
    AFARRAFAY       shift and go to state 72
    ID              shift and go to state 71
    PRIFINT         shift and go to state 74
    IFINPUFUT       shift and go to state 75
    WHIFILEFE       shift and go to state 76
    IFINT           shift and go to state 19
    STRIFING        shift and go to state 20
    STRUFUCT        shift and go to state 22
    VOFOIFID        shift and go to state 23
    CHAFAR          shift and go to state 24
    BOFOOFOL        shift and go to state 25
    FLOFOAFAT       shift and go to state 26
    PA              shift and go to state 57

    bloque_codigo                  shift and go to state 79
    declarar_if                    shift and go to state 59
    declaracion                    shift and go to state 60
    asignar_estructuras            shift and go to state 61
    asignar_array                  shift and go to state 62
    funcion                        shift and go to state 63
    print                          shift and go to state 64
    input                          shift and go to state 65
    declaracion_while              shift and go to state 66
    declarar_if_error_llave        shift and go to state 69
    tipo_dato                      shift and go to state 70
    declaracion_error              shift and go to state 73
    declaracion_while_error        shift and go to state 77

state 49

    (12) declarar_estructuras_error -> STRUFUCT ID LLAVEA ID PYC . ID PYC LLAVEC

    ID              shift and go to state 80


state 50

    (5) declarar_estructuras -> STRUFUCT ID LLAVEA tipo_dato ID . PYC tipo_dato ID PYC LLAVEC
    (10) declarar_estructuras_error -> STRUFUCT ID LLAVEA tipo_dato ID . PYC tipo_dato PYC LLAVEC
    (13) declarar_estructuras_error -> STRUFUCT ID LLAVEA tipo_dato ID . PYC tipo_dato ID PYC tipo_dato ID PYC LLAVEC

    PYC             shift and go to state 81


state 51

    (9) declarar_estructuras_error -> STRUFUCT ID LLAVEA tipo_dato PYC . tipo_dato ID PYC LLAVEC
    (11) declarar_estructuras_error -> STRUFUCT ID LLAVEA tipo_dato PYC . tipo_dato PYC LLAVEC
    (25) tipo_dato -> . IFINT
    (26) tipo_dato -> . STRIFING
    (27) tipo_dato -> . AFARRAFAY
    (28) tipo_dato -> . STRUFUCT
    (29) tipo_dato -> . VOFOIFID
    (30) tipo_dato -> . CHAFAR
    (31) tipo_dato -> . BOFOOFOL
    (32) tipo_dato -> . FLOFOAFAT

    IFINT           shift and go to state 19
    STRIFING        shift and go to state 20
    AFARRAFAY       shift and go to state 21
    STRUFUCT        shift and go to state 22
    VOFOIFID        shift and go to state 23
    CHAFAR          shift and go to state 24
    BOFOOFOL        shift and go to state 25
    FLOFOAFAT       shift and go to state 26

    tipo_dato                      shift and go to state 82

state 52

    (8) declarar_estructuras_error -> ID ID LLAVEA tipo_dato ID . PYC tipo_dato ID PYC LLAVEC

    PYC             shift and go to state 83


state 53

    (7) declarar_estructuras_error -> ID LLAVEA tipo_dato ID PYC . tipo_dato ID PYC LLAVEC
    (25) tipo_dato -> . IFINT
    (26) tipo_dato -> . STRIFING
    (27) tipo_dato -> . AFARRAFAY
    (28) tipo_dato -> . STRUFUCT
    (29) tipo_dato -> . VOFOIFID
    (30) tipo_dato -> . CHAFAR
    (31) tipo_dato -> . BOFOOFOL
    (32) tipo_dato -> . FLOFOAFAT

    IFINT           shift and go to state 19
    STRIFING        shift and go to state 20
    AFARRAFAY       shift and go to state 21
    STRUFUCT        shift and go to state 22
    VOFOIFID        shift and go to state 23
    CHAFAR          shift and go to state 24
    BOFOOFOL        shift and go to state 25
    FLOFOAFAT       shift and go to state 26

    tipo_dato                      shift and go to state 84

state 54

    (14) declarar_funciones -> FUNCTION tipo_dato ID PA tipo_dato . ID PC LLAVEA bloque_codigo REFETUFURN ID PYC LLAVEC
    (17) declarar_funciones -> FUNCTION tipo_dato ID PA tipo_dato . ID COMA tipo_dato ID PC LLAVEA bloque_codigo REFETUFURN ID PYC LLAVEC

    ID              shift and go to state 85


state 55

    (15) declarar_funciones -> FUNCTION tipo_dato ID PA PC . LLAVEA bloque_codigo REFETUFURN ID PYC LLAVEC
    (16) declarar_funciones -> FUNCTION tipo_dato ID PA PC . LLAVEA bloque_codigo REFETUFURN PYC LLAVEC

    LLAVEA          shift and go to state 86


state 56

    (18) declarar_main -> IFINT MAFAIFIN PA PC LLAVEA . bloque_codigo REFETUFURN PYC LLAVEC
    (21) declarar_main_error -> IFINT MAFAIFIN PA PC LLAVEA . bloque_codigo LLAVEC
    (33) bloque_codigo -> . declarar_if bloque_codigo
    (34) bloque_codigo -> . declaracion bloque_codigo
    (35) bloque_codigo -> . asignar_estructuras bloque_codigo
    (36) bloque_codigo -> . asignar_array bloque_codigo
    (37) bloque_codigo -> . funcion bloque_codigo
    (38) bloque_codigo -> . print bloque_codigo
    (39) bloque_codigo -> . input bloque_codigo
    (40) bloque_codigo -> . declaracion_while bloque_codigo
    (41) bloque_codigo -> . VACIO
    (42) declarar_if -> . IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC
    (43) declarar_if -> . IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE LLAVEA bloque_codigo LLAVEC
    (44) declarar_if -> . declarar_if_error_llave
    (47) declaracion -> . tipo_dato ID PYC
    (48) declaracion -> . tipo_dato ID ASG ID operacion_matematica ID PYC
    (49) declaracion -> . tipo_dato ID ASG dato PYC
    (50) declaracion -> . AFARRAFAY ID dimensiones PYC
    (51) declaracion -> . declaracion_error
    (64) asignar_estructuras -> . ID PUNTO ID ASG dato PYC
    (63) asignar_array -> . ID dimensiones ASG dato PYC
    (65) funcion -> . ID PA valores PC PYC
    (66) funcion -> . ID PA PC PYC
    (67) funcion -> . ID PA valores COMA valores PC PYC
    (68) print -> . PRIFINT PA ID PC PYC
    (69) input -> . IFINPUFUT PA ID PC PYC
    (70) declaracion_while -> . WHIFILEFE PA condicion PC LLAVEA bloque_codigo LLAVEC
    (71) declaracion_while -> . declaracion_while_error
    (45) declarar_if_error_llave -> . IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE LLAVEA bloque_codigo
    (46) declarar_if_error_llave -> . IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE bloque_codigo LLAVEC
    (25) tipo_dato -> . IFINT
    (26) tipo_dato -> . STRIFING
    (27) tipo_dato -> . AFARRAFAY
    (28) tipo_dato -> . STRUFUCT
    (29) tipo_dato -> . VOFOIFID
    (30) tipo_dato -> . CHAFAR
    (31) tipo_dato -> . BOFOOFOL
    (32) tipo_dato -> . FLOFOAFAT
    (52) declaracion_error -> . ID PYC
    (53) declaracion_error -> . ID ASG ID operacion_matematica ID PYC
    (54) declaracion_error -> . ID ASG valores PYC
    (55) declaracion_error -> . ID ID PYC
    (56) declaracion_error -> . ID ID ASG ID operacion_matematica ID PYC
    (57) declaracion_error -> . ID ID ASG valores PYC
    (58) declaracion_error -> . ID ID dimensiones PYC
    (59) declaracion_error -> . ID dimensiones PYC
    (72) declaracion_while_error -> . PA condicion PC LLAVEA bloque_codigo LLAVEC
    (73) declaracion_while_error -> . ID PA condicion PC LLAVEA bloque_codigo LLAVEC
    (74) declaracion_while_error -> . WHIFILEFE PA condicion PC bloque_codigo LLAVEC
    (75) declaracion_while_error -> . WHIFILEFE PA condicion PC LLAVEA bloque_codigo

    VACIO           shift and go to state 67
    IFIF            shift and go to state 68
    AFARRAFAY       shift and go to state 72
    ID              shift and go to state 71
    PRIFINT         shift and go to state 74
    IFINPUFUT       shift and go to state 75
    WHIFILEFE       shift and go to state 76
    IFINT           shift and go to state 19
    STRIFING        shift and go to state 20
    STRUFUCT        shift and go to state 22
    VOFOIFID        shift and go to state 23
    CHAFAR          shift and go to state 24
    BOFOOFOL        shift and go to state 25
    FLOFOAFAT       shift and go to state 26
    PA              shift and go to state 57

    bloque_codigo                  shift and go to state 87
    declarar_if                    shift and go to state 59
    declaracion                    shift and go to state 60
    asignar_estructuras            shift and go to state 61
    asignar_array                  shift and go to state 62
    funcion                        shift and go to state 63
    print                          shift and go to state 64
    input                          shift and go to state 65
    declaracion_while              shift and go to state 66
    declarar_if_error_llave        shift and go to state 69
    tipo_dato                      shift and go to state 70
    declaracion_error              shift and go to state 73
    declaracion_while_error        shift and go to state 77

state 57

    (72) declaracion_while_error -> PA . condicion PC LLAVEA bloque_codigo LLAVEC
    (76) condicion -> . valores operadores valores
    (77) condicion -> . valores
    (78) condicion -> . valores operadores_logicos condicion
    (79) condicion -> . valores NOT valores
    (86) valores -> . INT
    (87) valores -> . CHAR
    (88) valores -> . TRUFUEFE
    (89) valores -> . FAFALSEFE
    (90) valores -> . PCC
    (91) valores -> . ID

    INT             shift and go to state 90
    CHAR            shift and go to state 91
    TRUFUEFE        shift and go to state 92
    FAFALSEFE       shift and go to state 93
    PCC             shift and go to state 94
    ID              shift and go to state 95

    condicion                      shift and go to state 88
    valores                        shift and go to state 89

state 58

    (23) declarar_main_error -> IFINT PA PC LLAVEA bloque_codigo . REFETUFURN PYC LLAVEC

    REFETUFURN      shift and go to state 96


state 59

    (33) bloque_codigo -> declarar_if . bloque_codigo
    (33) bloque_codigo -> . declarar_if bloque_codigo
    (34) bloque_codigo -> . declaracion bloque_codigo
    (35) bloque_codigo -> . asignar_estructuras bloque_codigo
    (36) bloque_codigo -> . asignar_array bloque_codigo
    (37) bloque_codigo -> . funcion bloque_codigo
    (38) bloque_codigo -> . print bloque_codigo
    (39) bloque_codigo -> . input bloque_codigo
    (40) bloque_codigo -> . declaracion_while bloque_codigo
    (41) bloque_codigo -> . VACIO
    (42) declarar_if -> . IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC
    (43) declarar_if -> . IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE LLAVEA bloque_codigo LLAVEC
    (44) declarar_if -> . declarar_if_error_llave
    (47) declaracion -> . tipo_dato ID PYC
    (48) declaracion -> . tipo_dato ID ASG ID operacion_matematica ID PYC
    (49) declaracion -> . tipo_dato ID ASG dato PYC
    (50) declaracion -> . AFARRAFAY ID dimensiones PYC
    (51) declaracion -> . declaracion_error
    (64) asignar_estructuras -> . ID PUNTO ID ASG dato PYC
    (63) asignar_array -> . ID dimensiones ASG dato PYC
    (65) funcion -> . ID PA valores PC PYC
    (66) funcion -> . ID PA PC PYC
    (67) funcion -> . ID PA valores COMA valores PC PYC
    (68) print -> . PRIFINT PA ID PC PYC
    (69) input -> . IFINPUFUT PA ID PC PYC
    (70) declaracion_while -> . WHIFILEFE PA condicion PC LLAVEA bloque_codigo LLAVEC
    (71) declaracion_while -> . declaracion_while_error
    (45) declarar_if_error_llave -> . IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE LLAVEA bloque_codigo
    (46) declarar_if_error_llave -> . IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE bloque_codigo LLAVEC
    (25) tipo_dato -> . IFINT
    (26) tipo_dato -> . STRIFING
    (27) tipo_dato -> . AFARRAFAY
    (28) tipo_dato -> . STRUFUCT
    (29) tipo_dato -> . VOFOIFID
    (30) tipo_dato -> . CHAFAR
    (31) tipo_dato -> . BOFOOFOL
    (32) tipo_dato -> . FLOFOAFAT
    (52) declaracion_error -> . ID PYC
    (53) declaracion_error -> . ID ASG ID operacion_matematica ID PYC
    (54) declaracion_error -> . ID ASG valores PYC
    (55) declaracion_error -> . ID ID PYC
    (56) declaracion_error -> . ID ID ASG ID operacion_matematica ID PYC
    (57) declaracion_error -> . ID ID ASG valores PYC
    (58) declaracion_error -> . ID ID dimensiones PYC
    (59) declaracion_error -> . ID dimensiones PYC
    (72) declaracion_while_error -> . PA condicion PC LLAVEA bloque_codigo LLAVEC
    (73) declaracion_while_error -> . ID PA condicion PC LLAVEA bloque_codigo LLAVEC
    (74) declaracion_while_error -> . WHIFILEFE PA condicion PC bloque_codigo LLAVEC
    (75) declaracion_while_error -> . WHIFILEFE PA condicion PC LLAVEA bloque_codigo

    VACIO           shift and go to state 67
    IFIF            shift and go to state 68
    AFARRAFAY       shift and go to state 72
    ID              shift and go to state 71
    PRIFINT         shift and go to state 74
    IFINPUFUT       shift and go to state 75
    WHIFILEFE       shift and go to state 76
    IFINT           shift and go to state 19
    STRIFING        shift and go to state 20
    STRUFUCT        shift and go to state 22
    VOFOIFID        shift and go to state 23
    CHAFAR          shift and go to state 24
    BOFOOFOL        shift and go to state 25
    FLOFOAFAT       shift and go to state 26
    PA              shift and go to state 57

    declarar_if                    shift and go to state 59
    bloque_codigo                  shift and go to state 97
    declaracion                    shift and go to state 60
    asignar_estructuras            shift and go to state 61
    asignar_array                  shift and go to state 62
    funcion                        shift and go to state 63
    print                          shift and go to state 64
    input                          shift and go to state 65
    declaracion_while              shift and go to state 66
    declarar_if_error_llave        shift and go to state 69
    tipo_dato                      shift and go to state 70
    declaracion_error              shift and go to state 73
    declaracion_while_error        shift and go to state 77

state 60

    (34) bloque_codigo -> declaracion . bloque_codigo
    (33) bloque_codigo -> . declarar_if bloque_codigo
    (34) bloque_codigo -> . declaracion bloque_codigo
    (35) bloque_codigo -> . asignar_estructuras bloque_codigo
    (36) bloque_codigo -> . asignar_array bloque_codigo
    (37) bloque_codigo -> . funcion bloque_codigo
    (38) bloque_codigo -> . print bloque_codigo
    (39) bloque_codigo -> . input bloque_codigo
    (40) bloque_codigo -> . declaracion_while bloque_codigo
    (41) bloque_codigo -> . VACIO
    (42) declarar_if -> . IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC
    (43) declarar_if -> . IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE LLAVEA bloque_codigo LLAVEC
    (44) declarar_if -> . declarar_if_error_llave
    (47) declaracion -> . tipo_dato ID PYC
    (48) declaracion -> . tipo_dato ID ASG ID operacion_matematica ID PYC
    (49) declaracion -> . tipo_dato ID ASG dato PYC
    (50) declaracion -> . AFARRAFAY ID dimensiones PYC
    (51) declaracion -> . declaracion_error
    (64) asignar_estructuras -> . ID PUNTO ID ASG dato PYC
    (63) asignar_array -> . ID dimensiones ASG dato PYC
    (65) funcion -> . ID PA valores PC PYC
    (66) funcion -> . ID PA PC PYC
    (67) funcion -> . ID PA valores COMA valores PC PYC
    (68) print -> . PRIFINT PA ID PC PYC
    (69) input -> . IFINPUFUT PA ID PC PYC
    (70) declaracion_while -> . WHIFILEFE PA condicion PC LLAVEA bloque_codigo LLAVEC
    (71) declaracion_while -> . declaracion_while_error
    (45) declarar_if_error_llave -> . IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE LLAVEA bloque_codigo
    (46) declarar_if_error_llave -> . IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE bloque_codigo LLAVEC
    (25) tipo_dato -> . IFINT
    (26) tipo_dato -> . STRIFING
    (27) tipo_dato -> . AFARRAFAY
    (28) tipo_dato -> . STRUFUCT
    (29) tipo_dato -> . VOFOIFID
    (30) tipo_dato -> . CHAFAR
    (31) tipo_dato -> . BOFOOFOL
    (32) tipo_dato -> . FLOFOAFAT
    (52) declaracion_error -> . ID PYC
    (53) declaracion_error -> . ID ASG ID operacion_matematica ID PYC
    (54) declaracion_error -> . ID ASG valores PYC
    (55) declaracion_error -> . ID ID PYC
    (56) declaracion_error -> . ID ID ASG ID operacion_matematica ID PYC
    (57) declaracion_error -> . ID ID ASG valores PYC
    (58) declaracion_error -> . ID ID dimensiones PYC
    (59) declaracion_error -> . ID dimensiones PYC
    (72) declaracion_while_error -> . PA condicion PC LLAVEA bloque_codigo LLAVEC
    (73) declaracion_while_error -> . ID PA condicion PC LLAVEA bloque_codigo LLAVEC
    (74) declaracion_while_error -> . WHIFILEFE PA condicion PC bloque_codigo LLAVEC
    (75) declaracion_while_error -> . WHIFILEFE PA condicion PC LLAVEA bloque_codigo

    VACIO           shift and go to state 67
    IFIF            shift and go to state 68
    AFARRAFAY       shift and go to state 72
    ID              shift and go to state 71
    PRIFINT         shift and go to state 74
    IFINPUFUT       shift and go to state 75
    WHIFILEFE       shift and go to state 76
    IFINT           shift and go to state 19
    STRIFING        shift and go to state 20
    STRUFUCT        shift and go to state 22
    VOFOIFID        shift and go to state 23
    CHAFAR          shift and go to state 24
    BOFOOFOL        shift and go to state 25
    FLOFOAFAT       shift and go to state 26
    PA              shift and go to state 57

    declaracion                    shift and go to state 60
    bloque_codigo                  shift and go to state 98
    declarar_if                    shift and go to state 59
    asignar_estructuras            shift and go to state 61
    asignar_array                  shift and go to state 62
    funcion                        shift and go to state 63
    print                          shift and go to state 64
    input                          shift and go to state 65
    declaracion_while              shift and go to state 66
    declarar_if_error_llave        shift and go to state 69
    tipo_dato                      shift and go to state 70
    declaracion_error              shift and go to state 73
    declaracion_while_error        shift and go to state 77

state 61

    (35) bloque_codigo -> asignar_estructuras . bloque_codigo
    (33) bloque_codigo -> . declarar_if bloque_codigo
    (34) bloque_codigo -> . declaracion bloque_codigo
    (35) bloque_codigo -> . asignar_estructuras bloque_codigo
    (36) bloque_codigo -> . asignar_array bloque_codigo
    (37) bloque_codigo -> . funcion bloque_codigo
    (38) bloque_codigo -> . print bloque_codigo
    (39) bloque_codigo -> . input bloque_codigo
    (40) bloque_codigo -> . declaracion_while bloque_codigo
    (41) bloque_codigo -> . VACIO
    (42) declarar_if -> . IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC
    (43) declarar_if -> . IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE LLAVEA bloque_codigo LLAVEC
    (44) declarar_if -> . declarar_if_error_llave
    (47) declaracion -> . tipo_dato ID PYC
    (48) declaracion -> . tipo_dato ID ASG ID operacion_matematica ID PYC
    (49) declaracion -> . tipo_dato ID ASG dato PYC
    (50) declaracion -> . AFARRAFAY ID dimensiones PYC
    (51) declaracion -> . declaracion_error
    (64) asignar_estructuras -> . ID PUNTO ID ASG dato PYC
    (63) asignar_array -> . ID dimensiones ASG dato PYC
    (65) funcion -> . ID PA valores PC PYC
    (66) funcion -> . ID PA PC PYC
    (67) funcion -> . ID PA valores COMA valores PC PYC
    (68) print -> . PRIFINT PA ID PC PYC
    (69) input -> . IFINPUFUT PA ID PC PYC
    (70) declaracion_while -> . WHIFILEFE PA condicion PC LLAVEA bloque_codigo LLAVEC
    (71) declaracion_while -> . declaracion_while_error
    (45) declarar_if_error_llave -> . IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE LLAVEA bloque_codigo
    (46) declarar_if_error_llave -> . IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE bloque_codigo LLAVEC
    (25) tipo_dato -> . IFINT
    (26) tipo_dato -> . STRIFING
    (27) tipo_dato -> . AFARRAFAY
    (28) tipo_dato -> . STRUFUCT
    (29) tipo_dato -> . VOFOIFID
    (30) tipo_dato -> . CHAFAR
    (31) tipo_dato -> . BOFOOFOL
    (32) tipo_dato -> . FLOFOAFAT
    (52) declaracion_error -> . ID PYC
    (53) declaracion_error -> . ID ASG ID operacion_matematica ID PYC
    (54) declaracion_error -> . ID ASG valores PYC
    (55) declaracion_error -> . ID ID PYC
    (56) declaracion_error -> . ID ID ASG ID operacion_matematica ID PYC
    (57) declaracion_error -> . ID ID ASG valores PYC
    (58) declaracion_error -> . ID ID dimensiones PYC
    (59) declaracion_error -> . ID dimensiones PYC
    (72) declaracion_while_error -> . PA condicion PC LLAVEA bloque_codigo LLAVEC
    (73) declaracion_while_error -> . ID PA condicion PC LLAVEA bloque_codigo LLAVEC
    (74) declaracion_while_error -> . WHIFILEFE PA condicion PC bloque_codigo LLAVEC
    (75) declaracion_while_error -> . WHIFILEFE PA condicion PC LLAVEA bloque_codigo

    VACIO           shift and go to state 67
    IFIF            shift and go to state 68
    AFARRAFAY       shift and go to state 72
    ID              shift and go to state 71
    PRIFINT         shift and go to state 74
    IFINPUFUT       shift and go to state 75
    WHIFILEFE       shift and go to state 76
    IFINT           shift and go to state 19
    STRIFING        shift and go to state 20
    STRUFUCT        shift and go to state 22
    VOFOIFID        shift and go to state 23
    CHAFAR          shift and go to state 24
    BOFOOFOL        shift and go to state 25
    FLOFOAFAT       shift and go to state 26
    PA              shift and go to state 57

    asignar_estructuras            shift and go to state 61
    bloque_codigo                  shift and go to state 99
    declarar_if                    shift and go to state 59
    declaracion                    shift and go to state 60
    asignar_array                  shift and go to state 62
    funcion                        shift and go to state 63
    print                          shift and go to state 64
    input                          shift and go to state 65
    declaracion_while              shift and go to state 66
    declarar_if_error_llave        shift and go to state 69
    tipo_dato                      shift and go to state 70
    declaracion_error              shift and go to state 73
    declaracion_while_error        shift and go to state 77

state 62

    (36) bloque_codigo -> asignar_array . bloque_codigo
    (33) bloque_codigo -> . declarar_if bloque_codigo
    (34) bloque_codigo -> . declaracion bloque_codigo
    (35) bloque_codigo -> . asignar_estructuras bloque_codigo
    (36) bloque_codigo -> . asignar_array bloque_codigo
    (37) bloque_codigo -> . funcion bloque_codigo
    (38) bloque_codigo -> . print bloque_codigo
    (39) bloque_codigo -> . input bloque_codigo
    (40) bloque_codigo -> . declaracion_while bloque_codigo
    (41) bloque_codigo -> . VACIO
    (42) declarar_if -> . IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC
    (43) declarar_if -> . IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE LLAVEA bloque_codigo LLAVEC
    (44) declarar_if -> . declarar_if_error_llave
    (47) declaracion -> . tipo_dato ID PYC
    (48) declaracion -> . tipo_dato ID ASG ID operacion_matematica ID PYC
    (49) declaracion -> . tipo_dato ID ASG dato PYC
    (50) declaracion -> . AFARRAFAY ID dimensiones PYC
    (51) declaracion -> . declaracion_error
    (64) asignar_estructuras -> . ID PUNTO ID ASG dato PYC
    (63) asignar_array -> . ID dimensiones ASG dato PYC
    (65) funcion -> . ID PA valores PC PYC
    (66) funcion -> . ID PA PC PYC
    (67) funcion -> . ID PA valores COMA valores PC PYC
    (68) print -> . PRIFINT PA ID PC PYC
    (69) input -> . IFINPUFUT PA ID PC PYC
    (70) declaracion_while -> . WHIFILEFE PA condicion PC LLAVEA bloque_codigo LLAVEC
    (71) declaracion_while -> . declaracion_while_error
    (45) declarar_if_error_llave -> . IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE LLAVEA bloque_codigo
    (46) declarar_if_error_llave -> . IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE bloque_codigo LLAVEC
    (25) tipo_dato -> . IFINT
    (26) tipo_dato -> . STRIFING
    (27) tipo_dato -> . AFARRAFAY
    (28) tipo_dato -> . STRUFUCT
    (29) tipo_dato -> . VOFOIFID
    (30) tipo_dato -> . CHAFAR
    (31) tipo_dato -> . BOFOOFOL
    (32) tipo_dato -> . FLOFOAFAT
    (52) declaracion_error -> . ID PYC
    (53) declaracion_error -> . ID ASG ID operacion_matematica ID PYC
    (54) declaracion_error -> . ID ASG valores PYC
    (55) declaracion_error -> . ID ID PYC
    (56) declaracion_error -> . ID ID ASG ID operacion_matematica ID PYC
    (57) declaracion_error -> . ID ID ASG valores PYC
    (58) declaracion_error -> . ID ID dimensiones PYC
    (59) declaracion_error -> . ID dimensiones PYC
    (72) declaracion_while_error -> . PA condicion PC LLAVEA bloque_codigo LLAVEC
    (73) declaracion_while_error -> . ID PA condicion PC LLAVEA bloque_codigo LLAVEC
    (74) declaracion_while_error -> . WHIFILEFE PA condicion PC bloque_codigo LLAVEC
    (75) declaracion_while_error -> . WHIFILEFE PA condicion PC LLAVEA bloque_codigo

    VACIO           shift and go to state 67
    IFIF            shift and go to state 68
    AFARRAFAY       shift and go to state 72
    ID              shift and go to state 71
    PRIFINT         shift and go to state 74
    IFINPUFUT       shift and go to state 75
    WHIFILEFE       shift and go to state 76
    IFINT           shift and go to state 19
    STRIFING        shift and go to state 20
    STRUFUCT        shift and go to state 22
    VOFOIFID        shift and go to state 23
    CHAFAR          shift and go to state 24
    BOFOOFOL        shift and go to state 25
    FLOFOAFAT       shift and go to state 26
    PA              shift and go to state 57

    asignar_array                  shift and go to state 62
    bloque_codigo                  shift and go to state 100
    declarar_if                    shift and go to state 59
    declaracion                    shift and go to state 60
    asignar_estructuras            shift and go to state 61
    funcion                        shift and go to state 63
    print                          shift and go to state 64
    input                          shift and go to state 65
    declaracion_while              shift and go to state 66
    declarar_if_error_llave        shift and go to state 69
    tipo_dato                      shift and go to state 70
    declaracion_error              shift and go to state 73
    declaracion_while_error        shift and go to state 77

state 63

    (37) bloque_codigo -> funcion . bloque_codigo
    (33) bloque_codigo -> . declarar_if bloque_codigo
    (34) bloque_codigo -> . declaracion bloque_codigo
    (35) bloque_codigo -> . asignar_estructuras bloque_codigo
    (36) bloque_codigo -> . asignar_array bloque_codigo
    (37) bloque_codigo -> . funcion bloque_codigo
    (38) bloque_codigo -> . print bloque_codigo
    (39) bloque_codigo -> . input bloque_codigo
    (40) bloque_codigo -> . declaracion_while bloque_codigo
    (41) bloque_codigo -> . VACIO
    (42) declarar_if -> . IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC
    (43) declarar_if -> . IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE LLAVEA bloque_codigo LLAVEC
    (44) declarar_if -> . declarar_if_error_llave
    (47) declaracion -> . tipo_dato ID PYC
    (48) declaracion -> . tipo_dato ID ASG ID operacion_matematica ID PYC
    (49) declaracion -> . tipo_dato ID ASG dato PYC
    (50) declaracion -> . AFARRAFAY ID dimensiones PYC
    (51) declaracion -> . declaracion_error
    (64) asignar_estructuras -> . ID PUNTO ID ASG dato PYC
    (63) asignar_array -> . ID dimensiones ASG dato PYC
    (65) funcion -> . ID PA valores PC PYC
    (66) funcion -> . ID PA PC PYC
    (67) funcion -> . ID PA valores COMA valores PC PYC
    (68) print -> . PRIFINT PA ID PC PYC
    (69) input -> . IFINPUFUT PA ID PC PYC
    (70) declaracion_while -> . WHIFILEFE PA condicion PC LLAVEA bloque_codigo LLAVEC
    (71) declaracion_while -> . declaracion_while_error
    (45) declarar_if_error_llave -> . IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE LLAVEA bloque_codigo
    (46) declarar_if_error_llave -> . IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE bloque_codigo LLAVEC
    (25) tipo_dato -> . IFINT
    (26) tipo_dato -> . STRIFING
    (27) tipo_dato -> . AFARRAFAY
    (28) tipo_dato -> . STRUFUCT
    (29) tipo_dato -> . VOFOIFID
    (30) tipo_dato -> . CHAFAR
    (31) tipo_dato -> . BOFOOFOL
    (32) tipo_dato -> . FLOFOAFAT
    (52) declaracion_error -> . ID PYC
    (53) declaracion_error -> . ID ASG ID operacion_matematica ID PYC
    (54) declaracion_error -> . ID ASG valores PYC
    (55) declaracion_error -> . ID ID PYC
    (56) declaracion_error -> . ID ID ASG ID operacion_matematica ID PYC
    (57) declaracion_error -> . ID ID ASG valores PYC
    (58) declaracion_error -> . ID ID dimensiones PYC
    (59) declaracion_error -> . ID dimensiones PYC
    (72) declaracion_while_error -> . PA condicion PC LLAVEA bloque_codigo LLAVEC
    (73) declaracion_while_error -> . ID PA condicion PC LLAVEA bloque_codigo LLAVEC
    (74) declaracion_while_error -> . WHIFILEFE PA condicion PC bloque_codigo LLAVEC
    (75) declaracion_while_error -> . WHIFILEFE PA condicion PC LLAVEA bloque_codigo

    VACIO           shift and go to state 67
    IFIF            shift and go to state 68
    AFARRAFAY       shift and go to state 72
    ID              shift and go to state 71
    PRIFINT         shift and go to state 74
    IFINPUFUT       shift and go to state 75
    WHIFILEFE       shift and go to state 76
    IFINT           shift and go to state 19
    STRIFING        shift and go to state 20
    STRUFUCT        shift and go to state 22
    VOFOIFID        shift and go to state 23
    CHAFAR          shift and go to state 24
    BOFOOFOL        shift and go to state 25
    FLOFOAFAT       shift and go to state 26
    PA              shift and go to state 57

    funcion                        shift and go to state 63
    bloque_codigo                  shift and go to state 101
    declarar_if                    shift and go to state 59
    declaracion                    shift and go to state 60
    asignar_estructuras            shift and go to state 61
    asignar_array                  shift and go to state 62
    print                          shift and go to state 64
    input                          shift and go to state 65
    declaracion_while              shift and go to state 66
    declarar_if_error_llave        shift and go to state 69
    tipo_dato                      shift and go to state 70
    declaracion_error              shift and go to state 73
    declaracion_while_error        shift and go to state 77

state 64

    (38) bloque_codigo -> print . bloque_codigo
    (33) bloque_codigo -> . declarar_if bloque_codigo
    (34) bloque_codigo -> . declaracion bloque_codigo
    (35) bloque_codigo -> . asignar_estructuras bloque_codigo
    (36) bloque_codigo -> . asignar_array bloque_codigo
    (37) bloque_codigo -> . funcion bloque_codigo
    (38) bloque_codigo -> . print bloque_codigo
    (39) bloque_codigo -> . input bloque_codigo
    (40) bloque_codigo -> . declaracion_while bloque_codigo
    (41) bloque_codigo -> . VACIO
    (42) declarar_if -> . IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC
    (43) declarar_if -> . IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE LLAVEA bloque_codigo LLAVEC
    (44) declarar_if -> . declarar_if_error_llave
    (47) declaracion -> . tipo_dato ID PYC
    (48) declaracion -> . tipo_dato ID ASG ID operacion_matematica ID PYC
    (49) declaracion -> . tipo_dato ID ASG dato PYC
    (50) declaracion -> . AFARRAFAY ID dimensiones PYC
    (51) declaracion -> . declaracion_error
    (64) asignar_estructuras -> . ID PUNTO ID ASG dato PYC
    (63) asignar_array -> . ID dimensiones ASG dato PYC
    (65) funcion -> . ID PA valores PC PYC
    (66) funcion -> . ID PA PC PYC
    (67) funcion -> . ID PA valores COMA valores PC PYC
    (68) print -> . PRIFINT PA ID PC PYC
    (69) input -> . IFINPUFUT PA ID PC PYC
    (70) declaracion_while -> . WHIFILEFE PA condicion PC LLAVEA bloque_codigo LLAVEC
    (71) declaracion_while -> . declaracion_while_error
    (45) declarar_if_error_llave -> . IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE LLAVEA bloque_codigo
    (46) declarar_if_error_llave -> . IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE bloque_codigo LLAVEC
    (25) tipo_dato -> . IFINT
    (26) tipo_dato -> . STRIFING
    (27) tipo_dato -> . AFARRAFAY
    (28) tipo_dato -> . STRUFUCT
    (29) tipo_dato -> . VOFOIFID
    (30) tipo_dato -> . CHAFAR
    (31) tipo_dato -> . BOFOOFOL
    (32) tipo_dato -> . FLOFOAFAT
    (52) declaracion_error -> . ID PYC
    (53) declaracion_error -> . ID ASG ID operacion_matematica ID PYC
    (54) declaracion_error -> . ID ASG valores PYC
    (55) declaracion_error -> . ID ID PYC
    (56) declaracion_error -> . ID ID ASG ID operacion_matematica ID PYC
    (57) declaracion_error -> . ID ID ASG valores PYC
    (58) declaracion_error -> . ID ID dimensiones PYC
    (59) declaracion_error -> . ID dimensiones PYC
    (72) declaracion_while_error -> . PA condicion PC LLAVEA bloque_codigo LLAVEC
    (73) declaracion_while_error -> . ID PA condicion PC LLAVEA bloque_codigo LLAVEC
    (74) declaracion_while_error -> . WHIFILEFE PA condicion PC bloque_codigo LLAVEC
    (75) declaracion_while_error -> . WHIFILEFE PA condicion PC LLAVEA bloque_codigo

    VACIO           shift and go to state 67
    IFIF            shift and go to state 68
    AFARRAFAY       shift and go to state 72
    ID              shift and go to state 71
    PRIFINT         shift and go to state 74
    IFINPUFUT       shift and go to state 75
    WHIFILEFE       shift and go to state 76
    IFINT           shift and go to state 19
    STRIFING        shift and go to state 20
    STRUFUCT        shift and go to state 22
    VOFOIFID        shift and go to state 23
    CHAFAR          shift and go to state 24
    BOFOOFOL        shift and go to state 25
    FLOFOAFAT       shift and go to state 26
    PA              shift and go to state 57

    print                          shift and go to state 64
    bloque_codigo                  shift and go to state 102
    declarar_if                    shift and go to state 59
    declaracion                    shift and go to state 60
    asignar_estructuras            shift and go to state 61
    asignar_array                  shift and go to state 62
    funcion                        shift and go to state 63
    input                          shift and go to state 65
    declaracion_while              shift and go to state 66
    declarar_if_error_llave        shift and go to state 69
    tipo_dato                      shift and go to state 70
    declaracion_error              shift and go to state 73
    declaracion_while_error        shift and go to state 77

state 65

    (39) bloque_codigo -> input . bloque_codigo
    (33) bloque_codigo -> . declarar_if bloque_codigo
    (34) bloque_codigo -> . declaracion bloque_codigo
    (35) bloque_codigo -> . asignar_estructuras bloque_codigo
    (36) bloque_codigo -> . asignar_array bloque_codigo
    (37) bloque_codigo -> . funcion bloque_codigo
    (38) bloque_codigo -> . print bloque_codigo
    (39) bloque_codigo -> . input bloque_codigo
    (40) bloque_codigo -> . declaracion_while bloque_codigo
    (41) bloque_codigo -> . VACIO
    (42) declarar_if -> . IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC
    (43) declarar_if -> . IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE LLAVEA bloque_codigo LLAVEC
    (44) declarar_if -> . declarar_if_error_llave
    (47) declaracion -> . tipo_dato ID PYC
    (48) declaracion -> . tipo_dato ID ASG ID operacion_matematica ID PYC
    (49) declaracion -> . tipo_dato ID ASG dato PYC
    (50) declaracion -> . AFARRAFAY ID dimensiones PYC
    (51) declaracion -> . declaracion_error
    (64) asignar_estructuras -> . ID PUNTO ID ASG dato PYC
    (63) asignar_array -> . ID dimensiones ASG dato PYC
    (65) funcion -> . ID PA valores PC PYC
    (66) funcion -> . ID PA PC PYC
    (67) funcion -> . ID PA valores COMA valores PC PYC
    (68) print -> . PRIFINT PA ID PC PYC
    (69) input -> . IFINPUFUT PA ID PC PYC
    (70) declaracion_while -> . WHIFILEFE PA condicion PC LLAVEA bloque_codigo LLAVEC
    (71) declaracion_while -> . declaracion_while_error
    (45) declarar_if_error_llave -> . IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE LLAVEA bloque_codigo
    (46) declarar_if_error_llave -> . IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE bloque_codigo LLAVEC
    (25) tipo_dato -> . IFINT
    (26) tipo_dato -> . STRIFING
    (27) tipo_dato -> . AFARRAFAY
    (28) tipo_dato -> . STRUFUCT
    (29) tipo_dato -> . VOFOIFID
    (30) tipo_dato -> . CHAFAR
    (31) tipo_dato -> . BOFOOFOL
    (32) tipo_dato -> . FLOFOAFAT
    (52) declaracion_error -> . ID PYC
    (53) declaracion_error -> . ID ASG ID operacion_matematica ID PYC
    (54) declaracion_error -> . ID ASG valores PYC
    (55) declaracion_error -> . ID ID PYC
    (56) declaracion_error -> . ID ID ASG ID operacion_matematica ID PYC
    (57) declaracion_error -> . ID ID ASG valores PYC
    (58) declaracion_error -> . ID ID dimensiones PYC
    (59) declaracion_error -> . ID dimensiones PYC
    (72) declaracion_while_error -> . PA condicion PC LLAVEA bloque_codigo LLAVEC
    (73) declaracion_while_error -> . ID PA condicion PC LLAVEA bloque_codigo LLAVEC
    (74) declaracion_while_error -> . WHIFILEFE PA condicion PC bloque_codigo LLAVEC
    (75) declaracion_while_error -> . WHIFILEFE PA condicion PC LLAVEA bloque_codigo

    VACIO           shift and go to state 67
    IFIF            shift and go to state 68
    AFARRAFAY       shift and go to state 72
    ID              shift and go to state 71
    PRIFINT         shift and go to state 74
    IFINPUFUT       shift and go to state 75
    WHIFILEFE       shift and go to state 76
    IFINT           shift and go to state 19
    STRIFING        shift and go to state 20
    STRUFUCT        shift and go to state 22
    VOFOIFID        shift and go to state 23
    CHAFAR          shift and go to state 24
    BOFOOFOL        shift and go to state 25
    FLOFOAFAT       shift and go to state 26
    PA              shift and go to state 57

    input                          shift and go to state 65
    bloque_codigo                  shift and go to state 103
    declarar_if                    shift and go to state 59
    declaracion                    shift and go to state 60
    asignar_estructuras            shift and go to state 61
    asignar_array                  shift and go to state 62
    funcion                        shift and go to state 63
    print                          shift and go to state 64
    declaracion_while              shift and go to state 66
    declarar_if_error_llave        shift and go to state 69
    tipo_dato                      shift and go to state 70
    declaracion_error              shift and go to state 73
    declaracion_while_error        shift and go to state 77

state 66

    (40) bloque_codigo -> declaracion_while . bloque_codigo
    (33) bloque_codigo -> . declarar_if bloque_codigo
    (34) bloque_codigo -> . declaracion bloque_codigo
    (35) bloque_codigo -> . asignar_estructuras bloque_codigo
    (36) bloque_codigo -> . asignar_array bloque_codigo
    (37) bloque_codigo -> . funcion bloque_codigo
    (38) bloque_codigo -> . print bloque_codigo
    (39) bloque_codigo -> . input bloque_codigo
    (40) bloque_codigo -> . declaracion_while bloque_codigo
    (41) bloque_codigo -> . VACIO
    (42) declarar_if -> . IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC
    (43) declarar_if -> . IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE LLAVEA bloque_codigo LLAVEC
    (44) declarar_if -> . declarar_if_error_llave
    (47) declaracion -> . tipo_dato ID PYC
    (48) declaracion -> . tipo_dato ID ASG ID operacion_matematica ID PYC
    (49) declaracion -> . tipo_dato ID ASG dato PYC
    (50) declaracion -> . AFARRAFAY ID dimensiones PYC
    (51) declaracion -> . declaracion_error
    (64) asignar_estructuras -> . ID PUNTO ID ASG dato PYC
    (63) asignar_array -> . ID dimensiones ASG dato PYC
    (65) funcion -> . ID PA valores PC PYC
    (66) funcion -> . ID PA PC PYC
    (67) funcion -> . ID PA valores COMA valores PC PYC
    (68) print -> . PRIFINT PA ID PC PYC
    (69) input -> . IFINPUFUT PA ID PC PYC
    (70) declaracion_while -> . WHIFILEFE PA condicion PC LLAVEA bloque_codigo LLAVEC
    (71) declaracion_while -> . declaracion_while_error
    (45) declarar_if_error_llave -> . IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE LLAVEA bloque_codigo
    (46) declarar_if_error_llave -> . IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE bloque_codigo LLAVEC
    (25) tipo_dato -> . IFINT
    (26) tipo_dato -> . STRIFING
    (27) tipo_dato -> . AFARRAFAY
    (28) tipo_dato -> . STRUFUCT
    (29) tipo_dato -> . VOFOIFID
    (30) tipo_dato -> . CHAFAR
    (31) tipo_dato -> . BOFOOFOL
    (32) tipo_dato -> . FLOFOAFAT
    (52) declaracion_error -> . ID PYC
    (53) declaracion_error -> . ID ASG ID operacion_matematica ID PYC
    (54) declaracion_error -> . ID ASG valores PYC
    (55) declaracion_error -> . ID ID PYC
    (56) declaracion_error -> . ID ID ASG ID operacion_matematica ID PYC
    (57) declaracion_error -> . ID ID ASG valores PYC
    (58) declaracion_error -> . ID ID dimensiones PYC
    (59) declaracion_error -> . ID dimensiones PYC
    (72) declaracion_while_error -> . PA condicion PC LLAVEA bloque_codigo LLAVEC
    (73) declaracion_while_error -> . ID PA condicion PC LLAVEA bloque_codigo LLAVEC
    (74) declaracion_while_error -> . WHIFILEFE PA condicion PC bloque_codigo LLAVEC
    (75) declaracion_while_error -> . WHIFILEFE PA condicion PC LLAVEA bloque_codigo

    VACIO           shift and go to state 67
    IFIF            shift and go to state 68
    AFARRAFAY       shift and go to state 72
    ID              shift and go to state 71
    PRIFINT         shift and go to state 74
    IFINPUFUT       shift and go to state 75
    WHIFILEFE       shift and go to state 76
    IFINT           shift and go to state 19
    STRIFING        shift and go to state 20
    STRUFUCT        shift and go to state 22
    VOFOIFID        shift and go to state 23
    CHAFAR          shift and go to state 24
    BOFOOFOL        shift and go to state 25
    FLOFOAFAT       shift and go to state 26
    PA              shift and go to state 57

    declaracion_while              shift and go to state 66
    bloque_codigo                  shift and go to state 104
    declarar_if                    shift and go to state 59
    declaracion                    shift and go to state 60
    asignar_estructuras            shift and go to state 61
    asignar_array                  shift and go to state 62
    funcion                        shift and go to state 63
    print                          shift and go to state 64
    input                          shift and go to state 65
    declarar_if_error_llave        shift and go to state 69
    tipo_dato                      shift and go to state 70
    declaracion_error              shift and go to state 73
    declaracion_while_error        shift and go to state 77

state 67

    (41) bloque_codigo -> VACIO .

    REFETUFURN      reduce using rule 41 (bloque_codigo -> VACIO .)
    LLAVEC          reduce using rule 41 (bloque_codigo -> VACIO .)
    VACIO           reduce using rule 41 (bloque_codigo -> VACIO .)
    IFIF            reduce using rule 41 (bloque_codigo -> VACIO .)
    AFARRAFAY       reduce using rule 41 (bloque_codigo -> VACIO .)
    ID              reduce using rule 41 (bloque_codigo -> VACIO .)
    PRIFINT         reduce using rule 41 (bloque_codigo -> VACIO .)
    IFINPUFUT       reduce using rule 41 (bloque_codigo -> VACIO .)
    WHIFILEFE       reduce using rule 41 (bloque_codigo -> VACIO .)
    IFINT           reduce using rule 41 (bloque_codigo -> VACIO .)
    STRIFING        reduce using rule 41 (bloque_codigo -> VACIO .)
    STRUFUCT        reduce using rule 41 (bloque_codigo -> VACIO .)
    VOFOIFID        reduce using rule 41 (bloque_codigo -> VACIO .)
    CHAFAR          reduce using rule 41 (bloque_codigo -> VACIO .)
    BOFOOFOL        reduce using rule 41 (bloque_codigo -> VACIO .)
    FLOFOAFAT       reduce using rule 41 (bloque_codigo -> VACIO .)
    PA              reduce using rule 41 (bloque_codigo -> VACIO .)


state 68

    (42) declarar_if -> IFIF . PA condicion PC LLAVEA bloque_codigo LLAVEC
    (43) declarar_if -> IFIF . PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE LLAVEA bloque_codigo LLAVEC
    (45) declarar_if_error_llave -> IFIF . PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE LLAVEA bloque_codigo
    (46) declarar_if_error_llave -> IFIF . PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE bloque_codigo LLAVEC

    PA              shift and go to state 105


state 69

    (44) declarar_if -> declarar_if_error_llave .

    VACIO           reduce using rule 44 (declarar_if -> declarar_if_error_llave .)
    IFIF            reduce using rule 44 (declarar_if -> declarar_if_error_llave .)
    AFARRAFAY       reduce using rule 44 (declarar_if -> declarar_if_error_llave .)
    ID              reduce using rule 44 (declarar_if -> declarar_if_error_llave .)
    PRIFINT         reduce using rule 44 (declarar_if -> declarar_if_error_llave .)
    IFINPUFUT       reduce using rule 44 (declarar_if -> declarar_if_error_llave .)
    WHIFILEFE       reduce using rule 44 (declarar_if -> declarar_if_error_llave .)
    IFINT           reduce using rule 44 (declarar_if -> declarar_if_error_llave .)
    STRIFING        reduce using rule 44 (declarar_if -> declarar_if_error_llave .)
    STRUFUCT        reduce using rule 44 (declarar_if -> declarar_if_error_llave .)
    VOFOIFID        reduce using rule 44 (declarar_if -> declarar_if_error_llave .)
    CHAFAR          reduce using rule 44 (declarar_if -> declarar_if_error_llave .)
    BOFOOFOL        reduce using rule 44 (declarar_if -> declarar_if_error_llave .)
    FLOFOAFAT       reduce using rule 44 (declarar_if -> declarar_if_error_llave .)
    PA              reduce using rule 44 (declarar_if -> declarar_if_error_llave .)


state 70

    (47) declaracion -> tipo_dato . ID PYC
    (48) declaracion -> tipo_dato . ID ASG ID operacion_matematica ID PYC
    (49) declaracion -> tipo_dato . ID ASG dato PYC

    ID              shift and go to state 106


state 71

    (64) asignar_estructuras -> ID . PUNTO ID ASG dato PYC
    (63) asignar_array -> ID . dimensiones ASG dato PYC
    (65) funcion -> ID . PA valores PC PYC
    (66) funcion -> ID . PA PC PYC
    (67) funcion -> ID . PA valores COMA valores PC PYC
    (52) declaracion_error -> ID . PYC
    (53) declaracion_error -> ID . ASG ID operacion_matematica ID PYC
    (54) declaracion_error -> ID . ASG valores PYC
    (55) declaracion_error -> ID . ID PYC
    (56) declaracion_error -> ID . ID ASG ID operacion_matematica ID PYC
    (57) declaracion_error -> ID . ID ASG valores PYC
    (58) declaracion_error -> ID . ID dimensiones PYC
    (59) declaracion_error -> ID . dimensiones PYC
    (73) declaracion_while_error -> ID . PA condicion PC LLAVEA bloque_codigo LLAVEC
    (60) dimensiones -> . dimension dimensiones
    (61) dimensiones -> . VACIO
    (62) dimension -> . CA INT CC

    PUNTO           shift and go to state 108
    PA              shift and go to state 112
    PYC             shift and go to state 110
    ASG             shift and go to state 109
    ID              shift and go to state 107
    VACIO           shift and go to state 114
    CA              shift and go to state 115

    dimensiones                    shift and go to state 111
    dimension                      shift and go to state 113

state 72

    (50) declaracion -> AFARRAFAY . ID dimensiones PYC
    (27) tipo_dato -> AFARRAFAY .

  ! shift/reduce conflict for ID resolved as shift
    ID              shift and go to state 116

  ! ID              [ reduce using rule 27 (tipo_dato -> AFARRAFAY .) ]


state 73

    (51) declaracion -> declaracion_error .

    VACIO           reduce using rule 51 (declaracion -> declaracion_error .)
    IFIF            reduce using rule 51 (declaracion -> declaracion_error .)
    AFARRAFAY       reduce using rule 51 (declaracion -> declaracion_error .)
    ID              reduce using rule 51 (declaracion -> declaracion_error .)
    PRIFINT         reduce using rule 51 (declaracion -> declaracion_error .)
    IFINPUFUT       reduce using rule 51 (declaracion -> declaracion_error .)
    WHIFILEFE       reduce using rule 51 (declaracion -> declaracion_error .)
    IFINT           reduce using rule 51 (declaracion -> declaracion_error .)
    STRIFING        reduce using rule 51 (declaracion -> declaracion_error .)
    STRUFUCT        reduce using rule 51 (declaracion -> declaracion_error .)
    VOFOIFID        reduce using rule 51 (declaracion -> declaracion_error .)
    CHAFAR          reduce using rule 51 (declaracion -> declaracion_error .)
    BOFOOFOL        reduce using rule 51 (declaracion -> declaracion_error .)
    FLOFOAFAT       reduce using rule 51 (declaracion -> declaracion_error .)
    PA              reduce using rule 51 (declaracion -> declaracion_error .)


state 74

    (68) print -> PRIFINT . PA ID PC PYC

    PA              shift and go to state 117


state 75

    (69) input -> IFINPUFUT . PA ID PC PYC

    PA              shift and go to state 118


state 76

    (70) declaracion_while -> WHIFILEFE . PA condicion PC LLAVEA bloque_codigo LLAVEC
    (74) declaracion_while_error -> WHIFILEFE . PA condicion PC bloque_codigo LLAVEC
    (75) declaracion_while_error -> WHIFILEFE . PA condicion PC LLAVEA bloque_codigo

    PA              shift and go to state 119


state 77

    (71) declaracion_while -> declaracion_while_error .

    VACIO           reduce using rule 71 (declaracion_while -> declaracion_while_error .)
    IFIF            reduce using rule 71 (declaracion_while -> declaracion_while_error .)
    AFARRAFAY       reduce using rule 71 (declaracion_while -> declaracion_while_error .)
    ID              reduce using rule 71 (declaracion_while -> declaracion_while_error .)
    PRIFINT         reduce using rule 71 (declaracion_while -> declaracion_while_error .)
    IFINPUFUT       reduce using rule 71 (declaracion_while -> declaracion_while_error .)
    WHIFILEFE       reduce using rule 71 (declaracion_while -> declaracion_while_error .)
    IFINT           reduce using rule 71 (declaracion_while -> declaracion_while_error .)
    STRIFING        reduce using rule 71 (declaracion_while -> declaracion_while_error .)
    STRUFUCT        reduce using rule 71 (declaracion_while -> declaracion_while_error .)
    VOFOIFID        reduce using rule 71 (declaracion_while -> declaracion_while_error .)
    CHAFAR          reduce using rule 71 (declaracion_while -> declaracion_while_error .)
    BOFOOFOL        reduce using rule 71 (declaracion_while -> declaracion_while_error .)
    FLOFOAFAT       reduce using rule 71 (declaracion_while -> declaracion_while_error .)
    PA              reduce using rule 71 (declaracion_while -> declaracion_while_error .)


state 78

    (24) declarar_main_error -> IFINT ID PA PC LLAVEA . bloque_codigo REFETUFURN PYC LLAVEC
    (33) bloque_codigo -> . declarar_if bloque_codigo
    (34) bloque_codigo -> . declaracion bloque_codigo
    (35) bloque_codigo -> . asignar_estructuras bloque_codigo
    (36) bloque_codigo -> . asignar_array bloque_codigo
    (37) bloque_codigo -> . funcion bloque_codigo
    (38) bloque_codigo -> . print bloque_codigo
    (39) bloque_codigo -> . input bloque_codigo
    (40) bloque_codigo -> . declaracion_while bloque_codigo
    (41) bloque_codigo -> . VACIO
    (42) declarar_if -> . IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC
    (43) declarar_if -> . IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE LLAVEA bloque_codigo LLAVEC
    (44) declarar_if -> . declarar_if_error_llave
    (47) declaracion -> . tipo_dato ID PYC
    (48) declaracion -> . tipo_dato ID ASG ID operacion_matematica ID PYC
    (49) declaracion -> . tipo_dato ID ASG dato PYC
    (50) declaracion -> . AFARRAFAY ID dimensiones PYC
    (51) declaracion -> . declaracion_error
    (64) asignar_estructuras -> . ID PUNTO ID ASG dato PYC
    (63) asignar_array -> . ID dimensiones ASG dato PYC
    (65) funcion -> . ID PA valores PC PYC
    (66) funcion -> . ID PA PC PYC
    (67) funcion -> . ID PA valores COMA valores PC PYC
    (68) print -> . PRIFINT PA ID PC PYC
    (69) input -> . IFINPUFUT PA ID PC PYC
    (70) declaracion_while -> . WHIFILEFE PA condicion PC LLAVEA bloque_codigo LLAVEC
    (71) declaracion_while -> . declaracion_while_error
    (45) declarar_if_error_llave -> . IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE LLAVEA bloque_codigo
    (46) declarar_if_error_llave -> . IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE bloque_codigo LLAVEC
    (25) tipo_dato -> . IFINT
    (26) tipo_dato -> . STRIFING
    (27) tipo_dato -> . AFARRAFAY
    (28) tipo_dato -> . STRUFUCT
    (29) tipo_dato -> . VOFOIFID
    (30) tipo_dato -> . CHAFAR
    (31) tipo_dato -> . BOFOOFOL
    (32) tipo_dato -> . FLOFOAFAT
    (52) declaracion_error -> . ID PYC
    (53) declaracion_error -> . ID ASG ID operacion_matematica ID PYC
    (54) declaracion_error -> . ID ASG valores PYC
    (55) declaracion_error -> . ID ID PYC
    (56) declaracion_error -> . ID ID ASG ID operacion_matematica ID PYC
    (57) declaracion_error -> . ID ID ASG valores PYC
    (58) declaracion_error -> . ID ID dimensiones PYC
    (59) declaracion_error -> . ID dimensiones PYC
    (72) declaracion_while_error -> . PA condicion PC LLAVEA bloque_codigo LLAVEC
    (73) declaracion_while_error -> . ID PA condicion PC LLAVEA bloque_codigo LLAVEC
    (74) declaracion_while_error -> . WHIFILEFE PA condicion PC bloque_codigo LLAVEC
    (75) declaracion_while_error -> . WHIFILEFE PA condicion PC LLAVEA bloque_codigo

    VACIO           shift and go to state 67
    IFIF            shift and go to state 68
    AFARRAFAY       shift and go to state 72
    ID              shift and go to state 71
    PRIFINT         shift and go to state 74
    IFINPUFUT       shift and go to state 75
    WHIFILEFE       shift and go to state 76
    IFINT           shift and go to state 19
    STRIFING        shift and go to state 20
    STRUFUCT        shift and go to state 22
    VOFOIFID        shift and go to state 23
    CHAFAR          shift and go to state 24
    BOFOOFOL        shift and go to state 25
    FLOFOAFAT       shift and go to state 26
    PA              shift and go to state 57

    bloque_codigo                  shift and go to state 120
    declarar_if                    shift and go to state 59
    declaracion                    shift and go to state 60
    asignar_estructuras            shift and go to state 61
    asignar_array                  shift and go to state 62
    funcion                        shift and go to state 63
    print                          shift and go to state 64
    input                          shift and go to state 65
    declaracion_while              shift and go to state 66
    declarar_if_error_llave        shift and go to state 69
    tipo_dato                      shift and go to state 70
    declaracion_error              shift and go to state 73
    declaracion_while_error        shift and go to state 77

state 79

    (20) declarar_main_error -> MAFAIFIN PA PC LLAVEA bloque_codigo . REFETUFURN PYC LLAVEC
    (22) declarar_main_error -> MAFAIFIN PA PC LLAVEA bloque_codigo . LLAVEC

    REFETUFURN      shift and go to state 121
    LLAVEC          shift and go to state 122


state 80

    (12) declarar_estructuras_error -> STRUFUCT ID LLAVEA ID PYC ID . PYC LLAVEC

    PYC             shift and go to state 123


state 81

    (5) declarar_estructuras -> STRUFUCT ID LLAVEA tipo_dato ID PYC . tipo_dato ID PYC LLAVEC
    (10) declarar_estructuras_error -> STRUFUCT ID LLAVEA tipo_dato ID PYC . tipo_dato PYC LLAVEC
    (13) declarar_estructuras_error -> STRUFUCT ID LLAVEA tipo_dato ID PYC . tipo_dato ID PYC tipo_dato ID PYC LLAVEC
    (25) tipo_dato -> . IFINT
    (26) tipo_dato -> . STRIFING
    (27) tipo_dato -> . AFARRAFAY
    (28) tipo_dato -> . STRUFUCT
    (29) tipo_dato -> . VOFOIFID
    (30) tipo_dato -> . CHAFAR
    (31) tipo_dato -> . BOFOOFOL
    (32) tipo_dato -> . FLOFOAFAT

    IFINT           shift and go to state 19
    STRIFING        shift and go to state 20
    AFARRAFAY       shift and go to state 21
    STRUFUCT        shift and go to state 22
    VOFOIFID        shift and go to state 23
    CHAFAR          shift and go to state 24
    BOFOOFOL        shift and go to state 25
    FLOFOAFAT       shift and go to state 26

    tipo_dato                      shift and go to state 124

state 82

    (9) declarar_estructuras_error -> STRUFUCT ID LLAVEA tipo_dato PYC tipo_dato . ID PYC LLAVEC
    (11) declarar_estructuras_error -> STRUFUCT ID LLAVEA tipo_dato PYC tipo_dato . PYC LLAVEC

    ID              shift and go to state 125
    PYC             shift and go to state 126


state 83

    (8) declarar_estructuras_error -> ID ID LLAVEA tipo_dato ID PYC . tipo_dato ID PYC LLAVEC
    (25) tipo_dato -> . IFINT
    (26) tipo_dato -> . STRIFING
    (27) tipo_dato -> . AFARRAFAY
    (28) tipo_dato -> . STRUFUCT
    (29) tipo_dato -> . VOFOIFID
    (30) tipo_dato -> . CHAFAR
    (31) tipo_dato -> . BOFOOFOL
    (32) tipo_dato -> . FLOFOAFAT

    IFINT           shift and go to state 19
    STRIFING        shift and go to state 20
    AFARRAFAY       shift and go to state 21
    STRUFUCT        shift and go to state 22
    VOFOIFID        shift and go to state 23
    CHAFAR          shift and go to state 24
    BOFOOFOL        shift and go to state 25
    FLOFOAFAT       shift and go to state 26

    tipo_dato                      shift and go to state 127

state 84

    (7) declarar_estructuras_error -> ID LLAVEA tipo_dato ID PYC tipo_dato . ID PYC LLAVEC

    ID              shift and go to state 128


state 85

    (14) declarar_funciones -> FUNCTION tipo_dato ID PA tipo_dato ID . PC LLAVEA bloque_codigo REFETUFURN ID PYC LLAVEC
    (17) declarar_funciones -> FUNCTION tipo_dato ID PA tipo_dato ID . COMA tipo_dato ID PC LLAVEA bloque_codigo REFETUFURN ID PYC LLAVEC

    PC              shift and go to state 129
    COMA            shift and go to state 130


state 86

    (15) declarar_funciones -> FUNCTION tipo_dato ID PA PC LLAVEA . bloque_codigo REFETUFURN ID PYC LLAVEC
    (16) declarar_funciones -> FUNCTION tipo_dato ID PA PC LLAVEA . bloque_codigo REFETUFURN PYC LLAVEC
    (33) bloque_codigo -> . declarar_if bloque_codigo
    (34) bloque_codigo -> . declaracion bloque_codigo
    (35) bloque_codigo -> . asignar_estructuras bloque_codigo
    (36) bloque_codigo -> . asignar_array bloque_codigo
    (37) bloque_codigo -> . funcion bloque_codigo
    (38) bloque_codigo -> . print bloque_codigo
    (39) bloque_codigo -> . input bloque_codigo
    (40) bloque_codigo -> . declaracion_while bloque_codigo
    (41) bloque_codigo -> . VACIO
    (42) declarar_if -> . IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC
    (43) declarar_if -> . IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE LLAVEA bloque_codigo LLAVEC
    (44) declarar_if -> . declarar_if_error_llave
    (47) declaracion -> . tipo_dato ID PYC
    (48) declaracion -> . tipo_dato ID ASG ID operacion_matematica ID PYC
    (49) declaracion -> . tipo_dato ID ASG dato PYC
    (50) declaracion -> . AFARRAFAY ID dimensiones PYC
    (51) declaracion -> . declaracion_error
    (64) asignar_estructuras -> . ID PUNTO ID ASG dato PYC
    (63) asignar_array -> . ID dimensiones ASG dato PYC
    (65) funcion -> . ID PA valores PC PYC
    (66) funcion -> . ID PA PC PYC
    (67) funcion -> . ID PA valores COMA valores PC PYC
    (68) print -> . PRIFINT PA ID PC PYC
    (69) input -> . IFINPUFUT PA ID PC PYC
    (70) declaracion_while -> . WHIFILEFE PA condicion PC LLAVEA bloque_codigo LLAVEC
    (71) declaracion_while -> . declaracion_while_error
    (45) declarar_if_error_llave -> . IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE LLAVEA bloque_codigo
    (46) declarar_if_error_llave -> . IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE bloque_codigo LLAVEC
    (25) tipo_dato -> . IFINT
    (26) tipo_dato -> . STRIFING
    (27) tipo_dato -> . AFARRAFAY
    (28) tipo_dato -> . STRUFUCT
    (29) tipo_dato -> . VOFOIFID
    (30) tipo_dato -> . CHAFAR
    (31) tipo_dato -> . BOFOOFOL
    (32) tipo_dato -> . FLOFOAFAT
    (52) declaracion_error -> . ID PYC
    (53) declaracion_error -> . ID ASG ID operacion_matematica ID PYC
    (54) declaracion_error -> . ID ASG valores PYC
    (55) declaracion_error -> . ID ID PYC
    (56) declaracion_error -> . ID ID ASG ID operacion_matematica ID PYC
    (57) declaracion_error -> . ID ID ASG valores PYC
    (58) declaracion_error -> . ID ID dimensiones PYC
    (59) declaracion_error -> . ID dimensiones PYC
    (72) declaracion_while_error -> . PA condicion PC LLAVEA bloque_codigo LLAVEC
    (73) declaracion_while_error -> . ID PA condicion PC LLAVEA bloque_codigo LLAVEC
    (74) declaracion_while_error -> . WHIFILEFE PA condicion PC bloque_codigo LLAVEC
    (75) declaracion_while_error -> . WHIFILEFE PA condicion PC LLAVEA bloque_codigo

    VACIO           shift and go to state 67
    IFIF            shift and go to state 68
    AFARRAFAY       shift and go to state 72
    ID              shift and go to state 71
    PRIFINT         shift and go to state 74
    IFINPUFUT       shift and go to state 75
    WHIFILEFE       shift and go to state 76
    IFINT           shift and go to state 19
    STRIFING        shift and go to state 20
    STRUFUCT        shift and go to state 22
    VOFOIFID        shift and go to state 23
    CHAFAR          shift and go to state 24
    BOFOOFOL        shift and go to state 25
    FLOFOAFAT       shift and go to state 26
    PA              shift and go to state 57

    tipo_dato                      shift and go to state 70
    bloque_codigo                  shift and go to state 131
    declarar_if                    shift and go to state 59
    declaracion                    shift and go to state 60
    asignar_estructuras            shift and go to state 61
    asignar_array                  shift and go to state 62
    funcion                        shift and go to state 63
    print                          shift and go to state 64
    input                          shift and go to state 65
    declaracion_while              shift and go to state 66
    declarar_if_error_llave        shift and go to state 69
    declaracion_error              shift and go to state 73
    declaracion_while_error        shift and go to state 77

state 87

    (18) declarar_main -> IFINT MAFAIFIN PA PC LLAVEA bloque_codigo . REFETUFURN PYC LLAVEC
    (21) declarar_main_error -> IFINT MAFAIFIN PA PC LLAVEA bloque_codigo . LLAVEC

    REFETUFURN      shift and go to state 132
    LLAVEC          shift and go to state 133


state 88

    (72) declaracion_while_error -> PA condicion . PC LLAVEA bloque_codigo LLAVEC

    PC              shift and go to state 134


state 89

    (76) condicion -> valores . operadores valores
    (77) condicion -> valores .
    (78) condicion -> valores . operadores_logicos condicion
    (79) condicion -> valores . NOT valores
    (98) operadores -> . MEN
    (99) operadores -> . MAY
    (100) operadores -> . MENIG
    (101) operadores -> . MAYIG
    (102) operadores -> . CMP
    (103) operadores -> . DIF
    (104) operadores_logicos -> . AND
    (105) operadores_logicos -> . OR

    PC              reduce using rule 77 (condicion -> valores .)
    NOT             shift and go to state 137
    MEN             shift and go to state 138
    MAY             shift and go to state 139
    MENIG           shift and go to state 140
    MAYIG           shift and go to state 141
    CMP             shift and go to state 142
    DIF             shift and go to state 143
    AND             shift and go to state 144
    OR              shift and go to state 145

    operadores                     shift and go to state 135
    operadores_logicos             shift and go to state 136

state 90

    (86) valores -> INT .

    NOT             reduce using rule 86 (valores -> INT .)
    MEN             reduce using rule 86 (valores -> INT .)
    MAY             reduce using rule 86 (valores -> INT .)
    MENIG           reduce using rule 86 (valores -> INT .)
    MAYIG           reduce using rule 86 (valores -> INT .)
    CMP             reduce using rule 86 (valores -> INT .)
    DIF             reduce using rule 86 (valores -> INT .)
    AND             reduce using rule 86 (valores -> INT .)
    OR              reduce using rule 86 (valores -> INT .)
    PC              reduce using rule 86 (valores -> INT .)
    PYC             reduce using rule 86 (valores -> INT .)
    COMA            reduce using rule 86 (valores -> INT .)


state 91

    (87) valores -> CHAR .

    NOT             reduce using rule 87 (valores -> CHAR .)
    MEN             reduce using rule 87 (valores -> CHAR .)
    MAY             reduce using rule 87 (valores -> CHAR .)
    MENIG           reduce using rule 87 (valores -> CHAR .)
    MAYIG           reduce using rule 87 (valores -> CHAR .)
    CMP             reduce using rule 87 (valores -> CHAR .)
    DIF             reduce using rule 87 (valores -> CHAR .)
    AND             reduce using rule 87 (valores -> CHAR .)
    OR              reduce using rule 87 (valores -> CHAR .)
    PC              reduce using rule 87 (valores -> CHAR .)
    PYC             reduce using rule 87 (valores -> CHAR .)
    COMA            reduce using rule 87 (valores -> CHAR .)


state 92

    (88) valores -> TRUFUEFE .

    NOT             reduce using rule 88 (valores -> TRUFUEFE .)
    MEN             reduce using rule 88 (valores -> TRUFUEFE .)
    MAY             reduce using rule 88 (valores -> TRUFUEFE .)
    MENIG           reduce using rule 88 (valores -> TRUFUEFE .)
    MAYIG           reduce using rule 88 (valores -> TRUFUEFE .)
    CMP             reduce using rule 88 (valores -> TRUFUEFE .)
    DIF             reduce using rule 88 (valores -> TRUFUEFE .)
    AND             reduce using rule 88 (valores -> TRUFUEFE .)
    OR              reduce using rule 88 (valores -> TRUFUEFE .)
    PC              reduce using rule 88 (valores -> TRUFUEFE .)
    PYC             reduce using rule 88 (valores -> TRUFUEFE .)
    COMA            reduce using rule 88 (valores -> TRUFUEFE .)


state 93

    (89) valores -> FAFALSEFE .

    NOT             reduce using rule 89 (valores -> FAFALSEFE .)
    MEN             reduce using rule 89 (valores -> FAFALSEFE .)
    MAY             reduce using rule 89 (valores -> FAFALSEFE .)
    MENIG           reduce using rule 89 (valores -> FAFALSEFE .)
    MAYIG           reduce using rule 89 (valores -> FAFALSEFE .)
    CMP             reduce using rule 89 (valores -> FAFALSEFE .)
    DIF             reduce using rule 89 (valores -> FAFALSEFE .)
    AND             reduce using rule 89 (valores -> FAFALSEFE .)
    OR              reduce using rule 89 (valores -> FAFALSEFE .)
    PC              reduce using rule 89 (valores -> FAFALSEFE .)
    PYC             reduce using rule 89 (valores -> FAFALSEFE .)
    COMA            reduce using rule 89 (valores -> FAFALSEFE .)


state 94

    (90) valores -> PCC .

    NOT             reduce using rule 90 (valores -> PCC .)
    MEN             reduce using rule 90 (valores -> PCC .)
    MAY             reduce using rule 90 (valores -> PCC .)
    MENIG           reduce using rule 90 (valores -> PCC .)
    MAYIG           reduce using rule 90 (valores -> PCC .)
    CMP             reduce using rule 90 (valores -> PCC .)
    DIF             reduce using rule 90 (valores -> PCC .)
    AND             reduce using rule 90 (valores -> PCC .)
    OR              reduce using rule 90 (valores -> PCC .)
    PC              reduce using rule 90 (valores -> PCC .)
    PYC             reduce using rule 90 (valores -> PCC .)
    COMA            reduce using rule 90 (valores -> PCC .)


state 95

    (91) valores -> ID .

    NOT             reduce using rule 91 (valores -> ID .)
    MEN             reduce using rule 91 (valores -> ID .)
    MAY             reduce using rule 91 (valores -> ID .)
    MENIG           reduce using rule 91 (valores -> ID .)
    MAYIG           reduce using rule 91 (valores -> ID .)
    CMP             reduce using rule 91 (valores -> ID .)
    DIF             reduce using rule 91 (valores -> ID .)
    AND             reduce using rule 91 (valores -> ID .)
    OR              reduce using rule 91 (valores -> ID .)
    PC              reduce using rule 91 (valores -> ID .)
    COMA            reduce using rule 91 (valores -> ID .)


state 96

    (23) declarar_main_error -> IFINT PA PC LLAVEA bloque_codigo REFETUFURN . PYC LLAVEC

    PYC             shift and go to state 146


state 97

    (33) bloque_codigo -> declarar_if bloque_codigo .

    REFETUFURN      reduce using rule 33 (bloque_codigo -> declarar_if bloque_codigo .)
    LLAVEC          reduce using rule 33 (bloque_codigo -> declarar_if bloque_codigo .)
    VACIO           reduce using rule 33 (bloque_codigo -> declarar_if bloque_codigo .)
    IFIF            reduce using rule 33 (bloque_codigo -> declarar_if bloque_codigo .)
    AFARRAFAY       reduce using rule 33 (bloque_codigo -> declarar_if bloque_codigo .)
    ID              reduce using rule 33 (bloque_codigo -> declarar_if bloque_codigo .)
    PRIFINT         reduce using rule 33 (bloque_codigo -> declarar_if bloque_codigo .)
    IFINPUFUT       reduce using rule 33 (bloque_codigo -> declarar_if bloque_codigo .)
    WHIFILEFE       reduce using rule 33 (bloque_codigo -> declarar_if bloque_codigo .)
    IFINT           reduce using rule 33 (bloque_codigo -> declarar_if bloque_codigo .)
    STRIFING        reduce using rule 33 (bloque_codigo -> declarar_if bloque_codigo .)
    STRUFUCT        reduce using rule 33 (bloque_codigo -> declarar_if bloque_codigo .)
    VOFOIFID        reduce using rule 33 (bloque_codigo -> declarar_if bloque_codigo .)
    CHAFAR          reduce using rule 33 (bloque_codigo -> declarar_if bloque_codigo .)
    BOFOOFOL        reduce using rule 33 (bloque_codigo -> declarar_if bloque_codigo .)
    FLOFOAFAT       reduce using rule 33 (bloque_codigo -> declarar_if bloque_codigo .)
    PA              reduce using rule 33 (bloque_codigo -> declarar_if bloque_codigo .)


state 98

    (34) bloque_codigo -> declaracion bloque_codigo .

    REFETUFURN      reduce using rule 34 (bloque_codigo -> declaracion bloque_codigo .)
    LLAVEC          reduce using rule 34 (bloque_codigo -> declaracion bloque_codigo .)
    VACIO           reduce using rule 34 (bloque_codigo -> declaracion bloque_codigo .)
    IFIF            reduce using rule 34 (bloque_codigo -> declaracion bloque_codigo .)
    AFARRAFAY       reduce using rule 34 (bloque_codigo -> declaracion bloque_codigo .)
    ID              reduce using rule 34 (bloque_codigo -> declaracion bloque_codigo .)
    PRIFINT         reduce using rule 34 (bloque_codigo -> declaracion bloque_codigo .)
    IFINPUFUT       reduce using rule 34 (bloque_codigo -> declaracion bloque_codigo .)
    WHIFILEFE       reduce using rule 34 (bloque_codigo -> declaracion bloque_codigo .)
    IFINT           reduce using rule 34 (bloque_codigo -> declaracion bloque_codigo .)
    STRIFING        reduce using rule 34 (bloque_codigo -> declaracion bloque_codigo .)
    STRUFUCT        reduce using rule 34 (bloque_codigo -> declaracion bloque_codigo .)
    VOFOIFID        reduce using rule 34 (bloque_codigo -> declaracion bloque_codigo .)
    CHAFAR          reduce using rule 34 (bloque_codigo -> declaracion bloque_codigo .)
    BOFOOFOL        reduce using rule 34 (bloque_codigo -> declaracion bloque_codigo .)
    FLOFOAFAT       reduce using rule 34 (bloque_codigo -> declaracion bloque_codigo .)
    PA              reduce using rule 34 (bloque_codigo -> declaracion bloque_codigo .)


state 99

    (35) bloque_codigo -> asignar_estructuras bloque_codigo .

    REFETUFURN      reduce using rule 35 (bloque_codigo -> asignar_estructuras bloque_codigo .)
    LLAVEC          reduce using rule 35 (bloque_codigo -> asignar_estructuras bloque_codigo .)
    VACIO           reduce using rule 35 (bloque_codigo -> asignar_estructuras bloque_codigo .)
    IFIF            reduce using rule 35 (bloque_codigo -> asignar_estructuras bloque_codigo .)
    AFARRAFAY       reduce using rule 35 (bloque_codigo -> asignar_estructuras bloque_codigo .)
    ID              reduce using rule 35 (bloque_codigo -> asignar_estructuras bloque_codigo .)
    PRIFINT         reduce using rule 35 (bloque_codigo -> asignar_estructuras bloque_codigo .)
    IFINPUFUT       reduce using rule 35 (bloque_codigo -> asignar_estructuras bloque_codigo .)
    WHIFILEFE       reduce using rule 35 (bloque_codigo -> asignar_estructuras bloque_codigo .)
    IFINT           reduce using rule 35 (bloque_codigo -> asignar_estructuras bloque_codigo .)
    STRIFING        reduce using rule 35 (bloque_codigo -> asignar_estructuras bloque_codigo .)
    STRUFUCT        reduce using rule 35 (bloque_codigo -> asignar_estructuras bloque_codigo .)
    VOFOIFID        reduce using rule 35 (bloque_codigo -> asignar_estructuras bloque_codigo .)
    CHAFAR          reduce using rule 35 (bloque_codigo -> asignar_estructuras bloque_codigo .)
    BOFOOFOL        reduce using rule 35 (bloque_codigo -> asignar_estructuras bloque_codigo .)
    FLOFOAFAT       reduce using rule 35 (bloque_codigo -> asignar_estructuras bloque_codigo .)
    PA              reduce using rule 35 (bloque_codigo -> asignar_estructuras bloque_codigo .)


state 100

    (36) bloque_codigo -> asignar_array bloque_codigo .

    REFETUFURN      reduce using rule 36 (bloque_codigo -> asignar_array bloque_codigo .)
    LLAVEC          reduce using rule 36 (bloque_codigo -> asignar_array bloque_codigo .)
    VACIO           reduce using rule 36 (bloque_codigo -> asignar_array bloque_codigo .)
    IFIF            reduce using rule 36 (bloque_codigo -> asignar_array bloque_codigo .)
    AFARRAFAY       reduce using rule 36 (bloque_codigo -> asignar_array bloque_codigo .)
    ID              reduce using rule 36 (bloque_codigo -> asignar_array bloque_codigo .)
    PRIFINT         reduce using rule 36 (bloque_codigo -> asignar_array bloque_codigo .)
    IFINPUFUT       reduce using rule 36 (bloque_codigo -> asignar_array bloque_codigo .)
    WHIFILEFE       reduce using rule 36 (bloque_codigo -> asignar_array bloque_codigo .)
    IFINT           reduce using rule 36 (bloque_codigo -> asignar_array bloque_codigo .)
    STRIFING        reduce using rule 36 (bloque_codigo -> asignar_array bloque_codigo .)
    STRUFUCT        reduce using rule 36 (bloque_codigo -> asignar_array bloque_codigo .)
    VOFOIFID        reduce using rule 36 (bloque_codigo -> asignar_array bloque_codigo .)
    CHAFAR          reduce using rule 36 (bloque_codigo -> asignar_array bloque_codigo .)
    BOFOOFOL        reduce using rule 36 (bloque_codigo -> asignar_array bloque_codigo .)
    FLOFOAFAT       reduce using rule 36 (bloque_codigo -> asignar_array bloque_codigo .)
    PA              reduce using rule 36 (bloque_codigo -> asignar_array bloque_codigo .)


state 101

    (37) bloque_codigo -> funcion bloque_codigo .

    REFETUFURN      reduce using rule 37 (bloque_codigo -> funcion bloque_codigo .)
    LLAVEC          reduce using rule 37 (bloque_codigo -> funcion bloque_codigo .)
    VACIO           reduce using rule 37 (bloque_codigo -> funcion bloque_codigo .)
    IFIF            reduce using rule 37 (bloque_codigo -> funcion bloque_codigo .)
    AFARRAFAY       reduce using rule 37 (bloque_codigo -> funcion bloque_codigo .)
    ID              reduce using rule 37 (bloque_codigo -> funcion bloque_codigo .)
    PRIFINT         reduce using rule 37 (bloque_codigo -> funcion bloque_codigo .)
    IFINPUFUT       reduce using rule 37 (bloque_codigo -> funcion bloque_codigo .)
    WHIFILEFE       reduce using rule 37 (bloque_codigo -> funcion bloque_codigo .)
    IFINT           reduce using rule 37 (bloque_codigo -> funcion bloque_codigo .)
    STRIFING        reduce using rule 37 (bloque_codigo -> funcion bloque_codigo .)
    STRUFUCT        reduce using rule 37 (bloque_codigo -> funcion bloque_codigo .)
    VOFOIFID        reduce using rule 37 (bloque_codigo -> funcion bloque_codigo .)
    CHAFAR          reduce using rule 37 (bloque_codigo -> funcion bloque_codigo .)
    BOFOOFOL        reduce using rule 37 (bloque_codigo -> funcion bloque_codigo .)
    FLOFOAFAT       reduce using rule 37 (bloque_codigo -> funcion bloque_codigo .)
    PA              reduce using rule 37 (bloque_codigo -> funcion bloque_codigo .)


state 102

    (38) bloque_codigo -> print bloque_codigo .

    REFETUFURN      reduce using rule 38 (bloque_codigo -> print bloque_codigo .)
    LLAVEC          reduce using rule 38 (bloque_codigo -> print bloque_codigo .)
    VACIO           reduce using rule 38 (bloque_codigo -> print bloque_codigo .)
    IFIF            reduce using rule 38 (bloque_codigo -> print bloque_codigo .)
    AFARRAFAY       reduce using rule 38 (bloque_codigo -> print bloque_codigo .)
    ID              reduce using rule 38 (bloque_codigo -> print bloque_codigo .)
    PRIFINT         reduce using rule 38 (bloque_codigo -> print bloque_codigo .)
    IFINPUFUT       reduce using rule 38 (bloque_codigo -> print bloque_codigo .)
    WHIFILEFE       reduce using rule 38 (bloque_codigo -> print bloque_codigo .)
    IFINT           reduce using rule 38 (bloque_codigo -> print bloque_codigo .)
    STRIFING        reduce using rule 38 (bloque_codigo -> print bloque_codigo .)
    STRUFUCT        reduce using rule 38 (bloque_codigo -> print bloque_codigo .)
    VOFOIFID        reduce using rule 38 (bloque_codigo -> print bloque_codigo .)
    CHAFAR          reduce using rule 38 (bloque_codigo -> print bloque_codigo .)
    BOFOOFOL        reduce using rule 38 (bloque_codigo -> print bloque_codigo .)
    FLOFOAFAT       reduce using rule 38 (bloque_codigo -> print bloque_codigo .)
    PA              reduce using rule 38 (bloque_codigo -> print bloque_codigo .)


state 103

    (39) bloque_codigo -> input bloque_codigo .

    REFETUFURN      reduce using rule 39 (bloque_codigo -> input bloque_codigo .)
    LLAVEC          reduce using rule 39 (bloque_codigo -> input bloque_codigo .)
    VACIO           reduce using rule 39 (bloque_codigo -> input bloque_codigo .)
    IFIF            reduce using rule 39 (bloque_codigo -> input bloque_codigo .)
    AFARRAFAY       reduce using rule 39 (bloque_codigo -> input bloque_codigo .)
    ID              reduce using rule 39 (bloque_codigo -> input bloque_codigo .)
    PRIFINT         reduce using rule 39 (bloque_codigo -> input bloque_codigo .)
    IFINPUFUT       reduce using rule 39 (bloque_codigo -> input bloque_codigo .)
    WHIFILEFE       reduce using rule 39 (bloque_codigo -> input bloque_codigo .)
    IFINT           reduce using rule 39 (bloque_codigo -> input bloque_codigo .)
    STRIFING        reduce using rule 39 (bloque_codigo -> input bloque_codigo .)
    STRUFUCT        reduce using rule 39 (bloque_codigo -> input bloque_codigo .)
    VOFOIFID        reduce using rule 39 (bloque_codigo -> input bloque_codigo .)
    CHAFAR          reduce using rule 39 (bloque_codigo -> input bloque_codigo .)
    BOFOOFOL        reduce using rule 39 (bloque_codigo -> input bloque_codigo .)
    FLOFOAFAT       reduce using rule 39 (bloque_codigo -> input bloque_codigo .)
    PA              reduce using rule 39 (bloque_codigo -> input bloque_codigo .)


state 104

    (40) bloque_codigo -> declaracion_while bloque_codigo .

    REFETUFURN      reduce using rule 40 (bloque_codigo -> declaracion_while bloque_codigo .)
    LLAVEC          reduce using rule 40 (bloque_codigo -> declaracion_while bloque_codigo .)
    VACIO           reduce using rule 40 (bloque_codigo -> declaracion_while bloque_codigo .)
    IFIF            reduce using rule 40 (bloque_codigo -> declaracion_while bloque_codigo .)
    AFARRAFAY       reduce using rule 40 (bloque_codigo -> declaracion_while bloque_codigo .)
    ID              reduce using rule 40 (bloque_codigo -> declaracion_while bloque_codigo .)
    PRIFINT         reduce using rule 40 (bloque_codigo -> declaracion_while bloque_codigo .)
    IFINPUFUT       reduce using rule 40 (bloque_codigo -> declaracion_while bloque_codigo .)
    WHIFILEFE       reduce using rule 40 (bloque_codigo -> declaracion_while bloque_codigo .)
    IFINT           reduce using rule 40 (bloque_codigo -> declaracion_while bloque_codigo .)
    STRIFING        reduce using rule 40 (bloque_codigo -> declaracion_while bloque_codigo .)
    STRUFUCT        reduce using rule 40 (bloque_codigo -> declaracion_while bloque_codigo .)
    VOFOIFID        reduce using rule 40 (bloque_codigo -> declaracion_while bloque_codigo .)
    CHAFAR          reduce using rule 40 (bloque_codigo -> declaracion_while bloque_codigo .)
    BOFOOFOL        reduce using rule 40 (bloque_codigo -> declaracion_while bloque_codigo .)
    FLOFOAFAT       reduce using rule 40 (bloque_codigo -> declaracion_while bloque_codigo .)
    PA              reduce using rule 40 (bloque_codigo -> declaracion_while bloque_codigo .)


state 105

    (42) declarar_if -> IFIF PA . condicion PC LLAVEA bloque_codigo LLAVEC
    (43) declarar_if -> IFIF PA . condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE LLAVEA bloque_codigo LLAVEC
    (45) declarar_if_error_llave -> IFIF PA . condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE LLAVEA bloque_codigo
    (46) declarar_if_error_llave -> IFIF PA . condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE bloque_codigo LLAVEC
    (76) condicion -> . valores operadores valores
    (77) condicion -> . valores
    (78) condicion -> . valores operadores_logicos condicion
    (79) condicion -> . valores NOT valores
    (86) valores -> . INT
    (87) valores -> . CHAR
    (88) valores -> . TRUFUEFE
    (89) valores -> . FAFALSEFE
    (90) valores -> . PCC
    (91) valores -> . ID

    INT             shift and go to state 90
    CHAR            shift and go to state 91
    TRUFUEFE        shift and go to state 92
    FAFALSEFE       shift and go to state 93
    PCC             shift and go to state 94
    ID              shift and go to state 95

    condicion                      shift and go to state 147
    valores                        shift and go to state 89

state 106

    (47) declaracion -> tipo_dato ID . PYC
    (48) declaracion -> tipo_dato ID . ASG ID operacion_matematica ID PYC
    (49) declaracion -> tipo_dato ID . ASG dato PYC

    PYC             shift and go to state 148
    ASG             shift and go to state 149


state 107

    (55) declaracion_error -> ID ID . PYC
    (56) declaracion_error -> ID ID . ASG ID operacion_matematica ID PYC
    (57) declaracion_error -> ID ID . ASG valores PYC
    (58) declaracion_error -> ID ID . dimensiones PYC
    (60) dimensiones -> . dimension dimensiones
    (61) dimensiones -> . VACIO
    (62) dimension -> . CA INT CC

    PYC             shift and go to state 150
    ASG             shift and go to state 151
    VACIO           shift and go to state 114
    CA              shift and go to state 115

    dimensiones                    shift and go to state 152
    dimension                      shift and go to state 113

state 108

    (64) asignar_estructuras -> ID PUNTO . ID ASG dato PYC

    ID              shift and go to state 153


state 109

    (53) declaracion_error -> ID ASG . ID operacion_matematica ID PYC
    (54) declaracion_error -> ID ASG . valores PYC
    (86) valores -> . INT
    (87) valores -> . CHAR
    (88) valores -> . TRUFUEFE
    (89) valores -> . FAFALSEFE
    (90) valores -> . PCC
    (91) valores -> . ID

    ID              shift and go to state 154
    INT             shift and go to state 90
    CHAR            shift and go to state 91
    TRUFUEFE        shift and go to state 92
    FAFALSEFE       shift and go to state 93
    PCC             shift and go to state 94

    valores                        shift and go to state 155

state 110

    (52) declaracion_error -> ID PYC .

    VACIO           reduce using rule 52 (declaracion_error -> ID PYC .)
    IFIF            reduce using rule 52 (declaracion_error -> ID PYC .)
    AFARRAFAY       reduce using rule 52 (declaracion_error -> ID PYC .)
    ID              reduce using rule 52 (declaracion_error -> ID PYC .)
    PRIFINT         reduce using rule 52 (declaracion_error -> ID PYC .)
    IFINPUFUT       reduce using rule 52 (declaracion_error -> ID PYC .)
    WHIFILEFE       reduce using rule 52 (declaracion_error -> ID PYC .)
    IFINT           reduce using rule 52 (declaracion_error -> ID PYC .)
    STRIFING        reduce using rule 52 (declaracion_error -> ID PYC .)
    STRUFUCT        reduce using rule 52 (declaracion_error -> ID PYC .)
    VOFOIFID        reduce using rule 52 (declaracion_error -> ID PYC .)
    CHAFAR          reduce using rule 52 (declaracion_error -> ID PYC .)
    BOFOOFOL        reduce using rule 52 (declaracion_error -> ID PYC .)
    FLOFOAFAT       reduce using rule 52 (declaracion_error -> ID PYC .)
    PA              reduce using rule 52 (declaracion_error -> ID PYC .)


state 111

    (63) asignar_array -> ID dimensiones . ASG dato PYC
    (59) declaracion_error -> ID dimensiones . PYC

    ASG             shift and go to state 156
    PYC             shift and go to state 157


state 112

    (65) funcion -> ID PA . valores PC PYC
    (66) funcion -> ID PA . PC PYC
    (67) funcion -> ID PA . valores COMA valores PC PYC
    (73) declaracion_while_error -> ID PA . condicion PC LLAVEA bloque_codigo LLAVEC
    (86) valores -> . INT
    (87) valores -> . CHAR
    (88) valores -> . TRUFUEFE
    (89) valores -> . FAFALSEFE
    (90) valores -> . PCC
    (91) valores -> . ID
    (76) condicion -> . valores operadores valores
    (77) condicion -> . valores
    (78) condicion -> . valores operadores_logicos condicion
    (79) condicion -> . valores NOT valores

    PC              shift and go to state 159
    INT             shift and go to state 90
    CHAR            shift and go to state 91
    TRUFUEFE        shift and go to state 92
    FAFALSEFE       shift and go to state 93
    PCC             shift and go to state 94
    ID              shift and go to state 95

    valores                        shift and go to state 158
    condicion                      shift and go to state 160

state 113

    (60) dimensiones -> dimension . dimensiones
    (60) dimensiones -> . dimension dimensiones
    (61) dimensiones -> . VACIO
    (62) dimension -> . CA INT CC

    VACIO           shift and go to state 114
    CA              shift and go to state 115

    dimension                      shift and go to state 113
    dimensiones                    shift and go to state 161

state 114

    (61) dimensiones -> VACIO .

    ASG             reduce using rule 61 (dimensiones -> VACIO .)
    PYC             reduce using rule 61 (dimensiones -> VACIO .)


state 115

    (62) dimension -> CA . INT CC

    INT             shift and go to state 162


state 116

    (50) declaracion -> AFARRAFAY ID . dimensiones PYC
    (60) dimensiones -> . dimension dimensiones
    (61) dimensiones -> . VACIO
    (62) dimension -> . CA INT CC

    VACIO           shift and go to state 114
    CA              shift and go to state 115

    dimensiones                    shift and go to state 163
    dimension                      shift and go to state 113

state 117

    (68) print -> PRIFINT PA . ID PC PYC

    ID              shift and go to state 164


state 118

    (69) input -> IFINPUFUT PA . ID PC PYC

    ID              shift and go to state 165


state 119

    (70) declaracion_while -> WHIFILEFE PA . condicion PC LLAVEA bloque_codigo LLAVEC
    (74) declaracion_while_error -> WHIFILEFE PA . condicion PC bloque_codigo LLAVEC
    (75) declaracion_while_error -> WHIFILEFE PA . condicion PC LLAVEA bloque_codigo
    (76) condicion -> . valores operadores valores
    (77) condicion -> . valores
    (78) condicion -> . valores operadores_logicos condicion
    (79) condicion -> . valores NOT valores
    (86) valores -> . INT
    (87) valores -> . CHAR
    (88) valores -> . TRUFUEFE
    (89) valores -> . FAFALSEFE
    (90) valores -> . PCC
    (91) valores -> . ID

    INT             shift and go to state 90
    CHAR            shift and go to state 91
    TRUFUEFE        shift and go to state 92
    FAFALSEFE       shift and go to state 93
    PCC             shift and go to state 94
    ID              shift and go to state 95

    condicion                      shift and go to state 166
    valores                        shift and go to state 89

state 120

    (24) declarar_main_error -> IFINT ID PA PC LLAVEA bloque_codigo . REFETUFURN PYC LLAVEC

    REFETUFURN      shift and go to state 167


state 121

    (20) declarar_main_error -> MAFAIFIN PA PC LLAVEA bloque_codigo REFETUFURN . PYC LLAVEC

    PYC             shift and go to state 168


state 122

    (22) declarar_main_error -> MAFAIFIN PA PC LLAVEA bloque_codigo LLAVEC .

    $end            reduce using rule 22 (declarar_main_error -> MAFAIFIN PA PC LLAVEA bloque_codigo LLAVEC .)


state 123

    (12) declarar_estructuras_error -> STRUFUCT ID LLAVEA ID PYC ID PYC . LLAVEC

    LLAVEC          shift and go to state 169


state 124

    (5) declarar_estructuras -> STRUFUCT ID LLAVEA tipo_dato ID PYC tipo_dato . ID PYC LLAVEC
    (10) declarar_estructuras_error -> STRUFUCT ID LLAVEA tipo_dato ID PYC tipo_dato . PYC LLAVEC
    (13) declarar_estructuras_error -> STRUFUCT ID LLAVEA tipo_dato ID PYC tipo_dato . ID PYC tipo_dato ID PYC LLAVEC

    ID              shift and go to state 170
    PYC             shift and go to state 171


state 125

    (9) declarar_estructuras_error -> STRUFUCT ID LLAVEA tipo_dato PYC tipo_dato ID . PYC LLAVEC

    PYC             shift and go to state 172


state 126

    (11) declarar_estructuras_error -> STRUFUCT ID LLAVEA tipo_dato PYC tipo_dato PYC . LLAVEC

    LLAVEC          shift and go to state 173


state 127

    (8) declarar_estructuras_error -> ID ID LLAVEA tipo_dato ID PYC tipo_dato . ID PYC LLAVEC

    ID              shift and go to state 174


state 128

    (7) declarar_estructuras_error -> ID LLAVEA tipo_dato ID PYC tipo_dato ID . PYC LLAVEC

    PYC             shift and go to state 175


state 129

    (14) declarar_funciones -> FUNCTION tipo_dato ID PA tipo_dato ID PC . LLAVEA bloque_codigo REFETUFURN ID PYC LLAVEC

    LLAVEA          shift and go to state 176


state 130

    (17) declarar_funciones -> FUNCTION tipo_dato ID PA tipo_dato ID COMA . tipo_dato ID PC LLAVEA bloque_codigo REFETUFURN ID PYC LLAVEC
    (25) tipo_dato -> . IFINT
    (26) tipo_dato -> . STRIFING
    (27) tipo_dato -> . AFARRAFAY
    (28) tipo_dato -> . STRUFUCT
    (29) tipo_dato -> . VOFOIFID
    (30) tipo_dato -> . CHAFAR
    (31) tipo_dato -> . BOFOOFOL
    (32) tipo_dato -> . FLOFOAFAT

    IFINT           shift and go to state 19
    STRIFING        shift and go to state 20
    AFARRAFAY       shift and go to state 21
    STRUFUCT        shift and go to state 22
    VOFOIFID        shift and go to state 23
    CHAFAR          shift and go to state 24
    BOFOOFOL        shift and go to state 25
    FLOFOAFAT       shift and go to state 26

    tipo_dato                      shift and go to state 177

state 131

    (15) declarar_funciones -> FUNCTION tipo_dato ID PA PC LLAVEA bloque_codigo . REFETUFURN ID PYC LLAVEC
    (16) declarar_funciones -> FUNCTION tipo_dato ID PA PC LLAVEA bloque_codigo . REFETUFURN PYC LLAVEC

    REFETUFURN      shift and go to state 178


state 132

    (18) declarar_main -> IFINT MAFAIFIN PA PC LLAVEA bloque_codigo REFETUFURN . PYC LLAVEC

    PYC             shift and go to state 179


state 133

    (21) declarar_main_error -> IFINT MAFAIFIN PA PC LLAVEA bloque_codigo LLAVEC .

    $end            reduce using rule 21 (declarar_main_error -> IFINT MAFAIFIN PA PC LLAVEA bloque_codigo LLAVEC .)


state 134

    (72) declaracion_while_error -> PA condicion PC . LLAVEA bloque_codigo LLAVEC

    LLAVEA          shift and go to state 180


state 135

    (76) condicion -> valores operadores . valores
    (86) valores -> . INT
    (87) valores -> . CHAR
    (88) valores -> . TRUFUEFE
    (89) valores -> . FAFALSEFE
    (90) valores -> . PCC
    (91) valores -> . ID

    INT             shift and go to state 90
    CHAR            shift and go to state 91
    TRUFUEFE        shift and go to state 92
    FAFALSEFE       shift and go to state 93
    PCC             shift and go to state 94
    ID              shift and go to state 95

    valores                        shift and go to state 181

state 136

    (78) condicion -> valores operadores_logicos . condicion
    (76) condicion -> . valores operadores valores
    (77) condicion -> . valores
    (78) condicion -> . valores operadores_logicos condicion
    (79) condicion -> . valores NOT valores
    (86) valores -> . INT
    (87) valores -> . CHAR
    (88) valores -> . TRUFUEFE
    (89) valores -> . FAFALSEFE
    (90) valores -> . PCC
    (91) valores -> . ID

    INT             shift and go to state 90
    CHAR            shift and go to state 91
    TRUFUEFE        shift and go to state 92
    FAFALSEFE       shift and go to state 93
    PCC             shift and go to state 94
    ID              shift and go to state 95

    valores                        shift and go to state 89
    condicion                      shift and go to state 182

state 137

    (79) condicion -> valores NOT . valores
    (86) valores -> . INT
    (87) valores -> . CHAR
    (88) valores -> . TRUFUEFE
    (89) valores -> . FAFALSEFE
    (90) valores -> . PCC
    (91) valores -> . ID

    INT             shift and go to state 90
    CHAR            shift and go to state 91
    TRUFUEFE        shift and go to state 92
    FAFALSEFE       shift and go to state 93
    PCC             shift and go to state 94
    ID              shift and go to state 95

    valores                        shift and go to state 183

state 138

    (98) operadores -> MEN .

    INT             reduce using rule 98 (operadores -> MEN .)
    CHAR            reduce using rule 98 (operadores -> MEN .)
    TRUFUEFE        reduce using rule 98 (operadores -> MEN .)
    FAFALSEFE       reduce using rule 98 (operadores -> MEN .)
    PCC             reduce using rule 98 (operadores -> MEN .)
    ID              reduce using rule 98 (operadores -> MEN .)


state 139

    (99) operadores -> MAY .

    INT             reduce using rule 99 (operadores -> MAY .)
    CHAR            reduce using rule 99 (operadores -> MAY .)
    TRUFUEFE        reduce using rule 99 (operadores -> MAY .)
    FAFALSEFE       reduce using rule 99 (operadores -> MAY .)
    PCC             reduce using rule 99 (operadores -> MAY .)
    ID              reduce using rule 99 (operadores -> MAY .)


state 140

    (100) operadores -> MENIG .

    INT             reduce using rule 100 (operadores -> MENIG .)
    CHAR            reduce using rule 100 (operadores -> MENIG .)
    TRUFUEFE        reduce using rule 100 (operadores -> MENIG .)
    FAFALSEFE       reduce using rule 100 (operadores -> MENIG .)
    PCC             reduce using rule 100 (operadores -> MENIG .)
    ID              reduce using rule 100 (operadores -> MENIG .)


state 141

    (101) operadores -> MAYIG .

    INT             reduce using rule 101 (operadores -> MAYIG .)
    CHAR            reduce using rule 101 (operadores -> MAYIG .)
    TRUFUEFE        reduce using rule 101 (operadores -> MAYIG .)
    FAFALSEFE       reduce using rule 101 (operadores -> MAYIG .)
    PCC             reduce using rule 101 (operadores -> MAYIG .)
    ID              reduce using rule 101 (operadores -> MAYIG .)


state 142

    (102) operadores -> CMP .

    INT             reduce using rule 102 (operadores -> CMP .)
    CHAR            reduce using rule 102 (operadores -> CMP .)
    TRUFUEFE        reduce using rule 102 (operadores -> CMP .)
    FAFALSEFE       reduce using rule 102 (operadores -> CMP .)
    PCC             reduce using rule 102 (operadores -> CMP .)
    ID              reduce using rule 102 (operadores -> CMP .)


state 143

    (103) operadores -> DIF .

    INT             reduce using rule 103 (operadores -> DIF .)
    CHAR            reduce using rule 103 (operadores -> DIF .)
    TRUFUEFE        reduce using rule 103 (operadores -> DIF .)
    FAFALSEFE       reduce using rule 103 (operadores -> DIF .)
    PCC             reduce using rule 103 (operadores -> DIF .)
    ID              reduce using rule 103 (operadores -> DIF .)


state 144

    (104) operadores_logicos -> AND .

    INT             reduce using rule 104 (operadores_logicos -> AND .)
    CHAR            reduce using rule 104 (operadores_logicos -> AND .)
    TRUFUEFE        reduce using rule 104 (operadores_logicos -> AND .)
    FAFALSEFE       reduce using rule 104 (operadores_logicos -> AND .)
    PCC             reduce using rule 104 (operadores_logicos -> AND .)
    ID              reduce using rule 104 (operadores_logicos -> AND .)


state 145

    (105) operadores_logicos -> OR .

    INT             reduce using rule 105 (operadores_logicos -> OR .)
    CHAR            reduce using rule 105 (operadores_logicos -> OR .)
    TRUFUEFE        reduce using rule 105 (operadores_logicos -> OR .)
    FAFALSEFE       reduce using rule 105 (operadores_logicos -> OR .)
    PCC             reduce using rule 105 (operadores_logicos -> OR .)
    ID              reduce using rule 105 (operadores_logicos -> OR .)


state 146

    (23) declarar_main_error -> IFINT PA PC LLAVEA bloque_codigo REFETUFURN PYC . LLAVEC

    LLAVEC          shift and go to state 184


state 147

    (42) declarar_if -> IFIF PA condicion . PC LLAVEA bloque_codigo LLAVEC
    (43) declarar_if -> IFIF PA condicion . PC LLAVEA bloque_codigo LLAVEC EFELSEFE LLAVEA bloque_codigo LLAVEC
    (45) declarar_if_error_llave -> IFIF PA condicion . PC LLAVEA bloque_codigo LLAVEC EFELSEFE LLAVEA bloque_codigo
    (46) declarar_if_error_llave -> IFIF PA condicion . PC LLAVEA bloque_codigo LLAVEC EFELSEFE bloque_codigo LLAVEC

    PC              shift and go to state 185


state 148

    (47) declaracion -> tipo_dato ID PYC .

    VACIO           reduce using rule 47 (declaracion -> tipo_dato ID PYC .)
    IFIF            reduce using rule 47 (declaracion -> tipo_dato ID PYC .)
    AFARRAFAY       reduce using rule 47 (declaracion -> tipo_dato ID PYC .)
    ID              reduce using rule 47 (declaracion -> tipo_dato ID PYC .)
    PRIFINT         reduce using rule 47 (declaracion -> tipo_dato ID PYC .)
    IFINPUFUT       reduce using rule 47 (declaracion -> tipo_dato ID PYC .)
    WHIFILEFE       reduce using rule 47 (declaracion -> tipo_dato ID PYC .)
    IFINT           reduce using rule 47 (declaracion -> tipo_dato ID PYC .)
    STRIFING        reduce using rule 47 (declaracion -> tipo_dato ID PYC .)
    STRUFUCT        reduce using rule 47 (declaracion -> tipo_dato ID PYC .)
    VOFOIFID        reduce using rule 47 (declaracion -> tipo_dato ID PYC .)
    CHAFAR          reduce using rule 47 (declaracion -> tipo_dato ID PYC .)
    BOFOOFOL        reduce using rule 47 (declaracion -> tipo_dato ID PYC .)
    FLOFOAFAT       reduce using rule 47 (declaracion -> tipo_dato ID PYC .)
    PA              reduce using rule 47 (declaracion -> tipo_dato ID PYC .)


state 149

    (48) declaracion -> tipo_dato ID ASG . ID operacion_matematica ID PYC
    (49) declaracion -> tipo_dato ID ASG . dato PYC
    (92) dato -> . INT
    (93) dato -> . CHAR
    (94) dato -> . TRUFUEFE
    (95) dato -> . FAFALSEFE
    (96) dato -> . PCC
    (97) dato -> . REAL

    ID              shift and go to state 186
    INT             shift and go to state 188
    CHAR            shift and go to state 189
    TRUFUEFE        shift and go to state 190
    FAFALSEFE       shift and go to state 191
    PCC             shift and go to state 192
    REAL            shift and go to state 193

    dato                           shift and go to state 187

state 150

    (55) declaracion_error -> ID ID PYC .

    VACIO           reduce using rule 55 (declaracion_error -> ID ID PYC .)
    IFIF            reduce using rule 55 (declaracion_error -> ID ID PYC .)
    AFARRAFAY       reduce using rule 55 (declaracion_error -> ID ID PYC .)
    ID              reduce using rule 55 (declaracion_error -> ID ID PYC .)
    PRIFINT         reduce using rule 55 (declaracion_error -> ID ID PYC .)
    IFINPUFUT       reduce using rule 55 (declaracion_error -> ID ID PYC .)
    WHIFILEFE       reduce using rule 55 (declaracion_error -> ID ID PYC .)
    IFINT           reduce using rule 55 (declaracion_error -> ID ID PYC .)
    STRIFING        reduce using rule 55 (declaracion_error -> ID ID PYC .)
    STRUFUCT        reduce using rule 55 (declaracion_error -> ID ID PYC .)
    VOFOIFID        reduce using rule 55 (declaracion_error -> ID ID PYC .)
    CHAFAR          reduce using rule 55 (declaracion_error -> ID ID PYC .)
    BOFOOFOL        reduce using rule 55 (declaracion_error -> ID ID PYC .)
    FLOFOAFAT       reduce using rule 55 (declaracion_error -> ID ID PYC .)
    PA              reduce using rule 55 (declaracion_error -> ID ID PYC .)


state 151

    (56) declaracion_error -> ID ID ASG . ID operacion_matematica ID PYC
    (57) declaracion_error -> ID ID ASG . valores PYC
    (86) valores -> . INT
    (87) valores -> . CHAR
    (88) valores -> . TRUFUEFE
    (89) valores -> . FAFALSEFE
    (90) valores -> . PCC
    (91) valores -> . ID

    ID              shift and go to state 194
    INT             shift and go to state 90
    CHAR            shift and go to state 91
    TRUFUEFE        shift and go to state 92
    FAFALSEFE       shift and go to state 93
    PCC             shift and go to state 94

    valores                        shift and go to state 195

state 152

    (58) declaracion_error -> ID ID dimensiones . PYC

    PYC             shift and go to state 196


state 153

    (64) asignar_estructuras -> ID PUNTO ID . ASG dato PYC

    ASG             shift and go to state 197


state 154

    (53) declaracion_error -> ID ASG ID . operacion_matematica ID PYC
    (91) valores -> ID .
    (80) operacion_matematica -> . SUM
    (81) operacion_matematica -> . RES
    (82) operacion_matematica -> . MUL
    (83) operacion_matematica -> . DIV
    (84) operacion_matematica -> . RED
    (85) operacion_matematica -> . POT

    PYC             reduce using rule 91 (valores -> ID .)
    SUM             shift and go to state 199
    RES             shift and go to state 200
    MUL             shift and go to state 201
    DIV             shift and go to state 202
    RED             shift and go to state 203
    POT             shift and go to state 204

    operacion_matematica           shift and go to state 198

state 155

    (54) declaracion_error -> ID ASG valores . PYC

    PYC             shift and go to state 205


state 156

    (63) asignar_array -> ID dimensiones ASG . dato PYC
    (92) dato -> . INT
    (93) dato -> . CHAR
    (94) dato -> . TRUFUEFE
    (95) dato -> . FAFALSEFE
    (96) dato -> . PCC
    (97) dato -> . REAL

    INT             shift and go to state 188
    CHAR            shift and go to state 189
    TRUFUEFE        shift and go to state 190
    FAFALSEFE       shift and go to state 191
    PCC             shift and go to state 192
    REAL            shift and go to state 193

    dato                           shift and go to state 206

state 157

    (59) declaracion_error -> ID dimensiones PYC .

    VACIO           reduce using rule 59 (declaracion_error -> ID dimensiones PYC .)
    IFIF            reduce using rule 59 (declaracion_error -> ID dimensiones PYC .)
    AFARRAFAY       reduce using rule 59 (declaracion_error -> ID dimensiones PYC .)
    ID              reduce using rule 59 (declaracion_error -> ID dimensiones PYC .)
    PRIFINT         reduce using rule 59 (declaracion_error -> ID dimensiones PYC .)
    IFINPUFUT       reduce using rule 59 (declaracion_error -> ID dimensiones PYC .)
    WHIFILEFE       reduce using rule 59 (declaracion_error -> ID dimensiones PYC .)
    IFINT           reduce using rule 59 (declaracion_error -> ID dimensiones PYC .)
    STRIFING        reduce using rule 59 (declaracion_error -> ID dimensiones PYC .)
    STRUFUCT        reduce using rule 59 (declaracion_error -> ID dimensiones PYC .)
    VOFOIFID        reduce using rule 59 (declaracion_error -> ID dimensiones PYC .)
    CHAFAR          reduce using rule 59 (declaracion_error -> ID dimensiones PYC .)
    BOFOOFOL        reduce using rule 59 (declaracion_error -> ID dimensiones PYC .)
    FLOFOAFAT       reduce using rule 59 (declaracion_error -> ID dimensiones PYC .)
    PA              reduce using rule 59 (declaracion_error -> ID dimensiones PYC .)


state 158

    (65) funcion -> ID PA valores . PC PYC
    (67) funcion -> ID PA valores . COMA valores PC PYC
    (76) condicion -> valores . operadores valores
    (77) condicion -> valores .
    (78) condicion -> valores . operadores_logicos condicion
    (79) condicion -> valores . NOT valores
    (98) operadores -> . MEN
    (99) operadores -> . MAY
    (100) operadores -> . MENIG
    (101) operadores -> . MAYIG
    (102) operadores -> . CMP
    (103) operadores -> . DIF
    (104) operadores_logicos -> . AND
    (105) operadores_logicos -> . OR

  ! shift/reduce conflict for PC resolved as shift
    PC              shift and go to state 207
    COMA            shift and go to state 208
    NOT             shift and go to state 137
    MEN             shift and go to state 138
    MAY             shift and go to state 139
    MENIG           shift and go to state 140
    MAYIG           shift and go to state 141
    CMP             shift and go to state 142
    DIF             shift and go to state 143
    AND             shift and go to state 144
    OR              shift and go to state 145

  ! PC              [ reduce using rule 77 (condicion -> valores .) ]

    operadores                     shift and go to state 135
    operadores_logicos             shift and go to state 136

state 159

    (66) funcion -> ID PA PC . PYC

    PYC             shift and go to state 209


state 160

    (73) declaracion_while_error -> ID PA condicion . PC LLAVEA bloque_codigo LLAVEC

    PC              shift and go to state 210


state 161

    (60) dimensiones -> dimension dimensiones .

    ASG             reduce using rule 60 (dimensiones -> dimension dimensiones .)
    PYC             reduce using rule 60 (dimensiones -> dimension dimensiones .)


state 162

    (62) dimension -> CA INT . CC

    CC              shift and go to state 211


state 163

    (50) declaracion -> AFARRAFAY ID dimensiones . PYC

    PYC             shift and go to state 212


state 164

    (68) print -> PRIFINT PA ID . PC PYC

    PC              shift and go to state 213


state 165

    (69) input -> IFINPUFUT PA ID . PC PYC

    PC              shift and go to state 214


state 166

    (70) declaracion_while -> WHIFILEFE PA condicion . PC LLAVEA bloque_codigo LLAVEC
    (74) declaracion_while_error -> WHIFILEFE PA condicion . PC bloque_codigo LLAVEC
    (75) declaracion_while_error -> WHIFILEFE PA condicion . PC LLAVEA bloque_codigo

    PC              shift and go to state 215


state 167

    (24) declarar_main_error -> IFINT ID PA PC LLAVEA bloque_codigo REFETUFURN . PYC LLAVEC

    PYC             shift and go to state 216


state 168

    (20) declarar_main_error -> MAFAIFIN PA PC LLAVEA bloque_codigo REFETUFURN PYC . LLAVEC

    LLAVEC          shift and go to state 217


state 169

    (12) declarar_estructuras_error -> STRUFUCT ID LLAVEA ID PYC ID PYC LLAVEC .

    IFINT           reduce using rule 12 (declarar_estructuras_error -> STRUFUCT ID LLAVEA ID PYC ID PYC LLAVEC .)
    FUNCTION        reduce using rule 12 (declarar_estructuras_error -> STRUFUCT ID LLAVEA ID PYC ID PYC LLAVEC .)
    MAFAIFIN        reduce using rule 12 (declarar_estructuras_error -> STRUFUCT ID LLAVEA ID PYC ID PYC LLAVEC .)


state 170

    (5) declarar_estructuras -> STRUFUCT ID LLAVEA tipo_dato ID PYC tipo_dato ID . PYC LLAVEC
    (13) declarar_estructuras_error -> STRUFUCT ID LLAVEA tipo_dato ID PYC tipo_dato ID . PYC tipo_dato ID PYC LLAVEC

    PYC             shift and go to state 218


state 171

    (10) declarar_estructuras_error -> STRUFUCT ID LLAVEA tipo_dato ID PYC tipo_dato PYC . LLAVEC

    LLAVEC          shift and go to state 219


state 172

    (9) declarar_estructuras_error -> STRUFUCT ID LLAVEA tipo_dato PYC tipo_dato ID PYC . LLAVEC

    LLAVEC          shift and go to state 220


state 173

    (11) declarar_estructuras_error -> STRUFUCT ID LLAVEA tipo_dato PYC tipo_dato PYC LLAVEC .

    IFINT           reduce using rule 11 (declarar_estructuras_error -> STRUFUCT ID LLAVEA tipo_dato PYC tipo_dato PYC LLAVEC .)
    FUNCTION        reduce using rule 11 (declarar_estructuras_error -> STRUFUCT ID LLAVEA tipo_dato PYC tipo_dato PYC LLAVEC .)
    MAFAIFIN        reduce using rule 11 (declarar_estructuras_error -> STRUFUCT ID LLAVEA tipo_dato PYC tipo_dato PYC LLAVEC .)


state 174

    (8) declarar_estructuras_error -> ID ID LLAVEA tipo_dato ID PYC tipo_dato ID . PYC LLAVEC

    PYC             shift and go to state 221


state 175

    (7) declarar_estructuras_error -> ID LLAVEA tipo_dato ID PYC tipo_dato ID PYC . LLAVEC

    LLAVEC          shift and go to state 222


state 176

    (14) declarar_funciones -> FUNCTION tipo_dato ID PA tipo_dato ID PC LLAVEA . bloque_codigo REFETUFURN ID PYC LLAVEC
    (33) bloque_codigo -> . declarar_if bloque_codigo
    (34) bloque_codigo -> . declaracion bloque_codigo
    (35) bloque_codigo -> . asignar_estructuras bloque_codigo
    (36) bloque_codigo -> . asignar_array bloque_codigo
    (37) bloque_codigo -> . funcion bloque_codigo
    (38) bloque_codigo -> . print bloque_codigo
    (39) bloque_codigo -> . input bloque_codigo
    (40) bloque_codigo -> . declaracion_while bloque_codigo
    (41) bloque_codigo -> . VACIO
    (42) declarar_if -> . IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC
    (43) declarar_if -> . IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE LLAVEA bloque_codigo LLAVEC
    (44) declarar_if -> . declarar_if_error_llave
    (47) declaracion -> . tipo_dato ID PYC
    (48) declaracion -> . tipo_dato ID ASG ID operacion_matematica ID PYC
    (49) declaracion -> . tipo_dato ID ASG dato PYC
    (50) declaracion -> . AFARRAFAY ID dimensiones PYC
    (51) declaracion -> . declaracion_error
    (64) asignar_estructuras -> . ID PUNTO ID ASG dato PYC
    (63) asignar_array -> . ID dimensiones ASG dato PYC
    (65) funcion -> . ID PA valores PC PYC
    (66) funcion -> . ID PA PC PYC
    (67) funcion -> . ID PA valores COMA valores PC PYC
    (68) print -> . PRIFINT PA ID PC PYC
    (69) input -> . IFINPUFUT PA ID PC PYC
    (70) declaracion_while -> . WHIFILEFE PA condicion PC LLAVEA bloque_codigo LLAVEC
    (71) declaracion_while -> . declaracion_while_error
    (45) declarar_if_error_llave -> . IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE LLAVEA bloque_codigo
    (46) declarar_if_error_llave -> . IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE bloque_codigo LLAVEC
    (25) tipo_dato -> . IFINT
    (26) tipo_dato -> . STRIFING
    (27) tipo_dato -> . AFARRAFAY
    (28) tipo_dato -> . STRUFUCT
    (29) tipo_dato -> . VOFOIFID
    (30) tipo_dato -> . CHAFAR
    (31) tipo_dato -> . BOFOOFOL
    (32) tipo_dato -> . FLOFOAFAT
    (52) declaracion_error -> . ID PYC
    (53) declaracion_error -> . ID ASG ID operacion_matematica ID PYC
    (54) declaracion_error -> . ID ASG valores PYC
    (55) declaracion_error -> . ID ID PYC
    (56) declaracion_error -> . ID ID ASG ID operacion_matematica ID PYC
    (57) declaracion_error -> . ID ID ASG valores PYC
    (58) declaracion_error -> . ID ID dimensiones PYC
    (59) declaracion_error -> . ID dimensiones PYC
    (72) declaracion_while_error -> . PA condicion PC LLAVEA bloque_codigo LLAVEC
    (73) declaracion_while_error -> . ID PA condicion PC LLAVEA bloque_codigo LLAVEC
    (74) declaracion_while_error -> . WHIFILEFE PA condicion PC bloque_codigo LLAVEC
    (75) declaracion_while_error -> . WHIFILEFE PA condicion PC LLAVEA bloque_codigo

    VACIO           shift and go to state 67
    IFIF            shift and go to state 68
    AFARRAFAY       shift and go to state 72
    ID              shift and go to state 71
    PRIFINT         shift and go to state 74
    IFINPUFUT       shift and go to state 75
    WHIFILEFE       shift and go to state 76
    IFINT           shift and go to state 19
    STRIFING        shift and go to state 20
    STRUFUCT        shift and go to state 22
    VOFOIFID        shift and go to state 23
    CHAFAR          shift and go to state 24
    BOFOOFOL        shift and go to state 25
    FLOFOAFAT       shift and go to state 26
    PA              shift and go to state 57

    tipo_dato                      shift and go to state 70
    bloque_codigo                  shift and go to state 223
    declarar_if                    shift and go to state 59
    declaracion                    shift and go to state 60
    asignar_estructuras            shift and go to state 61
    asignar_array                  shift and go to state 62
    funcion                        shift and go to state 63
    print                          shift and go to state 64
    input                          shift and go to state 65
    declaracion_while              shift and go to state 66
    declarar_if_error_llave        shift and go to state 69
    declaracion_error              shift and go to state 73
    declaracion_while_error        shift and go to state 77

state 177

    (17) declarar_funciones -> FUNCTION tipo_dato ID PA tipo_dato ID COMA tipo_dato . ID PC LLAVEA bloque_codigo REFETUFURN ID PYC LLAVEC

    ID              shift and go to state 224


state 178

    (15) declarar_funciones -> FUNCTION tipo_dato ID PA PC LLAVEA bloque_codigo REFETUFURN . ID PYC LLAVEC
    (16) declarar_funciones -> FUNCTION tipo_dato ID PA PC LLAVEA bloque_codigo REFETUFURN . PYC LLAVEC

    ID              shift and go to state 225
    PYC             shift and go to state 226


state 179

    (18) declarar_main -> IFINT MAFAIFIN PA PC LLAVEA bloque_codigo REFETUFURN PYC . LLAVEC

    LLAVEC          shift and go to state 227


state 180

    (72) declaracion_while_error -> PA condicion PC LLAVEA . bloque_codigo LLAVEC
    (33) bloque_codigo -> . declarar_if bloque_codigo
    (34) bloque_codigo -> . declaracion bloque_codigo
    (35) bloque_codigo -> . asignar_estructuras bloque_codigo
    (36) bloque_codigo -> . asignar_array bloque_codigo
    (37) bloque_codigo -> . funcion bloque_codigo
    (38) bloque_codigo -> . print bloque_codigo
    (39) bloque_codigo -> . input bloque_codigo
    (40) bloque_codigo -> . declaracion_while bloque_codigo
    (41) bloque_codigo -> . VACIO
    (42) declarar_if -> . IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC
    (43) declarar_if -> . IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE LLAVEA bloque_codigo LLAVEC
    (44) declarar_if -> . declarar_if_error_llave
    (47) declaracion -> . tipo_dato ID PYC
    (48) declaracion -> . tipo_dato ID ASG ID operacion_matematica ID PYC
    (49) declaracion -> . tipo_dato ID ASG dato PYC
    (50) declaracion -> . AFARRAFAY ID dimensiones PYC
    (51) declaracion -> . declaracion_error
    (64) asignar_estructuras -> . ID PUNTO ID ASG dato PYC
    (63) asignar_array -> . ID dimensiones ASG dato PYC
    (65) funcion -> . ID PA valores PC PYC
    (66) funcion -> . ID PA PC PYC
    (67) funcion -> . ID PA valores COMA valores PC PYC
    (68) print -> . PRIFINT PA ID PC PYC
    (69) input -> . IFINPUFUT PA ID PC PYC
    (70) declaracion_while -> . WHIFILEFE PA condicion PC LLAVEA bloque_codigo LLAVEC
    (71) declaracion_while -> . declaracion_while_error
    (45) declarar_if_error_llave -> . IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE LLAVEA bloque_codigo
    (46) declarar_if_error_llave -> . IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE bloque_codigo LLAVEC
    (25) tipo_dato -> . IFINT
    (26) tipo_dato -> . STRIFING
    (27) tipo_dato -> . AFARRAFAY
    (28) tipo_dato -> . STRUFUCT
    (29) tipo_dato -> . VOFOIFID
    (30) tipo_dato -> . CHAFAR
    (31) tipo_dato -> . BOFOOFOL
    (32) tipo_dato -> . FLOFOAFAT
    (52) declaracion_error -> . ID PYC
    (53) declaracion_error -> . ID ASG ID operacion_matematica ID PYC
    (54) declaracion_error -> . ID ASG valores PYC
    (55) declaracion_error -> . ID ID PYC
    (56) declaracion_error -> . ID ID ASG ID operacion_matematica ID PYC
    (57) declaracion_error -> . ID ID ASG valores PYC
    (58) declaracion_error -> . ID ID dimensiones PYC
    (59) declaracion_error -> . ID dimensiones PYC
    (72) declaracion_while_error -> . PA condicion PC LLAVEA bloque_codigo LLAVEC
    (73) declaracion_while_error -> . ID PA condicion PC LLAVEA bloque_codigo LLAVEC
    (74) declaracion_while_error -> . WHIFILEFE PA condicion PC bloque_codigo LLAVEC
    (75) declaracion_while_error -> . WHIFILEFE PA condicion PC LLAVEA bloque_codigo

    VACIO           shift and go to state 67
    IFIF            shift and go to state 68
    AFARRAFAY       shift and go to state 72
    ID              shift and go to state 71
    PRIFINT         shift and go to state 74
    IFINPUFUT       shift and go to state 75
    WHIFILEFE       shift and go to state 76
    IFINT           shift and go to state 19
    STRIFING        shift and go to state 20
    STRUFUCT        shift and go to state 22
    VOFOIFID        shift and go to state 23
    CHAFAR          shift and go to state 24
    BOFOOFOL        shift and go to state 25
    FLOFOAFAT       shift and go to state 26
    PA              shift and go to state 57

    bloque_codigo                  shift and go to state 228
    declarar_if                    shift and go to state 59
    declaracion                    shift and go to state 60
    asignar_estructuras            shift and go to state 61
    asignar_array                  shift and go to state 62
    funcion                        shift and go to state 63
    print                          shift and go to state 64
    input                          shift and go to state 65
    declaracion_while              shift and go to state 66
    declarar_if_error_llave        shift and go to state 69
    tipo_dato                      shift and go to state 70
    declaracion_error              shift and go to state 73
    declaracion_while_error        shift and go to state 77

state 181

    (76) condicion -> valores operadores valores .

    PC              reduce using rule 76 (condicion -> valores operadores valores .)


state 182

    (78) condicion -> valores operadores_logicos condicion .

    PC              reduce using rule 78 (condicion -> valores operadores_logicos condicion .)


state 183

    (79) condicion -> valores NOT valores .

    PC              reduce using rule 79 (condicion -> valores NOT valores .)


state 184

    (23) declarar_main_error -> IFINT PA PC LLAVEA bloque_codigo REFETUFURN PYC LLAVEC .

    $end            reduce using rule 23 (declarar_main_error -> IFINT PA PC LLAVEA bloque_codigo REFETUFURN PYC LLAVEC .)


state 185

    (42) declarar_if -> IFIF PA condicion PC . LLAVEA bloque_codigo LLAVEC
    (43) declarar_if -> IFIF PA condicion PC . LLAVEA bloque_codigo LLAVEC EFELSEFE LLAVEA bloque_codigo LLAVEC
    (45) declarar_if_error_llave -> IFIF PA condicion PC . LLAVEA bloque_codigo LLAVEC EFELSEFE LLAVEA bloque_codigo
    (46) declarar_if_error_llave -> IFIF PA condicion PC . LLAVEA bloque_codigo LLAVEC EFELSEFE bloque_codigo LLAVEC

    LLAVEA          shift and go to state 229


state 186

    (48) declaracion -> tipo_dato ID ASG ID . operacion_matematica ID PYC
    (80) operacion_matematica -> . SUM
    (81) operacion_matematica -> . RES
    (82) operacion_matematica -> . MUL
    (83) operacion_matematica -> . DIV
    (84) operacion_matematica -> . RED
    (85) operacion_matematica -> . POT

    SUM             shift and go to state 199
    RES             shift and go to state 200
    MUL             shift and go to state 201
    DIV             shift and go to state 202
    RED             shift and go to state 203
    POT             shift and go to state 204

    operacion_matematica           shift and go to state 230

state 187

    (49) declaracion -> tipo_dato ID ASG dato . PYC

    PYC             shift and go to state 231


state 188

    (92) dato -> INT .

    PYC             reduce using rule 92 (dato -> INT .)


state 189

    (93) dato -> CHAR .

    PYC             reduce using rule 93 (dato -> CHAR .)


state 190

    (94) dato -> TRUFUEFE .

    PYC             reduce using rule 94 (dato -> TRUFUEFE .)


state 191

    (95) dato -> FAFALSEFE .

    PYC             reduce using rule 95 (dato -> FAFALSEFE .)


state 192

    (96) dato -> PCC .

    PYC             reduce using rule 96 (dato -> PCC .)


state 193

    (97) dato -> REAL .

    PYC             reduce using rule 97 (dato -> REAL .)


state 194

    (56) declaracion_error -> ID ID ASG ID . operacion_matematica ID PYC
    (91) valores -> ID .
    (80) operacion_matematica -> . SUM
    (81) operacion_matematica -> . RES
    (82) operacion_matematica -> . MUL
    (83) operacion_matematica -> . DIV
    (84) operacion_matematica -> . RED
    (85) operacion_matematica -> . POT

    PYC             reduce using rule 91 (valores -> ID .)
    SUM             shift and go to state 199
    RES             shift and go to state 200
    MUL             shift and go to state 201
    DIV             shift and go to state 202
    RED             shift and go to state 203
    POT             shift and go to state 204

    operacion_matematica           shift and go to state 232

state 195

    (57) declaracion_error -> ID ID ASG valores . PYC

    PYC             shift and go to state 233


state 196

    (58) declaracion_error -> ID ID dimensiones PYC .

    VACIO           reduce using rule 58 (declaracion_error -> ID ID dimensiones PYC .)
    IFIF            reduce using rule 58 (declaracion_error -> ID ID dimensiones PYC .)
    AFARRAFAY       reduce using rule 58 (declaracion_error -> ID ID dimensiones PYC .)
    ID              reduce using rule 58 (declaracion_error -> ID ID dimensiones PYC .)
    PRIFINT         reduce using rule 58 (declaracion_error -> ID ID dimensiones PYC .)
    IFINPUFUT       reduce using rule 58 (declaracion_error -> ID ID dimensiones PYC .)
    WHIFILEFE       reduce using rule 58 (declaracion_error -> ID ID dimensiones PYC .)
    IFINT           reduce using rule 58 (declaracion_error -> ID ID dimensiones PYC .)
    STRIFING        reduce using rule 58 (declaracion_error -> ID ID dimensiones PYC .)
    STRUFUCT        reduce using rule 58 (declaracion_error -> ID ID dimensiones PYC .)
    VOFOIFID        reduce using rule 58 (declaracion_error -> ID ID dimensiones PYC .)
    CHAFAR          reduce using rule 58 (declaracion_error -> ID ID dimensiones PYC .)
    BOFOOFOL        reduce using rule 58 (declaracion_error -> ID ID dimensiones PYC .)
    FLOFOAFAT       reduce using rule 58 (declaracion_error -> ID ID dimensiones PYC .)
    PA              reduce using rule 58 (declaracion_error -> ID ID dimensiones PYC .)


state 197

    (64) asignar_estructuras -> ID PUNTO ID ASG . dato PYC
    (92) dato -> . INT
    (93) dato -> . CHAR
    (94) dato -> . TRUFUEFE
    (95) dato -> . FAFALSEFE
    (96) dato -> . PCC
    (97) dato -> . REAL

    INT             shift and go to state 188
    CHAR            shift and go to state 189
    TRUFUEFE        shift and go to state 190
    FAFALSEFE       shift and go to state 191
    PCC             shift and go to state 192
    REAL            shift and go to state 193

    dato                           shift and go to state 234

state 198

    (53) declaracion_error -> ID ASG ID operacion_matematica . ID PYC

    ID              shift and go to state 235


state 199

    (80) operacion_matematica -> SUM .

    ID              reduce using rule 80 (operacion_matematica -> SUM .)


state 200

    (81) operacion_matematica -> RES .

    ID              reduce using rule 81 (operacion_matematica -> RES .)


state 201

    (82) operacion_matematica -> MUL .

    ID              reduce using rule 82 (operacion_matematica -> MUL .)


state 202

    (83) operacion_matematica -> DIV .

    ID              reduce using rule 83 (operacion_matematica -> DIV .)


state 203

    (84) operacion_matematica -> RED .

    ID              reduce using rule 84 (operacion_matematica -> RED .)


state 204

    (85) operacion_matematica -> POT .

    ID              reduce using rule 85 (operacion_matematica -> POT .)


state 205

    (54) declaracion_error -> ID ASG valores PYC .

    VACIO           reduce using rule 54 (declaracion_error -> ID ASG valores PYC .)
    IFIF            reduce using rule 54 (declaracion_error -> ID ASG valores PYC .)
    AFARRAFAY       reduce using rule 54 (declaracion_error -> ID ASG valores PYC .)
    ID              reduce using rule 54 (declaracion_error -> ID ASG valores PYC .)
    PRIFINT         reduce using rule 54 (declaracion_error -> ID ASG valores PYC .)
    IFINPUFUT       reduce using rule 54 (declaracion_error -> ID ASG valores PYC .)
    WHIFILEFE       reduce using rule 54 (declaracion_error -> ID ASG valores PYC .)
    IFINT           reduce using rule 54 (declaracion_error -> ID ASG valores PYC .)
    STRIFING        reduce using rule 54 (declaracion_error -> ID ASG valores PYC .)
    STRUFUCT        reduce using rule 54 (declaracion_error -> ID ASG valores PYC .)
    VOFOIFID        reduce using rule 54 (declaracion_error -> ID ASG valores PYC .)
    CHAFAR          reduce using rule 54 (declaracion_error -> ID ASG valores PYC .)
    BOFOOFOL        reduce using rule 54 (declaracion_error -> ID ASG valores PYC .)
    FLOFOAFAT       reduce using rule 54 (declaracion_error -> ID ASG valores PYC .)
    PA              reduce using rule 54 (declaracion_error -> ID ASG valores PYC .)


state 206

    (63) asignar_array -> ID dimensiones ASG dato . PYC

    PYC             shift and go to state 236


state 207

    (65) funcion -> ID PA valores PC . PYC

    PYC             shift and go to state 237


state 208

    (67) funcion -> ID PA valores COMA . valores PC PYC
    (86) valores -> . INT
    (87) valores -> . CHAR
    (88) valores -> . TRUFUEFE
    (89) valores -> . FAFALSEFE
    (90) valores -> . PCC
    (91) valores -> . ID

    INT             shift and go to state 90
    CHAR            shift and go to state 91
    TRUFUEFE        shift and go to state 92
    FAFALSEFE       shift and go to state 93
    PCC             shift and go to state 94
    ID              shift and go to state 95

    valores                        shift and go to state 238

state 209

    (66) funcion -> ID PA PC PYC .

    VACIO           reduce using rule 66 (funcion -> ID PA PC PYC .)
    IFIF            reduce using rule 66 (funcion -> ID PA PC PYC .)
    AFARRAFAY       reduce using rule 66 (funcion -> ID PA PC PYC .)
    ID              reduce using rule 66 (funcion -> ID PA PC PYC .)
    PRIFINT         reduce using rule 66 (funcion -> ID PA PC PYC .)
    IFINPUFUT       reduce using rule 66 (funcion -> ID PA PC PYC .)
    WHIFILEFE       reduce using rule 66 (funcion -> ID PA PC PYC .)
    IFINT           reduce using rule 66 (funcion -> ID PA PC PYC .)
    STRIFING        reduce using rule 66 (funcion -> ID PA PC PYC .)
    STRUFUCT        reduce using rule 66 (funcion -> ID PA PC PYC .)
    VOFOIFID        reduce using rule 66 (funcion -> ID PA PC PYC .)
    CHAFAR          reduce using rule 66 (funcion -> ID PA PC PYC .)
    BOFOOFOL        reduce using rule 66 (funcion -> ID PA PC PYC .)
    FLOFOAFAT       reduce using rule 66 (funcion -> ID PA PC PYC .)
    PA              reduce using rule 66 (funcion -> ID PA PC PYC .)


state 210

    (73) declaracion_while_error -> ID PA condicion PC . LLAVEA bloque_codigo LLAVEC

    LLAVEA          shift and go to state 239


state 211

    (62) dimension -> CA INT CC .

    VACIO           reduce using rule 62 (dimension -> CA INT CC .)
    CA              reduce using rule 62 (dimension -> CA INT CC .)


state 212

    (50) declaracion -> AFARRAFAY ID dimensiones PYC .

    VACIO           reduce using rule 50 (declaracion -> AFARRAFAY ID dimensiones PYC .)
    IFIF            reduce using rule 50 (declaracion -> AFARRAFAY ID dimensiones PYC .)
    AFARRAFAY       reduce using rule 50 (declaracion -> AFARRAFAY ID dimensiones PYC .)
    ID              reduce using rule 50 (declaracion -> AFARRAFAY ID dimensiones PYC .)
    PRIFINT         reduce using rule 50 (declaracion -> AFARRAFAY ID dimensiones PYC .)
    IFINPUFUT       reduce using rule 50 (declaracion -> AFARRAFAY ID dimensiones PYC .)
    WHIFILEFE       reduce using rule 50 (declaracion -> AFARRAFAY ID dimensiones PYC .)
    IFINT           reduce using rule 50 (declaracion -> AFARRAFAY ID dimensiones PYC .)
    STRIFING        reduce using rule 50 (declaracion -> AFARRAFAY ID dimensiones PYC .)
    STRUFUCT        reduce using rule 50 (declaracion -> AFARRAFAY ID dimensiones PYC .)
    VOFOIFID        reduce using rule 50 (declaracion -> AFARRAFAY ID dimensiones PYC .)
    CHAFAR          reduce using rule 50 (declaracion -> AFARRAFAY ID dimensiones PYC .)
    BOFOOFOL        reduce using rule 50 (declaracion -> AFARRAFAY ID dimensiones PYC .)
    FLOFOAFAT       reduce using rule 50 (declaracion -> AFARRAFAY ID dimensiones PYC .)
    PA              reduce using rule 50 (declaracion -> AFARRAFAY ID dimensiones PYC .)


state 213

    (68) print -> PRIFINT PA ID PC . PYC

    PYC             shift and go to state 240


state 214

    (69) input -> IFINPUFUT PA ID PC . PYC

    PYC             shift and go to state 241


state 215

    (70) declaracion_while -> WHIFILEFE PA condicion PC . LLAVEA bloque_codigo LLAVEC
    (74) declaracion_while_error -> WHIFILEFE PA condicion PC . bloque_codigo LLAVEC
    (75) declaracion_while_error -> WHIFILEFE PA condicion PC . LLAVEA bloque_codigo
    (33) bloque_codigo -> . declarar_if bloque_codigo
    (34) bloque_codigo -> . declaracion bloque_codigo
    (35) bloque_codigo -> . asignar_estructuras bloque_codigo
    (36) bloque_codigo -> . asignar_array bloque_codigo
    (37) bloque_codigo -> . funcion bloque_codigo
    (38) bloque_codigo -> . print bloque_codigo
    (39) bloque_codigo -> . input bloque_codigo
    (40) bloque_codigo -> . declaracion_while bloque_codigo
    (41) bloque_codigo -> . VACIO
    (42) declarar_if -> . IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC
    (43) declarar_if -> . IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE LLAVEA bloque_codigo LLAVEC
    (44) declarar_if -> . declarar_if_error_llave
    (47) declaracion -> . tipo_dato ID PYC
    (48) declaracion -> . tipo_dato ID ASG ID operacion_matematica ID PYC
    (49) declaracion -> . tipo_dato ID ASG dato PYC
    (50) declaracion -> . AFARRAFAY ID dimensiones PYC
    (51) declaracion -> . declaracion_error
    (64) asignar_estructuras -> . ID PUNTO ID ASG dato PYC
    (63) asignar_array -> . ID dimensiones ASG dato PYC
    (65) funcion -> . ID PA valores PC PYC
    (66) funcion -> . ID PA PC PYC
    (67) funcion -> . ID PA valores COMA valores PC PYC
    (68) print -> . PRIFINT PA ID PC PYC
    (69) input -> . IFINPUFUT PA ID PC PYC
    (70) declaracion_while -> . WHIFILEFE PA condicion PC LLAVEA bloque_codigo LLAVEC
    (71) declaracion_while -> . declaracion_while_error
    (45) declarar_if_error_llave -> . IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE LLAVEA bloque_codigo
    (46) declarar_if_error_llave -> . IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE bloque_codigo LLAVEC
    (25) tipo_dato -> . IFINT
    (26) tipo_dato -> . STRIFING
    (27) tipo_dato -> . AFARRAFAY
    (28) tipo_dato -> . STRUFUCT
    (29) tipo_dato -> . VOFOIFID
    (30) tipo_dato -> . CHAFAR
    (31) tipo_dato -> . BOFOOFOL
    (32) tipo_dato -> . FLOFOAFAT
    (52) declaracion_error -> . ID PYC
    (53) declaracion_error -> . ID ASG ID operacion_matematica ID PYC
    (54) declaracion_error -> . ID ASG valores PYC
    (55) declaracion_error -> . ID ID PYC
    (56) declaracion_error -> . ID ID ASG ID operacion_matematica ID PYC
    (57) declaracion_error -> . ID ID ASG valores PYC
    (58) declaracion_error -> . ID ID dimensiones PYC
    (59) declaracion_error -> . ID dimensiones PYC
    (72) declaracion_while_error -> . PA condicion PC LLAVEA bloque_codigo LLAVEC
    (73) declaracion_while_error -> . ID PA condicion PC LLAVEA bloque_codigo LLAVEC
    (74) declaracion_while_error -> . WHIFILEFE PA condicion PC bloque_codigo LLAVEC
    (75) declaracion_while_error -> . WHIFILEFE PA condicion PC LLAVEA bloque_codigo

    LLAVEA          shift and go to state 242
    VACIO           shift and go to state 67
    IFIF            shift and go to state 68
    AFARRAFAY       shift and go to state 72
    ID              shift and go to state 71
    PRIFINT         shift and go to state 74
    IFINPUFUT       shift and go to state 75
    WHIFILEFE       shift and go to state 76
    IFINT           shift and go to state 19
    STRIFING        shift and go to state 20
    STRUFUCT        shift and go to state 22
    VOFOIFID        shift and go to state 23
    CHAFAR          shift and go to state 24
    BOFOOFOL        shift and go to state 25
    FLOFOAFAT       shift and go to state 26
    PA              shift and go to state 57

    bloque_codigo                  shift and go to state 243
    declarar_if                    shift and go to state 59
    declaracion                    shift and go to state 60
    asignar_estructuras            shift and go to state 61
    asignar_array                  shift and go to state 62
    funcion                        shift and go to state 63
    print                          shift and go to state 64
    input                          shift and go to state 65
    declaracion_while              shift and go to state 66
    declarar_if_error_llave        shift and go to state 69
    tipo_dato                      shift and go to state 70
    declaracion_error              shift and go to state 73
    declaracion_while_error        shift and go to state 77

state 216

    (24) declarar_main_error -> IFINT ID PA PC LLAVEA bloque_codigo REFETUFURN PYC . LLAVEC

    LLAVEC          shift and go to state 244


state 217

    (20) declarar_main_error -> MAFAIFIN PA PC LLAVEA bloque_codigo REFETUFURN PYC LLAVEC .

    $end            reduce using rule 20 (declarar_main_error -> MAFAIFIN PA PC LLAVEA bloque_codigo REFETUFURN PYC LLAVEC .)


state 218

    (5) declarar_estructuras -> STRUFUCT ID LLAVEA tipo_dato ID PYC tipo_dato ID PYC . LLAVEC
    (13) declarar_estructuras_error -> STRUFUCT ID LLAVEA tipo_dato ID PYC tipo_dato ID PYC . tipo_dato ID PYC LLAVEC
    (25) tipo_dato -> . IFINT
    (26) tipo_dato -> . STRIFING
    (27) tipo_dato -> . AFARRAFAY
    (28) tipo_dato -> . STRUFUCT
    (29) tipo_dato -> . VOFOIFID
    (30) tipo_dato -> . CHAFAR
    (31) tipo_dato -> . BOFOOFOL
    (32) tipo_dato -> . FLOFOAFAT

    LLAVEC          shift and go to state 246
    IFINT           shift and go to state 19
    STRIFING        shift and go to state 20
    AFARRAFAY       shift and go to state 21
    STRUFUCT        shift and go to state 22
    VOFOIFID        shift and go to state 23
    CHAFAR          shift and go to state 24
    BOFOOFOL        shift and go to state 25
    FLOFOAFAT       shift and go to state 26

    tipo_dato                      shift and go to state 245

state 219

    (10) declarar_estructuras_error -> STRUFUCT ID LLAVEA tipo_dato ID PYC tipo_dato PYC LLAVEC .

    IFINT           reduce using rule 10 (declarar_estructuras_error -> STRUFUCT ID LLAVEA tipo_dato ID PYC tipo_dato PYC LLAVEC .)
    FUNCTION        reduce using rule 10 (declarar_estructuras_error -> STRUFUCT ID LLAVEA tipo_dato ID PYC tipo_dato PYC LLAVEC .)
    MAFAIFIN        reduce using rule 10 (declarar_estructuras_error -> STRUFUCT ID LLAVEA tipo_dato ID PYC tipo_dato PYC LLAVEC .)


state 220

    (9) declarar_estructuras_error -> STRUFUCT ID LLAVEA tipo_dato PYC tipo_dato ID PYC LLAVEC .

    IFINT           reduce using rule 9 (declarar_estructuras_error -> STRUFUCT ID LLAVEA tipo_dato PYC tipo_dato ID PYC LLAVEC .)
    FUNCTION        reduce using rule 9 (declarar_estructuras_error -> STRUFUCT ID LLAVEA tipo_dato PYC tipo_dato ID PYC LLAVEC .)
    MAFAIFIN        reduce using rule 9 (declarar_estructuras_error -> STRUFUCT ID LLAVEA tipo_dato PYC tipo_dato ID PYC LLAVEC .)


state 221

    (8) declarar_estructuras_error -> ID ID LLAVEA tipo_dato ID PYC tipo_dato ID PYC . LLAVEC

    LLAVEC          shift and go to state 247


state 222

    (7) declarar_estructuras_error -> ID LLAVEA tipo_dato ID PYC tipo_dato ID PYC LLAVEC .

    IFINT           reduce using rule 7 (declarar_estructuras_error -> ID LLAVEA tipo_dato ID PYC tipo_dato ID PYC LLAVEC .)
    FUNCTION        reduce using rule 7 (declarar_estructuras_error -> ID LLAVEA tipo_dato ID PYC tipo_dato ID PYC LLAVEC .)
    MAFAIFIN        reduce using rule 7 (declarar_estructuras_error -> ID LLAVEA tipo_dato ID PYC tipo_dato ID PYC LLAVEC .)


state 223

    (14) declarar_funciones -> FUNCTION tipo_dato ID PA tipo_dato ID PC LLAVEA bloque_codigo . REFETUFURN ID PYC LLAVEC

    REFETUFURN      shift and go to state 248


state 224

    (17) declarar_funciones -> FUNCTION tipo_dato ID PA tipo_dato ID COMA tipo_dato ID . PC LLAVEA bloque_codigo REFETUFURN ID PYC LLAVEC

    PC              shift and go to state 249


state 225

    (15) declarar_funciones -> FUNCTION tipo_dato ID PA PC LLAVEA bloque_codigo REFETUFURN ID . PYC LLAVEC

    PYC             shift and go to state 250


state 226

    (16) declarar_funciones -> FUNCTION tipo_dato ID PA PC LLAVEA bloque_codigo REFETUFURN PYC . LLAVEC

    LLAVEC          shift and go to state 251


state 227

    (18) declarar_main -> IFINT MAFAIFIN PA PC LLAVEA bloque_codigo REFETUFURN PYC LLAVEC .

    $end            reduce using rule 18 (declarar_main -> IFINT MAFAIFIN PA PC LLAVEA bloque_codigo REFETUFURN PYC LLAVEC .)


state 228

    (72) declaracion_while_error -> PA condicion PC LLAVEA bloque_codigo . LLAVEC

    LLAVEC          shift and go to state 252


state 229

    (42) declarar_if -> IFIF PA condicion PC LLAVEA . bloque_codigo LLAVEC
    (43) declarar_if -> IFIF PA condicion PC LLAVEA . bloque_codigo LLAVEC EFELSEFE LLAVEA bloque_codigo LLAVEC
    (45) declarar_if_error_llave -> IFIF PA condicion PC LLAVEA . bloque_codigo LLAVEC EFELSEFE LLAVEA bloque_codigo
    (46) declarar_if_error_llave -> IFIF PA condicion PC LLAVEA . bloque_codigo LLAVEC EFELSEFE bloque_codigo LLAVEC
    (33) bloque_codigo -> . declarar_if bloque_codigo
    (34) bloque_codigo -> . declaracion bloque_codigo
    (35) bloque_codigo -> . asignar_estructuras bloque_codigo
    (36) bloque_codigo -> . asignar_array bloque_codigo
    (37) bloque_codigo -> . funcion bloque_codigo
    (38) bloque_codigo -> . print bloque_codigo
    (39) bloque_codigo -> . input bloque_codigo
    (40) bloque_codigo -> . declaracion_while bloque_codigo
    (41) bloque_codigo -> . VACIO
    (42) declarar_if -> . IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC
    (43) declarar_if -> . IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE LLAVEA bloque_codigo LLAVEC
    (44) declarar_if -> . declarar_if_error_llave
    (47) declaracion -> . tipo_dato ID PYC
    (48) declaracion -> . tipo_dato ID ASG ID operacion_matematica ID PYC
    (49) declaracion -> . tipo_dato ID ASG dato PYC
    (50) declaracion -> . AFARRAFAY ID dimensiones PYC
    (51) declaracion -> . declaracion_error
    (64) asignar_estructuras -> . ID PUNTO ID ASG dato PYC
    (63) asignar_array -> . ID dimensiones ASG dato PYC
    (65) funcion -> . ID PA valores PC PYC
    (66) funcion -> . ID PA PC PYC
    (67) funcion -> . ID PA valores COMA valores PC PYC
    (68) print -> . PRIFINT PA ID PC PYC
    (69) input -> . IFINPUFUT PA ID PC PYC
    (70) declaracion_while -> . WHIFILEFE PA condicion PC LLAVEA bloque_codigo LLAVEC
    (71) declaracion_while -> . declaracion_while_error
    (45) declarar_if_error_llave -> . IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE LLAVEA bloque_codigo
    (46) declarar_if_error_llave -> . IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE bloque_codigo LLAVEC
    (25) tipo_dato -> . IFINT
    (26) tipo_dato -> . STRIFING
    (27) tipo_dato -> . AFARRAFAY
    (28) tipo_dato -> . STRUFUCT
    (29) tipo_dato -> . VOFOIFID
    (30) tipo_dato -> . CHAFAR
    (31) tipo_dato -> . BOFOOFOL
    (32) tipo_dato -> . FLOFOAFAT
    (52) declaracion_error -> . ID PYC
    (53) declaracion_error -> . ID ASG ID operacion_matematica ID PYC
    (54) declaracion_error -> . ID ASG valores PYC
    (55) declaracion_error -> . ID ID PYC
    (56) declaracion_error -> . ID ID ASG ID operacion_matematica ID PYC
    (57) declaracion_error -> . ID ID ASG valores PYC
    (58) declaracion_error -> . ID ID dimensiones PYC
    (59) declaracion_error -> . ID dimensiones PYC
    (72) declaracion_while_error -> . PA condicion PC LLAVEA bloque_codigo LLAVEC
    (73) declaracion_while_error -> . ID PA condicion PC LLAVEA bloque_codigo LLAVEC
    (74) declaracion_while_error -> . WHIFILEFE PA condicion PC bloque_codigo LLAVEC
    (75) declaracion_while_error -> . WHIFILEFE PA condicion PC LLAVEA bloque_codigo

    VACIO           shift and go to state 67
    IFIF            shift and go to state 68
    AFARRAFAY       shift and go to state 72
    ID              shift and go to state 71
    PRIFINT         shift and go to state 74
    IFINPUFUT       shift and go to state 75
    WHIFILEFE       shift and go to state 76
    IFINT           shift and go to state 19
    STRIFING        shift and go to state 20
    STRUFUCT        shift and go to state 22
    VOFOIFID        shift and go to state 23
    CHAFAR          shift and go to state 24
    BOFOOFOL        shift and go to state 25
    FLOFOAFAT       shift and go to state 26
    PA              shift and go to state 57

    bloque_codigo                  shift and go to state 253
    declarar_if                    shift and go to state 59
    declaracion                    shift and go to state 60
    asignar_estructuras            shift and go to state 61
    asignar_array                  shift and go to state 62
    funcion                        shift and go to state 63
    print                          shift and go to state 64
    input                          shift and go to state 65
    declaracion_while              shift and go to state 66
    declarar_if_error_llave        shift and go to state 69
    tipo_dato                      shift and go to state 70
    declaracion_error              shift and go to state 73
    declaracion_while_error        shift and go to state 77

state 230

    (48) declaracion -> tipo_dato ID ASG ID operacion_matematica . ID PYC

    ID              shift and go to state 254


state 231

    (49) declaracion -> tipo_dato ID ASG dato PYC .

    VACIO           reduce using rule 49 (declaracion -> tipo_dato ID ASG dato PYC .)
    IFIF            reduce using rule 49 (declaracion -> tipo_dato ID ASG dato PYC .)
    AFARRAFAY       reduce using rule 49 (declaracion -> tipo_dato ID ASG dato PYC .)
    ID              reduce using rule 49 (declaracion -> tipo_dato ID ASG dato PYC .)
    PRIFINT         reduce using rule 49 (declaracion -> tipo_dato ID ASG dato PYC .)
    IFINPUFUT       reduce using rule 49 (declaracion -> tipo_dato ID ASG dato PYC .)
    WHIFILEFE       reduce using rule 49 (declaracion -> tipo_dato ID ASG dato PYC .)
    IFINT           reduce using rule 49 (declaracion -> tipo_dato ID ASG dato PYC .)
    STRIFING        reduce using rule 49 (declaracion -> tipo_dato ID ASG dato PYC .)
    STRUFUCT        reduce using rule 49 (declaracion -> tipo_dato ID ASG dato PYC .)
    VOFOIFID        reduce using rule 49 (declaracion -> tipo_dato ID ASG dato PYC .)
    CHAFAR          reduce using rule 49 (declaracion -> tipo_dato ID ASG dato PYC .)
    BOFOOFOL        reduce using rule 49 (declaracion -> tipo_dato ID ASG dato PYC .)
    FLOFOAFAT       reduce using rule 49 (declaracion -> tipo_dato ID ASG dato PYC .)
    PA              reduce using rule 49 (declaracion -> tipo_dato ID ASG dato PYC .)


state 232

    (56) declaracion_error -> ID ID ASG ID operacion_matematica . ID PYC

    ID              shift and go to state 255


state 233

    (57) declaracion_error -> ID ID ASG valores PYC .

    VACIO           reduce using rule 57 (declaracion_error -> ID ID ASG valores PYC .)
    IFIF            reduce using rule 57 (declaracion_error -> ID ID ASG valores PYC .)
    AFARRAFAY       reduce using rule 57 (declaracion_error -> ID ID ASG valores PYC .)
    ID              reduce using rule 57 (declaracion_error -> ID ID ASG valores PYC .)
    PRIFINT         reduce using rule 57 (declaracion_error -> ID ID ASG valores PYC .)
    IFINPUFUT       reduce using rule 57 (declaracion_error -> ID ID ASG valores PYC .)
    WHIFILEFE       reduce using rule 57 (declaracion_error -> ID ID ASG valores PYC .)
    IFINT           reduce using rule 57 (declaracion_error -> ID ID ASG valores PYC .)
    STRIFING        reduce using rule 57 (declaracion_error -> ID ID ASG valores PYC .)
    STRUFUCT        reduce using rule 57 (declaracion_error -> ID ID ASG valores PYC .)
    VOFOIFID        reduce using rule 57 (declaracion_error -> ID ID ASG valores PYC .)
    CHAFAR          reduce using rule 57 (declaracion_error -> ID ID ASG valores PYC .)
    BOFOOFOL        reduce using rule 57 (declaracion_error -> ID ID ASG valores PYC .)
    FLOFOAFAT       reduce using rule 57 (declaracion_error -> ID ID ASG valores PYC .)
    PA              reduce using rule 57 (declaracion_error -> ID ID ASG valores PYC .)


state 234

    (64) asignar_estructuras -> ID PUNTO ID ASG dato . PYC

    PYC             shift and go to state 256


state 235

    (53) declaracion_error -> ID ASG ID operacion_matematica ID . PYC

    PYC             shift and go to state 257


state 236

    (63) asignar_array -> ID dimensiones ASG dato PYC .

    VACIO           reduce using rule 63 (asignar_array -> ID dimensiones ASG dato PYC .)
    IFIF            reduce using rule 63 (asignar_array -> ID dimensiones ASG dato PYC .)
    AFARRAFAY       reduce using rule 63 (asignar_array -> ID dimensiones ASG dato PYC .)
    ID              reduce using rule 63 (asignar_array -> ID dimensiones ASG dato PYC .)
    PRIFINT         reduce using rule 63 (asignar_array -> ID dimensiones ASG dato PYC .)
    IFINPUFUT       reduce using rule 63 (asignar_array -> ID dimensiones ASG dato PYC .)
    WHIFILEFE       reduce using rule 63 (asignar_array -> ID dimensiones ASG dato PYC .)
    IFINT           reduce using rule 63 (asignar_array -> ID dimensiones ASG dato PYC .)
    STRIFING        reduce using rule 63 (asignar_array -> ID dimensiones ASG dato PYC .)
    STRUFUCT        reduce using rule 63 (asignar_array -> ID dimensiones ASG dato PYC .)
    VOFOIFID        reduce using rule 63 (asignar_array -> ID dimensiones ASG dato PYC .)
    CHAFAR          reduce using rule 63 (asignar_array -> ID dimensiones ASG dato PYC .)
    BOFOOFOL        reduce using rule 63 (asignar_array -> ID dimensiones ASG dato PYC .)
    FLOFOAFAT       reduce using rule 63 (asignar_array -> ID dimensiones ASG dato PYC .)
    PA              reduce using rule 63 (asignar_array -> ID dimensiones ASG dato PYC .)


state 237

    (65) funcion -> ID PA valores PC PYC .

    VACIO           reduce using rule 65 (funcion -> ID PA valores PC PYC .)
    IFIF            reduce using rule 65 (funcion -> ID PA valores PC PYC .)
    AFARRAFAY       reduce using rule 65 (funcion -> ID PA valores PC PYC .)
    ID              reduce using rule 65 (funcion -> ID PA valores PC PYC .)
    PRIFINT         reduce using rule 65 (funcion -> ID PA valores PC PYC .)
    IFINPUFUT       reduce using rule 65 (funcion -> ID PA valores PC PYC .)
    WHIFILEFE       reduce using rule 65 (funcion -> ID PA valores PC PYC .)
    IFINT           reduce using rule 65 (funcion -> ID PA valores PC PYC .)
    STRIFING        reduce using rule 65 (funcion -> ID PA valores PC PYC .)
    STRUFUCT        reduce using rule 65 (funcion -> ID PA valores PC PYC .)
    VOFOIFID        reduce using rule 65 (funcion -> ID PA valores PC PYC .)
    CHAFAR          reduce using rule 65 (funcion -> ID PA valores PC PYC .)
    BOFOOFOL        reduce using rule 65 (funcion -> ID PA valores PC PYC .)
    FLOFOAFAT       reduce using rule 65 (funcion -> ID PA valores PC PYC .)
    PA              reduce using rule 65 (funcion -> ID PA valores PC PYC .)


state 238

    (67) funcion -> ID PA valores COMA valores . PC PYC

    PC              shift and go to state 258


state 239

    (73) declaracion_while_error -> ID PA condicion PC LLAVEA . bloque_codigo LLAVEC
    (33) bloque_codigo -> . declarar_if bloque_codigo
    (34) bloque_codigo -> . declaracion bloque_codigo
    (35) bloque_codigo -> . asignar_estructuras bloque_codigo
    (36) bloque_codigo -> . asignar_array bloque_codigo
    (37) bloque_codigo -> . funcion bloque_codigo
    (38) bloque_codigo -> . print bloque_codigo
    (39) bloque_codigo -> . input bloque_codigo
    (40) bloque_codigo -> . declaracion_while bloque_codigo
    (41) bloque_codigo -> . VACIO
    (42) declarar_if -> . IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC
    (43) declarar_if -> . IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE LLAVEA bloque_codigo LLAVEC
    (44) declarar_if -> . declarar_if_error_llave
    (47) declaracion -> . tipo_dato ID PYC
    (48) declaracion -> . tipo_dato ID ASG ID operacion_matematica ID PYC
    (49) declaracion -> . tipo_dato ID ASG dato PYC
    (50) declaracion -> . AFARRAFAY ID dimensiones PYC
    (51) declaracion -> . declaracion_error
    (64) asignar_estructuras -> . ID PUNTO ID ASG dato PYC
    (63) asignar_array -> . ID dimensiones ASG dato PYC
    (65) funcion -> . ID PA valores PC PYC
    (66) funcion -> . ID PA PC PYC
    (67) funcion -> . ID PA valores COMA valores PC PYC
    (68) print -> . PRIFINT PA ID PC PYC
    (69) input -> . IFINPUFUT PA ID PC PYC
    (70) declaracion_while -> . WHIFILEFE PA condicion PC LLAVEA bloque_codigo LLAVEC
    (71) declaracion_while -> . declaracion_while_error
    (45) declarar_if_error_llave -> . IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE LLAVEA bloque_codigo
    (46) declarar_if_error_llave -> . IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE bloque_codigo LLAVEC
    (25) tipo_dato -> . IFINT
    (26) tipo_dato -> . STRIFING
    (27) tipo_dato -> . AFARRAFAY
    (28) tipo_dato -> . STRUFUCT
    (29) tipo_dato -> . VOFOIFID
    (30) tipo_dato -> . CHAFAR
    (31) tipo_dato -> . BOFOOFOL
    (32) tipo_dato -> . FLOFOAFAT
    (52) declaracion_error -> . ID PYC
    (53) declaracion_error -> . ID ASG ID operacion_matematica ID PYC
    (54) declaracion_error -> . ID ASG valores PYC
    (55) declaracion_error -> . ID ID PYC
    (56) declaracion_error -> . ID ID ASG ID operacion_matematica ID PYC
    (57) declaracion_error -> . ID ID ASG valores PYC
    (58) declaracion_error -> . ID ID dimensiones PYC
    (59) declaracion_error -> . ID dimensiones PYC
    (72) declaracion_while_error -> . PA condicion PC LLAVEA bloque_codigo LLAVEC
    (73) declaracion_while_error -> . ID PA condicion PC LLAVEA bloque_codigo LLAVEC
    (74) declaracion_while_error -> . WHIFILEFE PA condicion PC bloque_codigo LLAVEC
    (75) declaracion_while_error -> . WHIFILEFE PA condicion PC LLAVEA bloque_codigo

    VACIO           shift and go to state 67
    IFIF            shift and go to state 68
    AFARRAFAY       shift and go to state 72
    ID              shift and go to state 71
    PRIFINT         shift and go to state 74
    IFINPUFUT       shift and go to state 75
    WHIFILEFE       shift and go to state 76
    IFINT           shift and go to state 19
    STRIFING        shift and go to state 20
    STRUFUCT        shift and go to state 22
    VOFOIFID        shift and go to state 23
    CHAFAR          shift and go to state 24
    BOFOOFOL        shift and go to state 25
    FLOFOAFAT       shift and go to state 26
    PA              shift and go to state 57

    bloque_codigo                  shift and go to state 259
    declarar_if                    shift and go to state 59
    declaracion                    shift and go to state 60
    asignar_estructuras            shift and go to state 61
    asignar_array                  shift and go to state 62
    funcion                        shift and go to state 63
    print                          shift and go to state 64
    input                          shift and go to state 65
    declaracion_while              shift and go to state 66
    declarar_if_error_llave        shift and go to state 69
    tipo_dato                      shift and go to state 70
    declaracion_error              shift and go to state 73
    declaracion_while_error        shift and go to state 77

state 240

    (68) print -> PRIFINT PA ID PC PYC .

    VACIO           reduce using rule 68 (print -> PRIFINT PA ID PC PYC .)
    IFIF            reduce using rule 68 (print -> PRIFINT PA ID PC PYC .)
    AFARRAFAY       reduce using rule 68 (print -> PRIFINT PA ID PC PYC .)
    ID              reduce using rule 68 (print -> PRIFINT PA ID PC PYC .)
    PRIFINT         reduce using rule 68 (print -> PRIFINT PA ID PC PYC .)
    IFINPUFUT       reduce using rule 68 (print -> PRIFINT PA ID PC PYC .)
    WHIFILEFE       reduce using rule 68 (print -> PRIFINT PA ID PC PYC .)
    IFINT           reduce using rule 68 (print -> PRIFINT PA ID PC PYC .)
    STRIFING        reduce using rule 68 (print -> PRIFINT PA ID PC PYC .)
    STRUFUCT        reduce using rule 68 (print -> PRIFINT PA ID PC PYC .)
    VOFOIFID        reduce using rule 68 (print -> PRIFINT PA ID PC PYC .)
    CHAFAR          reduce using rule 68 (print -> PRIFINT PA ID PC PYC .)
    BOFOOFOL        reduce using rule 68 (print -> PRIFINT PA ID PC PYC .)
    FLOFOAFAT       reduce using rule 68 (print -> PRIFINT PA ID PC PYC .)
    PA              reduce using rule 68 (print -> PRIFINT PA ID PC PYC .)


state 241

    (69) input -> IFINPUFUT PA ID PC PYC .

    VACIO           reduce using rule 69 (input -> IFINPUFUT PA ID PC PYC .)
    IFIF            reduce using rule 69 (input -> IFINPUFUT PA ID PC PYC .)
    AFARRAFAY       reduce using rule 69 (input -> IFINPUFUT PA ID PC PYC .)
    ID              reduce using rule 69 (input -> IFINPUFUT PA ID PC PYC .)
    PRIFINT         reduce using rule 69 (input -> IFINPUFUT PA ID PC PYC .)
    IFINPUFUT       reduce using rule 69 (input -> IFINPUFUT PA ID PC PYC .)
    WHIFILEFE       reduce using rule 69 (input -> IFINPUFUT PA ID PC PYC .)
    IFINT           reduce using rule 69 (input -> IFINPUFUT PA ID PC PYC .)
    STRIFING        reduce using rule 69 (input -> IFINPUFUT PA ID PC PYC .)
    STRUFUCT        reduce using rule 69 (input -> IFINPUFUT PA ID PC PYC .)
    VOFOIFID        reduce using rule 69 (input -> IFINPUFUT PA ID PC PYC .)
    CHAFAR          reduce using rule 69 (input -> IFINPUFUT PA ID PC PYC .)
    BOFOOFOL        reduce using rule 69 (input -> IFINPUFUT PA ID PC PYC .)
    FLOFOAFAT       reduce using rule 69 (input -> IFINPUFUT PA ID PC PYC .)
    PA              reduce using rule 69 (input -> IFINPUFUT PA ID PC PYC .)


state 242

    (70) declaracion_while -> WHIFILEFE PA condicion PC LLAVEA . bloque_codigo LLAVEC
    (75) declaracion_while_error -> WHIFILEFE PA condicion PC LLAVEA . bloque_codigo
    (33) bloque_codigo -> . declarar_if bloque_codigo
    (34) bloque_codigo -> . declaracion bloque_codigo
    (35) bloque_codigo -> . asignar_estructuras bloque_codigo
    (36) bloque_codigo -> . asignar_array bloque_codigo
    (37) bloque_codigo -> . funcion bloque_codigo
    (38) bloque_codigo -> . print bloque_codigo
    (39) bloque_codigo -> . input bloque_codigo
    (40) bloque_codigo -> . declaracion_while bloque_codigo
    (41) bloque_codigo -> . VACIO
    (42) declarar_if -> . IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC
    (43) declarar_if -> . IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE LLAVEA bloque_codigo LLAVEC
    (44) declarar_if -> . declarar_if_error_llave
    (47) declaracion -> . tipo_dato ID PYC
    (48) declaracion -> . tipo_dato ID ASG ID operacion_matematica ID PYC
    (49) declaracion -> . tipo_dato ID ASG dato PYC
    (50) declaracion -> . AFARRAFAY ID dimensiones PYC
    (51) declaracion -> . declaracion_error
    (64) asignar_estructuras -> . ID PUNTO ID ASG dato PYC
    (63) asignar_array -> . ID dimensiones ASG dato PYC
    (65) funcion -> . ID PA valores PC PYC
    (66) funcion -> . ID PA PC PYC
    (67) funcion -> . ID PA valores COMA valores PC PYC
    (68) print -> . PRIFINT PA ID PC PYC
    (69) input -> . IFINPUFUT PA ID PC PYC
    (70) declaracion_while -> . WHIFILEFE PA condicion PC LLAVEA bloque_codigo LLAVEC
    (71) declaracion_while -> . declaracion_while_error
    (45) declarar_if_error_llave -> . IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE LLAVEA bloque_codigo
    (46) declarar_if_error_llave -> . IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE bloque_codigo LLAVEC
    (25) tipo_dato -> . IFINT
    (26) tipo_dato -> . STRIFING
    (27) tipo_dato -> . AFARRAFAY
    (28) tipo_dato -> . STRUFUCT
    (29) tipo_dato -> . VOFOIFID
    (30) tipo_dato -> . CHAFAR
    (31) tipo_dato -> . BOFOOFOL
    (32) tipo_dato -> . FLOFOAFAT
    (52) declaracion_error -> . ID PYC
    (53) declaracion_error -> . ID ASG ID operacion_matematica ID PYC
    (54) declaracion_error -> . ID ASG valores PYC
    (55) declaracion_error -> . ID ID PYC
    (56) declaracion_error -> . ID ID ASG ID operacion_matematica ID PYC
    (57) declaracion_error -> . ID ID ASG valores PYC
    (58) declaracion_error -> . ID ID dimensiones PYC
    (59) declaracion_error -> . ID dimensiones PYC
    (72) declaracion_while_error -> . PA condicion PC LLAVEA bloque_codigo LLAVEC
    (73) declaracion_while_error -> . ID PA condicion PC LLAVEA bloque_codigo LLAVEC
    (74) declaracion_while_error -> . WHIFILEFE PA condicion PC bloque_codigo LLAVEC
    (75) declaracion_while_error -> . WHIFILEFE PA condicion PC LLAVEA bloque_codigo

    VACIO           shift and go to state 67
    IFIF            shift and go to state 68
    AFARRAFAY       shift and go to state 72
    ID              shift and go to state 71
    PRIFINT         shift and go to state 74
    IFINPUFUT       shift and go to state 75
    WHIFILEFE       shift and go to state 76
    IFINT           shift and go to state 19
    STRIFING        shift and go to state 20
    STRUFUCT        shift and go to state 22
    VOFOIFID        shift and go to state 23
    CHAFAR          shift and go to state 24
    BOFOOFOL        shift and go to state 25
    FLOFOAFAT       shift and go to state 26
    PA              shift and go to state 57

    bloque_codigo                  shift and go to state 260
    declarar_if                    shift and go to state 59
    declaracion                    shift and go to state 60
    asignar_estructuras            shift and go to state 61
    asignar_array                  shift and go to state 62
    funcion                        shift and go to state 63
    print                          shift and go to state 64
    input                          shift and go to state 65
    declaracion_while              shift and go to state 66
    declarar_if_error_llave        shift and go to state 69
    tipo_dato                      shift and go to state 70
    declaracion_error              shift and go to state 73
    declaracion_while_error        shift and go to state 77

state 243

    (74) declaracion_while_error -> WHIFILEFE PA condicion PC bloque_codigo . LLAVEC

    LLAVEC          shift and go to state 261


state 244

    (24) declarar_main_error -> IFINT ID PA PC LLAVEA bloque_codigo REFETUFURN PYC LLAVEC .

    $end            reduce using rule 24 (declarar_main_error -> IFINT ID PA PC LLAVEA bloque_codigo REFETUFURN PYC LLAVEC .)


state 245

    (13) declarar_estructuras_error -> STRUFUCT ID LLAVEA tipo_dato ID PYC tipo_dato ID PYC tipo_dato . ID PYC LLAVEC

    ID              shift and go to state 262


state 246

    (5) declarar_estructuras -> STRUFUCT ID LLAVEA tipo_dato ID PYC tipo_dato ID PYC LLAVEC .

    IFINT           reduce using rule 5 (declarar_estructuras -> STRUFUCT ID LLAVEA tipo_dato ID PYC tipo_dato ID PYC LLAVEC .)
    FUNCTION        reduce using rule 5 (declarar_estructuras -> STRUFUCT ID LLAVEA tipo_dato ID PYC tipo_dato ID PYC LLAVEC .)
    MAFAIFIN        reduce using rule 5 (declarar_estructuras -> STRUFUCT ID LLAVEA tipo_dato ID PYC tipo_dato ID PYC LLAVEC .)


state 247

    (8) declarar_estructuras_error -> ID ID LLAVEA tipo_dato ID PYC tipo_dato ID PYC LLAVEC .

    IFINT           reduce using rule 8 (declarar_estructuras_error -> ID ID LLAVEA tipo_dato ID PYC tipo_dato ID PYC LLAVEC .)
    FUNCTION        reduce using rule 8 (declarar_estructuras_error -> ID ID LLAVEA tipo_dato ID PYC tipo_dato ID PYC LLAVEC .)
    MAFAIFIN        reduce using rule 8 (declarar_estructuras_error -> ID ID LLAVEA tipo_dato ID PYC tipo_dato ID PYC LLAVEC .)


state 248

    (14) declarar_funciones -> FUNCTION tipo_dato ID PA tipo_dato ID PC LLAVEA bloque_codigo REFETUFURN . ID PYC LLAVEC

    ID              shift and go to state 263


state 249

    (17) declarar_funciones -> FUNCTION tipo_dato ID PA tipo_dato ID COMA tipo_dato ID PC . LLAVEA bloque_codigo REFETUFURN ID PYC LLAVEC

    LLAVEA          shift and go to state 264


state 250

    (15) declarar_funciones -> FUNCTION tipo_dato ID PA PC LLAVEA bloque_codigo REFETUFURN ID PYC . LLAVEC

    LLAVEC          shift and go to state 265


state 251

    (16) declarar_funciones -> FUNCTION tipo_dato ID PA PC LLAVEA bloque_codigo REFETUFURN PYC LLAVEC .

    IFINT           reduce using rule 16 (declarar_funciones -> FUNCTION tipo_dato ID PA PC LLAVEA bloque_codigo REFETUFURN PYC LLAVEC .)
    MAFAIFIN        reduce using rule 16 (declarar_funciones -> FUNCTION tipo_dato ID PA PC LLAVEA bloque_codigo REFETUFURN PYC LLAVEC .)


state 252

    (72) declaracion_while_error -> PA condicion PC LLAVEA bloque_codigo LLAVEC .

    VACIO           reduce using rule 72 (declaracion_while_error -> PA condicion PC LLAVEA bloque_codigo LLAVEC .)
    IFIF            reduce using rule 72 (declaracion_while_error -> PA condicion PC LLAVEA bloque_codigo LLAVEC .)
    AFARRAFAY       reduce using rule 72 (declaracion_while_error -> PA condicion PC LLAVEA bloque_codigo LLAVEC .)
    ID              reduce using rule 72 (declaracion_while_error -> PA condicion PC LLAVEA bloque_codigo LLAVEC .)
    PRIFINT         reduce using rule 72 (declaracion_while_error -> PA condicion PC LLAVEA bloque_codigo LLAVEC .)
    IFINPUFUT       reduce using rule 72 (declaracion_while_error -> PA condicion PC LLAVEA bloque_codigo LLAVEC .)
    WHIFILEFE       reduce using rule 72 (declaracion_while_error -> PA condicion PC LLAVEA bloque_codigo LLAVEC .)
    IFINT           reduce using rule 72 (declaracion_while_error -> PA condicion PC LLAVEA bloque_codigo LLAVEC .)
    STRIFING        reduce using rule 72 (declaracion_while_error -> PA condicion PC LLAVEA bloque_codigo LLAVEC .)
    STRUFUCT        reduce using rule 72 (declaracion_while_error -> PA condicion PC LLAVEA bloque_codigo LLAVEC .)
    VOFOIFID        reduce using rule 72 (declaracion_while_error -> PA condicion PC LLAVEA bloque_codigo LLAVEC .)
    CHAFAR          reduce using rule 72 (declaracion_while_error -> PA condicion PC LLAVEA bloque_codigo LLAVEC .)
    BOFOOFOL        reduce using rule 72 (declaracion_while_error -> PA condicion PC LLAVEA bloque_codigo LLAVEC .)
    FLOFOAFAT       reduce using rule 72 (declaracion_while_error -> PA condicion PC LLAVEA bloque_codigo LLAVEC .)
    PA              reduce using rule 72 (declaracion_while_error -> PA condicion PC LLAVEA bloque_codigo LLAVEC .)


state 253

    (42) declarar_if -> IFIF PA condicion PC LLAVEA bloque_codigo . LLAVEC
    (43) declarar_if -> IFIF PA condicion PC LLAVEA bloque_codigo . LLAVEC EFELSEFE LLAVEA bloque_codigo LLAVEC
    (45) declarar_if_error_llave -> IFIF PA condicion PC LLAVEA bloque_codigo . LLAVEC EFELSEFE LLAVEA bloque_codigo
    (46) declarar_if_error_llave -> IFIF PA condicion PC LLAVEA bloque_codigo . LLAVEC EFELSEFE bloque_codigo LLAVEC

    LLAVEC          shift and go to state 266


state 254

    (48) declaracion -> tipo_dato ID ASG ID operacion_matematica ID . PYC

    PYC             shift and go to state 267


state 255

    (56) declaracion_error -> ID ID ASG ID operacion_matematica ID . PYC

    PYC             shift and go to state 268


state 256

    (64) asignar_estructuras -> ID PUNTO ID ASG dato PYC .

    VACIO           reduce using rule 64 (asignar_estructuras -> ID PUNTO ID ASG dato PYC .)
    IFIF            reduce using rule 64 (asignar_estructuras -> ID PUNTO ID ASG dato PYC .)
    AFARRAFAY       reduce using rule 64 (asignar_estructuras -> ID PUNTO ID ASG dato PYC .)
    ID              reduce using rule 64 (asignar_estructuras -> ID PUNTO ID ASG dato PYC .)
    PRIFINT         reduce using rule 64 (asignar_estructuras -> ID PUNTO ID ASG dato PYC .)
    IFINPUFUT       reduce using rule 64 (asignar_estructuras -> ID PUNTO ID ASG dato PYC .)
    WHIFILEFE       reduce using rule 64 (asignar_estructuras -> ID PUNTO ID ASG dato PYC .)
    IFINT           reduce using rule 64 (asignar_estructuras -> ID PUNTO ID ASG dato PYC .)
    STRIFING        reduce using rule 64 (asignar_estructuras -> ID PUNTO ID ASG dato PYC .)
    STRUFUCT        reduce using rule 64 (asignar_estructuras -> ID PUNTO ID ASG dato PYC .)
    VOFOIFID        reduce using rule 64 (asignar_estructuras -> ID PUNTO ID ASG dato PYC .)
    CHAFAR          reduce using rule 64 (asignar_estructuras -> ID PUNTO ID ASG dato PYC .)
    BOFOOFOL        reduce using rule 64 (asignar_estructuras -> ID PUNTO ID ASG dato PYC .)
    FLOFOAFAT       reduce using rule 64 (asignar_estructuras -> ID PUNTO ID ASG dato PYC .)
    PA              reduce using rule 64 (asignar_estructuras -> ID PUNTO ID ASG dato PYC .)


state 257

    (53) declaracion_error -> ID ASG ID operacion_matematica ID PYC .

    VACIO           reduce using rule 53 (declaracion_error -> ID ASG ID operacion_matematica ID PYC .)
    IFIF            reduce using rule 53 (declaracion_error -> ID ASG ID operacion_matematica ID PYC .)
    AFARRAFAY       reduce using rule 53 (declaracion_error -> ID ASG ID operacion_matematica ID PYC .)
    ID              reduce using rule 53 (declaracion_error -> ID ASG ID operacion_matematica ID PYC .)
    PRIFINT         reduce using rule 53 (declaracion_error -> ID ASG ID operacion_matematica ID PYC .)
    IFINPUFUT       reduce using rule 53 (declaracion_error -> ID ASG ID operacion_matematica ID PYC .)
    WHIFILEFE       reduce using rule 53 (declaracion_error -> ID ASG ID operacion_matematica ID PYC .)
    IFINT           reduce using rule 53 (declaracion_error -> ID ASG ID operacion_matematica ID PYC .)
    STRIFING        reduce using rule 53 (declaracion_error -> ID ASG ID operacion_matematica ID PYC .)
    STRUFUCT        reduce using rule 53 (declaracion_error -> ID ASG ID operacion_matematica ID PYC .)
    VOFOIFID        reduce using rule 53 (declaracion_error -> ID ASG ID operacion_matematica ID PYC .)
    CHAFAR          reduce using rule 53 (declaracion_error -> ID ASG ID operacion_matematica ID PYC .)
    BOFOOFOL        reduce using rule 53 (declaracion_error -> ID ASG ID operacion_matematica ID PYC .)
    FLOFOAFAT       reduce using rule 53 (declaracion_error -> ID ASG ID operacion_matematica ID PYC .)
    PA              reduce using rule 53 (declaracion_error -> ID ASG ID operacion_matematica ID PYC .)


state 258

    (67) funcion -> ID PA valores COMA valores PC . PYC

    PYC             shift and go to state 269


state 259

    (73) declaracion_while_error -> ID PA condicion PC LLAVEA bloque_codigo . LLAVEC

    LLAVEC          shift and go to state 270


state 260

    (70) declaracion_while -> WHIFILEFE PA condicion PC LLAVEA bloque_codigo . LLAVEC
    (75) declaracion_while_error -> WHIFILEFE PA condicion PC LLAVEA bloque_codigo .

    LLAVEC          shift and go to state 271
    VACIO           reduce using rule 75 (declaracion_while_error -> WHIFILEFE PA condicion PC LLAVEA bloque_codigo .)
    IFIF            reduce using rule 75 (declaracion_while_error -> WHIFILEFE PA condicion PC LLAVEA bloque_codigo .)
    AFARRAFAY       reduce using rule 75 (declaracion_while_error -> WHIFILEFE PA condicion PC LLAVEA bloque_codigo .)
    ID              reduce using rule 75 (declaracion_while_error -> WHIFILEFE PA condicion PC LLAVEA bloque_codigo .)
    PRIFINT         reduce using rule 75 (declaracion_while_error -> WHIFILEFE PA condicion PC LLAVEA bloque_codigo .)
    IFINPUFUT       reduce using rule 75 (declaracion_while_error -> WHIFILEFE PA condicion PC LLAVEA bloque_codigo .)
    WHIFILEFE       reduce using rule 75 (declaracion_while_error -> WHIFILEFE PA condicion PC LLAVEA bloque_codigo .)
    IFINT           reduce using rule 75 (declaracion_while_error -> WHIFILEFE PA condicion PC LLAVEA bloque_codigo .)
    STRIFING        reduce using rule 75 (declaracion_while_error -> WHIFILEFE PA condicion PC LLAVEA bloque_codigo .)
    STRUFUCT        reduce using rule 75 (declaracion_while_error -> WHIFILEFE PA condicion PC LLAVEA bloque_codigo .)
    VOFOIFID        reduce using rule 75 (declaracion_while_error -> WHIFILEFE PA condicion PC LLAVEA bloque_codigo .)
    CHAFAR          reduce using rule 75 (declaracion_while_error -> WHIFILEFE PA condicion PC LLAVEA bloque_codigo .)
    BOFOOFOL        reduce using rule 75 (declaracion_while_error -> WHIFILEFE PA condicion PC LLAVEA bloque_codigo .)
    FLOFOAFAT       reduce using rule 75 (declaracion_while_error -> WHIFILEFE PA condicion PC LLAVEA bloque_codigo .)
    PA              reduce using rule 75 (declaracion_while_error -> WHIFILEFE PA condicion PC LLAVEA bloque_codigo .)


state 261

    (74) declaracion_while_error -> WHIFILEFE PA condicion PC bloque_codigo LLAVEC .

    VACIO           reduce using rule 74 (declaracion_while_error -> WHIFILEFE PA condicion PC bloque_codigo LLAVEC .)
    IFIF            reduce using rule 74 (declaracion_while_error -> WHIFILEFE PA condicion PC bloque_codigo LLAVEC .)
    AFARRAFAY       reduce using rule 74 (declaracion_while_error -> WHIFILEFE PA condicion PC bloque_codigo LLAVEC .)
    ID              reduce using rule 74 (declaracion_while_error -> WHIFILEFE PA condicion PC bloque_codigo LLAVEC .)
    PRIFINT         reduce using rule 74 (declaracion_while_error -> WHIFILEFE PA condicion PC bloque_codigo LLAVEC .)
    IFINPUFUT       reduce using rule 74 (declaracion_while_error -> WHIFILEFE PA condicion PC bloque_codigo LLAVEC .)
    WHIFILEFE       reduce using rule 74 (declaracion_while_error -> WHIFILEFE PA condicion PC bloque_codigo LLAVEC .)
    IFINT           reduce using rule 74 (declaracion_while_error -> WHIFILEFE PA condicion PC bloque_codigo LLAVEC .)
    STRIFING        reduce using rule 74 (declaracion_while_error -> WHIFILEFE PA condicion PC bloque_codigo LLAVEC .)
    STRUFUCT        reduce using rule 74 (declaracion_while_error -> WHIFILEFE PA condicion PC bloque_codigo LLAVEC .)
    VOFOIFID        reduce using rule 74 (declaracion_while_error -> WHIFILEFE PA condicion PC bloque_codigo LLAVEC .)
    CHAFAR          reduce using rule 74 (declaracion_while_error -> WHIFILEFE PA condicion PC bloque_codigo LLAVEC .)
    BOFOOFOL        reduce using rule 74 (declaracion_while_error -> WHIFILEFE PA condicion PC bloque_codigo LLAVEC .)
    FLOFOAFAT       reduce using rule 74 (declaracion_while_error -> WHIFILEFE PA condicion PC bloque_codigo LLAVEC .)
    PA              reduce using rule 74 (declaracion_while_error -> WHIFILEFE PA condicion PC bloque_codigo LLAVEC .)


state 262

    (13) declarar_estructuras_error -> STRUFUCT ID LLAVEA tipo_dato ID PYC tipo_dato ID PYC tipo_dato ID . PYC LLAVEC

    PYC             shift and go to state 272


state 263

    (14) declarar_funciones -> FUNCTION tipo_dato ID PA tipo_dato ID PC LLAVEA bloque_codigo REFETUFURN ID . PYC LLAVEC

    PYC             shift and go to state 273


state 264

    (17) declarar_funciones -> FUNCTION tipo_dato ID PA tipo_dato ID COMA tipo_dato ID PC LLAVEA . bloque_codigo REFETUFURN ID PYC LLAVEC
    (33) bloque_codigo -> . declarar_if bloque_codigo
    (34) bloque_codigo -> . declaracion bloque_codigo
    (35) bloque_codigo -> . asignar_estructuras bloque_codigo
    (36) bloque_codigo -> . asignar_array bloque_codigo
    (37) bloque_codigo -> . funcion bloque_codigo
    (38) bloque_codigo -> . print bloque_codigo
    (39) bloque_codigo -> . input bloque_codigo
    (40) bloque_codigo -> . declaracion_while bloque_codigo
    (41) bloque_codigo -> . VACIO
    (42) declarar_if -> . IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC
    (43) declarar_if -> . IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE LLAVEA bloque_codigo LLAVEC
    (44) declarar_if -> . declarar_if_error_llave
    (47) declaracion -> . tipo_dato ID PYC
    (48) declaracion -> . tipo_dato ID ASG ID operacion_matematica ID PYC
    (49) declaracion -> . tipo_dato ID ASG dato PYC
    (50) declaracion -> . AFARRAFAY ID dimensiones PYC
    (51) declaracion -> . declaracion_error
    (64) asignar_estructuras -> . ID PUNTO ID ASG dato PYC
    (63) asignar_array -> . ID dimensiones ASG dato PYC
    (65) funcion -> . ID PA valores PC PYC
    (66) funcion -> . ID PA PC PYC
    (67) funcion -> . ID PA valores COMA valores PC PYC
    (68) print -> . PRIFINT PA ID PC PYC
    (69) input -> . IFINPUFUT PA ID PC PYC
    (70) declaracion_while -> . WHIFILEFE PA condicion PC LLAVEA bloque_codigo LLAVEC
    (71) declaracion_while -> . declaracion_while_error
    (45) declarar_if_error_llave -> . IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE LLAVEA bloque_codigo
    (46) declarar_if_error_llave -> . IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE bloque_codigo LLAVEC
    (25) tipo_dato -> . IFINT
    (26) tipo_dato -> . STRIFING
    (27) tipo_dato -> . AFARRAFAY
    (28) tipo_dato -> . STRUFUCT
    (29) tipo_dato -> . VOFOIFID
    (30) tipo_dato -> . CHAFAR
    (31) tipo_dato -> . BOFOOFOL
    (32) tipo_dato -> . FLOFOAFAT
    (52) declaracion_error -> . ID PYC
    (53) declaracion_error -> . ID ASG ID operacion_matematica ID PYC
    (54) declaracion_error -> . ID ASG valores PYC
    (55) declaracion_error -> . ID ID PYC
    (56) declaracion_error -> . ID ID ASG ID operacion_matematica ID PYC
    (57) declaracion_error -> . ID ID ASG valores PYC
    (58) declaracion_error -> . ID ID dimensiones PYC
    (59) declaracion_error -> . ID dimensiones PYC
    (72) declaracion_while_error -> . PA condicion PC LLAVEA bloque_codigo LLAVEC
    (73) declaracion_while_error -> . ID PA condicion PC LLAVEA bloque_codigo LLAVEC
    (74) declaracion_while_error -> . WHIFILEFE PA condicion PC bloque_codigo LLAVEC
    (75) declaracion_while_error -> . WHIFILEFE PA condicion PC LLAVEA bloque_codigo

    VACIO           shift and go to state 67
    IFIF            shift and go to state 68
    AFARRAFAY       shift and go to state 72
    ID              shift and go to state 71
    PRIFINT         shift and go to state 74
    IFINPUFUT       shift and go to state 75
    WHIFILEFE       shift and go to state 76
    IFINT           shift and go to state 19
    STRIFING        shift and go to state 20
    STRUFUCT        shift and go to state 22
    VOFOIFID        shift and go to state 23
    CHAFAR          shift and go to state 24
    BOFOOFOL        shift and go to state 25
    FLOFOAFAT       shift and go to state 26
    PA              shift and go to state 57

    tipo_dato                      shift and go to state 70
    bloque_codigo                  shift and go to state 274
    declarar_if                    shift and go to state 59
    declaracion                    shift and go to state 60
    asignar_estructuras            shift and go to state 61
    asignar_array                  shift and go to state 62
    funcion                        shift and go to state 63
    print                          shift and go to state 64
    input                          shift and go to state 65
    declaracion_while              shift and go to state 66
    declarar_if_error_llave        shift and go to state 69
    declaracion_error              shift and go to state 73
    declaracion_while_error        shift and go to state 77

state 265

    (15) declarar_funciones -> FUNCTION tipo_dato ID PA PC LLAVEA bloque_codigo REFETUFURN ID PYC LLAVEC .

    IFINT           reduce using rule 15 (declarar_funciones -> FUNCTION tipo_dato ID PA PC LLAVEA bloque_codigo REFETUFURN ID PYC LLAVEC .)
    MAFAIFIN        reduce using rule 15 (declarar_funciones -> FUNCTION tipo_dato ID PA PC LLAVEA bloque_codigo REFETUFURN ID PYC LLAVEC .)


state 266

    (42) declarar_if -> IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC .
    (43) declarar_if -> IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC . EFELSEFE LLAVEA bloque_codigo LLAVEC
    (45) declarar_if_error_llave -> IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC . EFELSEFE LLAVEA bloque_codigo
    (46) declarar_if_error_llave -> IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC . EFELSEFE bloque_codigo LLAVEC

    VACIO           reduce using rule 42 (declarar_if -> IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC .)
    IFIF            reduce using rule 42 (declarar_if -> IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC .)
    AFARRAFAY       reduce using rule 42 (declarar_if -> IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC .)
    ID              reduce using rule 42 (declarar_if -> IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC .)
    PRIFINT         reduce using rule 42 (declarar_if -> IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC .)
    IFINPUFUT       reduce using rule 42 (declarar_if -> IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC .)
    WHIFILEFE       reduce using rule 42 (declarar_if -> IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC .)
    IFINT           reduce using rule 42 (declarar_if -> IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC .)
    STRIFING        reduce using rule 42 (declarar_if -> IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC .)
    STRUFUCT        reduce using rule 42 (declarar_if -> IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC .)
    VOFOIFID        reduce using rule 42 (declarar_if -> IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC .)
    CHAFAR          reduce using rule 42 (declarar_if -> IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC .)
    BOFOOFOL        reduce using rule 42 (declarar_if -> IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC .)
    FLOFOAFAT       reduce using rule 42 (declarar_if -> IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC .)
    PA              reduce using rule 42 (declarar_if -> IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC .)
    EFELSEFE        shift and go to state 275


state 267

    (48) declaracion -> tipo_dato ID ASG ID operacion_matematica ID PYC .

    VACIO           reduce using rule 48 (declaracion -> tipo_dato ID ASG ID operacion_matematica ID PYC .)
    IFIF            reduce using rule 48 (declaracion -> tipo_dato ID ASG ID operacion_matematica ID PYC .)
    AFARRAFAY       reduce using rule 48 (declaracion -> tipo_dato ID ASG ID operacion_matematica ID PYC .)
    ID              reduce using rule 48 (declaracion -> tipo_dato ID ASG ID operacion_matematica ID PYC .)
    PRIFINT         reduce using rule 48 (declaracion -> tipo_dato ID ASG ID operacion_matematica ID PYC .)
    IFINPUFUT       reduce using rule 48 (declaracion -> tipo_dato ID ASG ID operacion_matematica ID PYC .)
    WHIFILEFE       reduce using rule 48 (declaracion -> tipo_dato ID ASG ID operacion_matematica ID PYC .)
    IFINT           reduce using rule 48 (declaracion -> tipo_dato ID ASG ID operacion_matematica ID PYC .)
    STRIFING        reduce using rule 48 (declaracion -> tipo_dato ID ASG ID operacion_matematica ID PYC .)
    STRUFUCT        reduce using rule 48 (declaracion -> tipo_dato ID ASG ID operacion_matematica ID PYC .)
    VOFOIFID        reduce using rule 48 (declaracion -> tipo_dato ID ASG ID operacion_matematica ID PYC .)
    CHAFAR          reduce using rule 48 (declaracion -> tipo_dato ID ASG ID operacion_matematica ID PYC .)
    BOFOOFOL        reduce using rule 48 (declaracion -> tipo_dato ID ASG ID operacion_matematica ID PYC .)
    FLOFOAFAT       reduce using rule 48 (declaracion -> tipo_dato ID ASG ID operacion_matematica ID PYC .)
    PA              reduce using rule 48 (declaracion -> tipo_dato ID ASG ID operacion_matematica ID PYC .)


state 268

    (56) declaracion_error -> ID ID ASG ID operacion_matematica ID PYC .

    VACIO           reduce using rule 56 (declaracion_error -> ID ID ASG ID operacion_matematica ID PYC .)
    IFIF            reduce using rule 56 (declaracion_error -> ID ID ASG ID operacion_matematica ID PYC .)
    AFARRAFAY       reduce using rule 56 (declaracion_error -> ID ID ASG ID operacion_matematica ID PYC .)
    ID              reduce using rule 56 (declaracion_error -> ID ID ASG ID operacion_matematica ID PYC .)
    PRIFINT         reduce using rule 56 (declaracion_error -> ID ID ASG ID operacion_matematica ID PYC .)
    IFINPUFUT       reduce using rule 56 (declaracion_error -> ID ID ASG ID operacion_matematica ID PYC .)
    WHIFILEFE       reduce using rule 56 (declaracion_error -> ID ID ASG ID operacion_matematica ID PYC .)
    IFINT           reduce using rule 56 (declaracion_error -> ID ID ASG ID operacion_matematica ID PYC .)
    STRIFING        reduce using rule 56 (declaracion_error -> ID ID ASG ID operacion_matematica ID PYC .)
    STRUFUCT        reduce using rule 56 (declaracion_error -> ID ID ASG ID operacion_matematica ID PYC .)
    VOFOIFID        reduce using rule 56 (declaracion_error -> ID ID ASG ID operacion_matematica ID PYC .)
    CHAFAR          reduce using rule 56 (declaracion_error -> ID ID ASG ID operacion_matematica ID PYC .)
    BOFOOFOL        reduce using rule 56 (declaracion_error -> ID ID ASG ID operacion_matematica ID PYC .)
    FLOFOAFAT       reduce using rule 56 (declaracion_error -> ID ID ASG ID operacion_matematica ID PYC .)
    PA              reduce using rule 56 (declaracion_error -> ID ID ASG ID operacion_matematica ID PYC .)


state 269

    (67) funcion -> ID PA valores COMA valores PC PYC .

    VACIO           reduce using rule 67 (funcion -> ID PA valores COMA valores PC PYC .)
    IFIF            reduce using rule 67 (funcion -> ID PA valores COMA valores PC PYC .)
    AFARRAFAY       reduce using rule 67 (funcion -> ID PA valores COMA valores PC PYC .)
    ID              reduce using rule 67 (funcion -> ID PA valores COMA valores PC PYC .)
    PRIFINT         reduce using rule 67 (funcion -> ID PA valores COMA valores PC PYC .)
    IFINPUFUT       reduce using rule 67 (funcion -> ID PA valores COMA valores PC PYC .)
    WHIFILEFE       reduce using rule 67 (funcion -> ID PA valores COMA valores PC PYC .)
    IFINT           reduce using rule 67 (funcion -> ID PA valores COMA valores PC PYC .)
    STRIFING        reduce using rule 67 (funcion -> ID PA valores COMA valores PC PYC .)
    STRUFUCT        reduce using rule 67 (funcion -> ID PA valores COMA valores PC PYC .)
    VOFOIFID        reduce using rule 67 (funcion -> ID PA valores COMA valores PC PYC .)
    CHAFAR          reduce using rule 67 (funcion -> ID PA valores COMA valores PC PYC .)
    BOFOOFOL        reduce using rule 67 (funcion -> ID PA valores COMA valores PC PYC .)
    FLOFOAFAT       reduce using rule 67 (funcion -> ID PA valores COMA valores PC PYC .)
    PA              reduce using rule 67 (funcion -> ID PA valores COMA valores PC PYC .)


state 270

    (73) declaracion_while_error -> ID PA condicion PC LLAVEA bloque_codigo LLAVEC .

    VACIO           reduce using rule 73 (declaracion_while_error -> ID PA condicion PC LLAVEA bloque_codigo LLAVEC .)
    IFIF            reduce using rule 73 (declaracion_while_error -> ID PA condicion PC LLAVEA bloque_codigo LLAVEC .)
    AFARRAFAY       reduce using rule 73 (declaracion_while_error -> ID PA condicion PC LLAVEA bloque_codigo LLAVEC .)
    ID              reduce using rule 73 (declaracion_while_error -> ID PA condicion PC LLAVEA bloque_codigo LLAVEC .)
    PRIFINT         reduce using rule 73 (declaracion_while_error -> ID PA condicion PC LLAVEA bloque_codigo LLAVEC .)
    IFINPUFUT       reduce using rule 73 (declaracion_while_error -> ID PA condicion PC LLAVEA bloque_codigo LLAVEC .)
    WHIFILEFE       reduce using rule 73 (declaracion_while_error -> ID PA condicion PC LLAVEA bloque_codigo LLAVEC .)
    IFINT           reduce using rule 73 (declaracion_while_error -> ID PA condicion PC LLAVEA bloque_codigo LLAVEC .)
    STRIFING        reduce using rule 73 (declaracion_while_error -> ID PA condicion PC LLAVEA bloque_codigo LLAVEC .)
    STRUFUCT        reduce using rule 73 (declaracion_while_error -> ID PA condicion PC LLAVEA bloque_codigo LLAVEC .)
    VOFOIFID        reduce using rule 73 (declaracion_while_error -> ID PA condicion PC LLAVEA bloque_codigo LLAVEC .)
    CHAFAR          reduce using rule 73 (declaracion_while_error -> ID PA condicion PC LLAVEA bloque_codigo LLAVEC .)
    BOFOOFOL        reduce using rule 73 (declaracion_while_error -> ID PA condicion PC LLAVEA bloque_codigo LLAVEC .)
    FLOFOAFAT       reduce using rule 73 (declaracion_while_error -> ID PA condicion PC LLAVEA bloque_codigo LLAVEC .)
    PA              reduce using rule 73 (declaracion_while_error -> ID PA condicion PC LLAVEA bloque_codigo LLAVEC .)


state 271

    (70) declaracion_while -> WHIFILEFE PA condicion PC LLAVEA bloque_codigo LLAVEC .

    VACIO           reduce using rule 70 (declaracion_while -> WHIFILEFE PA condicion PC LLAVEA bloque_codigo LLAVEC .)
    IFIF            reduce using rule 70 (declaracion_while -> WHIFILEFE PA condicion PC LLAVEA bloque_codigo LLAVEC .)
    AFARRAFAY       reduce using rule 70 (declaracion_while -> WHIFILEFE PA condicion PC LLAVEA bloque_codigo LLAVEC .)
    ID              reduce using rule 70 (declaracion_while -> WHIFILEFE PA condicion PC LLAVEA bloque_codigo LLAVEC .)
    PRIFINT         reduce using rule 70 (declaracion_while -> WHIFILEFE PA condicion PC LLAVEA bloque_codigo LLAVEC .)
    IFINPUFUT       reduce using rule 70 (declaracion_while -> WHIFILEFE PA condicion PC LLAVEA bloque_codigo LLAVEC .)
    WHIFILEFE       reduce using rule 70 (declaracion_while -> WHIFILEFE PA condicion PC LLAVEA bloque_codigo LLAVEC .)
    IFINT           reduce using rule 70 (declaracion_while -> WHIFILEFE PA condicion PC LLAVEA bloque_codigo LLAVEC .)
    STRIFING        reduce using rule 70 (declaracion_while -> WHIFILEFE PA condicion PC LLAVEA bloque_codigo LLAVEC .)
    STRUFUCT        reduce using rule 70 (declaracion_while -> WHIFILEFE PA condicion PC LLAVEA bloque_codigo LLAVEC .)
    VOFOIFID        reduce using rule 70 (declaracion_while -> WHIFILEFE PA condicion PC LLAVEA bloque_codigo LLAVEC .)
    CHAFAR          reduce using rule 70 (declaracion_while -> WHIFILEFE PA condicion PC LLAVEA bloque_codigo LLAVEC .)
    BOFOOFOL        reduce using rule 70 (declaracion_while -> WHIFILEFE PA condicion PC LLAVEA bloque_codigo LLAVEC .)
    FLOFOAFAT       reduce using rule 70 (declaracion_while -> WHIFILEFE PA condicion PC LLAVEA bloque_codigo LLAVEC .)
    PA              reduce using rule 70 (declaracion_while -> WHIFILEFE PA condicion PC LLAVEA bloque_codigo LLAVEC .)


state 272

    (13) declarar_estructuras_error -> STRUFUCT ID LLAVEA tipo_dato ID PYC tipo_dato ID PYC tipo_dato ID PYC . LLAVEC

    LLAVEC          shift and go to state 276


state 273

    (14) declarar_funciones -> FUNCTION tipo_dato ID PA tipo_dato ID PC LLAVEA bloque_codigo REFETUFURN ID PYC . LLAVEC

    LLAVEC          shift and go to state 277


state 274

    (17) declarar_funciones -> FUNCTION tipo_dato ID PA tipo_dato ID COMA tipo_dato ID PC LLAVEA bloque_codigo . REFETUFURN ID PYC LLAVEC

    REFETUFURN      shift and go to state 278


state 275

    (43) declarar_if -> IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE . LLAVEA bloque_codigo LLAVEC
    (45) declarar_if_error_llave -> IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE . LLAVEA bloque_codigo
    (46) declarar_if_error_llave -> IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE . bloque_codigo LLAVEC
    (33) bloque_codigo -> . declarar_if bloque_codigo
    (34) bloque_codigo -> . declaracion bloque_codigo
    (35) bloque_codigo -> . asignar_estructuras bloque_codigo
    (36) bloque_codigo -> . asignar_array bloque_codigo
    (37) bloque_codigo -> . funcion bloque_codigo
    (38) bloque_codigo -> . print bloque_codigo
    (39) bloque_codigo -> . input bloque_codigo
    (40) bloque_codigo -> . declaracion_while bloque_codigo
    (41) bloque_codigo -> . VACIO
    (42) declarar_if -> . IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC
    (43) declarar_if -> . IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE LLAVEA bloque_codigo LLAVEC
    (44) declarar_if -> . declarar_if_error_llave
    (47) declaracion -> . tipo_dato ID PYC
    (48) declaracion -> . tipo_dato ID ASG ID operacion_matematica ID PYC
    (49) declaracion -> . tipo_dato ID ASG dato PYC
    (50) declaracion -> . AFARRAFAY ID dimensiones PYC
    (51) declaracion -> . declaracion_error
    (64) asignar_estructuras -> . ID PUNTO ID ASG dato PYC
    (63) asignar_array -> . ID dimensiones ASG dato PYC
    (65) funcion -> . ID PA valores PC PYC
    (66) funcion -> . ID PA PC PYC
    (67) funcion -> . ID PA valores COMA valores PC PYC
    (68) print -> . PRIFINT PA ID PC PYC
    (69) input -> . IFINPUFUT PA ID PC PYC
    (70) declaracion_while -> . WHIFILEFE PA condicion PC LLAVEA bloque_codigo LLAVEC
    (71) declaracion_while -> . declaracion_while_error
    (45) declarar_if_error_llave -> . IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE LLAVEA bloque_codigo
    (46) declarar_if_error_llave -> . IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE bloque_codigo LLAVEC
    (25) tipo_dato -> . IFINT
    (26) tipo_dato -> . STRIFING
    (27) tipo_dato -> . AFARRAFAY
    (28) tipo_dato -> . STRUFUCT
    (29) tipo_dato -> . VOFOIFID
    (30) tipo_dato -> . CHAFAR
    (31) tipo_dato -> . BOFOOFOL
    (32) tipo_dato -> . FLOFOAFAT
    (52) declaracion_error -> . ID PYC
    (53) declaracion_error -> . ID ASG ID operacion_matematica ID PYC
    (54) declaracion_error -> . ID ASG valores PYC
    (55) declaracion_error -> . ID ID PYC
    (56) declaracion_error -> . ID ID ASG ID operacion_matematica ID PYC
    (57) declaracion_error -> . ID ID ASG valores PYC
    (58) declaracion_error -> . ID ID dimensiones PYC
    (59) declaracion_error -> . ID dimensiones PYC
    (72) declaracion_while_error -> . PA condicion PC LLAVEA bloque_codigo LLAVEC
    (73) declaracion_while_error -> . ID PA condicion PC LLAVEA bloque_codigo LLAVEC
    (74) declaracion_while_error -> . WHIFILEFE PA condicion PC bloque_codigo LLAVEC
    (75) declaracion_while_error -> . WHIFILEFE PA condicion PC LLAVEA bloque_codigo

    LLAVEA          shift and go to state 279
    VACIO           shift and go to state 67
    IFIF            shift and go to state 68
    AFARRAFAY       shift and go to state 72
    ID              shift and go to state 71
    PRIFINT         shift and go to state 74
    IFINPUFUT       shift and go to state 75
    WHIFILEFE       shift and go to state 76
    IFINT           shift and go to state 19
    STRIFING        shift and go to state 20
    STRUFUCT        shift and go to state 22
    VOFOIFID        shift and go to state 23
    CHAFAR          shift and go to state 24
    BOFOOFOL        shift and go to state 25
    FLOFOAFAT       shift and go to state 26
    PA              shift and go to state 57

    bloque_codigo                  shift and go to state 280
    declarar_if                    shift and go to state 59
    declaracion                    shift and go to state 60
    asignar_estructuras            shift and go to state 61
    asignar_array                  shift and go to state 62
    funcion                        shift and go to state 63
    print                          shift and go to state 64
    input                          shift and go to state 65
    declaracion_while              shift and go to state 66
    declarar_if_error_llave        shift and go to state 69
    tipo_dato                      shift and go to state 70
    declaracion_error              shift and go to state 73
    declaracion_while_error        shift and go to state 77

state 276

    (13) declarar_estructuras_error -> STRUFUCT ID LLAVEA tipo_dato ID PYC tipo_dato ID PYC tipo_dato ID PYC LLAVEC .

    IFINT           reduce using rule 13 (declarar_estructuras_error -> STRUFUCT ID LLAVEA tipo_dato ID PYC tipo_dato ID PYC tipo_dato ID PYC LLAVEC .)
    FUNCTION        reduce using rule 13 (declarar_estructuras_error -> STRUFUCT ID LLAVEA tipo_dato ID PYC tipo_dato ID PYC tipo_dato ID PYC LLAVEC .)
    MAFAIFIN        reduce using rule 13 (declarar_estructuras_error -> STRUFUCT ID LLAVEA tipo_dato ID PYC tipo_dato ID PYC tipo_dato ID PYC LLAVEC .)


state 277

    (14) declarar_funciones -> FUNCTION tipo_dato ID PA tipo_dato ID PC LLAVEA bloque_codigo REFETUFURN ID PYC LLAVEC .

    IFINT           reduce using rule 14 (declarar_funciones -> FUNCTION tipo_dato ID PA tipo_dato ID PC LLAVEA bloque_codigo REFETUFURN ID PYC LLAVEC .)
    MAFAIFIN        reduce using rule 14 (declarar_funciones -> FUNCTION tipo_dato ID PA tipo_dato ID PC LLAVEA bloque_codigo REFETUFURN ID PYC LLAVEC .)


state 278

    (17) declarar_funciones -> FUNCTION tipo_dato ID PA tipo_dato ID COMA tipo_dato ID PC LLAVEA bloque_codigo REFETUFURN . ID PYC LLAVEC

    ID              shift and go to state 281


state 279

    (43) declarar_if -> IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE LLAVEA . bloque_codigo LLAVEC
    (45) declarar_if_error_llave -> IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE LLAVEA . bloque_codigo
    (33) bloque_codigo -> . declarar_if bloque_codigo
    (34) bloque_codigo -> . declaracion bloque_codigo
    (35) bloque_codigo -> . asignar_estructuras bloque_codigo
    (36) bloque_codigo -> . asignar_array bloque_codigo
    (37) bloque_codigo -> . funcion bloque_codigo
    (38) bloque_codigo -> . print bloque_codigo
    (39) bloque_codigo -> . input bloque_codigo
    (40) bloque_codigo -> . declaracion_while bloque_codigo
    (41) bloque_codigo -> . VACIO
    (42) declarar_if -> . IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC
    (43) declarar_if -> . IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE LLAVEA bloque_codigo LLAVEC
    (44) declarar_if -> . declarar_if_error_llave
    (47) declaracion -> . tipo_dato ID PYC
    (48) declaracion -> . tipo_dato ID ASG ID operacion_matematica ID PYC
    (49) declaracion -> . tipo_dato ID ASG dato PYC
    (50) declaracion -> . AFARRAFAY ID dimensiones PYC
    (51) declaracion -> . declaracion_error
    (64) asignar_estructuras -> . ID PUNTO ID ASG dato PYC
    (63) asignar_array -> . ID dimensiones ASG dato PYC
    (65) funcion -> . ID PA valores PC PYC
    (66) funcion -> . ID PA PC PYC
    (67) funcion -> . ID PA valores COMA valores PC PYC
    (68) print -> . PRIFINT PA ID PC PYC
    (69) input -> . IFINPUFUT PA ID PC PYC
    (70) declaracion_while -> . WHIFILEFE PA condicion PC LLAVEA bloque_codigo LLAVEC
    (71) declaracion_while -> . declaracion_while_error
    (45) declarar_if_error_llave -> . IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE LLAVEA bloque_codigo
    (46) declarar_if_error_llave -> . IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE bloque_codigo LLAVEC
    (25) tipo_dato -> . IFINT
    (26) tipo_dato -> . STRIFING
    (27) tipo_dato -> . AFARRAFAY
    (28) tipo_dato -> . STRUFUCT
    (29) tipo_dato -> . VOFOIFID
    (30) tipo_dato -> . CHAFAR
    (31) tipo_dato -> . BOFOOFOL
    (32) tipo_dato -> . FLOFOAFAT
    (52) declaracion_error -> . ID PYC
    (53) declaracion_error -> . ID ASG ID operacion_matematica ID PYC
    (54) declaracion_error -> . ID ASG valores PYC
    (55) declaracion_error -> . ID ID PYC
    (56) declaracion_error -> . ID ID ASG ID operacion_matematica ID PYC
    (57) declaracion_error -> . ID ID ASG valores PYC
    (58) declaracion_error -> . ID ID dimensiones PYC
    (59) declaracion_error -> . ID dimensiones PYC
    (72) declaracion_while_error -> . PA condicion PC LLAVEA bloque_codigo LLAVEC
    (73) declaracion_while_error -> . ID PA condicion PC LLAVEA bloque_codigo LLAVEC
    (74) declaracion_while_error -> . WHIFILEFE PA condicion PC bloque_codigo LLAVEC
    (75) declaracion_while_error -> . WHIFILEFE PA condicion PC LLAVEA bloque_codigo

    VACIO           shift and go to state 67
    IFIF            shift and go to state 68
    AFARRAFAY       shift and go to state 72
    ID              shift and go to state 71
    PRIFINT         shift and go to state 74
    IFINPUFUT       shift and go to state 75
    WHIFILEFE       shift and go to state 76
    IFINT           shift and go to state 19
    STRIFING        shift and go to state 20
    STRUFUCT        shift and go to state 22
    VOFOIFID        shift and go to state 23
    CHAFAR          shift and go to state 24
    BOFOOFOL        shift and go to state 25
    FLOFOAFAT       shift and go to state 26
    PA              shift and go to state 57

    bloque_codigo                  shift and go to state 282
    declarar_if                    shift and go to state 59
    declaracion                    shift and go to state 60
    asignar_estructuras            shift and go to state 61
    asignar_array                  shift and go to state 62
    funcion                        shift and go to state 63
    print                          shift and go to state 64
    input                          shift and go to state 65
    declaracion_while              shift and go to state 66
    declarar_if_error_llave        shift and go to state 69
    tipo_dato                      shift and go to state 70
    declaracion_error              shift and go to state 73
    declaracion_while_error        shift and go to state 77

state 280

    (46) declarar_if_error_llave -> IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE bloque_codigo . LLAVEC

    LLAVEC          shift and go to state 283


state 281

    (17) declarar_funciones -> FUNCTION tipo_dato ID PA tipo_dato ID COMA tipo_dato ID PC LLAVEA bloque_codigo REFETUFURN ID . PYC LLAVEC

    PYC             shift and go to state 284


state 282

    (43) declarar_if -> IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE LLAVEA bloque_codigo . LLAVEC
    (45) declarar_if_error_llave -> IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE LLAVEA bloque_codigo .

    LLAVEC          shift and go to state 285
    VACIO           reduce using rule 45 (declarar_if_error_llave -> IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE LLAVEA bloque_codigo .)
    IFIF            reduce using rule 45 (declarar_if_error_llave -> IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE LLAVEA bloque_codigo .)
    AFARRAFAY       reduce using rule 45 (declarar_if_error_llave -> IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE LLAVEA bloque_codigo .)
    ID              reduce using rule 45 (declarar_if_error_llave -> IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE LLAVEA bloque_codigo .)
    PRIFINT         reduce using rule 45 (declarar_if_error_llave -> IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE LLAVEA bloque_codigo .)
    IFINPUFUT       reduce using rule 45 (declarar_if_error_llave -> IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE LLAVEA bloque_codigo .)
    WHIFILEFE       reduce using rule 45 (declarar_if_error_llave -> IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE LLAVEA bloque_codigo .)
    IFINT           reduce using rule 45 (declarar_if_error_llave -> IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE LLAVEA bloque_codigo .)
    STRIFING        reduce using rule 45 (declarar_if_error_llave -> IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE LLAVEA bloque_codigo .)
    STRUFUCT        reduce using rule 45 (declarar_if_error_llave -> IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE LLAVEA bloque_codigo .)
    VOFOIFID        reduce using rule 45 (declarar_if_error_llave -> IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE LLAVEA bloque_codigo .)
    CHAFAR          reduce using rule 45 (declarar_if_error_llave -> IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE LLAVEA bloque_codigo .)
    BOFOOFOL        reduce using rule 45 (declarar_if_error_llave -> IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE LLAVEA bloque_codigo .)
    FLOFOAFAT       reduce using rule 45 (declarar_if_error_llave -> IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE LLAVEA bloque_codigo .)
    PA              reduce using rule 45 (declarar_if_error_llave -> IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE LLAVEA bloque_codigo .)


state 283

    (46) declarar_if_error_llave -> IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE bloque_codigo LLAVEC .

    VACIO           reduce using rule 46 (declarar_if_error_llave -> IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE bloque_codigo LLAVEC .)
    IFIF            reduce using rule 46 (declarar_if_error_llave -> IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE bloque_codigo LLAVEC .)
    AFARRAFAY       reduce using rule 46 (declarar_if_error_llave -> IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE bloque_codigo LLAVEC .)
    ID              reduce using rule 46 (declarar_if_error_llave -> IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE bloque_codigo LLAVEC .)
    PRIFINT         reduce using rule 46 (declarar_if_error_llave -> IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE bloque_codigo LLAVEC .)
    IFINPUFUT       reduce using rule 46 (declarar_if_error_llave -> IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE bloque_codigo LLAVEC .)
    WHIFILEFE       reduce using rule 46 (declarar_if_error_llave -> IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE bloque_codigo LLAVEC .)
    IFINT           reduce using rule 46 (declarar_if_error_llave -> IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE bloque_codigo LLAVEC .)
    STRIFING        reduce using rule 46 (declarar_if_error_llave -> IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE bloque_codigo LLAVEC .)
    STRUFUCT        reduce using rule 46 (declarar_if_error_llave -> IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE bloque_codigo LLAVEC .)
    VOFOIFID        reduce using rule 46 (declarar_if_error_llave -> IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE bloque_codigo LLAVEC .)
    CHAFAR          reduce using rule 46 (declarar_if_error_llave -> IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE bloque_codigo LLAVEC .)
    BOFOOFOL        reduce using rule 46 (declarar_if_error_llave -> IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE bloque_codigo LLAVEC .)
    FLOFOAFAT       reduce using rule 46 (declarar_if_error_llave -> IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE bloque_codigo LLAVEC .)
    PA              reduce using rule 46 (declarar_if_error_llave -> IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE bloque_codigo LLAVEC .)


state 284

    (17) declarar_funciones -> FUNCTION tipo_dato ID PA tipo_dato ID COMA tipo_dato ID PC LLAVEA bloque_codigo REFETUFURN ID PYC . LLAVEC

    LLAVEC          shift and go to state 286


state 285

    (43) declarar_if -> IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE LLAVEA bloque_codigo LLAVEC .

    VACIO           reduce using rule 43 (declarar_if -> IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE LLAVEA bloque_codigo LLAVEC .)
    IFIF            reduce using rule 43 (declarar_if -> IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE LLAVEA bloque_codigo LLAVEC .)
    AFARRAFAY       reduce using rule 43 (declarar_if -> IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE LLAVEA bloque_codigo LLAVEC .)
    ID              reduce using rule 43 (declarar_if -> IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE LLAVEA bloque_codigo LLAVEC .)
    PRIFINT         reduce using rule 43 (declarar_if -> IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE LLAVEA bloque_codigo LLAVEC .)
    IFINPUFUT       reduce using rule 43 (declarar_if -> IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE LLAVEA bloque_codigo LLAVEC .)
    WHIFILEFE       reduce using rule 43 (declarar_if -> IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE LLAVEA bloque_codigo LLAVEC .)
    IFINT           reduce using rule 43 (declarar_if -> IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE LLAVEA bloque_codigo LLAVEC .)
    STRIFING        reduce using rule 43 (declarar_if -> IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE LLAVEA bloque_codigo LLAVEC .)
    STRUFUCT        reduce using rule 43 (declarar_if -> IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE LLAVEA bloque_codigo LLAVEC .)
    VOFOIFID        reduce using rule 43 (declarar_if -> IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE LLAVEA bloque_codigo LLAVEC .)
    CHAFAR          reduce using rule 43 (declarar_if -> IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE LLAVEA bloque_codigo LLAVEC .)
    BOFOOFOL        reduce using rule 43 (declarar_if -> IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE LLAVEA bloque_codigo LLAVEC .)
    FLOFOAFAT       reduce using rule 43 (declarar_if -> IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE LLAVEA bloque_codigo LLAVEC .)
    PA              reduce using rule 43 (declarar_if -> IFIF PA condicion PC LLAVEA bloque_codigo LLAVEC EFELSEFE LLAVEA bloque_codigo LLAVEC .)


state 286

    (17) declarar_funciones -> FUNCTION tipo_dato ID PA tipo_dato ID COMA tipo_dato ID PC LLAVEA bloque_codigo REFETUFURN ID PYC LLAVEC .

    IFINT           reduce using rule 17 (declarar_funciones -> FUNCTION tipo_dato ID PA tipo_dato ID COMA tipo_dato ID PC LLAVEA bloque_codigo REFETUFURN ID PYC LLAVEC .)
    MAFAIFIN        reduce using rule 17 (declarar_funciones -> FUNCTION tipo_dato ID PA tipo_dato ID COMA tipo_dato ID PC LLAVEA bloque_codigo REFETUFURN ID PYC LLAVEC .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for ID in state 72 resolved as shift
WARNING: shift/reduce conflict for PC in state 158 resolved as shift
